bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogMzU0NTMwMzUtMzkzNC0zNzQzLTQ2MzMtNDUzMEZGRkZGRkZGIDExMXx8fCAyMjI6OiAkMnkkMTAkWXpBM1pqVmlaVGhqWm1Zek5UZ3lZdW5FNnlXb0lyYklNa0EzalhhSFRad0MzUzBjM2lrUS4gMjIyfHx8IDEyMzo6IEFyYyBvZiBNYW50YSAtIE9mZi1IYW5kO0FyY3RpYyBDbGlua3ogViAzLjA7U2NvcmNoaW5nIEFtYmVyIERyYWdvb24gRm9ybTtIb29kd2luayBHbGVpcG5pcjtIb29kd2luayBEcmFnb24gQ3Jvc3Nib3c7Qmxvb2R5IEJhYnkgSW52b2tlcjtCZW5ldm9sZW50IENvbXBhbmlvbiBQcmVtO0pha2lybyBJbW1vcnRhbCBXaW5ncztMZWdhY3kgb2YgdGhlIEZhbGxlbiBMZWdpb247U291bCBvZiB0aGUgU2xheWVyIFByZW07TWQ5519bnQgb2YgdGhlIFdpbmdlZCBTZW50aW5lbDtGb3JtIG9mIEFtYnJ5IFYgMi4xO0hhdCBvZiB0aGUgV2luZHdhcmQgUm9ndWU7TWFuaWZvbGQgUGFyYWRveCBQQSBBcmNhbmEgU3R5bGUgMztDb2RpY2lsIG9mIHRoZSBWZWlsZWQgT25lcztCZWx0IG9mIHRoZSBSZWQgU2FuZHM7Q29uY29yZCBEb21pbmlvbjtDb25jb3JkIFJldmVyc2lvbiBVUDtQaGFudG9tIENvbmNvcmQgUHJlbTtFZ2cgb2YgdGhlIFZlcm1pbGxpb24gQ3J1Y2libGU7UGFsZSBFZGdlIFByZW07UGFsZSBFZGdlIERvdGEgMiBDaGFuZ2VyIEVkaXRpb247U3dpbmUgb2YgdGhlIFN1bmtlbiBHYWxsZXkgUHJlbTtTaGlwcyBpbiB0aGUgTmlnaHQgQ29sb3IgZm9yIFRCO0NyaW1zb24gTWQ5519cm5mdWwgUmV2ZXJpZTtDaG9tcGVyIFdhcmQ7VGFpbCBvZiB0aGUgRmVyb2Npb3VzIFRveGljYW50O0ZhbWlsaWFycyBvZiB0aGUgS2VlcGVycyBHYXplO0hpZGRlbiBWZWN0b3IgLSBCbGFkZTtIaWRkZW4gVmVjdG9yIC0gSGF0O0hpZGRlbiBWZWN0b3IgLSBCZWx0O0hpZGRlbiBWZWN0b3IgLSBBcm1vcjtMaWdodG5pbmcgQmxpbmsgViAyLjA7V2hpdGUgRGFnb247VEktOSBNam9sbG5pciBFZmZlY3Q7VEktNyBDbG91ZDkgVFAgZWZmZWN0O0RlY2xhcmF0aW9uIG9mIHRoZSBEaXZpbmUgTGlnaHQgUmFkaWFudCBUb3dlcnM7RGVjbGFyYXRpb24gb2YgdGhlIERpdmluZSBTaGFkb3cgRGlyZSBUb3dlcnM7UmVwdGlsaWFuIFJlZnVnZSBSYWRpYW50IENyZWVwcztSZXB0aWxpYW4gUmVmdWdlIERpcmUgQ3JlZXBzO1RpLTcgUm9zaGFuO1RlcnJhaW4gLSBUaGUgS2luZ3MgTmV3IEpvdXJuZXk7Uml2ZXIgVmlhbCBDaHJvbWU7Q3VzdG9tIERhc2hib2FyZCA5O015c3RpY2NvaWxzIGxvYWRpbmdzY3JlZW47SGVhcnRoIG9mIHRoZSBQaXQgSFVEO1RyYW5zdmVyc2FudCBTb3VsO1NpbGVudCBXYWtlO1JlYXBlcnMgV3JlYXRoO0dvbGRlbiBJY2UgQmxvc3NvbTtBYmFkZG9uIFJFRCBNZWdhUGFjaztSYWlkIG9mIHRoZSBOb3J0aGVybiBFeGlsZXM7QUFNZWdhUGFjaztBbnRpTWFnZSBGZW1hbGU7QXJjIFdhcmRlbiBNZWdhUGFjaztFbXBpcmljIEluY2VuZGlhcnk7U3RyeWd3eXIgQmxvb2RzZWVrZXI7SHVudGVycyBHbG9yeTtCcmlzdGxlYmFjayBNZWdhUGFjaztNb3RoZXIgb2YgVGhvdXNhbmRzO09uaSBLbmlnaHQgdGhlIERhcmsgQ29ucXVlcm9yIFYgMy4xO0V5ZSBPZiBQb3dlciBTZXQ7UHJlc3N1cmUgUmVndWxhdG9yO0ZvcmdvdHRlbiBUYWN0aWNpYW47UXVldHphbDtEZWxpZ2h0cyBvZiBQZXRhbHVuYTtGYXRhbCBCbG9zc29tIFYgMy4wO0xpZ2h0bmluZyBIYXJiaW5nZXI7RG9vbSBJbW1vcnRhbHMgTWVnYVBhY2s7VHVycXVvaXNlIEdpYW50IEd1YXJkO1BsYW5ldGZhbGwgYW5kIEp1ZGdlbWVudCBvZiB0aGUgRmFsbGVuIGFuZCBCcmFjZXJzIG9mIHRoZSBDYXZlcm4gTHVtaW5hciBBUkNBTkEgTWVnYVBhY2s7S3VuZyBmdSBNYXN0ZXI7RW5pZ21hIE1lZ2FQYWNrO1ByaW1vcmRpYWwgQ29uc2VydmF0b3I7VGhlIENoYWluZWQgU2NyaWJlO0h1c2thciBNZWdhUGFjayBORVc7SG9ycm9yIE9mIFRoZSBGYWNlIENvbGxlY3RvcjtUaGUgS2luZyBvZiBUaGlldmVzO1NpZWdlIG9mIHRoZSBBcmN0aWMgSGFsbDtMb3JkIG9mIENocm9ub3B0aWMgU3ludGhlc2lzO0Zsb3dlciBGbGFtZSBMaW5hIFYgMy4wO0dydWVzb21lIEVtYnJhY2U7V2FyLUJ1cnJvdyBSYXZhZ2VyO0JsYWNrIEljZSBTY291cmdlO0x5Y2FuIEtpc2lsZXYgTW9kTWFrZXIgTWVnYVBhY2s7SnVuZ2xlIEJhYnlzaXR0ZXJzO01pcmFuYSBUSTEwIENvbGxlY3RvcnMgQ2FjaGUgTWVnYVBhY2s7TW9ua2V5IEtpbmcgQXJjYW5hIE1lZ2FQYWNrO0xpZ2h0IG9mIEVsZWFub3IgU2V0O0FsbGZhdGhlciBvZiBOYXR1cmUgU2V0O0F1dGhvcml0eSBvZiB0aGUgSW1wZXJpc2hhYmxlIEdyYW5kIEhpZXJvcGhhbnQ7RXRpZW5uZSBTd2lmdGd1YXJkO0FyaXN0b2NyYXRpYyBSZWJpcnRoO0FoUHVjaztQdXBwZXQgUHVkZ2UgUGVyc29uYSAoeWQ5519IGNhbiBhZGQgSG9vaykgVVA7UXVlZW4gb2YgUGFpbiBBcmNhbmEgTWVnYVBhY2s7U2lsdmVyIFJldmVuYW50O0dlbGlkIFRvdWNoIFZhbGVlcmEgZm9yIFJpa2k7QW5jaWVudCBNYWd1cyBTdHlsZSAzO1NGIEFyY2FuYSBNZWdhcGFjaztTaWxlbmNlciBUSTEwIENvbGxlY3RvcnMgQ2FjaGUgTWVnYVBhY2s7U2t5d3JhdGggTWFnZSBNZWdhUGFjayBUaGFuYXRvcztBbmNpZW50IEd1YXJkaWFuIG9mIHRoZSBKdW5nbGUgUnVsZTtUcmVhc3VyZSBIdW50ZXI7U3BhY2UgU3BlY3RyZSBWMy4wO1NwaXJpdCBCcmVha2VyIE1lZ2FQYWNrO1N2ZW4gSW1tb3J0YWxzIE1lZ2FQYWNrIFVQO1BhcmFkaXNlIEJpcmQgU3Rpbmc7U2lyIEN1dHNhbG90O01lY2hhIEhvcm5ldCBTZXQ7S2luIG9mIHRoZSBTYW5nc3RyYXRoIEZvbGQgUGF0aGZpbmRlcjtWaXNpb24gb2YgdGhlIFNlcmFwaCBTY2lvbiAtIFJveWFsO0Nob21wZXIgU2V0O1ZpcGVyIE1lZ2FQYWNrO1Zpc2FnZSBNZWdhUGFjaztXaW5kcmFuZ2VyIEFyY2FuYSBzdHlsZSAxIChCbHVlIEJpcmQpICsgRnVsbCBXUiBpbW1vcnRhbDtEZWZlbmRlciBvZiB0aGUgQnJ1bWFsIENyZXN0O0JlYXJpbmcgb2YgdGhlIEtpbmcgUmVzdG9yZWQ7QWxnaWQgRmFsY29uIFYgMy4xO05ldyBZZWFyIEphaW5hOyAxMjN8fHw=