limitHWID:: 1 000||| 111::  111||| 222:: $2y$10$ZTQ2MTZjYTgxMWJkMDk5MeOKfu72r/375ZFYrEFtWsedqG4t0mIUy 222||| 123:: Holiday Radiant Tower;Golden Basher of Mage Skulls;Golden Offhand Basher of Mage Skulls;Mace of Aeons;Golden Grasping Bludgeon;Bracers of the Cavern Luminar;Reptilian Refuge Dire Creeps;Reptilian Refuge Radiant Creeps;Belt of the Gleaming Seal;Majesty Of The Colossus - Pebble;Frostmoot Tree;Soul Corpulence - Shoulder;Legacy of the Fallen Legion;Grand Abscession Hook Bundle;Bracers of Aeons Prem;Jewel of Aeons Prem;Arms of Desolation Prem;Dread of the Gleaming Seal Set;Rapiers of the Burning God V 3.1;Golden Shards of Exile;Inverse Bayonet;Royal Decree Knife Attack;DotaCinema - Queen of Pain Spells;Bloodfeather Feast;Sullen Hollow V 3.2;Trainer Dragon;Flashpoint Proselyte - Head;Golden Atomic Ray Thrusters Prem;Golden Full-Bore Bonanza;Cannon of the Occultists Pursuit;The Golden Barb of Skadi;Death Blossom Set;Siege of the Arctic Hall;The Ghastly Gourmand;Misgivings of the Emerald Age;Fathomless Ravager;Havoc of Dragon Palace V 2.0;Toll of the Fearful Aria;Pixel Windrunner;Cinder Sensei;Ice Lina 2nd Style;Mandate of the Nameless;The Crimson Pirate;Spoils from the Shifting Sorcerer V 2.0;Eye of the Beholder;Wrath of Ka V 2.1;Steampowered Magic Set;Itsuka Kotori for WK by Patchouli Knowledge;Explosive Maniac;Allied Commander Set;Hinterland Stalker;Dark Reef Escape V 2.1; 123|||