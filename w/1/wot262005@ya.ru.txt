bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogIDExMXx8fCAyMjI6OiAkMnkkMTAkTW1RNVpHTXhPR0kzWXpJMFkyVTBZT2lSMUFlMVpyaHRhM2JiQm9NN2psa0FFSVVEMG1HdHEgMjIyfHx8IDEyMzo6IEFyY2FuYSBTRiBEZW1vbiBFYXRoZXI7TWFndXMgQWNjb3JkO0RhcmsgQXJ0aXN0cnkgQmVsdCBQcmVtO01lbnRvciBvZiB0aGUgSGlnaCBQbGFpbnMgR3VhcmQ7VHVuaWMgb2YgdGhlIFdhbmRlcmluZyBGbGFtZTtNYXN0ZXIgb2YgdGhlIFNlYXJpbmcgUGF0aCBIZWFkO01hc3RlciBvZiB0aGUgU2VhcmluZyBQYXRoIE9mZi1IYW5kO0Fwb2dlZSBvZiB0aGUgR3VhcmRpYW4gRmxhbWU7TWFzdGVyIG9mIHRoZSBTZWFyaW5nIFBhdGggV2VhcG9uO0dvdGhpYyBXaGlzcGVyIENhcGU7R290aGljIFdoaXNwZXIgQmVsdDtBc3Nhc3NpbmF0aW9uIG9mIERhcmsgRmVhdGhlciBIZWFkO0F2b3dhbmNlIG9mIHRoZSBDcmltc29uIFdpdG5lc3M7TWFuaWZvbGQgUGFyYWRveCBQQSBBcmNhbmEgU3R5bGUgMztCbGFja3NhaWwgQ2Fubm9uZWVyIEhhdDtTbmlwZXIgSW1tb3J0YWwgV2VhcG9uIG9mIHRoZSBBcmRhbGFuIEludGVyZGljdG9yO0dvbGRlbiBGdWxsLUJvcmUgQm9uYW56YTtCcmFjZXJzIG9mIHRoZSBTaWx2ZXIgRm94O1NvdWwgRGlmZnVzZXIgUHJlbTtDcmltc29uIEZsaWdodCBvZiBFcGlwaGFueTtCZWx0IG9mIHRoZSBQZW5pdGVudCBTY2hvbGFyIENoYW1waW9uO1NlY3JldHMgb2YgdGhlIENlbGVzdGlhbCBCZWx0O1NreXdhcnJpb3JzIENvdW50ZW5hbmNlO0V5cmllYm91bmQgSW1wZXJhdG9yIC0gU2hvdWxkZXI7R29sZGVuIEVtcHlyZWFuIFByZW07QWdoYW5pbSBEdW5nZW9uIFNjZXB0ZXIgRWZmZWN0O0NyaW1zb24gVW5icm9rZW4gRmVhbHR5O1BhdWxkcm9uIG9mIHRoZSBEcmVhZGJvcm4gUmVnZW50O0JsaXN0ZXJpbmcgU2hhZGUgZm9yIEFyY2FuYTtHb2xkZW4gT3JpZ2lucyBvZiBGYWl0aCBQcmVtO0JyYWNlcnMgYW5kIFNob3VsZGVycyBvZiB0aGUgU3Vydml2b3I7QmVsdCBvZiB0aGUgU3Vydml2b3I7SGFpciBvZiB0aGUgU3Vydml2b3I7R2xvcnkgb2YgdGhlIEVsZGVyZmxhbWUgLSBBcm1zO0dvbGRlbiBXeXJtd3JvdWdodCBGbGFyZSBQcmVtO1NvdWwgb2YgdGhlIFNsYXllciBQcmVtO0Rpc2NpcGxlIG9mIHRoZSBXeXJtd3JvdWdodCBGbGFtZTtKYWdnZWQgSG9ub3IgQnJhY2VyO0phZ2dlZCBIb25vciBCYW5uZXI7SnVnZ2VybmF1dCBBcmNhbmEgUmVkIEJsYWRlZm9ybSBPcmlnaW5zO0JlbHQgb2YgdGhlIEJsYWRlZm9ybSBBZXN0aGV0ZTtDcmltc29uIEVkZ2Ugb2YgdGhlIExvc3QgT3JkZXI7QmxhZGUgb2YgdGhlIFN1cnZpdm9yO09mZmhhbmQgQmxhZGUgb2YgdGhlIFN1cnZpdm9yIFByZW07RGFyayBBcnRpc3RyeSBDYXBlIFByZW07TWFndXMgQXBleCBQcmVtO0hlYXZlbi1QaWVyY2luZyBQYXVsZHJvbnM7Vm9sYXRpbGUgUHlyZTtIZWxtIG9mIHRoZSBFbWJlciBEZW1vbnM7QnVja2xlciBvZiB0aGUgRW1iZXIgRGVtb25zO1RoZSBTcG9pbHMgb2YgRGV6dW47R29sZGVuIERyYWNhIE1hdztCcmFjZXJzIG9mIEFlb25zO0NsYXN6dXJlbWUgSW5jdXJzaW9uIEJlbHQ7RmFjZWxlc3MgTWFkbmVzcztKZXdlbCBvZiBBZW9ucztNYWNlIG9mIEFlb25zIFByZW07SGVsbSBvZiB0aGUgRGFyayBNb29uIFN0YWxrZXI7TWQ5519bnQgb2YgdGhlIFdpbmdlZCBTZW50aW5lbDtHb2xkZW4gTW9vbmZhbGwgUHJlbTtBcm1vciBvZiB0aGUgV2luZ2VkIFNlbnRpbmVsO0dvbGRlbiBUd2lsaWdodCBTY2hpc207R29sZGVuIEFybXMgb2YgRGVzb2xhdGlvbiBQcmVtO1NvdWxzIFR5cmFudCBTaG91bGRlcjtQaGFudG9tIEFkdmVudCBVUDtUcmFuc3ZlcnNhbnQgU291bCBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzIFByZW07Rmx1dHRlcmluZyBBbWV0aHlzdCBUcmFwICsgSWNvbjtTdGV3YXJkIG9mIHRoZSBGb3JiaWRkZW4gQ2hhbWJlciBBcm1vcjtIZWFkZHJlc3Mgb2YgdGhlIExveWFsIEZvbGQ7UGF1bGRyb25zIG9mIHRoZSBMb3lhbCBGb2xkO0ZvY2FsIFJlc29uYW5jZSBWIDMuMDtHYXJiIG9mIHRoZSBDb3JyaWRhbiBNYWVzdHJvO0dvbGRlbiBNYW5kYXRlIG9mIHRoZSBTdG9ybWJvcm47VGhlIExpZ2h0bmluZyBPcmNoaWQgb2YgRW1pbmVudCBSZXZpdmFsIEV4Y2VwdGlvbmFsO0hpZGRlbiBWZWN0b3IgLSBCbGFkZTtIaWRkZW4gVmVjdG9yIC0gSGF0O0hpZGRlbiBWZWN0b3IgLSBCZWx0O0hpZGRlbiBWZWN0b3IgLSBBcm1vcjtDcm93biBvZiB0aGUgT25lIFRydWUgS2luZztBcm1vciBvZiBHcmltIERlc3Rpbnk7Q2xvYWsgb2YgdGhlIERhcmsgUmVzZXJ2b2lyO0NoYWlucyBvZiB0aGUgSm9sbHkgUmVhdmVyO0ZlYXN0IG9mIEFic2Nlc3Npb247TWluZGxlc3MgU2xhdWdodGVyIC0gQmVsdDtMYXJnZSBUYXNzZWxzIG9mIHRoZSBCbGFjayBEZWF0aDtEYXBwZXIgRGlzZ3Vpc2UgQ2xlYXZlcjtHb2xkZW4gU2NhdmVuZ2luZyBHdXR0bGVzbHVnO0ZlYXN0IG9mIEFic2Nlc3Npb24gSG9vayBCdW5kbGU7VGVtcGVzdCBIZWxtIG9mIHRoZSBUaHVuZGVyZ29kIFByZW07QmVsdCBvZiB0aGUgS2luZyBSZXN0b3JlZDtUZW1wZXN0IFJldmVsYXRpb247R29sZGVuIEltbW9ydGFsIFBhbnRoZW9uO1RJLTEwIEJsaW5rIGx2bCAyIEVmZmVjdDtUSS05IFBoYXNlIEJvb3RzIEVmZmVjdDtUZXJyYWluIC0gU2FuY3R1bXMgb2YgdGhlIERpdmluZTtEZWNsYXJhdGlvbiBvZiB0aGUgRGl2aW5lIExpZ2h0IFJhZGlhbnQgVG93ZXJzO0RlY2xhcmF0aW9uIG9mIHRoZSBEaXZpbmUgU2hhZG93IERpcmUgVG93ZXJzO1dvb2RsYW5kIFdhcmJhbmRzIC0gRGlyZSBDcmVlcHM7V29vZGxhbmQgV2FyYmFuZHMgLSBSYWRpYW50IENyZWVwcztXb29kbGFuZCBXYXJiYW5kcyAtIFJhZGlhbnQgU2llZ2UgQ3JlZXBzO1dvb2RsYW5kIFdhcmJhbmRzIC0gRGlyZSBTaWVnZSBDcmVlcHM7V2VhdGhlciBBdXJvcmE7VjFsYXQgQW5ub3VuY2VyOyAxMjN8fHw=