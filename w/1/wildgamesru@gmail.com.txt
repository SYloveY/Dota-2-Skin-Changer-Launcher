bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogIDExMXx8fCAyMjI6OiAkMnkkMTAkTVRjd01Ua3pNR1JtWmpabE5EUmlNZThYZ3IzeEdYMWdkc0loTnFINE90R3d5NzN5dmxYVGUgMjIyfHx8IDEyMzo6IENvZGljaWwgb2YgdGhlIFZlaWxlZCBPbmVzO01hbmlmb2xkIFBhcmFkb3ggUEEgQXJjYW5hIFN0eWxlIDM7QXZvd2FuY2Ugb2YgdGhlIENyaW1zb24gV2l0bmVzcztNYXJheGlmb3JtcyBGYXRlO01hcmF4aWZvcm1zIElyZSBQcmVtO1NvdWwgb2YgdGhlIFNsYXllciBQcmVtO0Rpc2NpcGxlIG9mIHRoZSBXeXJtd3JvdWdodCBGbGFtZTtHb2xkZW4gTW9vbmZhbGwgUHJlbTtBdXNwaWNlIG9mIHRoZSBXaHlybGVneWdlIEVnZyBTY3JhbWJsZXI7R2ltbGVrIERlY2FudGVyO1RoZSBPcmRlciBvZiBDeXByaW47QmxhZGVzIG9mIFByaXNtYXRpYyBHcmFjZTtDb25jb3JkIFJldmVyc2lvbiBVUDtDb25jb3JkIERvbWluaW9uO1BoYW50b20gQ29uY29yZCBQcmVtO0dyYW5kIEFic2Nlc3Npb247UnViaWNrIEFyY2FuYTtNYW50bGUgb2YgdGhlIFdoaXNwZXJlZCBCb25kO0hlYWRkcmVzcyBvZiB0aGUgTG95YWwgRm9sZDtWaWdpbCBTaWduZXQ7VmlnaWwgVHJpdW1waDtJbmRvbWl0YWJsZSBMZWdhY3kgLSBCZWx0O0luZG9taXRhYmxlIExlZ2FjeSAtIEhlYWQ7SW5kb21pdGFibGUgTGVnYWN5IC0gU2hvdWxkZXI7Qml0dGVyIExpbmVhZ2UgSW1tb3J0YWwgQXhlcztIaWRkZW4gVmVjdG9yIC0gQXJtb3I7SGlkZGVuIFZlY3RvciAtIEJlbHQ7SGlkZGVuIFZlY3RvciAtIEhhdDtIaWRkZW4gVmVjdG9yIC0gQmxhZGU7V2luZHJhbmdlciBCbHVlIEltbW9ydGFsIEJpcmQgVVA7UHJvdm9jYXRpb24gb2YgUnVpbiBQYXVsZHJvbjtQcm92b2NhdGlvbiBvZiBSdWluIE1hc2s7SnVnZ2VybmF1dCBBcmNhbmEgUmVkIEJsYWRlZm9ybSBPcmlnaW5zO0pld2VsIG9mIEFlb25zO0NyaW1zb24gRmxpZ2h0IG9mIEVwaXBoYW55O1NreXdhcnJpb3JzIENvdW50ZW5hbmNlO0dvbGRlbiBFbXB5cmVhbiBQcmVtO1BhY2sgb2YgdGhlIEFyZGFsYW4gSW50ZXJkaWN0b3I7SGVsbSBvZiB0aGUgQXJkYWxhbiBJbnRlcmRpY3RvcjtDb2xhciBvZiB0aGUgQXJkYWxhbiBJbnRlcmRpY3RvcjtTbmlwZXIgSW1tb3J0YWwgV2VhcG9uIG9mIHRoZSBBcmRhbGFuIEludGVyZGljdG9yO0JyYWNlcnMgb2YgdGhlIEFyZGFsYW4gSW50ZXJkaWN0b3I7UGhhbnRvbSBBc2NlbnNpb247UGhhbnRvbSBBc2NlbnNpb24gQmVsdDtQaGFudG9tIEFzY2Vuc2lvbiBXZWFwb247V3lybXdyb3VnaHQgRmxhcmU7U2N5dGhlcyBvZiBTb3Jyb3c7U3BhbiBvZiBTb3Jyb3c7VGVtcGVzdCBSZXZlbGF0aW9uO1NraXR0ZXJpbmcgRGVzb2xhdGlvbiBQcmVtO0NyaW1zb24gUGlxdWU7R29sZGVuIFNoYWRvdyBNYXNxdWVyYWRlIFByZW07R29sZGVuIEVkaWN0IG9mIFNoYWRvd3M7SHVuZ2VyIG9mIHRoZSBIb3dsaW5nIFdpbGRzIFdlYXBvbjtHb2xkZW4gU2V2ZXJpbmcgQ3Jlc3QgUHJlbTtTZXZlcmluZyBMYXNoIFByZW07RmFjZWxlc3MgTWFkbmVzcztNYWNlIG9mIEFlb25zIFByZW07QnJhY2VycyBvZiBBZW9ucztDbGFzenVyZW1lIEluY3Vyc2lvbiBCZWx0O1dyYWl0aGJpbmRlcjtDcmltc29uIEN5cnJpZGFlO0NvbXBsZXRlIEJlbHQgb2YgdGhlIE1hbnRpY29yZTtBcm1vciBvZiB0aGUgTWFudGljb3JlO09yaWdpbiBvZiB0aGUgVW5tYWtpbmc7U2x1bWJlcmluZyBUZXJyb3I7SHVuZ2VyIG9mIHRoZSBIb3dsaW5nIFdpbGRzIE9mZi1IYW5kIFdlYXBvbjtTbW9rZSBCb21iIG9mIE1vbnN0cm91cyBSZXByaXNhbDtIdW5nZXIgb2YgdGhlIEhvd2xpbmcgV2lsZHMgQXJtcztJcmUgb2YgdGhlIEFuY2llbnQgR2FvbGVyIEFybXM7SXJlIG9mIHRoZSBBbmNpZW50IEdhb2xlciBCYWNrO0ZyYWN0YWwgSG9ybnMgb2YgSW5uZXIgQWJ5c20gVVA7VHJhbnN2ZXJzYW50IFNvdWwgb2YgdGhlIENyaW1zb24gV2l0bmVzcyBQcmVtO0ZlYXRoZXJzIG9mIHRoZSBDb25jZWFsZWQgUmF2ZW47Qmxvb2R5IEJhYnkgSW52b2tlcjtHb2xkZW4gQXRvbWljIFJheSBUaHJ1c3RlcnMgUHJlbTtIZWFkIG9mIHRoZSBWZXNwaWR1biBIdW50ZXItS2lsbGVyO1Byb3BlbGxlcnMgb2YgdGhlIFZlc3BpZHVuIEh1bnRlci1LaWxsZXI7Q29uZSBvZiB0aGUgVmVzcGlkdW4gSHVudGVyLUtpbGxlcjtIb29kd2luayBHbGVpcG5pcjtJY2VmbGlnaHQgRWRpZmljZTtBcm1vciBvZiB0aGUgTG95YWwgRm9sZDtUaGUgU3VuYnJlZXplIEJpcnRocmlnaHQ7Q3JpbXNvbiBIZWFydHMgb2YgTWlzcnVsZTtEaXZpbmF0aW9ucyBvZiB0aGUgTm90aGwgSGF6ZSBCcmFjZXJzO0NyaW1zb24gR2F0ZXMgb2YgTm90aGw7RGFya2NsYXcgRW1pc3NhcnkgRHJlc3M7Tm90aGxpYyBCdXJkZW4gb2YgdGhlIENyaW1zb24gV2l0bmVzcztEYXJrY2xhdyBFbWlzc2FyeSBTdGFmZjtaZWFsIG9mIE9tb3ogQXJrb3NoO0JyYWNlcnMgb2YgdGhlIFdpbnRlcm1vb247U3Bpcml0IG9mIHRoZSBTYWNyZWQgR3JvdmUgLSBCYWNrO0dvbGRlbiBNYXNrIG9mIE1ldGlyYTtEcmVhbXMgb2YgTWlkc3VtbWVyIFF1aXZlcjtBeGlhIG9mIE1ldGlyYTtTcGlyaXQgb2YgdGhlIFNhY3JlZCBHcm92ZSAtIFNob3VsZGVyO1B1bHNhciBSZW1uYW50IFByZW07QmVsdCBvZiBWaWxlIENvbnZvY2F0aW9uO0JsYXplIG9mIE9ibGl2aW9uIFN1cGVybm92YTtTb2xhciBHeXJlO0NsZWFyY3V0IENhdmFsaWVyIEJhY2s7Q2xlYXJjdXQgQ2F2YWxpZXIgSGVhZDtHb2xkZW4gUmVjdGlmaWVyO0NsZWFyY3V0IENhdmFsaWVyIFNob3VsZGVycztDb250cm9sbGVkIEJ1cm47RGVzZXJ0IEJ1cm4gU2FkZGxlO0Rlc2VydCBCdXJuIE91dGZpdDtEZXNlcnQgQnVybiBNb3J0eSBJbW1vcnRhbDtEZXNlcnQgQnVybiBDYXA7RGVzZXJ0IEJ1cm4gQ3Jvc3Nib3c7SGF0IG9mIEZhbnRvY2NpbmlzIERpbGVtbWE7SGVhZCBvZiB0aGUgSWNld3JhY2sgTWFyYXVkZXI7Q3JlYXRvcnMgTGlnaHQgQ29sb3IgZm9yIFRCO1JhenppbHMgTWlkYXMgS251Y2tsZXMgUHJlbTtUb3AgSGF0IG9mIHRoZSBEYXJrYnJldyBFbmZvcmNlcjtNb2xvdG92IENvY2t0YWlsIG9mIHRoZSBEYXJrYnJldyBFbmZvcmNlcjtFdGVybmFsIFJhZGlhbmNlIEJsYWRlcyBQcmVtO1Nob3RndW4gU2xpbmcgb2YgdGhlIERhcmticmV3IEVuZm9yY2VyO1N1aXQgb2YgdGhlIERhcmticmV3IEVuZm9yY2VyO0dhcmIgb2YgdGhlIERhcmticmV3IEVuZm9yY2VyO0Nyb3duIG9mIHRoZSBNZXJxdWVlbjtDb3ZlcnMgb2YgdGhlIE1lcnF1ZWVuO1NsZWV2ZXMgb2YgdGhlIE1lcnF1ZWVuO0RyZXNzIG9mIHRoZSBNZXJxdWVlbjtTaGVhcmluZyBEZXBvc2l0aW9uIFByZW07R2xhcmUgb2YgdGhlIFR5cmFudDtCZWx0IG9mIHRoZSBXYXJ0b3JuIEhlYXZlbnM7U3dpZnQgQ2xhdyBhbmQgRmVyb2Npb3VzIEhlYXJ0O0RpcHBlciB0aGUgRGVzdHJveWVyO0dpcmRsZSBvZiB0aGUgRmVyb2Npb3VzIEhlYXJ0O1NvbGFyIEZvcmdlIFByZW07UmVtbmFudHMgb2YgQXNjZW5zaW9uO0hlbG0gb2YgdGhlIEZlcm9jaWQ5519cyBIZWFydDtKdWRnZW1lbnQgb2YgdGhlIEZhbGxlbjtIb29kd2luayBEcmFnb24gQ3Jvc3Nib3c7VGVycmFpbiAtIEF1dHVtbjtHb2xkZW4gQWVnaXM7Uml2ZXIgVmlhbCBQdXJwbGU7RHJlYWQgUmV0cmlidXRpb24gLSBCcmFjZXJzIEFsdDtEcmVhZCBSZXRyaWJ1dGlvbiAtIENhcGUgQWx0O0RyZWFkIFJldHJpYnV0aW9uIC0gSGVhZHdlYXIgQWx0O0RyZWFkIFJldHJpYnV0aW9uIC0gTGVnIEFybW9yIEFsdDtEcmVhZCBSZXRyaWJ1dGlvbiAtIFF1aXZlciBBbHQ7RHJlYWQgUmV0cmlidXRpb24gLSBTaG91bGRlciBBcm1vciBBbHQ7QXJjYW5hIERyZWFkIFJldHJpYnV0aW9uIE1hc3RlciBvZiBNYWRuZXNzO1dpbmdzIG9mIHRoZSBFbGRlciBNeXRoO0NyaW1zb24gRmlyc3Qgb2YgdGhlIEZsb29kO0dvbGRlbiBHcmFzcGluZyBCbHVkZ2VvbiBQcmVtO0ZsdXR0ZXJpbmcgQW1ldGh5c3QgKyBQdXJwbGUgRm9jYWwgUmVzb25hbmNlIERvdGEyQ2hhbmdlciBFZGl0aW9uO0ZvY2FsIFJlc29uYW5jZSBWIDMuMDtPdmVyZ3Jvd24gRW1ibGVtO01hcmF4aWZvcm1zIEZhdGUgQnVuZGxlO09ncmUgTWFnaSBJbW1vcnRhbHMgQXJjYW5hIE1lZ2FQYWNrO01vbmtleSBLaW5nIEFyY2FuYSBNZWdhUGFjaztBeGUgZnVsbCBJbW1vcnRhbHMgTWVnYXBhY2sgYWx0O1NsYXJrIE1lZ2FQYWNrIE5ldztMZWdpb24gQ29tbWFuZGVyIE1vZE1ha2VyIE1lZ2FQYWNrO1JpZ2h0ZWQ5519cyBUaHVuZGVyYm9sdCBhbmQgQXJjYW5hIE1lZ2FQYWNrO1NwaXJpdCBCcmVha2VyIE1lZ2FQYWNrO0NydWVsIEFzc2VtYmxhZ2U7S3Vua2thIEltbW9ydGFscyBNZWdhUGFjaztPdXR3b3JsZCBEZXZvdXZlciBNZWdhUGFjaztXaXRjaCBEb2N0b3IgTWVnYVBhY2s7T21uaWtuaWdodCBNZWdhUGFjaztHb2xkZW4gRGFyayBNYXcgSW5oaWJpdG8gYW5kIEdvbGRlbiBQcm9mYW5lIFVuaW9uIGFuZCBHb2xkZW4gRHJlYWQgUmVxdWlzaXRpb24gTGlmZXN0ZWFsZXIgSW1tb3J0YWxzIE1lZ2FwYWNrO1J1YmljayBBcmNhbmEgd2l0aCBJbW1vcnRhbDtXeXJtYnJldyBDb25ub2lzc2V1cjsgMTIzfHx8