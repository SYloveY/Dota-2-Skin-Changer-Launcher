bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogIDExMXx8fCAyMjI6OiAkMnkkMTAkWTJaa05EVTJPR0k0WkdNM01qQTVNLlJOT2g0Y1JJRGNGWDExbWZwdHlFLnkyd2RNTnFhRS4gMjIyfHx8IDEyMzo6IEJyb29kIEh1bnRlciBIVUQ7QmFieSBSb3NoYW4gUHJlbTtCbGFja2VuZWQgRWRnZSBvZiB0aGUgQmxhZGVrZWVwZXI7TWFzayBvZiB0aGUgQmxhZGVzcnVubmVyO0FybWQ5519ciBvZiB0aGUgRXhpbGVkIFJvbmluO0Fyc2VuYWwgb2YgdGhlIEJsYWRla2VlcGVyO1ByYXllciBCZWFkcyBvZiB0aGUgQmxhZGVrZWVwZXI7SGVhbGluZyBGb3VudCBvZiB0aGUgTG9zdCBJc2xlcztBY2lkIEh5ZHJhIEN1cnNvciBQYWNrO1dlYXRoZXIgQXNoO1JpdmVyIFZpYWwgR3JlZW47U2VlciBvZiBJbmZpbml0eSBTcGFjZSBFaWRvbG9uO1RlbXBlc3QgSGVsbSBvZiB0aGUgVGh1bmRlcmdvZCBQcmVtO01MRyBUZXRoZXJlZCBTZW50aW5lbDtBcm1zIG9mIERlc29sYXRpb247QXJtb3Igb2YgdGhlIERpYWJvbGljYWwgRmllbmQ7SG9ybnMgb2YgdGhlIERpYWJvbGljYWwgRmllbmQ7UHVkZ2UgQXJjYW5hIEVORyBWb2ljZTtTRiBSVSBBcmNhbmUgdm9pY2U7QmxhY2tzaGllbGQgUHJvdG9kcm9uZSBMYXNlcjtCbGFja3NoaWVsZCBQcm90b2Ryb25lIEhlbG07QmxhY2tzaGllbGQgUHJvdG9kcm9uZSBNaXNzaWxlIExhdW5jaGVyO0JsYWNrc2hpZWxkIFByb3RvZHJvbmUgQXJtb3I7QmxhY2tzaGllbGQgUHJvdG9kcm9uZSBTdGluZ2VyO01hcmNoIG9mIHRoZSBQb3dkZXJrZWcgUGF0cm9sO1NvdmVyZWlnbiBvZiB0aGUgS3JheSBMZWdpb25zIDJzdCBTdHlsZTtEaXZpbmVycyBFbWJyYWNlO1NhbXVyYWkgU2V0O01hemUgV2F0Y2hlciBTZXQ7Q3JlZXBpbmcgU2hhZG93O0xvbmdiZWFyZCBEd2FyZiBFbmdpbmVlcjtBcm1vdXIgb2YgVGhlIElyb24gRHJha2tlbjtDbGFuZGVzdGluZSBUcmFpbDtTcGlyaXQgb2YgVGhlIFNhY3JlZCBHbG92ZTtEYXJrIE1vb24gU3RhbGtlciBWIDIuMTtXYXJyaW9yIG9mIEFyZW5hIFNldDtSZWxpY3Mgb2YgR2xvcmlvdXMgSW5zcGlyYXRpb247RWxkd3VybXMgVG91Y2g7R3JpbSBEZXN0aW55O1B1cHBldCBTdW1tb25lcjtSaWZ0IENoYW1waW9uO0RyYWdvbnMgQXNjZW5zaW9uIFYgMy4wO0ZpcmVzIG9mIFZhc2h1bmRvbCBubyBlZmZlY3QgViAyLjE7QmxhY2sgT3JjIFdhcmJvc3MgViAyLjA7VGltZSBXYW5kZXJlcjtOZXcgQ2hpZWZ0YWluIFN0eWxlIDI7RGFwcGVyIERpc2d1aXNlO0JsYWRlYnJlYWtlciBPcmRlciBWYWxlZXJhIGZvciBSaWtpOyAxMjN8fHw=