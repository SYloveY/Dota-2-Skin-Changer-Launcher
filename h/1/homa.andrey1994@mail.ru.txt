bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogNTJCMkE1MDAtOTk4Qy0xMUU3LTg0OEItQkMwNzZGMDU0NjAwIDExMXx8fCAyMjI6OiAkMnkkMTAkWlRoalpXSmpNMlptTXpZM1pUVmhZT1h2cnVlVFNHNWI5VVVSZFpIU2RZNy9OTGQzQ2dCdGkgMjIyfHx8IDEyMzo6IEFnaGFuaW1zIEludGVyZGltZW5zaW9uYWwgQmFieSBSb3NoYW47SW5zYXRpYWJsZSBCb25lc2F3IFByZW07TGFyZ2UgVGFzc2VscyBvZiB0aGUgQmxhY2sgRGVhdGg7RmFjZWxlc3MgTWFkbmVzcztNYWNlIG9mIEFlb25zIFByZW07SmV3ZWwgb2YgQWVvbnM7RW5pZ21hdGljIEVtYmxlbSBvZiB0aGUgRGlyZXRpZGUgLSBHcmVlbjtNYW5pZm9sZCBQYXJhZG94IFBBIEFyY2FuYSBTdHlsZSAzO1RlbXBlc3QgSGVsbSBvZiB0aGUgVGh1bmRlcmdvZCArIFJpZ2h0ZWQ5519cyBUaHVuZGVyYm9sdDtQaGFudG9tIEFzY2Vuc2lvbiBCZWx0O1BoYW50b20gQXNjZW5zaW9uO1BoYW50b20gQXNjZW5zaW9uIFNob3VsZGVycztQaGFudG9tIEFzY2Vuc2lvbiBXZWFwb247QWdoYW5pbSBEdW5nZW9uIFNjZXB0ZXIgRWZmZWN0O0VtaW5lbmNlIG9mIFJpc3R1bCBEZW55IDE7TWFzayBvZiBNZXRpcmE7UHVsc2FyIFJlbW5hbnQgUHJlbTtTcGlyaXQgb2YgdGhlIFNhY3JlZCBHcm92ZSAtIFF1aXZlcjtUc3VrdW1vIHRoZSBNb29uIENsb3VkO1NwaXJpdCBvZiB0aGUgU2FjcmVkIEdyb3ZlIC0gU2hvdWxkZXI7U3Bpcml0IG9mIHRoZSBTYWNyZWQgR3JvdmUgLSBCYWNrO1RyYW5zdmVyc2FudCBTb3VsIG9mIHRoZSBDcmltc29uIFdpdG5lc3MgUHJlbTtDb2RpY2lsIG9mIHRoZSBWZWlsZWQgT25lcztHb3RoaWMgV2hpc3BlciBDYXBlO0dvdGhpYyBXaGlzcGVyIEJlbHQ7QXZvd2FuY2Ugb2YgdGhlIFZlaWxlZCBPbmVzO0RhcmsgQXJ0aXN0cnkgQnJhY2VycyBQcmVtO0RhcmsgQXJ0aXN0cnkgQ2FwZSBQcmVtO0RhcmsgQXJ0aXN0cnkgQmVsdCBQcmVtO01hZ3VzIEFjY29yZDtEYXJrIEFydGlzdHJ5IEhhaXIgMm5kIFN0eWxlO0RhcmsgQXJ0aXN0cnkgUGF1bGRyb25zIFByZW07RG9vbXNkYXkgUmlwcGVyIEFybXM7RmVhc3Qgb2YgQWJzY2Vzc2lvbjtTY29yY2hpbmcgVGFsb247RGVuZGkgRG9sbDtHb2xkZW4gU3RhZmYgb2YgUGVycGxleCBQcmVtO0hlYWQgb2YgdGhlIEltcG9zc2libGUgUmVhbG07Q3J1eCBvZiBQZXJwbGV4IEFyY2FuYSBTdHlsZTtTaG91bGRlciBvZiB0aGUgTXlzdGljIE1hc3F1ZXJhZGU7RmFudG9jY2luaTtFYXJ0aHNoYWtlciBNZWdhUGFjayBOZXc7QXhlIGZ1bGwgSW1tb3J0YWxzIE1lZ2FwYWNrIGFsdDsgMTIzfHx8