bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogQzdDMjM1MEUtOENDMS00ODJGLUJBNkUtRkVEMTlEMUY4RkY4IDExMXx8fCAyMjI6OiAkMnkkMTAkT0dWalpqZzJPRFJrWlRjMk5qTTVaZVZvTHZENFovUjJiM2cwTC9YdmNEbDNmY013VVdxWFcgMjIyfHx8IDEyMzo6IEFlZ2lzIGFuZCBSb3NoYW4gU3QuIFZhbGVudGluZSBEYXk7QWdoYW5pbSBEdW5nZW9uIFNjZXB0ZXIgRWZmZWN0O1BsYW5ldGZhbGwgU3R1biBFZmZlY3Q7MjUgbHZsIHBpbmc7U2lsZW50IFdha2Ugb2YgdGhlIENyaW1zb24gV2l0bmVzcztNYW50bGUgb2YgdGhlIENpbmRlciBCYXJvbiBTdHlsZSAyO0xpdHRsZSBCbGluayBEYWdnZXI7QXhlIG9mIFBocmFjdG9zO01vbHRlbiBDbGF3IFByZW07U2x1bWJlcmluZyBUZXJyb3I7VGhpcnN0IG9mIEV6dHpob2sgQnVuZGxlIFByZW07VGhpcnN0IG9mIEV6dHpob2sgLSBPZmYtSGFuZDtEb3RhIDIgQ2hhbmdlciBFZGl0aW9uIEh1bnRlcnMgSG9hcmQgb2YgdGhlIENyaW1zb24gV2l0bmVzcztUaW5lcyBvZiBUeWJhcmE7RWxpeGlyIG9mIERyYWdvbnMgQnJlYXRoIFByZW07QmVhc3Qgb2YgdGhlIENyaW1zb24gUmluZyBCcmFjZXJzO0JsYXN0Zm9yZ2UgRXhoYWxlciBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzO0JlYXN0IG9mIHRoZSBDcmltc29uIFJpbmcgV2VhcG9uO0Zyb3N0IEF2YWxhbmNoZSBQcmVtO0dvbGRlbiBJY2UgQmxvc3NvbTtOb3RobGljIEJ1cmRlbiBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzIFByZW07RGFya2NsYXcgRW1pc3NhcnkgU3RhZmYgd2l0aCBjdXN0b20gVXJuO0RhcmtjbGF3IEVtaXNzYXJ5IENvd2w7RGFya2NsYXcgRW1pc3NhcnkgRHJlc3M7UmVzaXN0aXZlIFBpbmZvbGQgUHJlbTtPcmIgb2YgRGVsaXZlcmFuY2U7SmFkZSBSZWNrb25pbmcgUHJlbTtCZWx0IG9mIFRlY3RvbmljIEltcGxpY2F0aW9ucztNYWNlIG9mIHRoZSBGaXNzdXJlZCBTb3VsO0Fwb2dlZSBvZiB0aGUgR3VhcmRpYW4gRmxhbWU7VmlyZ2FzIEFyYztGbG91cmlzaGluZyBMb2Rlc3RhciBQcmVtO0xvcmQgb2YgTHVtaW5hcmllcyBFaWRvbG9ucztQZXJjZXB0aW9ucyBvZiB0aGUgRXRlcm5hbCBNaW5kO0NsYXN6dXJlbWUgSW5jdXJzaW9uIEJlbHQ7TWFjZSBvZiBBZW9ucyBQcmVtO0dvbGRlbiBBdG9taWMgUmF5IFRocnVzdGVycyBQcmVtO1RoZSBTcG9pbHMgb2YgRGV6dW47RGFyayBBcnRpc3RyeSBDYXBlIFByZW07RGFyayBBcnRpc3RyeSBCZWx0IFByZW07RGFyayBBcnRpc3RyeSBIYWlyIDJuZCBTdHlsZTtTbm93IE1ldGVvcjtNYW50bGUgb2YgdGhlIEJsYWNrZ3VhcmQgTWFndXMgRDJDIEVkaXRpb247TWFndXMgQWNjb3JkO1Rvcm1lbnRlZCBTdGFmZjtCZWx0IG9mIFZpbGUgQ29udm9jYXRpb247VG9tZSBvZiBGb3JiaWRkZW4gS25vd2xlZGdlO1NoZWFyaW5nIERlcG9zaXRpb24gUHJlbTtTb3VsIG9mIHRoZSBTbGF5ZXIgUHJlbTtEaXNjaXBsZSBvZiB0aGUgV3lybXdyb3VnaHQgRmxhbWU7SGVsbC1TcGFyIEFuYXRoZW1hIE9ic2lkaWFuIEJsaWdodDtNdWxjdGFudCBQYWxsIG9mIHRoZSBDcmltc29uIFdpdG5lc3M7RmluIEtpbmdzIENoYXJtIG9mIEVtaW5lbnQgUmV2aXZhbCBFeGNlcHRpb25hbDtIb3JucyBvZiB0aGUgQmV0cmF5ZXI7Q29sb3IgTWVlcG87UGl0bWQ5519c2UgRnJhdGVybml0eSBUYWlsO1B1bHNhciBSZW1uYW50IFByZW07TWFudGxlIG9mIHRoZSBUcnVlYmFyayBBZGhlcmVudDtNb25hcmNoIG9mIHRoZSBTYXBwaGlyZSBHbGVuO1N1ZmZlcndvb2QgU2FwbGluZztTdWxsZW4gUmFtcGFydDtTdWxsZW4gSG9sbG93IFByZW07QmxhY2sgTmloaWxpdHkgUHJlbTtQaWVyY2luZyBVbWJyYWdlIFBhY2sgRG90YSAyIENoYW5nZXIgRWRpdGlvbjtTZXZlcmluZyBMYXNoIFByZW07QmFyZGluZyBvZiB0aGUgTWF6ZSBLZWVwZXI7QXJtcyBvZiBEZXNvbGF0aW9uO1NoZWxkIG9mIEV0ZXJuYWwgTmlnaHQ7U2VhIFJha2VzIEJyaWRsZTtHYXJiIG9mIHRoZSBDb3JyaWRhbiBNYWVzdHJvO01hbmRhdGUgb2YgdGhlIFN0b3JtYm9ybjtDcmVhdG9ycyBMaWdodCBDb2xvciBmb3IgVEI7SGVsbSBvZiB0aGUgRm91bGZlbGwgQ29ycnVwdG9yIFByZW1pdW07Q3J5c3RhbCBEcnlhZCBQcmVtO0dvbGRlbiBQaXNjZWFuIFB1bHZlcml6ZXI7V2hpc2t5IHRoZSBTdG91dCBBcnRpZmFjdCBQcmVtO1BhbGUgQXVndXI7SGVsbSBvZiBHcmltIFJlZm9ybWF0aW9uO0xhbnRlcm4gb2YgdGhlIEluZmVybmFsIE1hdztUcmliYWwgUGF0aHdheXMgU3RhZmY7U2tpdHRlcmluZyBEZXNvbGF0aW9uIFByZW07Q3JpbXNvbiBQaXF1ZSBQcmVtO1dpbmRyYW5nZXIgQmx1ZSBJbW1vcnRhbCBCaXJkIFVQO0ZhbWlsbGFyIG9mIFRydWUgVmlzaW9uO1RhaWwgb2YgdGhlIEZlcm9jaWQ5519cyBUb3hpY2FudDtXaW5ncyBvZiB0aGUgRmF0YWwgQmxvb207Um9zaGFuIEdhcmRlbnM7VGVycmFpbiAtIEltbW9ydGFsIEdhcmRlbnM7SW5mZXJuYWwgQ2hpZWZ0YWluIG9mIHRoZSBDcmltc29uIFdpdG5lc3M7UHJlbGF0ZXMgQnJhY2VycyBvZiB0aGUgV3l2ZXJuIExlZ2lvbjtSYW1wYW50IE91dHJhZ2UgUHJlbTtTcGxhdHRlcmluZyBGb3JjaXB1bGU7Q3VsdCBvZiBBa3RvaztHb2xkZW4gTW9vbmZhbGwgUHJlbTtTaGFkZSBvZiB0aGUgU3BpdGVmdWwgRXllO0dvbGRlbiBMYW1iIHRvIHRoZSBTbGF1Z2h0ZXIgUHJlbTtBcm1zIG9mIHRoZSBMdWNlbnQgQ2Fub3B5O0hhdWwgb2YgdGhlIEx1Y2VudCBDYW5vcHk7U2hvY2sgb2YgdGhlIEFudmlsIFByZW07Q29uY29yZCBSZXZlcnNpb24gVVA7V2luZHJhbmdlciBDdXN0b20gQmx1ZSBJbW1vcnRhbCBCb3c7Q3VzdG9tIEJsdWUgSW1tb3J0YWwgQ2FwZTtBdXNwaWNlIG9mIHRoZSBXaHlybGVneWdlIEVnZyBTY3JhbWJsZXI7Rmx1dHRlcmluZyBBbWV0aHlzdCBUcmFwICsgSWNvbjtGbHV0dGVyaW5nIEFtZXRoeXN0ICsgUHVycGxlIEZvY2FsIFJlc29uYW5jZSBEb3RhMkNoYW5nZXIgRWRpdGlvbjtCcm9vZG1vdGhlciBBbmltZSBWb2ljZTtDcnlzdGFsIE1haWRlbiBBbmltZSBWb2ljZTtEcm93IFJhbmdlciBBbmltZSBWb2ljZTtEZWF0aCBQcm9waGV0IEFuaW1lIFZvaWNlO0VuY2hhbnRyZXNzIEFuaW1lIFZvaWNlO0xpbmEgQW5pbWUgVm9pY2U7THVuYSBBbmltZSBWb2ljZTtNZWR1c2EgQW5pbWUgVm9pY2U7TmFnYSBTaXJlbiBBbmltZSBWb2ljZTtQaGFudG9tIEFzc2Fzc2luIEFuaW1lIFZvaWNlO1B1Y2sgQW5pbWUgVm9pY2U7U3BlY3RyZSBBbmltZSBWb2ljZTtUZW1wbGFyIEFzc2Fzc2luIEFuaW1lIFZvaWNlO1ZlbmdlZnVsIFNwaXJpdCBBbmltZSBWb2ljZTtXaW50ZXIgV3l2ZXJuIEFuaW1lIFZvaWNlO1Jpc2UgS3VqaWthd2EgQW5ub3VuY2VyIChKYXApO0JyYWNlcnMgb2YgdGhlIEFyZGFsYW4gSW50ZXJkaWN0b3I7UGFjayBvZiB0aGUgQXJkYWxhbiBJbnRlcmRpY3RvcjtIZWxtIG9mIHRoZSBBcmRhbGFuIEludGVyZGljdG9yO0NvbGFyIG9mIHRoZSBBcmRhbGFuIEludGVyZGljdG9yO1NuaXBlciBJbW1vcnRhbCBXZWFwb24gb2YgdGhlIEFyZGFsYW4gSW50ZXJkaWN0b3I7QXBwYXJhdHVzIG9mIEZ1bGwgVGhyb3R0bGU7U2hhZG93IGluIHRoZSBEZWVwIEFybW9yO0NvbXBsZXRlIFdpbmdzIG9mIHRoZSBFdGhlcmVhbCBNb25hcmNoO09yYiBvZiBSZW1pbmlzY2VuY2U7QnJhY2VycyBvZiB0aGUgRnJhY3R1cmVkIEVudm95O0NhcGUgb2YgdGhlIEZyYWN0dXJlZCBFbnZveTtXcmFpdGhiaW5kZXI7SG9vZHdpbmsgR2xlaXBuaXI7T3JpZ2luIG9mIHRoZSBVbm1ha2luZztDaGl0b2dlIE1lZ2EtS2lsbHM7VGhlRmF0UmF0IFdhcnJpb3IgU29uZ3MgTXVzaWMgUGFjayBPZmZpY2lhbDtDcmltc29uIE1vdXJuZnVsIFJldmVyaWU7U2hhcmRzIG9mIEV4aWxlIFByZW07QnJhY2VyIG9mIEZ1bGwgVGhyb3R0bGU7UHJlbGF0ZXMgTWFudGxlIG9mIHRoZSBXeXZlcm4gTGVnaW9uO0hvb2R3aW5rIERyYWdvbiBDcm9zc2JvdztHb2xkZW4gU2V2ZXJpbmcgQ3Jlc3QgUHJlbTtQaGFudG9tIEFkdmVudCBTaG91bGRlcnMgVVA7UGhhbnRvbSBBZHZlbnQgQmVsdCBVUDtQaGFudG9tIEFkdmVudCBVUDtBeGlhIG9mIE1ldGlyYTtCbGFja3NoaWVsZCBQcm90b2Ryb25lIEFybW9yO0JsYWNrc2hpZWxkIFByb3RvZHJvbmUgTWlzc2lsZSBMYXVuY2hlcjtCbGFja3NoaWVsZCBQcm90b2Ryb25lIFN0aW5nZXI7Um9sbGVybWF3c3RlcjtDb25zcGljdWQ5519cyBDdWxwcml0IE1vaGF3azttb2hhd2sgc2hvdWxkZXI7Q29uc3BpY3VvdXMgQ3VscHJpdCBBcm1vcjtMYXNoIG9mIHRoZSBMaXphcmQgS2luIG9mIHRoZSBDcmltc29uIFdpdG5lc3M7Q3JpbXNvbiBDZW5zZXIgb2YgR2xpc3MgVVA7QXZvd2FuY2Ugb2YgdGhlIENyaW1zb24gV2l0bmVzcztHb2RzIE1lcmN5IG9mIHRoZSBDcmltc29uIFdpdG5lc3M7Q3JpbXNvbiBQcm9nZW5pdG9ycyBCYW5lO0hhcmJvcmJsb3Nzb20gb2YgdGhlIENyaW1zb24gV2l0bmVzcztQcmltYWwgUGVhY2VtYWtlciBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzO0ZldHRlcnMgb2YgT21uaXNjaWVuY2Ugb2YgdGhlIENyaW1zb24gV2l0bmVzcztEZXNlcnQgQnVybiBTYWRkbGU7RGVzZXJ0IEJ1cm4gT3V0Zml0O0Rlc2VydCBCdXJuIENhcDtEZXNlcnQgQnVybiBNb3J0eSBJbW1vcnRhbDtEZXNlcnQgQnVybiBDcm9zc2JvdztTb3VsIERpZmZ1c2VyIFByZW07SXJvbiBCcmFuY2ggR0c7Um95YWwgRGVjcmVlIFdoaXAgQXR0YWNrO1JpdmVyIFZpYWwgU1RBTkRBUlQ7Q3Jvd24gb2YgdGhlIFJveWFsIERlY3JlZTtGb290ZmFsbHMgb2YgdGhlIFNwb3JlZmF0aGVycyAtIERlYXRoIFdhcmQ7U2hhZG93IG9mIHRoZSBCdXJuaW5nIFNjYWxlO0NvbG9yU3RhdHM7UXVlc3Rpb24gbWFyayBEZW55O0dvbGRlbiBJbW1vcnRhbCBQYW50aGVvbjtTeW1ib2wgb2YgdGhlIEtpbmcgUmVzdG9yZWQ7RGFya2JyZXcgRW5mb3JjZXIgYW5kIEV0ZXJuYWwgUmFkaWFuY2UgQmxhZGVzIGFuZCBNaWRhcyBLbnVja2xlcyBNZWdhUGFjaztBQU1lZ2FQYWNrO0FudGlNYWdlIFJFRCBNZWdhUGFjaztVbmJyb2tlbiBTdGFsbGlvbjtDbGlua3ogTWVnYVBhY2s7RWFydGhzaGFrZXIgTWVnYVBhY2s7TW9udW1lbnRzIG9mIHRoZSBOYXR1cmFsIERlbWl1cmdlO0VuaWdtYSBNZWdhUGFjaztLdW5ra2EgSW1tb3J0YWxzIE1lZ2FQYWNrO1JhZGlhbnQgQ29ucXVlcm9yO01hcnMgVEkxMCBDb2xsZWN0b3JzIENhY2hlIE1lZ2FQYWNrO01lZHVzYSBNZWdhUGFjayBORVc7TWlyYW5hIFRJMTAgQ29sbGVjdG9ycyBDYWNoZSBNZWdhUGFjaztNb25rZXkgS2luZyBBcmNhbmEgTWVnYVBhY2s7T2dyZSBNYWdpIEltbW9ydGFscyBBcmNhbmEgTWVnYVBhY2s7T21uaWtuaWdodCBNZWdhUGFjaztJY2UgUGhvZW5peCBWIDIuMDtBbmNpZW50IE1hZ3VzIFN0eWxlIDI7Qmx1ZSBTRjtFdGVybmFsIEhhcnZlc3Q7U3Bpcml0IEJyZWFrZXIgTWVnYVBhY2s7TmVvbiBTcGlyaXQ7VGltYmVyc2F3IE1lZ2FQYWNrO1Vyc2EgSW1tb3J0YWxzIE1lZ2FQYWNrO1dpdGNoIERvY3RvciBNZWdhUGFjaztDaGlsbCBvZiB0aGUgS2VlcGVycyBHYXplO0Jsb29keSBCcmlkZTtDdXJzZSBvZiB0aGUgV2ludGVyIFJvc2U7QmxhemluZyBPYmxpdmlvbiBWIDMuMDtGb3VsZmVsbCBDb3JydXB0b3I7U3RlZWwgS2luZztUaWRlaHVudGVyIE1lZ2FQYWNrO0Rvb20gSW1tb3J0YWxzIE1lZ2FQYWNrO055eCBBc3Nhc3NpbiBNZWdhUGFjayBuZXc7U2xhcmRhciBNZWdhUGFjayBzZXQ7R29sZCBTa3ltYWdlO1N2ZW4gSW1tb3J0YWxzIE1lZ2FQYWNrIFVQO0FiYWRkb24gUkVEIE1lZ2FQYWNrO0J1cm5pbmcgTmlnaHRtYXJlO1JpZ2h0ZWQ5519cyBUaHVuZGVyYm9sdCBhbmQgQXJjYW5hIE1lZ2FQYWNrOyAxMjN8fHw=