bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogMDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDBEODYxMkZCOEYxIDExMXx8fCAyMjI6OiAkMnkkMTAkTnpobE9ERTVOR1pqTTJJek1tVXdOT016dXRldHVBV3ZzWWJwZjZvNDAuai4yZE1QQTF6V3kgMjIyfHx8IDEyMzo6IFRlcnJhaW4gLSBJbW1vcnRhbCBHYXJkZW5zO1Jpc2UgS3VqaWthd2EgQW5ub3VuY2VyIChKYXApO1B1bXBraW4gVHJlZXMgVVA7RGVjbGFyYXRpb24gb2YgdGhlIERpdmluZSBMaWdodCBSYWRpYW50IFRvd2VycztEZWNsYXJhdGlvbiBvZiB0aGUgRGl2aW5lIFNoYWRvdyBEaXJlIFRvd2VycztPcmlnaW4gb2YgdGhlIFVubWFraW5nO1NsdW1iZXJpbmcgVGVycm9yO0FyY2FuYSBDcnlzdGFsIE1haWRlbiBGcm9zdCBBdmFsYW5jaGU7QnJhY2VycyBvZiBGb3Jsb3JuIFByZWNpcGljZTtCb29rIG9mIHRoZSBWaXppZXIgRXhpbGUgUHJlbTtQbGFuZXRmYWxsO1NvbmdzIG9mIFN0YXJmYWxsIEdsZW4gLSBIZWFkO1NvbmdzIG9mIFN0YXJmYWxsIEdsZW4gLSBCZWx0O0dsb3J5IG9mIHRoZSBTb3V0aCBTdGFyO1ZpcmdhcyBBcmM7SG9vZHdpbmsgR2xlaXBuaXI7QmVuZXZvbGVudCBDb21wYW5pb24gUHJlbTtKYWtpcm8gSW1tb3J0YWxzIEhlYWRzO0phZ2dlZCBIb25vciBMZWdzO0Nyb3duIG9mIFZpbGUgQ29udm9jYXRpb247VG9tZSBvZiBGb3JiaWRkZW4gS25vd2xlZGdlO1Nob2NrIG9mIHRoZSBBbnZpbCBQcmVtO0JyYWNlciBvZiB0aGUgU3BpcmFsIEJvcmU7QmVsdCBvZiB0aGUgU3BpcmFsIEJvcmU7SG9ybiBvZiB0aGUgU3BpcmFsIEJvcmU7U3VmZmVyd29vZCBTYXBsaW5nO01vbmFyY2ggb2YgdGhlIFNhcHBoaXJlIEdsZW47RmVhc3Qgb2YgQWJzY2Vzc2lvbjtMYXNoIG9mIHRoZSBMaXphcmQgS2luO0NyaW1zb24gQ2Vuc2VyIG9mIEdsaXNzIFVQO09mZi1IYW5kIG9mIHRoZSBMdWNlbnQgQ2Fub3B5O0Rlc2VydCBCdXJuIFNhZGRsZTtEZXNlcnQgQnVybiBNb3J0eSBJbW1vcnRhbDtEZXNlcnQgQnVybiBDYXA7RGVzZXJ0IEJ1cm4gT3V0Zml0O0Rlc2VydCBCdXJuIENyb3NzYm93O1BoYW50b20gQXNjZW5zaW9uO1BoYW50b20gQXNjZW5zaW9uIEJlbHQ7U291bCBEaWZmdXNlciBQcmVtO1ZpZ2lsIFRyaXVtcGg7U3dpbmUgb2YgdGhlIFN1bmtlbiBHYWxsZXkgUHJlbTtBbmNpZW50IEluaGVyaXRhbmNlIC0gU2hvdWxkZXI7QW5jaWVudCBJbmhlcml0YW5jZSAtIE5lY2s7QW5jaWVudCBJbmhlcml0YW5jZSAtIEJhY2s7QW5pbWF0ZWQgRGFzaGJvYXJkIFdpbmRyYW5nZXIgQXJjYW5hIHN0eWxlIDEgKyBTb3VuZDtCcm9vZG1vdGhlciBBbmltZSBWb2ljZTtDcnlzdGFsIE1haWRlbiBBbmltZSBWb2ljZTtEZWF0aCBQcm9waGV0IEFuaW1lIFZvaWNlO0Ryb3cgUmFuZ2VyIEFuaW1lIFZvaWNlO0x1bmEgQW5pbWUgVm9pY2U7T2ZmLUhhbmQgV2VhcG9uIG9mIHRoZSBGb3Jnb3R0ZW4gUGxhbmU7V2VhcG9uIG9mIHRoZSBGb3Jnb3R0ZW4gUGxhbmUgO1RoZSBCYXJyZW4gQ3Jvd247VGFpbCBvZiB0aGUgU2NvdXJpbmcgRHVuZXM7QnJhY2VycyBvZiB0aGUgVmljaWQ5519cyBQbGFpbnM7SWNlcGxhaW4gUmF2YWdlciBIb3JuO0JlbHQgb2YgQ29udGVzdGVkIEZhdGU7R29sZGVuIEluZmVybmFsIENoaWVmdGFpbjtBcm1vciBvZiB0aGUgQ2hhb3MgQ2hvc2VuO1dhcmxvcmQgb2YgSGVsbCBUYWlsO0F4ZSBvZiB0aGUgUHJvdmVuO0RlbW9uIEZvcm0gb2YgdGhlIEZvdWxmZWxsIENvcnJ1cHRvciBVUDtQaW5rIENvbG9yIGZvciBUQjtGcmFjdGFsIEhvcm5zIG9mIElubmVyIEFieXNtIFVQO0JyYWNlcnMgb2YgdGhlIFNpbHZlciBGb3g7UGFjayBvZiB0aGUgQXJkYWxhbiBJbnRlcmRpY3RvcjtCbGFja3NhaWwgQ2Fubm9uZWVyIEhhdDtCbGFja3NhaWwgQ2Fubm9uZWVyIFNob3VsZGVyO1NuaXBlciBJbW1vcnRhbCBXZWFwb24gb2YgdGhlIEFyZGFsYW4gSW50ZXJkaWN0b3I7SGVsbSBvZiB0aGUgRGFyayBNb29uIFN0YWxrZXI7TWQ5519bnQgb2YgdGhlIFdpbmdlZCBTZW50aW5lbDtNb29uZmFsbCBQcmVtO0dvbGRlbiBUd2lsaWdodCBTY2hpc207Q2xhc3p1cmVtZSBJbmN1cnNpb24gQmVsdDtCcmFjZXJzIG9mIEFlb25zO0ZhY2VsZXNzIE1hZG5lc3M7Q2xhc3p1cmVtZSBJbmN1cnNpb24gU2hvdWxkZXI7TWFjZSBvZiBBZW9ucyBQcmVtO0ZvcnR1bmVzIFRvdXQgUHJlbTtKYWdnZWQgSG9ub3IgQnJhY2VyO0phZ2dlZCBIb25vciBCYW5uZXI7SnVnZ2VybmF1dCBBcmNhbmEgQmxhZGVmb3JtIExlZ2FjeTtKYWdnZWQgSG9ub3IgQmxhZGU7U2lsZW50IFdha2U7TWFzayBvZiBaZWJ1bG9uO1F1aXZlciBvZiB0aGUgS2hhLVJlbiBGYWl0aGZ1bDtTaG91bGRlcnMgb2YgdGhlIFNhY3JlZCBIdW50O1JlYXBlcnMgV3JlYXRoO0hlbGwtU3BhciBBbmF0aGVtYSBPYnNpZGlhbiBCbGlnaHQ7SG9ybnMgb2YgdGhlIEJldHJheWVyO011bGN0YW50IFBhbGwgb2YgdGhlIENyaW1zb24gV2l0bmVzcztGaW4gS2luZ3MgQ2hhcm0gb2YgRW1pbmVudCBSZXZpdmFsIEV4Y2VwdGlvbmFsO0Nob21wZXIgV2FyZDtDdWx0IG9mIEFrdG9rO1dpbmdzIG9mIHRoZSBGYXRhbCBCbG9vbTtUYWlsIG9mIHRoZSBGZXJvY2lvdXMgVG94aWNhbnQ7QmVsbG93cyBvZiBDcmVhdGlvbjtNYWNlIG9mIHRoZSBGaXNzdXJlZCBTb3VsO0FybXMgIG9mIHRoZSBTaGF0dGVyZWQgVGFyZ2U7TWFzayBvZiB0aGUgTW9udW1lbnQgb2YgUnVpbjtTaG91bGRlciBvZiB0aGUgU2hhdHRlcmVkIFRhcmdlO1NoYWRvd3Mgb2YgUmF2ZW5zbWFuZSBBcm1zO1NraXJ0IG9mIHRoZSBTYWNyZWQgSHVudDtBcm1vciBvZiB0aGUgS2hhLVJlbiBGYWl0aGZ1bDtCbG9zc29tIG9mIHRoZSBNZXJyeSBXYW5kZXJlcjtPcmIgb2YgUmVtaW5pc2NlbmNlO0dob3N0cyBvZiBFdGVybmFsIFRlc3RhbWVudDtBcm1vciBvZiB0aGUgQnJpZ2h0c2hyb3VkO0JlbHQgb2YgdGhlIFdpbnRlciBSZXZlbmFudDtDcm93biBvZiB0aGUgQnJpZ2h0c2hyb3VkO0ZsdXR0ZXJpbmcgTW9ydGlzIFByZW07SW1tb3J0YWwgSW52b2tlciBLaWQ7R2FjaGkgTWVnYS1LaWxscztIZWFydGxlc3MgSHVudCAtIEFybW9yO0h1bnRlcnMgSG9hcmQ7SGVhcnRsZXNzIEh1bnQgLSBIZWFkO1RpbmVzIG9mIFR5YmFyYTtNYXJrIG9mIHRoZSBGaXJzdCBIdW50O0VwaXRhcGhpYyBUcmFwO1N0ZXdhcmQgb2YgdGhlIEZvcmJpZGRlbiBDaGFtYmVyIEFybW9yO1N0ZXdhcmQgb2YgdGhlIEZvcmJpZGRlbiBDaGFtYmVyIEhlYWQ7TWFudGxlIG9mIHRoZSBXaGlzcGVyZWQgQm9uZDtGb2NhbCBSZXNvbmFuY2UgViAzLjA7QnJhY2VycyBvZiB0aGUgUmVkIFNhbmRzO0JlbHQgb2YgdGhlIEdvbGRlbiBNYW5lO0NvbmNvcmQgUmV2ZXJzaW9uIFVQO0NvbmNvcmQgRG9taW5pb247UGhhbnRvbSBDb25jb3JkIFByZW07R2xvcnkgb2YgdGhlIEVsZGVyZmxhbWUgLSBBcm1zO1d5cm13cm91Z2h0IEZsYXJlO1NvdWwgb2YgdGhlIFNsYXllciBQcmVtO0Rpc2NpcGxlIG9mIHRoZSBXeXJtd3JvdWdodCBGbGFtZTtUZW1wZXN0IFJldmVsYXRpb247UGF1bGRyb25zIG9mIHRoZSBXYXJ0b3JuIEhlYXZlbnM7QmVsdCBvZiB0aGUgV2FydG9ybiBIZWF2ZW5zO1RlbXBlc3QgSGVsbSBvZiB0aGUgVGh1bmRlcmdvZCArIFJpZ2h0ZWQ5519cyBUaHVuZGVyYm9sdDtIaWRkZW4gVmVjdG9yIC0gQXJtb3I7SGlkZGVuIFZlY3RvciAtIEJlbHQ7SGlkZGVuIFZlY3RvciAtIEhhdDtIaWRkZW4gVmVjdG9yIC0gQmxhZGU7QWJhZGRvbiBSRUQgTWVnYVBhY2s7RGFya2JyZXcgRW5mb3JjZXIgYW5kIEV0ZXJuYWwgUmFkaWFuY2UgQmxhZGVzIGFuZCBNaWRhcyBLbnVja2xlcyBNZWdhUGFjaztBQU1lZ2FQYWNrO0FyYyBXYXJkZW4gTWVnYVBhY2s7QXhlIGZ1bGwgSW1tb3J0YWxzIE1lZ2FwYWNrIGFsdDtFbXBpcmljIEluY2VuZGlhcnk7Q2hpZWZ0YWluIG9mIHRoZSBQcmltYWwgVHJpYmVzO0dpZnRzIG9mIHRoZSBGbGF5ZWQgVHdpbnMgU3R5bGUgMTtMb2FkZWQgUHJvc3BlY3RzO0JyaXN0bGViYWNrIE1lZ2FQYWNrO0Jyb29kbW90aGVyIE1lZ2FQYWNrO0J1cm5pbmcgTmlnaHRtYXJlO01hcmF4aWZvcm1zIEZhdGUgQnVuZGxlO0Nsb2Nrd2VyayBNZWdhUGFjaztBbGx1cmUgb2YgTWlyYWNsZSBGcnVpdDtEZWxpZ2h0cyBvZiBQZXRhbHVuYTtUZW1wbGUgRGVmZW5kZXI7RG9vbSBJbW1vcnRhbHMgTWVnYVBhY2s7VHVycXVvaXNlIEdpYW50IEd1YXJkO0t1bmcgZnUgTWFzdGVyO0VuaWdtYSBNZWdhUGFjaztJbmsgRHJhZ29uIFBvZXQ7QXJjYW5lIEludmVydGVyO0h1c2thciBNZWdhUGFjayBORVc7S3Vua2thIEltbW9ydGFscyBNZWdhUGFjaztMZWdpb24gQ29tbWFuZGVyIE1vZE1ha2VyIE1lZ2FQYWNrO1RodW5kZXIgR3JpZmZpbjtMaWZlc3RlYWxlciBNZWdhUGFjaztMb25lIERydWlkIE1lZ2FQYWNrO0x5Y2FuIEtpc2lsZXYgTW9kTWFrZXIgTWVnYVBhY2s7TWFycyBUSTEwIENvbGxlY3RvcnMgQ2FjaGUgTWVnYVBhY2s7TWVkdXNhIE1lZ2FQYWNrIE5FVztKdW5nbGUgQmFieXNpdHRlcnM7TWlyYW5hIFRJMTAgQ29sbGVjdG9ycyBDYWNoZSBNZWdhUGFjaztNb25rZXkgS2luZyBBcmNhbmEgTWVnYVBhY2s7TW9ycGhsaW5nIEltbW9ydGFscyBNZWdhUGFjayBVUDtGZWxsc3RyYXRoIFNlcnBlbnQ7VGhlIEJyaW5nZXIgb2YgUGxhZ3VlcztOaWdodCBTdGFsa2VyIEltbW9ydGFsIGFuZCBSZWFwZXIgS2lzaWxldiBNb2RNYWtlciBNZWdhUGFjaztOeXggQXNzYXNzaW4gTWVnYVBhY2s7T2dyZSBNYWdpIEltbW9ydGFscyBBcmNhbmEgTWVnYVBhY2s7T21uaWtuaWdodCBNZWdhUGFjaztBdXRob3JpdHkgb2YgdGhlIEltcGVyaXNoYWJsZSBHcmFuZCBIaWVyb3BoYW50O091dHdvcmxkIERldm91dmVyIE1lZ2FQYWNrO0V0aWVubmUgU3dpZnRndWFyZDtNYW5pZm9sZCBQYXJhZG94IEdvdGhpYyBIdW50ZXI7QXJpc3RvY3JhdGljIFJlYmlydGg7UHVnbmEgSW1tb3J0YWxzIE1lZ2FQYWNrO1F1ZWVuIG9mIFBhaW4gQXJjYW5hIE1lZ2FQYWNrO1NpbHZlciBSZXZlbmFudDtHZWxpZCBUb3VjaCBWYWxlZXJhIGZvciBSaWtpO0FuY2llbnQgTWFndXMgU3R5bGUgMztDb3JydXB0ZWQgU2hyaW5lIEdhcm1lbnRzO1NGIEFyY2FuYSBNZWdhcGFjaztTaWxlbmNlciBUSTEwIENvbGxlY3RvcnMgQ2FjaGUgTWVnYVBhY2s7U2t5d3JhdGggTWFnZSBNZWdhUGFjayBUaGFuYXRvcztTbGFyZGFyIE1lZ2FQYWNrIHNldDtTbGFyayBNZWdhUGFjayBOZXc7U3Bpcml0IEJyZWFrZXIgTWVnYVBhY2s7Q29ycmlkYW4gTWFlc3RybyBhbmQgVGhlIExpZ2h0bmluZyBPcmNoaWQgYW5kIEdvbGRlbiBNYW5kYXRlIG9mIHRoZSBTdG9ybWJvcm4gTWVnYVBhY2sgTkVXO1RpZGVodW50ZXIgTWVnYVBhY2s7TWVjaGEgSG9ybmV0IFNldDtUcmVhbnQgUHJvdGVjdG9yIE1lZ2FQYWNrO0F6dGVjIFdhcnJpb3I7SnVuZ2xlIEV4cGxvcmVyIFNldDtEZW1vbmZvcmdlZCBTZXQ7VXJzYSBJbW1vcnRhbHMgTWVnYVBhY2s7VmlzaW9uIG9mIHRoZSBTZXJhcGggU2Npb24gLSBMaWdodDtWaXBlciBNZWdhUGFjaztWaXNhZ2UgTWVnYVBhY2s7VHJpYmFsIFdhcmxvY2sgU2V0O0RldmlsIFJpcHBlcjtXaW5kcmFuZ2VyIEFyY2FuYSBzdHlsZSAxIChCbHVlIEJpcmQpICsgRnVsbCBXUiBpbW1vcnRhbDtEZWZlbmRlciBvZiB0aGUgQnJ1bWFsIENyZXN0O1dpdGNoIERvY3RvciBNZWdhUGFjaztXcmFpdGggS2luZyBBcmNhbmEgTWVnYVBhY2s7QW50aW1hZ2UgV2VpIEZlbWFsZSAoWWQ5519IGNhbiBhZGQgV2VhcG9uIGFuZCBIZWFkKTtTaXIgQ3V0c2Fsb3Q7IDEyM3x8fA==