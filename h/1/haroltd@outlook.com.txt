bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogRDVBRDYxRTYtNkQwNy1CQkVELUVCNjAtMjQ0QkZFN0QzOEM1IDExMXx8fCAyMjI6OiAkMnkkMTAkTnpNelpEazRNelJoWldJME9XTXdaZXVDckFXL1M4WmloOHIvblBhVWxYd0QvNnFqWDUwTWUgMjIyfHx8IDEyMzo6IGRyaXZlX2Rpcjo6QWJhZGRvbiBSRUQgTWVnYVBhY2s7ZHJpdmVfZGlyOjpEYXJrYnJldyBFbmZvcmNlciBhbmQgRXRlcm5hbCBSYWRpYW5jZSBCbGFkZXMgYW5kIE1pZGFzIEtudWNrbGVzIE1lZ2FQYWNrO2RyaXZlX2Rpcjo6QUFNZWdhUGFjaztkcml2ZV9kaXI6OkdvbGRlbiBPcmlnaW5zIG9mIEZhaXRoIFByZW07ZHJpdmVfZGlyOjpCcmFjZXIgb2YgdGhlIEZvcmdvdHRlbiBQbGFuZTtkcml2ZV9kaXI6OkJlbHQgb2YgdGhlIEZvcmdvdHRlbiBQbGFuZTtkcml2ZV9kaXI6OkhhaXIgb2YgdGhlIFN1cnZpdm9yO2RyaXZlX2Rpcjo6T2ZmaGFuZCBCbGFkZSBvZiB0aGUgU3Vydml2b3IgUHJlbTtkcml2ZV9kaXI6OldvcmRzIG9mIHRoZSBBd2FrZW5lZDtkcml2ZV9kaXI6OkdvbGRlbiBCYXNoZXIgb2YgTWFnZSBTa3VsbHM7ZHJpdmVfZGlyOjpBcmMgV2FyZGVuIE1lZ2FQYWNrO2RyaXZlX2Rpcjo6SXJlIG9mIHRoZSBBbmNpZW50IEdhb2xlciBBcm1zO2RyaXZlX2Rpcjo6SXJlIG9mIHRoZSBBbmNpZW50IEdhb2xlciBCYWNrO2RyaXZlX2Rpcjo6V3JhaXRoYmluZGVyO2RyaXZlX2Rpcjo6QXhlIGZ1bGwgSW1tb3J0YWxzIE1lZ2FwYWNrIGFsdDtkcml2ZV9kaXI6Ok9yaWdpbiBvZiB0aGUgVW5tYWtpbmc7ZHJpdmVfZGlyOjpTbHVtYmVyaW5nIFRlcnJvcjtkcml2ZV9kaXI6Ok5pZ2h0IFRlcnJvcnMgQmVsdDtkcml2ZV9kaXI6Ok5pZ2h0IFRlcnJvcnMgSGF0O2RyaXZlX2Rpcjo6TmlnaHQgVGVycm9ycyBNb3VudDtkcml2ZV9kaXI6Ok5pZ2h0IFRlcnJvcnMgQ2FwZTtkcml2ZV9kaXI6Oktpbmcgb2YgQmVhc3RzIEhhd2s7ZHJpdmVfZGlyOjpCZWFzdG1hc3RlciBNZWdhUGFjaztkcml2ZV9kaXI6OkFybXMgb2YgSGFydmVzdCpzIEhvdW5kO2RyaXZlX2Rpcjo6QmFjayBvZiBIYXJ2ZXN0KnMgSG91bmQ7ZHJpdmVfZGlyOjpCZWx0IG9mIEhhcnZlc3QqcyBIb3VuZDtkcml2ZV9kaXI6Ok1hdyBvZiBFenR6aG9rO2RyaXZlX2Rpcjo6VGhpcnN0IG9mIEV6dHpob2sgLSBPZmYtSGFuZDtkcml2ZV9kaXI6OkZlYXN0IG9mIHRoZSBVbndpbGxpbmcgU2hvdWxkZXJzO2RyaXZlX2Rpcjo6VGhpcnN0IG9mIEV6dHpob2sgQnVuZGxlIFByZW07ZHJpdmVfZGlyOjpCb3VudHkgSHVudGVyIE1hbmlhYyBTZXQ7ZHJpdmVfZGlyOjpMb2FkZWQgUHJvc3BlY3RzO2RyaXZlX2Rpcjo6QnJpc3RsZWJhY2sgTWVnYVBhY2s7ZHJpdmVfZGlyOjpCcm9vZG1vdGhlciBNZWdhUGFjaztkcml2ZV9kaXI6OkV0ZXJuYWwgQnJhY2VycyBvZiB0aGUgQ2hhb3MgQ2hvc2VuO2RyaXZlX2Rpcjo6QmFyZGluZyBvZiB0aGUgQ2hhb3MgQ2hvc2VuO2RyaXZlX2Rpcjo6QmVsdCBvZiB0aGUgUHJvdmVuO2RyaXZlX2Rpcjo6SW5mZXJuYWwgQ2hpZWZ0YWluIG9mIHRoZSBDcmltc29uIFdpdG5lc3M7ZHJpdmVfZGlyOjpFdGVybmFsIEFybW9yIG9mIHRoZSBDaGFvcyBDaG9zZW47ZHJpdmVfZGlyOjpFdGVybmFsIFRhaWwgb2YgdGhlIENoYW9zIENob3Nlbjtkcml2ZV9kaXI6OkluZmVybmFsIE1lbmFjZTtkcml2ZV9kaXI6OkRpYWJvbGljIEFzcGVjdDtkcml2ZV9kaXI6OlRhbG9ucyBvZiB0aGUgRW5kbGVzcyBTdG9ybSBNb3VudDtkcml2ZV9kaXI6OkdvbGRlbiBDaGFvcyBGdWxjcnVtO2RyaXZlX2Rpcjo6UGF1bGRyb25zIG9mIHRoZSBCdXJuaW5nIE5pZ2h0bWFyZTtkcml2ZV9kaXI6OlRhbG9ucyBvZiB0aGUgRW5kbGVzcyBTdG9ybSBXZWFwb247ZHJpdmVfZGlyOjpFeWUgT2YgUG93ZXIgU2V0O2RyaXZlX2Rpcjo6Q2xpbmt6IE1lZ2FQYWNrO2RyaXZlX2Rpcjo6Q2xvY2t3ZXJrIE1lZ2FQYWNrO2RyaXZlX2Rpcjo6UHJlbGF0ZXMgQnJhY2VycyBvZiB0aGUgV3l2ZXJuIExlZ2lvbjtkcml2ZV9kaXI6OkFyY2FuYSBDcnlzdGFsIE1haWRlbiBGcm9zdCBBdmFsYW5jaGU7ZHJpdmVfZGlyOjpZdWxzYXJpYSpzIEdsYWNpZXIgUHJlbTtkcml2ZV9kaXI6Oll1bHNhcmlhcyBNYW50bGUgUHJlbTtkcml2ZV9kaXI6OkdvbGRlbiBJY2UgQmxvc3NvbTtkcml2ZV9kaXI6OkdvbGRlbiBCcmFjZXJzIG9mIEZvcmxvcm4gUHJlY2lwaWNlO2RyaXZlX2Rpcjo6SGFybmVzcyBvZiB0aGUgRm9yZ290dGVuIFRhY3RpY2lhbjtkcml2ZV9kaXI6OkJlbHQgb2YgdGhlIEFydGlmIENvbnZlcnQ7ZHJpdmVfZGlyOjpIb29kIG9mIHRoZSBWaXppZXIgRXhpbGU7ZHJpdmVfZGlyOjpLZWVwZXIgb2YgT2xveGljYW0qcyBHbGFzcyBQYXVsZHJvbnM7ZHJpdmVfZGlyOjpHYXJiIG9mIHRoZSBTYWNjaGFyaW5lIFNhYm90ZXVyO2RyaXZlX2Rpcjo6V2luZ3Mgb2YgdGhlIFNhY2NoYXJpbmUgU2Fib3RldXI7ZHJpdmVfZGlyOjpUaGUgU3VuYnJlZXplIEJpcnRocmlnaHQ7ZHJpdmVfZGlyOjpDcmltc29uIEhlYXJ0cyBvZiBNaXNydWxlO2RyaXZlX2Rpcjo6VHdpbGlnaHQgSGV4IC0gT2ZmaGFuZDtkcml2ZV9kaXI6OkJyYWNlciBvZiBGb3JiaWRkZW4gTWVkaWNpbmU7ZHJpdmVfZGlyOjpDcmltc29uIEdhdGVzIG9mIE5vdGhsO2RyaXZlX2Rpcjo6RGFya2NsYXcgRW1pc3NhcnkgRHJlc3M7ZHJpdmVfZGlyOjpOb3RobGljIEJ1cmRlbiBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzIFByZW07ZHJpdmVfZGlyOjpEYXJrY2xhdyBFbWlzc2FyeSBTdGFmZiB3aXRoIGN1c3RvbSBVcm47ZHJpdmVfZGlyOjpEcm93IFJhbmdlciBNZWdhUGFjaztkcml2ZV9kaXI6OkVhcnRoc2hha2VyIE1lZ2FQYWNrIE5ldztkcml2ZV9kaXI6OkN1cnNlZCBTcGlyaXQ7ZHJpdmVfZGlyOjpDcmltc29uIEJyYWNlcnMgb2YgQWVvbnMgUHJlbTtkcml2ZV9kaXI6OkJlbHQgb2YgdGhlIEVtZXJhbGQgQWdlO2RyaXZlX2Rpcjo6UGVyY2VwdGlvbnMgb2YgdGhlIEV0ZXJuYWwgTWluZDtkcml2ZV9kaXI6Okpld2VsIG9mIEFlb25zO2RyaXZlX2Rpcjo6TWFjZSBvZiBBZW9ucyBQcmVtO2RyaXZlX2Rpcjo6QXJjYW5lIEludmVydGVyO2RyaXZlX2Rpcjo6SW1tb3J0YWwgSW52b2tlciBLaWQ7ZHJpdmVfZGlyOjpXcmFpdGggS2luZyBBcmNhbmEgTWVnYVBhY2s7ZHJpdmVfZGlyOjpTa2l0dGVyaW5nIERlc29sYXRpb24gUHJlbTtkcml2ZV9kaXI6OkNyaW1zb24gUGlxdWUgUHJlbTtkcml2ZV9kaXI6OkdvbGRlbiBDeXJyaWRhZSBQcmVtO2RyaXZlX2Rpcjo6TGVncyBvZiBJbmVycmFudCBFbWluZW5jZTtkcml2ZV9kaXI6OkhpZGRlbiBWZWN0b3IgLSBBcm1vcjtkcml2ZV9kaXI6OkhpZGRlbiBWZWN0b3IgLSBCZWx0O2RyaXZlX2Rpcjo6SGlkZGVuIFZlY3RvciAtIEhhdDtkcml2ZV9kaXI6OkhpZGRlbiBWZWN0b3IgLSBCbGFkZTtkcml2ZV9kaXI6OldpbmRyYW5nZXIgQXJjYW5hIHN0eWxlIDEgKEJsdWUgQmlyZCkgKyBGdWxsIFdSIGltbW9ydGFsO2RyaXZlX2Rpcjo6VmlwZXIgTWVnYVBhY2s7ZHJpdmVfZGlyOjpTd2lmdCBDbGF3IFByZW07ZHJpdmVfZGlyOjpTd2lmdCBDbGF3IGFuZCBGZXJvY2lvdXMgSGVhcnQ7ZHJpdmVfZGlyOjpEaXBwZXIgdGhlIERlc3Ryb3llcjtkcml2ZV9kaXI6OlNhc2ggb2YgdGhlIFJhdmFnZXI7ZHJpdmVfZGlyOjpMdWNreSBBbHBpbmUgU3RhbGtlcipzIEhhdDtkcml2ZV9kaXI6OkNvbnNwaWN1b3VzIEN1bHByaXQgQXJtb3I7ZHJpdmVfZGlyOjpDb25zcGljdWQ5519cyBDdWxwcml0IE1vaGF3aztkcml2ZV9kaXI6OlNjYWxlIG9mIEJpdHRlciBTcG9pbCBJbW1vcnRhbCBVUDtkcml2ZV9kaXI6OkJpdHRlciBMaW5lYWdlIEltbW9ydGFsIEF4ZXM7ZHJpdmVfZGlyOjpNaWxsaXBlZGUgU2V0O2RyaXZlX2Rpcjo6VmlzaW9uIG9mIHRoZSBTZXJhcGggU2Npb24gLSBSb3lhbDtkcml2ZV9kaXI6OlNoYW1ibGluZyBEcmF1Zztkcml2ZV9kaXI6OkRhcmsgTWVhZG93IE1hc3NhY3JlIEFybW9yO2RyaXZlX2Rpcjo6UGFsZSBBdWd1ciBQcmVtO2RyaXZlX2Rpcjo6RGFyayBNZWFkb3cgTWFzc2FjcmUgSGVhZDtkcml2ZV9kaXI6OkdvbGRlbiBQYWxlIE1hdXNvbGV1bTtkcml2ZV9kaXI6Okp1bmdsZSBFeHBsb3JlciBTZXQ7ZHJpdmVfZGlyOjpBbmNpZW50IEluaGVyaXRhbmNlIC0gU2hvdWxkZXI7ZHJpdmVfZGlyOjpBbmNpZW50IEluaGVyaXRhbmNlIC0gQmVsdDtkcml2ZV9kaXI6OkFuY2llbnQgSW5oZXJpdGFuY2UgLSBOZWNrO2RyaXZlX2Rpcjo6QW5jaWVudCBJbmhlcml0YW5jZSAtIEJhY2s7ZHJpdmVfZGlyOjpBbnRob3pvYSBHaWFudCBXZWFwb247ZHJpdmVfZGlyOjpUcmVhbnQgUHJvdGVjdG9yIE1lZ2FQYWNrO2RyaXZlX2Rpcjo6TWVjaGEgSG9ybmV0IFNldDtkcml2ZV9kaXI6OlNpciBDdXRzYWxvdDtkcml2ZV9kaXI6OkdvbGRlbiBSZWN0aWZpZXI7ZHJpdmVfZGlyOjpDb250cm9sbGVkIEJ1cm47ZHJpdmVfZGlyOjpEZW1vbiBGb3JtIG9mIHRoZSBGb3VsZmVsbCBDb3JydXB0b3IgVVA7ZHJpdmVfZGlyOjpDaGFzbSBvZiB0aGUgQnJva2VuIENvZGUgQXJtb3I7ZHJpdmVfZGlyOjpXaW5ncyBvZiB0aGUgRm91bGZlbGwgQ29ycnVwdG9yIFByZW1pdW07ZHJpdmVfZGlyOjpSZWZsZWN0aW9ucyBTaGFkZSBDb2xvciBmb3IgVEI7ZHJpdmVfZGlyOjpGcmFjdGFsIEhvcm5zIG9mIElubmVyIEFieXNtIFVQO2RyaXZlX2Rpcjo6U2N5dGhlcyBvZiBTb3Jyb3c7ZHJpdmVfZGlyOjpUaWRlaHVudGVyIE1lZ2FQYWNrO2RyaXZlX2Rpcjo6UG93ZGVyc2xlZCBSb29rZXJ5O2RyaXZlX2Rpcjo6RXBpdGFwaGljIFRyYXA7ZHJpdmVfZGlyOjpBcm1vciBvZiB0aGUgVGltZWtlZXBlcjtkcml2ZV9kaXI6OkhlYWRkcmVzcyBvZiB0aGUgTG95YWwgRm9sZDtkcml2ZV9kaXI6OlN0ZXdhcmQgb2YgdGhlIEZvcmJpZGRlbiBDaGFtYmVyIFNob3VsZGVyO2RyaXZlX2Rpcjo6Rm9jYWwgUmVzb25hbmNlIFYgMy4wO2RyaXZlX2Rpcjo6U3Rvcm0gU3Bpcml0IE1lZ2FQYWNrO2RyaXZlX2Rpcjo6U3ZlbiBJbW1vcnRhbHMgTWVnYVBhY2sgVVA7ZHJpdmVfZGlyOjpQaGFudG9tIEFzY2Vuc2lvbiBCZWx0O2RyaXZlX2Rpcjo6UGhhbnRvbSBBc2NlbnNpb247ZHJpdmVfZGlyOjpQaGFudG9tIEFzY2Vuc2lvbiBTaG91bGRlcnM7ZHJpdmVfZGlyOjpTb3VsIERpZmZ1c2VyIFByZW07ZHJpdmVfZGlyOjpTcGlyaXQgQnJlYWtlciBNZWdhUGFjaztkcml2ZV9kaXI6OkJsYWNrIFNhaWxzIENvbm5vbmVlcjtkcml2ZV9kaXI6OkRlc2VydCBCdXJuIFNhZGRsZTtkcml2ZV9kaXI6OkRlc2VydCBCdXJuIE91dGZpdDtkcml2ZV9kaXI6OkRlc2VydCBCdXJuIENhcDtkcml2ZV9kaXI6OkRlc2VydCBCdXJuIE1vcnR5IEltbW9ydGFsO2RyaXZlX2Rpcjo6RGVzZXJ0IEJ1cm4gQ3Jvc3Nib3c7ZHJpdmVfZGlyOjpTbGFyayBNZWdhUGFjayBOZXc7ZHJpdmVfZGlyOjpTbGFyZGFyIE1lZ2FQYWNrIHNldDtkcml2ZV9kaXI6OlNreXdyYXRoIE1hZ2UgTWVnYVBhY2sgVGhhbmF0b3M7ZHJpdmVfZGlyOjpTRiBBcmNhbmEgTWVnYXBhY2s7ZHJpdmVfZGlyOjpBcm1zIG9mIHRoZSBMdWNlbnQgQ2Fub3B5O2RyaXZlX2Rpcjo6SGF1bCBvZiB0aGUgTHVjZW50IENhbm9weTtkcml2ZV9kaXI6OlJlZCBTYW5kcyBNYXJhdWRlciAtIEhlYWQ7ZHJpdmVfZGlyOjpDcmltc29uIENlbnNlciBvZiBHbGlzcyBVUDtkcml2ZV9kaXI6OldhcmQgb2YgdGhlIEx1Y2VudCBDYW5vcHk7ZHJpdmVfZGlyOjpHb2xkZW4gTGFtYiB0byB0aGUgU2xhdWdodGVyIFByZW07IDEyM3x8fA==