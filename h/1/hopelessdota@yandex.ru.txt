bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogNzFFOTA1MjEtOTM0MS1FNzE4LTlENzgtNzREMDJCQzRGNTE3IDExMXx8fCAyMjI6OiAkMnkkMTAkWXpjMU5qYzJOekJsTWpNM05XWm1aLnM5clVxT1hUZ1hqeVNJZElFU0MyeGVaRWgybVlvcG0gMjIyfHx8IDEyMzo6IGRyaXZlX2Rpcjo6QW50aW1hZ2UgV2VpIEZlbWFsZSAoWWQ5519IGNhbiBhZGQgV2VhcG9uIGFuZCBIZWFkKTtkcml2ZV9kaXI6OkhhaXIgb2YgdGhlIFN1cnZpdm9yO2RyaXZlX2Rpcjo6R29sZGVuIEJhc2hlciBCbGFkZXMgViAyLjA7ZHJpdmVfZGlyOjpXcmFpdGhiaW5kZXI7ZHJpdmVfZGlyOjpJcmUgb2YgdGhlIEFuY2llbnQgR2FvbGVyIEJhY2s7ZHJpdmVfZGlyOjpJcmUgb2YgdGhlIEFuY2llbnQgR2FvbGVyIEFybXM7ZHJpdmVfZGlyOjpGaXN0cyBvZiBBeGUgVW5sZWFzaGVkO2RyaXZlX2Rpcjo6TWFudGxlIG9mIHRoZSBDaW5kZXIgQmFyb24gU3R5bGUgMjtkcml2ZV9kaXI6OkJlbHQgb2YgQXhlIFVubGVhc2hlZDtkcml2ZV9kaXI6OlRvcnNvIG9mIEF4ZSBVbmxlYXNoZWQ7ZHJpdmVfZGlyOjpHb2xkZW4gQ3J1Y2libGUgb2YgUmlsZTtkcml2ZV9kaXI6Ok1hdyBvZiBFenR6aG9rO2RyaXZlX2Rpcjo6U2hvdWxkZXIgb2YgdGhlIEJsb29kZm9yZ2U7ZHJpdmVfZGlyOjpPZmYtSGFuZCBXZWFwb24gb2YgdGhlIEJsb29kZm9yZ2U7ZHJpdmVfZGlyOjpUaGlyc3Qgb2YgRXp0emhvayBCbGFkZTtkcml2ZV9kaXI6Okh1bnRlciB3aXRoIE5vIE5hbWUgViAyLjE7ZHJpdmVfZGlyOjpIdW50ZXJzIEhvYXJkO2RyaXZlX2Rpcjo6VGluZXMgb2YgVHliYXJhO2RyaXZlX2Rpcjo6TWFyayBvZiB0aGUgRmlyc3QgSHVudCBIYXJ2ZXN0ZWQ7ZHJpdmVfZGlyOjpDbGlua3ogTWVnYVBhY2s7ZHJpdmVfZGlyOjpBcmNhbmEgQ3J5c3RhbCBNYWlkZW4gRnJvc3QgQXZhbGFuY2hlO2RyaXZlX2Rpcjo6REsgUGVyc29uYSBEYXZpb247ZHJpdmVfZGlyOjpEYXZpb24qcyBEcmFnb24gSG9sZCBIZWxtO2RyaXZlX2Rpcjo6U3dvcmQgb2YgdGhlIE91dGxhbmQgUmF2YWdlcjtkcml2ZV9kaXI6OkVhcnRoc2hha2VyIE1lZ2FQYWNrIE5ldztkcml2ZV9kaXI6OkltbW9ydGFsIEludm9rZXIgS2lkO2RyaXZlX2Rpcjo6SnVnZ2VybmF1dCBBcmNhbmEgQmxhZGVmb3JtIExlZ2FjeTtkcml2ZV9kaXI6OkphZ2dlZCBIb25vciBMZWdzO2RyaXZlX2Rpcjo6Q3JpbXNvbiBFZGdlIG9mIHRoZSBMb3N0IE9yZGVyO2RyaXZlX2Rpcjo6SmFnZ2VkIEhvbm9yIEJyYWNlcjtkcml2ZV9kaXI6OkphZ2dlZCBIb25vciBCYW5uZXI7ZHJpdmVfZGlyOjpQcml6ZSBvZiB0aGUgU2FsdHdvcm4gTWFyaW5lcjtkcml2ZV9kaXI6OldhdGVybG9nZ2VkIEt1bmtrYSBTaG9lcztkcml2ZV9kaXI6OkJlc3Rvd21lbnRzIG9mIHRoZSBEaXZpbmUgQW5jaG9yIGVmZmVjdHM7ZHJpdmVfZGlyOjpJbWFnZSBvZiBTZWFib3JuZSBSZXByaXNhbDtkcml2ZV9kaXI6OkxldmlhdGhhbiBXaGFsZSBCbGFkZSBQcmVtO2RyaXZlX2Rpcjo6QmVsdCBvZiBTZWFib3JuZSBSZXByaXNhbDtkcml2ZV9kaXI6OkNsYXcgb2YgU2VhYm9ybmUgUmVwcmlzYWw7ZHJpdmVfZGlyOjpTb3VsIG9mIHRoZSBTbGF5ZXIgUHJlbTtkcml2ZV9kaXI6OkRpc2NpcGxlIG9mIHRoZSBXeXJtd3JvdWdodCBGbGFtZTtkcml2ZV9kaXI6Old5cm13cm91Z2h0IEZsYXJlO2RyaXZlX2Rpcjo6R2xvcnkgb2YgdGhlIEVsZGVyZmxhbWUgLSBBcm1zO2RyaXZlX2Rpcjo6TWVkdXNhIE1lZ2FQYWNrIE5FVztkcml2ZV9kaXI6Ok1vcnBobGluZyBJbW1vcnRhbHMgTWVnYVBhY2sgVVA7ZHJpdmVfZGlyOjpNb25rZXkgS2luZyBBcmNhbmEgTWVnYVBhY2s7ZHJpdmVfZGlyOjpPdXR3b3JsZCBEZXZvdXZlciBNZWdhUGFjaztkcml2ZV9kaXI6Ok1hbmlmb2xkIFBhcmFkb3ggUEEgQXJjYW5hIFN0eWxlIDM7ZHJpdmVfZGlyOjpDb2RpY2lsIG9mIHRoZSBWZWlsZWQgT25lcztkcml2ZV9kaXI6OkF2b3dhbmNlIG9mIHRoZSBWZWlsZWQgT25lcztkcml2ZV9kaXI6OkNhcGUgb2YgdGhlIENyZWVwaW5nIFNoYWRvdztkcml2ZV9kaXI6OkJlbHQgb2YgdGhlIENyZWVwaW5nIFNoYWRvdztkcml2ZV9kaXI6OkZlYXN0IG9mIEFic2Nlc3Npb247ZHJpdmVfZGlyOjpMYXJnZSBUYXNzZWxzIG9mIHRoZSBCbGFjayBEZWF0aDtkcml2ZV9kaXI6OkdvbGRlbiBTY2F2ZW5naW5nIEd1dHRsZXNsdWc7ZHJpdmVfZGlyOjpHYXVudGxldCBvZiBEYXJrIEZlYXRoZXJzO2RyaXZlX2Rpcjo6RGVuZGkgRG9sbDtkcml2ZV9kaXI6OlRoZSBDcm93IEVhdGVyO2RyaXZlX2Rpcjo6SG9vayBvZiB0aGUgQmFzaWxpc2s7ZHJpdmVfZGlyOjpFbWluZW5jZSBvZiBSaXN0dWwgV2hpcCBBdHRhY2s7ZHJpdmVfZGlyOjpDcm93biBvZiB0aGUgRW1pbmVuY2Ugb2YgUmlzdHVsO2RyaXZlX2Rpcjo6UmFpbWVudHMgb2YgdGhlIFJveWFsIERlY3JlZTtkcml2ZV9kaXI6OkdvbGRlbiBCbG9vZGZlYXRoZXIgRmVhc3Q7ZHJpdmVfZGlyOjpNZXJyeSBXYW5kZXJlcipzIEJydXNoIFByZW07ZHJpdmVfZGlyOjpCbG9zc29tIG9mIHRoZSBNZXJyeSBXYW5kZXJlcjtkcml2ZV9kaXI6OkNyb3duIG9mIHRoZSBBZ2VsZXNzIEZhZTtkcml2ZV9kaXI6OlNoYWRvdyBGaWVuZCBBcmNhbmEgRGVtb24gRWF0ZXI7ZHJpdmVfZGlyOjpQYXVsZHJvbnMgb2YgRXRlcm5hbCBIYXJ2ZXN0IFByZW07ZHJpdmVfZGlyOjpHcmlwcyBvZiBFdGVybmFsIEhhcnZlc3QgUHJlbTtkcml2ZV9kaXI6OlNuaXBlciBJbW1vcnRhbCBXZWFwb24gb2YgdGhlIEFyZGFsYW4gSW50ZXJkaWN0b3I7ZHJpdmVfZGlyOjpQYWNrIG9mIHRoZSBBcmRhbGFuIEludGVyZGljdG9yO2RyaXZlX2Rpcjo6SGVsbSBvZiB0aGUgQXJkYWxhbiBJbnRlcmRpY3Rvcjtkcml2ZV9kaXI6OkJsYWNrc2FpbCBDYW5ub25lZXIgU2hvdWxkZXI7ZHJpdmVfZGlyOjpUcmFuc3ZlcnNhbnQgU291bCBQcmVtO2RyaXZlX2Rpcjo6UGhhbnRvbSBBZHZlbnQgQmVsdCBVUDtkcml2ZV9kaXI6OlBoYW50b20gQWR2ZW50IFVQO2RyaXZlX2Rpcjo6UGhhbnRvbSBBZHZlbnQgV2VhcG9uIFVQO2RyaXZlX2Rpcjo6U3Rvcm0gU3Bpcml0IE1lZ2FQYWNrO2RyaXZlX2Rpcjo6U3ZlbiBJbW1vcnRhbHMgTWVnYVBhY2sgVVA7ZHJpdmVfZGlyOjpNYW50bGUgb2YgdGhlIFdoaXNwZXJlZCBCb25kO2RyaXZlX2Rpcjo6Rm9jYWwgUmVzb25hbmNlIFYgMy4wO2RyaXZlX2Rpcjo6SGVhZHBpZWNlIG9mIHRoZSBXdXhpYTtkcml2ZV9kaXI6OkZyYWN0YWwgSG9ybnMgb2YgSW5uZXIgQWJ5c20gVVA7ZHJpdmVfZGlyOjpXaW5ncyBvZiBFdGVybmFsIFB1cmdhdG9yeTtkcml2ZV9kaXI6Ok1hcmF1ZGVyKnMgQXJtb3I7ZHJpdmVfZGlyOjpEZW1vbiBGb3JtIG9mIHRoZSBGb3VsZmVsbCBDb3JydXB0b3IgVVA7ZHJpdmVfZGlyOjpCaXR0ZXIgTGluZWFnZSBJbW1vcnRhbCBBeGVzO2RyaXZlX2Rpcjo6U2NhbGUgb2YgQml0dGVyIFNwb2lsIEltbW9ydGFsIFVQO2RyaXZlX2Rpcjo6Q29uc3BpY3VvdXMgQ3VscHJpdCBBcm1vcjtkcml2ZV9kaXI6OkNvbnNwaWN1b3VzIEN1bHByaXQgTW9oYXdrO2RyaXZlX2Rpcjo6Q3Jvd24gb2YgdGhlIE9uZSBUcnVlIEtpbmc7ZHJpdmVfZGlyOjpCbGlzdGVyaW5nIFNoYWRlIGZvciBBcmNhbmE7ZHJpdmVfZGlyOjpTd29yZCBvZiB0aGUgT25lIFRydWUgS2luZztkcml2ZV9kaXI6OkFybW9yIG9mIHRoZSBPbmUgVHJ1ZSBLaW5nO2RyaXZlX2Rpcjo6Q2xvYWsgb2YgdGhlIE9uZSBUcnVlIEtpbmc7ZHJpdmVfZGlyOjpQYXVsZHJvbnMgb2YgdGhlIE9uZSBUcnVlIEtpbmc7ZHJpdmVfZGlyOjpWaXBlciBNZWdhUGFjaztkcml2ZV9kaXI6OldpbmRyYW5nZXIgQXJjYW5hIHN0eWxlIDIgKyBXUiBpbW1vcnRhbDtkcml2ZV9kaXI6Ok9yaWdpbiBvZiB0aGUgVW5tYWtpbmc7ZHJpdmVfZGlyOjpTbHVtYmVyaW5nIFRlcnJvcjtkcml2ZV9kaXI6OkFyY2FuaWMgUmVzb25hbmNlIEJlYW07ZHJpdmVfZGlyOjpTdWJtZXJnZWQgSGF6YXJkIFByb3BlbGxlcjtkcml2ZV9kaXI6OlN1Ym1lcmdlZCBIYXphcmQgTGF1bmNoZXI7ZHJpdmVfZGlyOjpTdWJtZXJnZWQgSGF6YXJkIEh1bGw7ZHJpdmVfZGlyOjpTdWJtZXJnZWQgSGF6YXJkIE1hc2s7ZHJpdmVfZGlyOjpHb2xkZW4gUGlzY2VhbiBQdWx2ZXJpemVyO2RyaXZlX2Rpcjo6V2hpc2t5IHRoZSBTdG91dCBBcnRpZmFjdCBQcmVtO2RyaXZlX2Rpcjo6SGF0Y2hldCBvZiB0aGUgR3VhcmRlZCBXb3JkO2RyaXZlX2Rpcjo6QXJtb3Igb2YgdGhlIEd1YXJkZWQgV29yZDtkcml2ZV9kaXI6OlR1c2tzIG9mIHRoZSBHdWFyZGVkIFdvcmQ7ZHJpdmVfZGlyOjpEb29tIEltbW9ydGFscyBNZWdhUGFjazsgMTIzfHx8