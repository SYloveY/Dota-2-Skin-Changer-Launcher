bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogNUY1OUExQTgtN0M5Ny0wMDAwLTAwMDAtMDAwMDAwMDAwMDAwOzsgMTExfHx8IDIyMjo6IDJkZGVkMWQ2NWYxMjFlMmQxZGM4ZjJmYmFiODY2NGVmMTg0NzE2YTgzNjM1NmRkMzRjY2VjZjhhYzkzMWI1N2ExYTRmZjkxOWNhZTg0ZGE4OTAzNWNmZjdlNmNjNzE1ZjZkZWI1MzM1MTQ4NmVjNTUyYzZkMTlhMWEyMmQ2ZTFjIDIyMnx8fCAxMjM6OiBTd2luZSBWaXNvcjtTd2luZSBQb3dkZXIgQmFycmVsO0NhcnQgb2YgdGhlIFBvd2RlcmtlZyBQYXRyb2w7U3dpbmUgSGVsbWV0O011bml0aW9ucyBvZiB0aGUgUG93ZGVya2VnIFBhdHJvbDtUYWlsIG9mIHRoZSBFcXVpbGlicml1bTtTcGlyZXMgb2YgdGhlIFByb3BoZXQgRm9yZXRvbGQ7TmlnaHQgVGVycm9ycyBCZWx0O01hc2sgb2YgdGhlIFByaW1hbCBGaXJld2luZztSYWNoZWwgdGhlIE1vcmRlLWJhdDtOaWdodCBUZXJyb3JzIENhcGU7Q2FwZSBvZiB0aGUgSHVudGVyO0JlYXVsaWV1IFJpbmc7UmVkIFdpc3A7QmFyZGluZyBvZiBDaGltZXJpYyBSYXBwb3J0O0JvbmRzIG9mIE1hZG5lc3MgU2V0IFN0eWxlIDE7SW5mZXJuYWwgV2luZ3MgQ2xhdztNdWxjdGFudCBQYWxsO0luZmVybmFsIFdpbmdzO0F2YWRhIEtlZGF2cmE7Rm9ybSBvZiB0aGUgRmVydmlkIE1vbmFyY2g7TWFsZWZpYyBEcmFrZXMgSG9vZCBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzO0d1aXNlIG9mIHRoZSBXaW5nZWQgQm9sdDtTaG9vdGluZyBTdGFyO1RoZSBQYXRoIG9mIE9kb2NvZWxldXM7RW52ZWxvcGluZyBEZXNwYWlyIFYgMi4xO1BpbmsgQWxjaGVtaXN0O1RoZSBXaXRjaCBIdW50ZXIgViAyLjA7S29tZWlqaSBLb2lzaGkgMiBmb3IgQmFuZSBieSBQYXRjaG91bGkgS25vd2xlZGdlO1VuZGVmZWF0ZWQgR2VuZXJhbDtUaGUgV2lsZCBUYW1lcjtIYXJ2ZXN0cyBIb3VuZDtUaXBzeSBCcmF3bGVyO0NoYXJnZSBvZiB0aGUgV3JhdGhydW5uZXI7RGVzZXJ0IEJyb29kbW90aGVyO0NoYW9zIENob3NlbiBWIDMuMDtTYXZpb3IgZm9yIEp1bmdsZXMgSG9ub3I7Q2xvYWsgb2YgdGhlIEZhbGxlbjtDbG9jayBNYXN0ZXIgViAzLjA7Um95YWwgV2ludGVyYmxvb207WWFnb2tvcm8gRWlyaW4gZm9yIERhenpsZSBieSBQYXRjaG91bGkgS25vd2xlZGdlO1NhaWd5b3VqaSBZb3lva28gZm9yIERQIGJ5IFBhdGNob3VsaSBLbm93bGVkZ2U7RmlyZXMgb2YgVmFzaHVuZG9sIG5vIGVmZmVjdCBWIDIuMTtEcmFnb25zIEFzY2Vuc2lvbiBWIDMuMDtUaGUgSmFkZSBHZW5lcmFsO0ljZSBTaGFrZXI7V2FyZGVuIG9mIHRoZSBXeXJtZm9yZ2UgU2hhcmQ7T3JkZXIgb2YgdGhlIFdhbmRlcmluZyBGbGFtZSBWIDIuMTtFbWluZW5jZSBvZiB0aGUgU291dGggU3RhcjtUaGUgQ29ycnVwdGlvbiBvZiBOZXp6dXJlZW07RmxhbWVkIEZhbGNvbiBQYXRyb2wgU2V0O1RoZSBCYXB0aXNtIG9mIE1lbHRpbmcgRmlyZTtWZXN0aWdlIG9mIHRoZSBBcnNlbmFsIE1hZ3VzIFdleDtQcm9taXNlIG9mIHRoZSBGaXJzdCBEYXduO1NlYWJvcm5lIFJlcHJpc2FsO1RoZSBHaWZ0cyBvZiBaaHV6aG91O1NvcmNlcmVyIG9mIHRoZSBCbGFjayBQb29sO0dvZGRlc3Mgb2YgdGhlIFVuZGVyd29ybGQ7UmFnZSBvZiB0aGUgRGFyayBXb29kIHYgMi4wO0R1c2tsaWdodCBNYXJhdWRlciBWIDIuMTtIdW50ZXIgb2YgS2luZ3MgViAyLjA7QXp1cml0ZSBXYXJkZW4gViAyLjE7TmVwdHVuZSBmb3IgTWFycyBieSBQYXRjaG91bGkgS25vd2xlZGdlO1NlcnBlbnQgb2YgdGhlIEVtZXJhbGQgU2VhIFYgMy4wO0NyeXN0YWwgU2NhdmVuZ2VyO1JpcHRpZGUgUmFpZGVyIFYgMi4wO0RpcmVzdG9uZSBCaW5kaW5ncyBTZXQ7SXpheW9pIE1pa3UgZm9yIE5hZ2EgU2lyZW4gYnkgUGF0Y2hvdWxpIEtub3dsZWRnZTtUaGUgRHJlYWQgUHJvcGhldDtEZWF0aCBOZWNyb2xpZ2h0IFYgMy4yO1VuZmV0dGVyZWQgTWFsZXZvbGVuY2U7Q2ljYXRyaXggUmVnYWxpYSBSZWQ7SGlnaGVyIE9ncmUgTWFnaTtSZWQgT21uaTtNYW5kYXRlIG9mIHRoZSBOYW1lbGVzcztXYXJkZW4gZm9yIFBoYW50b20gQXNzYXNzaW4gKyBXQyAzIFNvdW5kIFYgMi4wO0hhcnNoIFNvam91cm47QWxsdXJpbmcgTWVzbWVyO1NjYXZlbmdlciBvZiB0aGUgQmFzaWxpc2s7TmFyY2lzc2lzdGljIExlZWNoO1Rocm9lcyBvZiBBbmd1aXNoIFNldCBTdHlsZSAxO0V5ZSBvZiB0aGUgTWF6ZSBLZWVwZXI7QmxhZGVicmVha2VyIE9yZGVyIFZhbGVlcmEgZm9yIFJpa2k7V2F5ZmFyaW5nIFNjaG9sYXIgU2V0O1NvdmVyZWlnbiBvZiB0aGUgS3JheSBMZWdpb25zIDJzdCBTdHlsZTtTdHlnaWFuIE1hdztUb3hpYyBEZWF0aCBFYXRlcjtUaGUgVHJ1ZSBDcm93IFYgMi4wO1RoZSBIaWRkZW4gVGFsZW50IFNldDtCYXN0aW9uIG9mIHRoZSBMaW9uc2d1YXJkO05hZ2EgR3VhcmRpYW4gZm9yIFNsYXJkYXIgViAyLjA7R29sZGVuIFNsYXJrIFYgMi4wO0F1cmFudGlhY28gbWlsaXRpcztQaWxsYXIgb2YgdGhlIEZyYWN0dXJlZCBDaXRhZGVsO1N0b3JtIERyYWdvbiBQb3RlbnRlO1N0b3Jtd3JvdWdodCBBcmJpdGVyIFYgMi4wO1N1biBBc3Nhc2luIFYgMy4wO0lsbGlkYW4gU3Rvcm1yYWdlIGZvciBUZXJyb3JibGFkZSBWIDIuMDtMdXJrYWJsbztNb2x0ZW4gRGVzdHJ1Y3RvcjtJemF5b2kgU2FrdXlhIGZvciBUaW5rZXIgYnkgUGF0Y2hvdWxpIEtub3dsZWRnZTtQcm90ZWN0b3Igb2YgdGhlIEFuY2llbnQgU2VhbDtTdG9yZWdnYSAzIExWTCBVbHQgKyBJY2UgVGlueTtUcm9sbCBXYXJsb3JkIEphaFJha2FsO0JhcnJpZXIgUm9ndWU7RGlyZ2Vzd29ybiBEeW5hc3R5O0Zlcm9jaWQ5519cyBIZWFydDtSZXNlbnRtZW50IG9mIHRoZSBCYW5pc2hlZCBQcmluY2VzcztDb3JydXB0aW9uIG9mIHRoZSBWaXJ1bGVudCBLcmFpdDtCYXJkaW5nIG9mIHRoZSBTb3VsIEtlZXBlcjtUaGUgRHVzayBDcmF3bGVyIFNldDtCaW5kaW5ncyBvZiB0aGUgQmF0dGxlcmFuZ2VyO0JlYXJlciBvZiB0aGUgQXJrdHVyYW4gVGFsb247U2tlbGV0b24gS2luZyB3aXRoIFJlbWFpbnMgb2YgdGhlIERyZWFka25pZ2h0IFNldDtPbGQgWmV1cyBtb2RlbDsgMTIzfHx8