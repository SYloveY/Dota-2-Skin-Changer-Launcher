bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogNDBGQTNGNDQtNUNDRS0xMUU4LTkzNzktOEMxNjQ1OEJGOTg3IDExMXx8fCAyMjI6OiAkMnkkMTAkWmpGa1pUZzFPRGsxTURsa04yRXhaT1Y0SVo5V2pvTUJyRzFKS2tjS0pWeVRZdTJUS2xoWE8gMjIyfHx8IDEyMzo6IERlY2xhcmF0aW9uIG9mIHRoZSBEaXZpbmUgU2hhZG93IERpcmUgVG93ZXJzO0RlY2xhcmF0aW9uIG9mIHRoZSBEaXZpbmUgTGlnaHQgUmFkaWFudCBUb3dlcnM7SGF1bCBvZiB0aGUgTHVjZW50IENhbm9weTtMYXNoIG9mIHRoZSBMaXphcmQgS2luIG9mIHRoZSBDcmltc29uIFdpdG5lc3M7Q3JpbXNvbiBDZW5zZXIgb2YgR2xpc3MgVVA7U3dhbXAgU2hhbWFuIFdhcmRzO0xhbWIgdG8gdGhlIFNsYXVnaHRlciBQcmVtO01hbnRsZSBvZiB0aGUgU3BpdGVmdWwgRXllO01vbHRlbiBDbGF3IFByZW07TWFudGxlIG9mIHRoZSBDaW5kZXIgQmFyb24gU3R5bGUgMjtGaXN0cyBvZiBBeGUgVW5sZWFzaGVkO09yaWdpbiBvZiB0aGUgVW5tYWtpbmc7U2x1bWJlcmluZyBUZXJyb3I7TWFzdGVyIERpbm9zYXVycyBUZWxlcGF0aHkgSGF3aztMZWdhY3kgb2YgYSBMb3N0IEFnZSAtIEJyYWNlcnM7Uml0dWFsIEJlbHQgb2YgdGhlIFdlc3Q7SGVsbSBvZiB0aGUgU3RvdXRoZWFydCBHcm93bGVyO1ByaW1hbCBQYWVhbjtDaGllZnRhaW4gb2YgdGhlIFByaW1hbCBUcmliZXMgQmVhc3Q7UHJpbWFsIFBlYWNlbWFrZXIgb2YgdGhlIENyaW1zb24gV2l0bmVzcztHYXVudGxldHMgb2YgdGhlIFNjYXJsZXQgUmF2ZW47QmFjayBvZiB0aGUgU2FjcmlmaWNpYWwgU2VycGVudDtUcmliYWwgVGVycm9yIEJlbHQ7TWF3IG9mIEV6dHpob2s7VGhpcnN0IG9mIEV6dHpob2sgLSBPZmYtSGFuZDtUcmliYWwgVGVycm9yIERyZWFkbG9ja3M7VGhpcnN0IG9mIEV6dHpob2sgQmxhZGU7VmlydWxlbnQgTWF0cmlhcmNocyBTcGlkZXJsaW5nO0V0ZXJuYWwgQmVsdCBvZiB0aGUgQ2hhb3MgQ2hvc2VuO0luZmVybmFsIENoaWVmdGFpbiBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzO0hhcm5lc3Mgb2YgQ29udGVzdGVkIEZhdGU7VGFpbCBvZiB0aGUgUHJvdmVuO0luZmVybmFsIE1lbmFjZTtDaGFvcyBGdWxjcnVtO1BhdWxkcm9ucyBvZiB0aGUgQnVybmluZyBOaWdodG1hcmU7VGhlIElyb24gUGlvbmVlciBDb2dzO0FybW9yIG9mIEVuZGxlc3MgRGF5cztNaW5kIG9mIEVuZGxlc3MgRGF5cztSb2NrZXQgb2YgRW5kbGVzcyBEYXlzO0dvbGRlbiBSYWJpZCBXYXRjaGNvZztEcmVzcyBvZiB0aGUgRmFlc2hhZGUgRmxvd2VyO1dpbmdzIG9mIHRoZSBGYWVzaGFkZSBGbG93ZXI7VGhlIFN1bmJyZWV6ZSBCaXJ0aHJpZ2h0O0NyaW1zb24gSGVhcnRzIG9mIE1pc3J1bGU7R2xvb21ib2I7RGFya2NsYXcgRW1pc3NhcnkgQXJtcztEYXJrY2xhdyBFbWlzc2FyeSBDb3dsO0RhcmtjbGF3IEVtaXNzYXJ5IERyZXNzO05vdGhsaWMgQnVyZGVuIG9mIHRoZSBDcmltc29uIFdpdG5lc3M7RGFya2NsYXcgRW1pc3NhcnkgU3RhZmY7V2lnaHRzIGZyb20gdGhlIEdsb29tO0JlbGxvd3Mgb2YgQ3JlYXRpb247QnJhY2VycyBvZiB0aGUgRmlzc3VyZWQgU291bDtIb29kIG9mIHRoZSBTaGF0dGVyZWQgVGFyZ2U7Rm9ybSBvZiB0aGUgTW9udW1lbnQgb2YgUnVpbjtNYWNlIG9mIHRoZSBGaXNzdXJlZCBTb3VsO0NhZXJ1bGVhbiBTdGFyIC0gQXJtcztTb25ncyBvZiBTdGFyZmFsbCBHbGVuIC0gQmVsdDtGbG91cmlzaGluZyBMb2Rlc3RhcjtWaXJnYXMgQXJjO0hlcmFsZCBvZiB0aGUgRW1iZXIgRXllIC0gQXJtb3I7SGVyYWxkIG9mIHRoZSBFbWJlciBFeWUgLSBCZWx0O1JlbW5hbnRzIG9mIEFzY2Vuc2lvbjtGb3J0dW5lIG9mIHRoZSBGaXZlIEhvdXNlcztIb29kd2luayBHbGVpcG5pcjtIb29kd2luayBEcmFnb24gQ3Jvc3Nib3c7SmFraXJvIEltbW9ydGFscyBIZWFkcztUb3JtZW50ZWQgU3RhZmYgb2YgRW1pbmVudCBSZXZpdmFsO0dsYXJlIG9mIHRoZSBUeXJhbnQ7Q2hhaW5zIG9mIFZpbGUgQ29udm9jYXRpb247Um9iZSBvZiB0aGUgUmltZSBMb3JkO0xpY2ggSW1tb3J0YWwgSGVhZCBQZXJ2ZXJzaW9ucyBvZiB0aGUgQmxvb2R3aG9ybDtTaGVhcmluZyBEZXBvc2l0aW9uIFByZW07R2xvcnkgb2YgdGhlIEVsZGVyZmxhbWUgLSBBcm1zO0RyZXNzIG9mIHRoZSBCZXdpdGNoaW5nIEZsYXJlIFByZW1pdW07U291bCBvZiB0aGUgU2xheWVyIFByZW07RGlzY2lwbGUgb2YgdGhlIFd5cm13cm91Z2h0IEZsYW1lO0hlbGwtU3BhciBBbmF0aGVtYSBPYnNpZGlhbiBCbGlnaHQ7RmluIEtpbmdzIENoYXJtIG9mIEVtaW5lbnQgUmV2aXZhbCBFeGNlcHRpb25hbDtNdWxjdGFudCBQYWxsIG9mIHRoZSBDcmltc29uIFdpdG5lc3M7SG9ybnMgb2YgdGhlIEJldHJheWVyO0Zvcm0gb2YgQW1icnkgViAyLjE7TWFsbGV0IG9mIHRoZSBTcGlyYWwgQm9yZTtCcmFjZXIgb2YgdGhlIFNwaXJhbCBCb3JlO0dpcmRsZSBvZiBFcnVwdGluZyBXcmF0aDtFeWVzIG9mIEFyZGVub2s7SG9ybiBvZiB0aGUgU3BpcmFsIEJvcmU7Q3JpbXNvbiBQcm9nZW5pdG9ycyBCYW5lO0dvZHMgTWVyY3kgb2YgdGhlIENyaW1zb24gV2l0bmVzcztGb3Jzd29ybiBMZWdhY3kgLSBBcm1vcjtDb2xvciBNZWVwbztCcmFjZXJzIG9mIHRoZSBXaW50ZXJtb29uO1NwaXJpdCBvZiB0aGUgU2FjcmVkIEdyb3ZlIC0gQmFjaztDcmVzY2VudCBCb3cgQXJyb3cgb25seTtHb2xkZW4gTWFzayBvZiBNZXRpcmE7TGlvbiBRdWl2ZXIgb2YgdGhlIE1vb24gUmlkZXI7QXhpYSBvZiBNZXRpcmE7TmVja2xhY2VzIG9mIHRoZSBDb2FzdGFsIEtpbmdkb207UHVsc2FyIFJlbW5hbnQgUHJlbTtBcm1vciBvZiB0aGUgU2xpdGhlcmVlbiBFeGlsZTtIZWxtIG9mIHRoZSBTbGl0aGVyZWVuIEV4aWxlO0JsYWRlcyBvZiBQcmlzbWF0aWMgR3JhY2U7T2ZmaGFuZCBCbGFkZSBvZiBQcmlzbWF0aWMgR3JhY2U7TWFzayBvZiB0aGUgQ29uZmlkYW50O0NvYXQgb2YgdGhlIFdpbmR3YXJkIFJvZ3VlO0JsaXNzZnVsIEtuYXZlIFJhcGllcjtHb3RoaWMgV2hpc3BlciBCZWx0O0NvZGljaWwgb2YgdGhlIFZlaWxlZCBPbmVzO0F2b3dhbmNlIG9mIHRoZSBDcmltc29uIFdpdG5lc3M7TWFuaWZvbGQgUGFyYWRveCBQQSBBcmNhbmEgU3R5bGUgMztHb3RoaWMgV2hpc3BlciBDYXBlO0NvbmNvcmQgUmV2ZXJzaW9uIFVQO01hbmUgb2YgdGhlIFN1bndhcnJpb3IgVVA7Q29uY29yZCBEb21pbmlvbjtQaGFudG9tIENvbmNvcmQgUHJlbTtHaXJkbGUgb2YgdGhlIEluZmluaXRlIFdhdmVzO0JyYWNlcnMgb2YgdGhlIFJlZCBTYW5kcztTaG91bGRlciBHdWFyZCBvZiB0aGUgSW5maW5pdGUgV2F2ZXM7QmxhemUgb2YgT2JsaXZpb24gU3VwZXJub3ZhO0JsYXplIG9mIE9ibGl2aW9uIEJhY2s7U29sYXIgRm9yZ2UgUHJlbTtCbG9zc29tIG9mIHRoZSBNZXJyeSBXYW5kZXJlcjtDcm93biBvZiB0aGUgQWdlbGVzcyBGYWU7VGVtcGVzdCBSZXZlbGF0aW9uO1JveWFsIERlY3JlZSBXaGlwIEF0dGFjaztDb25zdGVsbGF0aW9uIEFybW9yO0hpZGRlbiBWZWN0b3IgLSBBcm1vcjtIaWRkZW4gVmVjdG9yIC0gQmVsdDtIaWRkZW4gVmVjdG9yIC0gSGF0O0hpZGRlbiBWZWN0b3IgLSBCbGFkZTtDb25zdGVsbGF0aW9uIFdlYXBvbjtIdW5nZXIgb2YgdGhlIEhvd2xpbmcgV2lsZHMgSGVhZDtIdW5nZXIgb2YgdGhlIEhvd2xpbmcgV2lsZHMgT2ZmLUhhbmQgV2VhcG9uO0h1bmdlciBvZiB0aGUgSG93bGluZyBXaWxkcyBXZWFwb247SHVuZ2VyIG9mIHRoZSBIb3dsaW5nIFdpbGRzIFNob3VsZGVyO1Ntb2tlIEJvbWIgb2YgTW9uc3Ryb3VzIFJlcHJpc2FsO0h1bmdlciBvZiB0aGUgSG93bGluZyBXaWxkcyBBcm1zO1J1YmljayBBcmNhbmE7SGVhZCBvZiB0aGUgSW1wb3NzaWJsZSBSZWFsbTtHb2xkZW4gU3RhZmYgb2YgUGVycGxleCBQcmVtO0NydXggb2YgUGVycGxleDtUaGUgQmFycmVuIFZlY3RvcjtUYWlsIG9mIHRoZSBLcmF5IExlZ2lvbnM7VGhlIEJhcnJlbiBDcm93bjtMZWdzIG9mIHRoZSBSZWQgU2FuZCBXYXJyaW9yO0NoaXRpbiBvZiB0aGUgS3JheSBMZWdpb25zO0Nyb3duIG9mIENhbGFwaGFzIEFybW9yO0dvbGRlbiBNYW50bGUgb2YgR3JpbSBGYWNhZGU7QmVsdCBvZiB0aGUgU3R5Z2lhbiBNYXc7VGFpbCBvZiBEZXByYXZlZCBNYWxmb3JtYXRpb247RGVzZXJ0IEJ1cm4gQ3Jvc3Nib3c7RGVzZXJ0IEJ1cm4gTW9ydHkgSW1tb3J0YWw7RGVzZXJ0IEJ1cm4gQ2FwO0Rlc2VydCBCdXJuIE91dGZpdDtEZXNlcnQgQnVybiBTYWRkbGU7R29sZGVuIEZsb29kbWFzaztIb3Jyb3IgZnJvbSB0aGUgRGVlcCBCZWx0O1RpZGVodW50ZXIgQmxpbmsgRGFnZ2VyO0FxdWVtZXJhbGQgQmxhZGU7SG9ycm9yIGZyb20gdGhlIERlZXAgQXJtcztTdWJtZXJnZWQgSGF6YXJkIFByb3BlbGxlcjtSb2xsZXJtYXdzdGVyO1N1Ym1lcmdlZCBIYXphcmQgTGF1bmNoZXI7QXJjYW5pYyBSZXNvbmFuY2UgQmVhbTtTdWJtZXJnZWQgSGF6YXJkIEh1bGw7TWFqZXN0eSBPZiBUaGUgQ29sb3NzdXMgLSBQZWJibGU7TWFqZXN0eSBPZiBUaGUgQ29sb3NzdXMgLSBDb2JibGU7TWFqZXN0eSBPZiBUaGUgQ29sb3NzdXMgLSBNb25vbGl0aDtBbmNpZW50IEluaGVyaXRhbmNlIC0gTmVjaztIZWxtIG9mIHRoZSBHdWFyZGVkIFdvcmQ7R29sZGVuIFBpc2NlYW4gUHVsdmVyaXplcjtXaGlza3kgdGhlIFN0b3V0IEFydGlmYWN0O1R1c2tzIG9mIERpc3Rpbmd1aXNoZWQgRXhwZWRpdGlvbmFyeTtGcm9zdGlyb24gUmFpZGVyIFdyYXA7QXJjdGljIGZhbmc7Q3JpbXNvbiBFbWVyYWxkIENvbnF1ZXN0O0N1bHQgb2YgQWt0b2s7QXJtb3Igb2YgdGhlIFVuZHlpbmcgTGlnaHQ7RmxpZ2h0IG9mIHRoZSBVbmR5aW5nIExpZ2h0O1BhcmFnb25zIFJlYnVrZTtBZG9yaW5nIFdpbmdmYWxsO0JlbmV2b2xlbnQgQ29tcGFuaW9uIFByZW07TGVnYWN5IG9mIHRoZSBGYWxsZW4gTGVnaW9uIFN0eWxlIDI7QnJhY2VycyBvZiBaaHV6aG91O0JhbmVmdWwgRGV2b3Rpb247TWFudGxlIG9mIERlc29sYXRlIENvbnF1ZXN0O0xlZ2lvbiBDb21tYW5kZXIgQXJjYW5hIFVQO0ZldHRlcnMgb2YgT21uaXNjaWVuY2U7R29sZGVuIE9yaWdpbnMgb2YgRmFpdGggUHJlbTtCcmFjZXJzIGFuZCBTaG91bGRlcnMgb2YgdGhlIFN1cnZpdm9yO0dvbGRlbiBCYXNoZXIgQmxhZGVzIFYgMi4wO1JpdmVyIFZpYWwgQmx1ZTtSZXB0aWxpYW4gUmVmdWdlIFJhZGlhbnQgQ3JlZXBzO1JlcHRpbGlhbiBSZWZ1Z2UgRGlyZSBDcmVlcHM7V2F0Y2hlciBCZWxvdztUaGUgSW50ZXJuYXRpb25hbCAyMDE3IEN1cnNvciBQYWNrO0NvbWJvIE1lZ2EgR3JlZXZpbDtGcm9zdCBBdmFsYW5jaGUgUHJlbTtCYXJkaW5nIG9mIHRoZSBQcm92ZW47V2FybG9yZCBvZiBIZWxsIEJyYWNlcnM7Q2hhbXBpb25zIEJsdWUgQ29sb3IgZm9yIFRCO1NraXR0ZXJpbmcgRGVzb2xhdGlvbiBQcmVtO0NyaW1zb24gUGlxdWUgUHJlbTtDcmltc29uIEN5cnJpZGFlO0VtYmVyIFRpcHBlZCBTdHJpZGVycztGb3JjZSBvZiBTcGlyaXQgSFVEO1dpbmRyYW5nZXIgQXJjYW5hIHN0eWxlIDE7U3dvcmQgb2YgdGhlIENvbG9zc3VzIFByZW07TWFuZGF0ZSBvZiB0aGUgTmFtZWxlc3MgLSBBcm1vcjtBc3RyYWwgRHJpZnQ7R29sZGVuIFNoYXJkcyBvZiBFeGlsZSBQcmVtO0Jsb29keSBCYWJ5IEludm9rZXI7SW5kb21pdGFibGUgTGVnYWN5IC0gQXJtcztJbmRvbWl0YWJsZSBMZWdhY3kgLSBCZWx0O0luZG9taXRhYmxlIExlZ2FjeSAtIEhlYWQ7SW5kb21pdGFibGUgTGVnYWN5IC0gU2hvdWxkZXI7VmlnaWwgVHJpdW1waDtIYXJib3JibG9zc29tIG9mIHRoZSBDcmltc29uIFdpdG5lc3M7RXlyaWVib3VuZCBJbXBlcmF0b3IgLSBCZWx0O0V5cmllYm91bmQgSW1wZXJhdG9yIC0gQXJtcztFeXJpZWJvdW5kIEltcGVyYXRvciAtIEhlYWQ7RXlyaWVib3VuZCBJbXBlcmF0b3IgLSBTaG91bGRlcjtFeXJpZWJvdW5kIEltcGVyYXRvciAtIEJhY2s7U3RhZmYgb2YgdGhlIE1hbnRpY29yZTtTd29yZCBvZiB0aGUgT3V0bGFuZCBSYXZhZ2VyO1BoYW50b20gQXNjZW5zaW9uO1BoYW50b20gQXNjZW5zaW9uIFNob3VsZGVycztQaGFudG9tIEFzY2Vuc2lvbiBCZWx0O1BoYW50b20gQXNjZW5zaW9uIFdlYXBvbjtUb3AgSGF0IG9mIHRoZSBPY2N1bHRpc3RzIFB1cnN1aXQ7QnJhY2VycyBvZiB0aGUgU2lsdmVyIEZveDtXaXRjaCBIdW50IENhcGU7R2hpbGxpZWQgR3VubWFuIFNob3VsZGVycztCbGFja3NhaWwgQ2Fubm9uZWVyIFdlYXBvbjtIZWxtIG9mIHRoZSBTaGF0dGVyZWQgVmFuZ3VhcmQ7QmVhc3Qgb2YgdGhlIENyaW1zb24gUmluZyBXZWFwb247QmVhc3Qgb2YgdGhlIENyaW1zb24gUmluZyBIZWxtO0JlYXN0IG9mIHRoZSBDcmltc29uIFJpbmcgQmFjaztCZWFzdCBvZiB0aGUgQ3JpbXNvbiBSaW5nIEJyYWNlcnM7TGFudGVybiBvZiB0aGUgVmlvbGVudCBQcmVjaXBpdGF0ZSBDaGFtcGlvbjtUYWxvbnMgb2YgdGhlIEVuZGxlc3MgU3Rvcm0gV2VhcG9uO1BlcmRpdGlvbjtUYWxvbnMgb2YgdGhlIEVuZGxlc3MgU3Rvcm0gSGVhZDtNYXJheGlmb3JtcyBGYWxsZW47V2FyZ29kIG9mIHRoZSBCbGFkZWtlZXBlcjtKYWdnZWQgSG9ub3IgQmFubmVyO0phZ2dlZCBIb25vciBCcmFjZXI7SmFnZ2VkIEhvbm9yIE1hc2s7SmFnZ2VkIEhvbm9yIExlZ3M7SmFnZ2VkIEhvbm9yIEJsYWRlO1N0ZXdhcmQgb2YgdGhlIEZvcmJpZGRlbiBDaGFtYmVyIFNob3VsZGVyO0ZvY2FsIFJlc29uYW5jZSBWIDMuMDtFcGl0YXBoaWMgVHJhcDtTdGV3YXJkIG9mIHRoZSBGb3JiaWRkZW4gQ2hhbWJlciBBcm1vcjtIZWFkZHJlc3Mgb2YgdGhlIExveWFsIEZvbGQ7Q29uc3BpY3VvdXMgQ3VscHJpdCBNb2hhd2s7U2NhbGUgb2YgQml0dGVyIFNwb2lsIEltbW9ydGFsIFVQO0JpdHRlciBMaW5lYWdlIEltbW9ydGFsIEF4ZXM7QXJtb3Igb2YgdGhlIEljZXdyYWNrIE1hcmF1ZGVyO1dpbmdzIG9mIHRoZSBGYXRhbCBCbG9vbTtUYWlsIG9mIHRoZSBGZXJvY2lvdXMgVG94aWNhbnQ7U3BpdHRlcnMgb2YgdGhlIFZpcnVsZW50IEtyYWl0O1RyaWJhbCBQYXRod2F5cyBHb2xlbTtBcm1ndWFyZHMgb2YgdGhlIFNtb2xkZXJpbmcgU2FnZTtUdW5pYyBvZiB0aGUgV2FuZGVyaW5nIEZsYW1lO0NpbmRlciBTZW5zZWkgU3R5bGU7Q2luZGVyIFNlbnNlaSBPZmYgSGFuZCBXZWFwb247QXBvZ2VlIG9mIHRoZSBHdWFyZGlhbiBGbGFtZTtDaW5kZXIgU2Vuc2VpIFdlYXBvbjtNYW5kYXRlIG9mIHRoZSBOYW1lbGVzcyAtIENyb3duO0JyYWNlciBvZiBGdWxsIFRocm90dGxlO0FwcGFyYXR1cyBvZiBGdWxsIFRocm90dGxlO0hlbG0gb2YgRnVsbCBUaHJvdHRsZTtHdWFyZCBvZiBUZWxsdXJpYW4gVHJlc3Bhc3M7QmxhZGUgb2YgRnVsbCBUaHJvdHRsZTtXZWF0aGVyIEJsdWUgU2t5IGZyb20gU291cCBmb3IgU2x1dHM7UmljayBhbmQgTW9ydHkgQW5ub3VuY2VyO0RpcmUgT3ZlcmxvcmQgTWVnYS1LaWxscztQaXRtb3VzZSBGcmF0ZXJuaXR5IFBhdWxkcm9uO1BpdG1vdXNlIEZyYXRlcm5pdHkgVGFpbDtQaXRtb3VzZSBGcmF0ZXJuaXR5IEJyYWNlcjtFbWJsZW0gb2YgRGl2aW5pdHkgQWdoYW5pbSBFZmZlY3Q7VEktMTAgQm90dGxlIEVmZmVjdDtBcm1zIG9mIHRoZSBKYWRlIEVtaXNzYXJ5O1N0eWxlIG9mIHRoZSBKYWRlIEdlbmVyYWw7U2VycGVudCBvZiB0aGUgSmFkZSBFbWlzc2FyeTtKYWRlIFJlY2tvbmluZyBQcmVtO0JlbHQgb2YgdGhlIEphZGUgRW1pc3Nhcnk7T3Zlcmdyb3duIEVtYmxlbTtTY29yY2hpbmcgVGFsb24gUHJlbTtUaGVGYXRSYXQgV2FycmlvciBTb25ncyBNdXNpYyBQYWNrIE9mZmljaWFsO1RlcnJhaW4gLSBJbW1vcnRhbCBHYXJkZW5zO0RhcmticmV3IEVuZm9yY2VyIGFuZCBFdGVybmFsIFJhZGlhbmNlIEJsYWRlcyBhbmQgTWlkYXMgS251Y2tsZXMgTWVnYVBhY2s7U2hhdHRlcmJsYXN0IENvcmUgU2hhdHRlcmJsYXN0IENyb3duIEFwb2NhbHlwc2UgVW5ib3VuZDtBcmMgV2FyZGVuIE1lZ2FQYWNrO0VtcGlyaWMgSW5jZW5kaWFyeTtCcmV3IEpvdXN0aW5nIFBhbmRhIGFuZCBEb25rZXkgS29uZztEZXNlcnQgQnJvb2Rtb3RoZXI7U2F2aW9yIGZvciBKdW5nbGVzIEhvbm9yO09wdXMgb2YgdGhlIFZpemllciBFeGlsZSBWIDIuMTtWZW5lcmF0ZWQgVHJpdW12aXJhdGU7S2lyaW4gUmlkZXIgU2V0O0Rvb20gSW1tb3J0YWxzIE1lZ2FQYWNrO0VhcnRoc2hha2VyIE1lZ2FQYWNrIE5ldztFbmlnbWEgTWVnYVBhY2s7Q3VzdG9tIE1lZ2FQYWNrIEZhY2VsZXNzIFZvaWQgQmxhY2sgVGltZTtBcmNhbmUgSW52ZXJ0ZXI7Rm9yZ290dGVuIFJlbmVnYWRlO0xvbmUgRHJ1aWQgTWVnYVBhY2s7TGluZWFnZSBSZWRlbXB0aW9uIG9mIHRoZSBSYWlkZm9yZ2VkIFJpZGVyO0x5Y2FuIEtpc2lsZXYgTW9kTWFrZXIgTWVnYVBhY2s7TW9ua2V5IEtpbmcgQXJjYW5hIE1lZ2FQYWNrO0Rlc2VydCBUcmF2ZWxsZXIgU2V0O0N1c3RvbSBOaWdodCBTdGFsa2VyIE1lZ2FwYWNrIEZyb3N0IFdhbGtlcjtOeXggQXNzYXNzaW4gTWVnYVBhY2sgVVA7T2dyZSBNYWdpIEltbW9ydGFscyBBcmNhbmEgTWVnYVBhY2s7Q2VsZXN0aWFsdXMgRmxvcmFsYXM7UHVwcGV0IFB1ZGdlIFBlcnNvbmEgKHlvdSBjYW4gYWRkIEhvb2spIFVQO1JpZ2h0ZWQ5519cyBUaHVuZGVyYm9sdCBhbmQgQXJjYW5hIE1lZ2FQYWNrO1Vyc2EgSW1tb3J0YWxzIE1lZ2FQYWNrO1NpbGVuY2VyIE1lZ2FQYWNrO1NwaXJpdCBCcmVha2VyIE1lZ2FQYWNrO1N0b3JtIFNwaXJpdCBNZWdhUGFjaztQb3dkZXJzbGVkIFJvb2tlcnk7VGltYmVyc2F3IE1lZ2FQYWNrO1RyZWFudCBQcm90ZWN0b3IgTWVnYVBhY2s7VHJ1ZSBQaXRsb3JkO0luY3VyYWJsZSBQZXN0aWxlbmNlO01pbGxpcGVkZSBTZXQ7VmlwZXIgTWVnYVBhY2s7UGl0IEd1YXJkIFNldDtEZWZlbmRlciBvZiB0aGUgQnJ1bWFsIENyZXN0O1dpdGNoIERvY3RvciBNZWdhUGFjaztESyBQZXJzb25hIERhdmlvbjtIdW50ZXJzIEdsb3J5O1B1cnBsZSBGaXJlIENsaW5reiBGdW4gTW9kIFYgMy4wO0hPVFMgS2FycmlnYW47RGVhdGggQmxvc3NvbSBTZXQ7SHVza2FyIE1lZ2FQYWNrIE5FVztTZWFib3JuZSBSZXByaXNhbDtUaHVuZGVyIEdyaWZmaW47Q29udmFsZXNjaW5nIEVtcHJlc3M7Rm93bCBQbGFndWUgU2V0O1Jlc2VhcmNoZXIgb2YgT2JsaXZpb24gTWFnaWM7RHJlYWQgQ29tcGFjdCBTdHlsZSAyO1JlYmlydGggVmVuZ2VmdWwgU3Bpcml0O1NsYXJkYXIgTWVnYVBhY2sgc2V0O0xpZmVzdGVhbGVyIE1lZ2FQYWNrO1dyYWl0aCBLaW5nIEFyY2FuYSBNZWdhUGFjaztEYXJrdHJlbmNoIFN0YWxrZXI7Q3VzdG9tIEFyY2FuYSBTaGFkb3cgRmllbmQgWlhDO1RoZSBNYXdzd29ybiBSYXpvcjsgMTIzfHx8