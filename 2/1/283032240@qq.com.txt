bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogMzM2NzUxQTUtQ0FCRi04RkU4LUIyREEtMDREOUY1RjY5OTJGIDExMXx8fCAyMjI6OiAkMnkkMTAkWkRZd01HVTBNbVZqWVdJeVpEQTFZZTh4NDZhSkpmR0Ivd1piWDc3MTNFYVoxWWRGVFpOa0MgMjIyfHx8IDEyMzo6IE5lb2tpbiBGYWllcmllIFdhcmQ7VGhlIFN1bW1pdCAzIEN1cnNvciBQYWNrO1RlcnJhaW4gLSBUaGUgS2luZ3MgTmV3IEpvdXJuZXk7QXBvZ2VlIG9mIHRoZSBHdWFyZGlhbiBGbGFtZTtHb3Zlcm5vcipzIFNhbGFrb3Q7R3VhcmQgb2YgdGhlIFdhbmRlcmluZyBGbGFtZTtDcmltc29uIEJyYWNlcnMgb2YgQWVvbnMgUHJlbTtQZXJjZXB0aW9ucyBvZiB0aGUgRXRlcm5hbCBNaW5kO01hY2Ugb2YgQWVvbnMgUHJlbTtEYXJrIEFydGlzdHJ5IFRocm93YmFjaztEaXNjaXBsZSBvZiB0aGUgV3lybXdyb3VnaHQgRmxhbWU7U291bCBvZiB0aGUgU2xheWVyIFByZW07R29sZGVuIFR3aWxpZ2h0IFNjaGlzbTtNb3VudCBvZiB0aGUgV2luZ2VkIFNlbnRpbmVsO1RzdWt1bW8gdGhlIE1vb24gQ2xvdWQ7QXZvd2FuY2Ugb2YgdGhlIFZlaWxlZCBPbmVzO01hbmlmb2xkIFBhcmFkb3ggUEEgQXJjYW5hIFN0eWxlIDM7UGF1bGRyb25zIG9mIEV0ZXJuYWwgSGFydmVzdCBQcmVtO0NvbmNvcmQgRG9taW5pb247TGVnYWN5IG9mIHRoZSBGYWxsZW4gTGVnaW9uIFN0eWxlIDI7TGVnaW9uIENvbW1hbmRlciBBcmNhbmEgVVA7U2hvY2sgb2YgdGhlIEFudmlsIFByZW07SGF0IG9mIEZhbnRvY2NpbmlzIERpbGVtbWE7Q3J1eCBvZiBQZXJwbGV4IEFyY2FuYSBTdHlsZTtHb2xkZW4gU3RhZmYgb2YgUGVycGxleCBQcmVtO01hbmUgb2YgdGhlIFN1bndhcnJpb3IgVVA7RGlmZnVzYWwgTGFuY2UgUHJlbTtTa2l0dGVyaW5nIERlc29sYXRpb24gUHJlbTtGcm9zdG1vb3QgRnJvc3RpdnVzIFRyZWU7VGlueSBGcm9zdG1vb3Q7U21hbGwgRnJvc3Rtb290O01lZGl1bSBGcm9zdG1vb3Q7TGFyZ2UgRnJvc3Rtb290O0dvbGRlbiBJbmZlcm5hbCBDaGllZnRhaW47SW5mZXJuYWwgTWVuYWNlO1NlY3JldHMgb2YgdGhlIENlbGVzdGlhbCBIZWFkO0dvbGRlbiBFbXB5cmVhbiBQcmVtO0dhcmIgb2YgdGhlIENvcnJpZGFuIE1hZXN0cm87U25pcGVyIEltbW9ydGFsIFdlYXBvbiBvZiB0aGUgQXJkYWxhbiBJbnRlcmRpY3RvcjtQYWNrIG9mIHRoZSBBcmRhbGFuIEludGVyZGljdG9yO0hlbG0gb2YgdGhlIEFyZGFsYW4gSW50ZXJkaWN0b3I7QmxhY2tzYWlsIENhbm5vbmVlciBTaG91bGRlcjtIZWxsLVNwYXIgQW5hdGhlbWEgT2JzaWRpYW4gQmxpZ2h0O0ZpbiBLaW5ncyBDaGFybSBvZiBFbWluZW50IFJldml2YWwgRXhjZXB0aW9uYWw7SG9ybnMgb2YgdGhlIEJldHJheWVyO011bGN0YW50IFBhbGwgb2YgdGhlIENyaW1zb24gV2l0bmVzcztHb2xkZW4gR3Jhc3BpbmcgQmx1ZGdlb24gUHJlbTtUdW5pYyBvZiB0aGUgV2FuZGVyaW5nIEZsYW1lO1JhcGllcnMgb2YgdGhlIEJ1cm5pbmcgR29kIFYgMy4xO0h1bmdlciBvZiB0aGUgSG93bGluZyBXaWxkcyBIZWFkO1NoYWRvdyBNYXNxdWVyYWRlO1lhc2hhIHRoZSBRdWlja2JsYWRlO1Ntb2tlIEJvbWIgb2YgTW9uc3Ryb3VzIFJlcHJpc2FsIFByZW07U2FuZ2UgdGhlIEJhY2tzZWVrZXI7QnJhY2VycyBvZiB0aGUgR2VsaWQgVG91Y2g7RnJhY3RhbCBIb3JucyBvZiBJbm5lciBBYnlzbSBVUDtCcmFjZXIgb2YgdGhlIFNwaXJhbCBCb3JlO0JlbHQgb2YgdGhlIFNwaXJhbCBCb3JlO0V5ZXMgb2YgQXJkZW5vaztIb3JuIG9mIHRoZSBTcGlyYWwgQm9yZTtEb3RhIDIgQ2hhbmdlciBFZGl0aW9uIEh1bnRlcnMgSG9hcmQgb2YgdGhlIENyaW1zb24gV2l0bmVzcztXcmFwcyBvZiB0aGUgU2Vhc29uZWQgVmV0ZXJhbiBWIDIuMTtNYXJrIG9mIHRoZSBGaXJzdCBIdW50IEhhcnZlc3RlZDtQcm9taW5lbmNlO1dpbmdzIG9mIERheWJyZWFrO1N1bGxlbiBIYXJ2ZXN0O1N1bGxlbiBSYW1wYXJ0O1N1bGxlbiBIb2xsb3cgUHJlbTtQbGFndWUgQmFyb24gSGF0O0FyY2FuYSBDcnlzdGFsIE1haWRlbiBGcm9zdCBBdmFsYW5jaGU7R29sZGVuIEljZSBCbG9zc29tO0JsdWVoZWFydCBUYWlscztCZW5ldm9sZW50IENvbXBhbmlvbiBWIDIuMDtBc3RyYWwgRHJpZnQ7R29sZGVuIFNoYXJkcyBvZiBFeGlsZSBQcmVtO01hbmRhdGUgb2YgdGhlIE5hbWVsZXNzIC0gQ3Jvd247TWFuZGF0ZSBvZiB0aGUgTmFtZWxlc3MgLSBBcm1vcjtUaGlyc3Qgb2YgRXp0emhvayBCdW5kbGUgUHJlbTtTaG91bGRlcnMgb2YgdGhlIFNhY3JpZmljaWFsIFNlcnBlbnQ7R2FsbG93cyBVbmRlcnN0dWR5IFNraXJ0O0NhcGUgb2YgdGhlIEJsb29kZm9yZ2U7Q3JlYXRvcnMgTGlnaHQgQ29sb3IgZm9yIFRCO1NjcmVlYXVrcyBUYWxvbiBQcmVtO0NyaW1zb24gTWQ5519cm5mdWwgUmV2ZXJpZTtIYWlyIG9mIHRoZSBGYWxsZW4gUHJpbmNlc3M7TGVncyBvZiB0aGUgRmFsbGVuIFByaW5jZXNzO1RpbmVzIG9mIFR5YmFyYTtEaWFib2xpYyBBc3BlY3Q7R29sZGVuIENoYW9zIEZ1bGNydW07Q2hhb3MgQXJiaXRlcjtQZXJkaXRpb247RW50cm9waWMgU2hvdWxkZXJwYWRzO0RhcmsgVHJhY2VyO01vbmFyY2ggb2YgdGhlIFNhcHBoaXJlIEdsZW47SGFsbG93ZWQgSG9yZGU7Q2FwIG9mIHRoZSBGdW5nYWwgTG9yZDtCZWFyZCBvZiB0aGUgRW1lcmFsZCBJbnN1cmdlbmNlO0xlaSBvZiB0aGUgUGVhY2UtQnJpbmdlcjtTaWducyBvZiB0aGUgQWxsZmF0aGVyIC0gV2VhcG9uO0NhcGUgb2YgdGhlIEltcG9zc2libGUgUmVhbG07R29sZGVuIEZsb29kbWFzaztUaWRlaHVudGVyIEJsaW5rIERhZ2dlcjtDbGFkZGlzaCBDdWRnZWwgUHJlbTtKYWtpcm8gSW1tb3J0YWwgV2luZ3M7SmFraXJvIEltbW9ydGFscyBIZWFkcztCbGFkZXMgb2YgdGhlIEZvdWxmZWxsIENvcnJ1cHRvciBQcmVtaXVtO0FyY2FuYSBTRiBEZW1vbiBFYXRoZXI7U291bCBEaWZmdXNlciBQcmVtO0hhaXIgb2YgdGhlIFN1cnZpdm9yO0FyYyBvZiBNYW50YSAtIE9mZi1IYW5kO0FyYyBvZiBNYW50YTtIYXVsIG9mIHRoZSBMdWNlbnQgQ2Fub3B5O0FybXMgb2YgdGhlIEx1Y2VudCBDYW5vcHk7Q3Jlc3Qgb2YgdGhlIEx1Y2VudCBDYW5vcHk7UmVkIFNhbmRzIE1hcmF1ZGVyIC0gSGVhZDtDcmltc29uIENlbnNlciBvZiBHbGlzcyBVUDtXYXJkIG9mIHRoZSBMdWNlbnQgQ2Fub3B5O0NoYXJtIG9mIHRoZSBMdWNlbnQgQ2Fub3B5O1JhbmRvbSBFbWJsZW07VEktOSBNam9sbG5pciBFZmZlY3Q7RW1pbmVuY2Ugb2YgUmlzdHVsIERlbnkgMTtEcmVhZCBSZXRyaWJ1dGlvbiAtIEhlYWR3ZWFyO1RoZSBCZWxsIG9mIE1lcmFudGhpYTtUb21vKmthbiBJbmNhcm5hdGUgQXJiYWxlc3Q7VG9tbyprYW4gSW5jYXJuYXRlIFRhaWw7VG9tbyprYW4gSW5jYXJuYXRlIEhvb2Q7VG9tbyprYW4gSW5jYXJuYXRlIEFybW9yO0d1YXJkIG9mIHRoZSBSZWQgTWlzdCBQcmVtO0p1Z2dlcm5hdXQgQXJjYW5hIFJlZCBCbGFkZWZvcm0gT3JpZ2lucztUSS0xMCBCbGluayBsdmwgMiBFZmZlY3Q7VEktMTAgUGhhc2UgQm9vdHMgRWZmZWN0O1RJLTEwIFRlbGVwb3J0IGx2bCAzIEVmZmVjdDtQbGFuZXRmYWxsIFN0dW4gRWZmZWN0O1RJLTEwIEV1bCBTY2VwdGVyIEVmZmVjdDtUSS0xMCBTaGl2YXMgRWZmZWN0O1RJLTEwIE1la2FzbSBFZmZlY3Q7SmFnZ2VkIEhvbm9yIEJsYWRlO0phZ2dlZCBIb25vciBMZWdzO0xpdHRsZSBCbGluayBEYWdnZXI7QXhlIG9mIFBocmFjdG9zIFByZW07Um95YWwgRGVjcmVlIFdoaXAgQXR0YWNrO0Nyb3duIG9mIHRoZSBSb3lhbCBEZWNyZWU7UmFpbWVudHMgb2YgdGhlIEVtaW5lbmNlIG9mIFJpc3R1bDtEYXJrIE1vb24gQmFieSBSb3NoYW47RG9vbSBJbW1vcnRhbHMgTWVnYVBhY2s7RGFya2JyZXcgRW5mb3JjZXIgYW5kIEV0ZXJuYWwgUmFkaWFuY2UgQmxhZGVzIGFuZCBNaWRhcyBLbnVja2xlcyBNZWdhUGFjaztFYXJ0aHNoYWtlciBNZWdhUGFjayBOZXc7TW9ua2V5IEtpbmcgQXJjYW5hIE1lZ2FQYWNrO1N2ZW4gSW1tb3J0YWxzIE1lZ2FQYWNrO1Vyc2EgSW1tb3J0YWxzIE1lZ2FQYWNrO1dyYWl0aCBLaW5nIEFyY2FuYSBNZWdhUGFjaztTaWxlbmNlciBUSTEwIENvbGxlY3RvcnMgQ2FjaGUgTWVnYVBhY2s7RCBPY3RvIFRpbmtlcjtDbGlua3ogTWVnYVBhY2s7RXhwbG9lcmVyIE1hZ2ljIEp1bmdsZTtBcmNhbmUgSW52ZXJ0ZXI7T2dyZSBNYWdpIEltbW9ydGFscyBBcmNhbmEgTWVnYVBhY2s7QnJpc3RsZWJhY2sgTWVnYVBhY2s7QmF0dGxldHJhcCBWIDMuMDtTaWx2ZXJ3dXJtIFNhY3JpZmljZTtCbGlnaHRmYWxsO0FudGltYWdlIFdlaSBGZW1hbGUgKFlvdSBjYW4gYWRkIFdlYXBvbiBhbmQgSGVhZCk7V2l0Y2ggRG9jdG9yIE1lZ2FQYWNrO055eCBBc3Nhc3NpbiBNZWdhUGFjayBVUDtTdHJhbmdlciBpbiB0aGUgV2FuZGVyaW5nIElzbGVzO1dpbmRyYW5nZXIgQXJjYW5hIHN0eWxlIDEgKEJsdWUgQmlyZCkgKyBGdWxsIFdSIGltbW9ydGFsO1RpbWJlcnNhdyBNZWdhUGFjazsgMTIzfHx8