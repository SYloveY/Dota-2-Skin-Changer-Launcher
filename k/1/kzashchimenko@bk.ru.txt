limitHWID:: 1 000||| 111::  111||| 222:: $2y$10$ZjdiM2RmYzM3ZDFlZmNmYuRXSBFCg2FkyFEKdeppAZGEetTuGGJCm 222||| 123:: Planetfall Blink;25 lvl ping;Pumpkin Trees UP;Mine Radius 702;Mask of the Confidant;Rapier of the Windward Rogue;The Song of Swiftguard - Finery;Bracers of the Fissured Soul;Hood of the Shattered Targe;Shards of the Monument of Ruin;Armor of the World Splitter;Infernus;Cloak of the Dark Wraith;Girdle of the Dark Wraith;Bracers of the Sunwarrior;Humble Drifter Pants;Words of the Drunken Warlord;Crimson Cyrridae;Ember Tipped Striders;Lucky Bullet of the Keen Machine;Golden Full-Bore Bonanza;Muh Keen Gun;Master of the Searing Path Arms;Belt of the Forsaken Flame;Cinder Sensei Style;Rapier of the Burning God Offhand;Rapier of the Burning God;Hunger of the Howling Wilds Arms;Hunger of the Howling Wilds Off-Hand Weapon;Focal Resonance V 3.0;Shadow in the Deep Bracers;Shadow in the Deep Back;Golden Hydrakan Latch;Golden Moonfall Prem;Armor of the Winged Sentinel;Heartless Hunt - Armor;Heartless Hunt - Off-Hand;Royal Winterbloom Arms;Yulsarias Mantle Prem;Ice Blossom;Verna;Arms of the Jade General;Belt of the Jade General;Night Terrors Belt;Mane of the Demon Stone;Armor of the Jade General;Illidan Stormrage for Terrorblade V 2.0;Gold Skymage;Crown of The Nightworld;Plunder of the Savage Monger;Endless Night;Ritual of the Loyal Fold;Saccharine Saboteur; 123|||