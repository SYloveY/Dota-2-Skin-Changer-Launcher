bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogNEM0QzQ1NDQtMDAyMC0yMDEwLTgwMjAtQTBDMDRGMjAyMDIwOzsgMTExfHx8IDIyMjo6ICQyeSQxMCROekpoTm1WbU1qRXhNR014TUdZM05lNTVIZ01mMGpmbC9BYmRrRU1OOXRJUm96bWJXWWUvMiAyMjJ8fHwgMTIzOjogTWFjZSBvZiBBZW9ucyBQcmVtO0pld2VsIG9mIEFlb25zO0xpbmVhZ2Ugb2YgdGhlIFN0b3JtbG9yZHMgLSBCYWNrO0xpbmVhZ2Ugb2YgdGhlIFN0b3JtbG9yZHMgLSBXZWFwb247QmVsdCBvZiB0aGUgQmxhZGVmb3JtIEFlc3RoZXRlO0hlbGwtU3BhciBBbmF0aGVtYTtNdWxjdGFudCBQYWxsIG9mIHRoZSBDcmltc29uIFdpdG5lc3M7RmluIEtpbmdzIENoYXJtIG9mIEVtaW5lbnQgUmV2aXZhbCBFeGNlcHRpb25hbDtHb2xkZW4gVHdpbGlnaHQgU2NoaXNtO01vb25mYWxsIFByZW07QXZvd2FuY2Ugb2YgdGhlIFZlaWxlZCBPbmVzO0NvZGljaWwgb2YgdGhlIFZlaWxlZCBPbmVzO01hbmlmb2xkIFBhcmFkb3ggUEEgQXJjYW5hIFN0eWxlIDM7Q29uY29yZCBSZXZlcnNpb24gVVA7UGhhbnRvbSBDb25jb3JkIFByZW07V2luZ3Mgb2YgdGhlIEV0aGVyZWFsIE1vbmFyY2g7Q3Jvd24gb2YgdGhlIEFnZWxlc3MgRmFlO1NoYWRvdyBpbiB0aGUgRGVlcCBBcm1vcjtTZWEgUmFrZXMgQnJpZGxlO0dvbGRlbiBIeWRyYWthbiBMYXRjaDtBcHBhcmF0dXMgb2YgRnVsbCBUaHJvdHRsZTtUcmFuc3ZlcnNhbnQgU291bCBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzIFByZW07U291bCBEaWZmdXNlciBQcmVtO0ZvY2FsIFJlc29uYW5jZSBWIDMuMDtCbGFja3NoaWVsZCBQcm90b2Ryb25lIFN0aW5nZXI7QmxhY2tzaGllbGQgUHJvdG9kcm9uZSBBcm1vcjtCbGFja3NoaWVsZCBQcm90b2Ryb25lIE1pc3NpbGUgTGF1bmNoZXI7TGFyZ2UgRnJvc3Rtb290O0FuY2llbnQgSW5oZXJpdGFuY2UgLSBXZWFwb247R29sZGVuIEVkaWN0IG9mIFNoYWRvd3M7SHVuZ2VyIG9mIHRoZSBIb3dsaW5nIFdpbGRzIFdlYXBvbjtHb2xkZW4gU2hhZG93IE1hc3F1ZXJhZGUgUHJlbTtUb3JtZW50ZWQgQ3Jvd247VG9ybWVudGVkIFN0YWZmIG9mIEVtaW5lbnQgUmV2aXZhbCBFeGNlcHRpb25hbDtHb2xkZW4gV3lybXdyb3VnaHQgRmxhcmUgUHJlbTtEaXNjaXBsZSBvZiB0aGUgV3lybXdyb3VnaHQgRmxhbWU7U3VsbGVuIFJhbXBhcnQ7R29sZGVuIFN1bGxlbiBIb2xsb3c7U3VsbGVuIEhhcnZlc3Q7R29sZGVuIFJpcHBlcnMgUmVlbDtHcmFuZCBBYnNjZXNzaW9uIENoYWluO0xhcmdlIFRhc3NlbHMgb2YgdGhlIEJsYWNrIERlYXRoO0luc2F0aWFibGUgQm9uZXNhdyBQcmVtO1F1ZXN0aW9uIG1hcmsgRGVueTtCcmFjZXJzIGFuZCBTaG91bGRlcnMgb2YgdGhlIFN1cnZpdm9yO0JlbHQgb2YgdGhlIFN1cnZpdm9yO0hhaXIgb2YgdGhlIFN1cnZpdm9yO1Nob3VsZGVycyBvZiB0aGUgU3Vydml2b3I7T2ZmaGFuZCBCbGFkZSBvZiB0aGUgU3Vydml2b3IgUHJlbTtCbGFkZSBvZiB0aGUgU3Vydml2b3I7TWFndXMgQWNjb3JkO0RhcmsgQXJ0aXN0cnkgQ2FwZSBQcmVtO0RhcmsgQXJ0aXN0cnkgQmVsdCBQcmVtO0RhcmsgQXJ0aXN0cnkgSGFpciAybmQgU3R5bGU7TWFudGxlIG9mIHRoZSBCbGFja2d1YXJkIE1hZ3VzO0ZhbWlsaWFycyBvZiBHbG9yaWQ5519cyBJbnNwaXJhdGlvbjtSYXBpZXIgb2YgdGhlIEJ1cm5pbmcgR29kO0p1Z2dlcm5hdXQgQXJjYW5hIEJsYWRlZm9ybSBMZWdhY3k7TGlnaHRuaW5nIEJsaW5rIFYgMi4wO1RJLTcgQm90dGxlIEVmZmVjdDtUSS05IEZvcmNlIFN0YWZmIEVmZmVjdDtUSS03IExldmVsIFVwIEVmZmVjdDtUSS03IFBoYXNlIEJvb3RzIEVmZmVjdDtUSS03IFNoaXZhcyBHdWFyZCBFZmZlY3Q7RGVjbGFyYXRpb24gb2YgdGhlIERpdmluZSBMaWdodCBSYWRpYW50IFRvd2VycztEZWNsYXJhdGlvbiBvZiB0aGUgRGl2aW5lIFNoYWRvdyBEaXJlIFRvd2VycztUSS03IEZvdW50YWluIEVmZmVjdDtUSS05IFRlbGVwb3J0IGx2bCAzIEVmZmVjdDtUaGUgTGlnaHRuaW5nIE9yY2hpZCBvZiBFbWluZW50IFJldml2YWwgRXhjZXB0aW9uYWw7R29sZGVuIE1hbmRhdGUgb2YgdGhlIFN0b3JtYm9ybjtDdXJzZSBvZiBFdGVybmFsIFB1cmdhdG9yeTtTdW5rZW4gRW1ibGVtO0NoYXNtIG9mIHRoZSBCcm9rZW4gQ29kZSBBcm1vcjtDaGFzbSBvZiB0aGUgQnJva2VuIENvZGUgV2luZ3M7Q2hhbXBpb25zIEJsdWUgQ29sb3IgZm9yIFRCO1BoYW50b20gQXNjZW5zaW9uIFNob3VsZGVycztQaGFudG9tIEFzY2Vuc2lvbiBCZWx0O1BoYW50b20gQXNjZW5zaW9uO09jY3VsdGlzdHMgUHVyc3VpdDtTdmVuIEltbW9ydGFscyBNZWdhUGFjaztVcnNhIEltbW9ydGFscyBNZWdhUGFjaztNaXJhbmEgVEkxMCBDb2xsZWN0b3JzIENhY2hlIE1lZ2FQYWNrO01vbmtleSBLaW5nIEFyY2FuYSBNZWdhUGFjaztGb3dsIFBsYWd1ZSBTZXQ7Tnl4IEFzc2Fzc2luIE1lZ2FQYWNrIFVQO1JpdHVhbCBvZiB0aGUgTG95YWwgRm9sZDtXcmFpdGggS2luZyBBcmNhbmEgTWVnYVBhY2s7IDEyM3x8fA==