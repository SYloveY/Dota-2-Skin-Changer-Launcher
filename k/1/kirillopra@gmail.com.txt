limitHWID:: 1 000||| 111::  111||| 222:: $2y$10$NzIxZTEzOWExZTQwOTIzZeYXk9parSfmNmCSMRubRWuCpX4AeFkle 222||| 123:: Flowering Treant;Fluttering Staff V 2.0;Golden Shards of Exile;Blackgate Sentinel Armor;Blackgate Sentinel Back;Blackgate Sentinel Head;Trappings of Golden Nirvana;Solar Forge;Pudge blood after hook;Pudge Blink Dagger;Golden Scavenging Guttleslug;Grand Abscession Hook Bundle;Murder Mask;Dendi Doll;Pauldron Perch;Arms of Desolation;Pauldrons of Eternal Harvest;Soul Corpulence - Head;King of Vipers Shoulder;Golden Full-Bore Bonanza;Deep sea overlord Arms;Haunted Hunter - Head;Colar of the Ardalan Interdictor;Muh Keen Gun;Virtuous Roar Pads;The Lightning Orchid of Eminent Revival;Robe of the Raikage Warrior;Sword of the Colossus Prem;Majesty Of The Colossus - Monolith;Medium Igneous Stone;Small Scarlet Quarry;Tiny Anthozoa Giant;Aegis and Roshan St. Valentine Day;Planetfall Blink;TI-5 effect Bottle;TI-5 effect Dagon;Eminence of Ristul Deny 2;Euls Scepter TI-6 Effect;Battle Pass Effect Force Staff;TI-10 Level Up Effect;Phase Boots TI-6 Effect;Radiance TI-6 Effect;TI-8 Shivas Effect;Guardians of the Lost Path Dire Towers;Guardians of the Lost Path Radiant Towers;Winter Versus Screen;Evil Ice-Roshan;Acid Hydra Cursor Pack;Chromy the Centipede Ward;Ti-9 Roshan;Weather Snow;Terrain - Winter;Dark Willow Announcer;Custom Dashboard 104;DotaCinema Bright HUD;Allfather of Nature Set;Vengeance of the Sunwarrior; 123|||