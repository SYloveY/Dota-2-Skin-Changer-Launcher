limitHWID:: 1 000||| 111:: 374DF9E0-D7DA-11DD-99F5-D850E657605C;; 111||| 222:: $2y$10$NDdhZTIxNmI1NDE4NTZkO.rYQsiGU9Cg8KobRpAIeN/4ns4919EnC 222||| 123:: Crown of the Brinebred Cavalier;Helm of the Mistral Fiend;Shatterblast Crown;Harvested Shoulders;Anunkasan;Infernal Chieftain of the Crimson Witness;Magus Apex;Edge of the Lost Order;Pyrexaec Floe;Curse of the New Season V 2.1;Blade of Tears and Crown of Tears;Golden Sullen Hollow V 3.2;Auspice of the Whyrlegyge Prem;Alluvion Prophecy;Blissful Knave Coat;Coat of the Windward Rogue;Blissful Knave Hat;Mask of the Confidant;Blissful Knave Rapier;Rapier of the Windward Rogue;Golden Shards of Exile;Nova of Golden Nirvana;Grand Abscession Hook Bundle;Golden Scavenging Guttleslug;Candy Cat Off-Hand;Direcourt Jester Cap;Pudge blood after hook;Candy Cat Belt;Candy Cat Back;Candy Cat Arms;Eminence of Ristul Knife Attack;Bloodfeather Feast;DotaCinema - Queen of Pain Spells;Mace of Vincere Atack Effect;Golden Severing Crest;Horns of Monstrous Reprisal Prem;Hunger of the Howling Wilds Arms;Staff of Perplex Prem;Rubick Curse - Death Ward;Rubick Curse - Demonic Purge;Rubick Curse - Exocirsm;Rubick Curse - Familiar;Rubick Curse - Flesh Golem;Rubick Curse - Freezing Field;Rubick Curse - Magnetize;Rubick Curse - Jex;Rubick Curse - Spirit Bear;Rubick Curse - Remote Mine;Rubick Curse - Shapeshift;Rubick Curse - Mass Serpent Ward;Rubick Curse - Power Cog;The Barren Vector;Arms of Desolation Prem;Golden Lamb to the Slaughter;Fiery Ward of Eki Bukaw;Lash of the Lizard Kin of the Crimson Witness;Golden Empyrean;Complete Wings of the Manticore;Hush of Eternal Night;Headhunter Slark;The Golden Barb of Skadi;Golden Full-Bore Bonanza;Phantom Advent Weapon UP;Phantom Advent Shoulders UP;Phantom Advent UP;Phantom Advent Belt UP;Iron Surge V 2.2;Savage Mettle;The Lightning Orchid of Eminent Revival;Rose of the Corridan Maestro;Focal Resonance V 3.0;Spaulders of the Psion Inquisitor;Epitaphic Trap;Fluttering Amethyst Trap + Icon;Foliage of Eldritch Gnarl;Dark Meadow Massacre Armor;Dark Meadow Massacre Arms;Dark Meadow Massacre Head;Golden Pale Mausoleum;Crimson Cyrridae;Bronzemonster of the Wailing Inferno;The Brinebred Cavalier;Trials of the Blackguard Magus No effects;Mark of the Mistral Fiend V 2.1;Big Un V 3.0;Ancient Mechanism;Anti-Mage Ultimate Red Dragon;Forged in Demons Blood Set;The Rowdy Firebrand;Strygwyr Bloodseeker;Brewmaster from HOTS;Lost Ranger;Pattern of the Silken Queen;Iceplain Ravager;Barren Survivor V 2.0;Lineage Province of the Hunt Eternal;Sherman Maiden V 4.1;Forgotten Tactician;Delights of Petaluna Pathfinder;Fatal Blossom V 3.0;Bedrock Serenity V 3.1;Harness of the Fissured Soul;Anvil of the Earthwright;First Night of the Summer Child;Abyssal Vortex;Gunboat Hegemon V 3.0;Divine Anchor Style 1;Lord of Chronoptic Synthesis;Daemonfell Flame;Ascendance of the Rime Lord 1st Style;Bewitching Flare V 2.0;Black Ice Scourge;War-Burrow Ravager;Hunter of Kings V 2.0;Erupting Wrath V 2.0;Eye of the Beholder;Voodoo Meepo;Darkfall Warden;Havoc of Dragon Palace V 2.0;Prismatic Grace;Black Nihility;Wrath of Ka V 2.1;Tales of the Grey Wastes;Cursed Zealot;Toll of the Fearful Aria;Vengeance of the Sunwarrior;Reminiscence of Dreams;Ire of Molten Rebirth;Demonic Pugna V 3.0;Monstrous Reprisal;Ancient Magus Style 2;Toxic SF;Gold Skymage;Hinterland Stalker;Armature of the Belligerent Ram Red;Concealed Raven;Tidehunter Killer;Foulfell Corruptor;Trek of the Trailblazer;Icewrack Marauder;Brawler of the Glacier Sea V 3.0;Roshan Hunters Set;Echoes of the Eyrie V 2.0;Ferocious Toxicant;Chill of the Keepers Gaze;Dread Compact;Bindings of the Battleranger Chaotic Style;Regalia of the Wraith Lord Set;Morbific Provision;Righteous Thunderbolt and Arcana MegaPack; 123|||