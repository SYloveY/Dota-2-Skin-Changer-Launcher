bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogIDExMXx8fCAyMjI6OiAkMnkkMTAkWkRnd01EY3hNbU0zTURReVkySXhaLkpobnd5RWNPNkp5RlNPSFdRNkQzTXNOVXBzcUJ5a2UgMjIyfHx8IDEyMzo6IENyb3cgb2YgRW1waXJpYyBJbmNlbmRpYXJ5O0RhcmsgQXJ0aXN0cnkgQ2FwZTtEYXJrIEFydGlzdHJ5IEJlbHQ7SGVhdmVuLVBpZXJjaW5nIFBhdWxkcm9ucztNYXNrIG9mIHRoZSBEaXZpbmUgU29ycm93O1RoZSBHYWxhY3RpYyBJTztCbGFkZSBvZiBSZWNrbGVzcyBWaWdvcjtXaW50ZXIgSHVudGluZyBIZWFkO1BhdWxkcm9ucyBvZiB0aGUgVGltZWtlZXBlcjtKaW4gYW5kIFlpbiBGb3ggU3Bpcml0cyBEZWZhdWx0O0pvdXJuZXkgUm9zaGFuO1JpdmVyIFZpYWwgR3JlZW47SG9saWRheSBSYWRpYW50IFRvd2VyO1RlcnJhaW4gLSBPdmVyZ3Jvd24gRW1waXJlO1B1bXBraW4gVHJlZXMgVVA7QWVnaXMgYW5kIFJvc2hhbiBTdC4gVmFsZW50aW5lIERheTtUSS0xMCBGb3JjZSBTdGFmZiBFZmZlY3Q7V2ludGVyIFNjeXRoZSBvZiBWeXNlIEVmZmVjdCAyMDE3O0JsaW5rIERhZ2dlciBsdmwgMSBUSS02IEVmZmVjdDtUSS02IERpZ2l0YWwgQ2hhb3MgVFAgRWZmZWN0O1RJLTEwIFJhZGlhbmNlIEVmZmVjdDtUSS03IEV1bHMgU2NlcHRlciBPZiBEaXZpbml0eSBFZmZlY3Q7VEktOCBGb3VudGFpbiBsdmwgMSBFZmZlY3Q7VEktMTAgQWdoYW5pbSBFZmZlY3Q7UGVkZXN0YWwgVGhlIEZhbGwgTWFqb3IgMjAxNiBEaXJlO1RJLTcgTGV2ZWwgVXAgRWZmZWN0O0xhc3RoaXQgR29sZCAtIE5ldyBCbG9vbSAyMDE5O1RJLTEwIE1qb2xsbmlyIEVmZmVjdDtUSS03IFBoYXNlIEJvb3RzIEVmZmVjdDtUZW1wbGFyIEFzc2Fzc2luIEFuaW1lIFZvaWNlO0Jyb29kbW90aGVyIEFuaW1lIFZvaWNlO01hc2sgb2YgTWFkbmVzcyBmb3IgVm9pZCBEb3RhMkNoYW5nZXIgRWRpdGlvbjtNYWNlIG9mIEFlb25zO0FybW9yIG9mIHRoZSBUZW50YWN1bGFyIFRpbWVsb3JkO0JlbHQgb2YgdGhlIEVtZXJhbGQgQWdlO0RlYXRoIEJlYXJpbmcgV2luZ3MgSGVhZDtNZWRpdW0gQmFkIFRvIFRoZSBCb25lO0h5bW4gb2YgdGhlIFBpb3VzIFBsYWd1ZSBBcm1vcjtIeW1uIG9mIHRoZSBQaWQ5519cyBQbGFndWUgSG9vZDtNYWxlZmljIERyYWtlcyBIb29kIG9mIHRoZSBDcmltc29uIFdpdG5lc3M7QmFyZGluZyBvZiB0aGUgU2llZ2UtRHJha2U7VGVtcGVzdCBIZWxtIG9mIHRoZSBUaHVuZGVyZ29kIFByZW07Qmxvb2RmZWF0aGVyIFdpbmdzO1NoYWRlIG9mIEFuZ3Vpc2g7Q2hhaW4gb2YgRW5kdXJpbmcgVG9ybWVudDtBcnNlbmFsIG9mIHRoZSBEZW1vbmljIFZlc3NlbCBWIDIuMTtOZXcgQ2hpZWZ0YWluIFN0eWxlIDE7VGhlIE9ibGl0ZXJhdG9yIG9mIE1hZ2ljO1dpY2tlZCBTcGFjZSBLbmlnaHQ7VW5kZWZlYXRlZCBHZW5lcmFsO0tvbWVpamkgS29pc2hpIDIgZm9yIEJhbmUgYnkgUGF0Y2hvdWxpIEtub3dsZWRnZTtGZWFzdCBvZiB0aGUgR2x1dHRvbnMgTGFyZGVyO1RoZSBQYXRoIG9mIE9kb2NvZWxldXM7QmxhemluZyBDb3Ntb3M7Q29udmFsZXNjaW5nIEVtcHJlc3M7VG94aWMgRGVhdGggRWF0ZXI7U3VuIEFzc2FzaW4gViAzLjA7SXpheW9pIFNha3V5YSBmb3IgVGlua2VyIGJ5IFBhdGNob3VsaSBLbm93bGVkZ2U7UGxhZ3VlIENoYW1waW9uIG9mIE51cmdsZTtHcmltIERlc3Rpbnk7SGFydmVzdHMgSG91bmQ7VGlwc3kgQnJhd2xlcjtSb3NlIEFuZCBUaGUgQmVhc3Q7RnVybmF0b3IgU2V0O1JveWFsIFdpbnRlcmJsb29tO1Ntb2t5IERyZWFtZXI7Qmxvb2R5IEJyaWRlO0ZpcmVzIG9mIFZhc2h1bmRvbCBubyBlZmZlY3QgViAyLjE7RHJhZ29ucyBBc2NlbnNpb24gViAzLjA7TGFkeSBTeWx2YW5hcyBmb3IgRHJvdyAtIFRoZSBCb3JlYWwgV2F0Y2ggU2V0O1RoZSBKYWRlIEdlbmVyYWw7U2FtdXJhaSBTb3VsIFYgMy4wO0Vmcml0IFN1bHRhbiBTZXQ7RGVzb2xhdGUgQ29ucXVlc3QgQ2hhbXBpb247Q29tcGVuZGl1bSBCbG9vZHkgUmlwcGVyO1JhZ2Ugb2YgdGhlIERhcmsgV29vZCB2IDIuMDtIdW50ZXIgb2YgS2luZ3MgViAyLjA7TmVwdHVuZSBmb3IgTWFycyBieSBQYXRjaG91bGkgS25vd2xlZGdlO1hjYWxpYnVyIFNldCBmb3IgTWVlcG87UmlwdGlkZSBSYWlkZXIgViAyLjA7SXpheW9pIE1pa3UgZm9yIE5hZ2EgU2lyZW4gYnkgUGF0Y2hvdWxpIEtub3dsZWRnZTtBcG9zdGxlIG9mIERlY2F5IFYgMi4xO1VuZmV0dGVyZWQgTWFsZXZvbGVuY2U7UmFkaWFudCBTcHk7QW50aXBvZGVhbiBBbGxpZXM7SGVhdmVubHkgTGlnaHQ7Q3JlZXBpbmcgU2hhZG93O0FybXkgT2YgVGhlIFZhc3QgU2VhO05pcnZhbmEgU3Bpcml0dWFsO0FsbHVyaW5nIE1lc21lcjtSZXNlYXJjaGVyIG9mIE9ibGl2aW9uIE1hZ2ljO01hZ2lzdGVyIG9mIHRoZSBOYXJyb3cgRmF0ZXM7Q3VubmluZyBDb3JzYWlyO0FuY2llbnQgTWFndXMgU3R5bGUgMTtSdWxlciBvZiB0aGUgRnJvc3RiaXRlIER1bmVzO0JlYWNvbiBvZiBDZXJ1bGVhbiBMaWdodCAyIFN0eWxlIFYgMi4xO0Jlc3Rvd21lbnRzIG9mIHRoZSBDZW50dXJpb24gVmFuZ3VhcmQ7S2luZHJlZCBvZiB0aGUgVW1pemFyIENyYXdsZXI7U2VudGluZWxzIFNoZWxsO0Jsb3Nzb21pbmcgSGFybW9ueSBWIDIuMDtTdG9ybXdyb3VnaHQgQXJiaXRlciBWIDIuMDtJbGxpZGFuIFN0b3JtcmFnZSBmb3IgVGVycm9yYmxhZGUgViAyLjA7SGVsbSBvZiB0aGUgRG9taW5hdG9yIGZvciBUcm9sbDtDb25zY3JpcHQgb2YgdGhlIEZyb3N0IEJyaWdhZGU7RGFyayBSZWNsYW1hdGlvbjtIdW50ZXIgb2YgdGhlIENyeXN0YWwgRHJpZnQ7Q29ycnVwdGlvbiBvZiB0aGUgVmlydWxlbnQgS3JhaXQ7QmFyZGluZyBvZiB0aGUgU291bCBLZWVwZXI7UHVwcGV0IFN1bW1vbmVyO1RoZSBEdXNrIENyYXdsZXIgU2V0O1N3aWZ0IFBhdGhmaW5kZXIgU2V0O0JlYXJlciBvZiB0aGUgQXJrdHVyYW4gVGFsb247IDEyM3x8fA==