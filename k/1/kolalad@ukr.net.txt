limitHWID:: 1 000||| 111:: 4C4C4544-0056-3710-804B-C8C04F443232 111||| 222:: bb7ea6038b563c1d7b3e83c63113fd04cda2cd96c7c46a38afe1a0c234f922f8b76fe62239fa1abe53b665ee50a990b2d8418681c330f3b5a74ff0f28843399b 222||| 123:: Tines of Tybara;Soul of the Slayer Prem;Wyrmwrought Flare;Disciple of the Wyrmwrought Flame;Horns of the Betrayer;Mulctant Pall of the Crimson Witness;Fin Kings Charm of Eminent Revival Exceptional;Manifold Paradox PA Arcana Style 3;Codicil of the Veiled Ones;Avowance of the Veiled Ones;Pulsar Remnant Prem;Moonfall Prem;Sullen Rampart;Golden Sullen Hollow Prem;Sullen Harvest;Spear of the Daemonfell Flame;Baneful Devotion;Crimson Bracers of Aeons Prem;Faceless Madness;Jewel of Aeons Prem;Mace of Aeons Prem;Signs of the Allfather - Arms;Shadow in the Deep Helm;Shadow in the Deep Armor;Gilded Edge Prem;The Golden Barb of Skadi Prem;Blacksail Cannoneer Weapon;Juggernaut Arcana Red Bladeform Origins;Jagged Honor Mask;Provocation of Ruin Sword;Belt of the Bladeform Aesthete;Provocation of Ruin Pauldron;Armor of Grim Destiny;Blistering Shade for Arcana;Cloak of the Dark Reservoir;Pauldron of the Dreadborn Regent;Helm of the Dark Reservoir;Sword of the Malignant Rule;Hell-Spar Anathema;Fantoccini;Hat of Fantoccinis Dilemma;Staff of the Impossible Realm Green;Crux of Perplex Arcana Style;Aspect of Oscilla;Crimson Hearts of Misrule;The Sunbreeze Birthright;Wings of the Fae Forager;Tunic of the Wandering Flame;Master of the Searing Path Head;Apogee of the Guardian Flame;Rapiers of the Burning God V 3.1;Guard of the Wandering Flame;Golden Origins of Faith Prem;Hair of the Survivor;Concord Dominion;Phantom Concord Prem;Immortal Pantheon;Dread Retribution - Bracers Alt;Dread Retribution - Cape Alt;Dread Retribution - Leg Armor Alt;Dread Retribution - Quiver Alt;Dread Retribution - Shoulder Armor Alt;Arcana Dread Retribution Master of Madness;Desert Burn Saddle;Desert Burn Outfit;Desert Burn Cap;Desert Burn Crossbow;Desert Burn Morty Immortal;Tempest Revelation;Ursa Immortals MegaPack;Windranger Arcana style 2 (Orange Bird) and Full WR immortal;Mirana TI10 Collectors Cache MegaPack;Storm Spirit MegaPack;Golden Dark Maw Inhibito and Golden Profane Union and Golden Dread Requisition Lifestealer Immortals Megapack;Legion Commander ModMaker MegaPack;Rubick Arcana with Immortal;Silencer MegaPack;Medusa MegaPack NEW;Righteous Thunderbolt and Arcana MegaPack;Kung fu Master;Nyx Assassin MegaPack UP;Sven Immortals MegaPack;Kunkka Immortals MegaPack;Morphling Immortals MegaPack UP;Wrath of the Celestial Sentinel; 123|||