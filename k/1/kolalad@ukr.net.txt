limitHWID:: 1 000||| 111:: 4C4C4544-0056-3710-804B-C8C04F443232;; 111||| 222:: bb7ea6038b563c1d7b3e83c63113fd04cda2cd96c7c46a38afe1a0c234f922f8b76fe62239fa1abe53b665ee50a990b2d8418681c330f3b5a74ff0f28843399b 222||| 123:: Manifold Paradox PA Arcana Style 3;Codicil of the Veiled Ones;Avowance of the Veiled Ones;Gothic Whisper Belt;Golden Bloodfeather Feast;Juggernaut Arcana Bladeform Legacy;Jagged Honor Bracer;Jagged Honor Banner;Jagged Honor Legs;Golden Huntling Prem;Tempest Revelation;Bracers of Aeons Prem;Faceless Madness;Jewel of Aeons Prem;Mace of Aeons Prem;Golden Ornithomancer Mantle;Golden Staff of Perplex Prem;Hat of Fantoccinis Dilemma;Fantoccini;Crux of Perplex Immortal Style;Baneful Devotion;Steward of the Forbidden Chamber Armor;Steward of the Forbidden Chamber Shoulder;Fluttering Amethyst + Purple Focal Resonance Dota2Changer Edition;Steward of the Forbidden Chamber Head;Hell-Spar Anathema Obsidian Blight;Mulctant Pall of the Crimson Witness;Fin Kings Charm of Eminent Revival Exceptional;Beast of the Crimson Ring Weapon;Monarch of the Sapphire Glen;Mantle of the Truebark Adherent;Signs of the Allfather - Arms;Sufferwood Sapling;Cap of the Fungal Lord;Wild Moss Beard of the Fungal Lord;Tines of Tybara;Hunters Hoard;Heartless Hunt - Fowl;Soul of the Slayer Prem;Golden Wyrmwrought Flare Prem;Disciple of the Wyrmwrought Flame;Glory of the Elderflame - Arms;TI-6 Natus Vincere TP Effect;Head of the Icewrack Marauder;Bitter Lineage Immortal Axes;Shoulders of the Icewrack Marauder;Armor of the Icewrack Marauder;Armguards of the Smoldering Sage;Tunic of the Wandering Flame;Master of the Searing Path Head;Apogee of the Guardian Flame;Master of the Searing Path Off-Hand;Rapier of the Burning God Offhand;Jagged Honor Mask;Golden Edge of the Lost Order;Golden Sullen Hollow Prem;Sullen Harvest;Sullen Rampart;Windranger Arcana style 2;Windranger Yellow Immortal Bird;Pack of the Ardalan Interdictor;Helm of the Ardalan Interdictor;Sniper Immortal Weapon of the Ardalan Interdictor;Horns of Eternal Harvest Prem;Pauldrons of Eternal Harvest D2C Edition;Golden Arms of Desolation Prem;Sven Immortals MegaPack UP;Queen of Pain Arcana MegaPack;Darkbrew Enforcer and Eternal Radiance Blades and Midas Knuckles MegaPack;Legion Commander ModMaker MegaPack;Onyx Lotus;Corridan Maestro and The Lightning Orchid and Golden Mandate of the Stormborn MegaPack NEW;Dead God Heir Set;Bristleback MegaPack;Hunters Glory;Slark MegaPack New;Outworld Devouver MegaPack;Clinkz MegaPack;Cursed Spirit;Golden Dark Maw Inhibito and Golden Profane Union and Golden Dread Requisition Lifestealer Immortals Megapack;Lich Master Necromancer V 2.1;Axe full Immortals Megapack;Nyx Assassin MegaPack UP; 123|||