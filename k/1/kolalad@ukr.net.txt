bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogNEM0QzQ1NDQtMDA1Ni0zNzEwLTgwNEItQzhDMDRGNDQzMjMyIDExMXx8fCAyMjI6OiBiYjdlYTYwMzhiNTYzYzFkN2IzZTgzYzYzMTEzZmQwNGNkYTJjZDk2YzdjNDZhMzhhZmUxYTBjMjM0ZjkyMmY4Yjc2ZmU2MjIzOWZhMWFiZTUzYjY2NWVlNTBhOTkwYjJkODQxODY4MWMzMzBmM2I1YTc0ZmYwZjI4ODQzMzk5YiAyMjJ8fHwgMTIzOjogVGluZXMgb2YgVHliYXJhO1NvdWwgb2YgdGhlIFNsYXllciBQcmVtO1d5cm13cm91Z2h0IEZsYXJlO0Rpc2NpcGxlIG9mIHRoZSBXeXJtd3JvdWdodCBGbGFtZTtIb3JucyBvZiB0aGUgQmV0cmF5ZXI7TXVsY3RhbnQgUGFsbCBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzO0ZpbiBLaW5ncyBDaGFybSBvZiBFbWluZW50IFJldml2YWwgRXhjZXB0aW9uYWw7TWFuaWZvbGQgUGFyYWRveCBQQSBBcmNhbmEgU3R5bGUgMztDb2RpY2lsIG9mIHRoZSBWZWlsZWQgT25lcztBdm93YW5jZSBvZiB0aGUgVmVpbGVkIE9uZXM7UHVsc2FyIFJlbW5hbnQgUHJlbTtNb29uZmFsbCBQcmVtO1N1bGxlbiBSYW1wYXJ0O0dvbGRlbiBTdWxsZW4gSG9sbG93IFByZW07U3VsbGVuIEhhcnZlc3Q7U3BlYXIgb2YgdGhlIERhZW1vbmZlbGwgRmxhbWU7QmFuZWZ1bCBEZXZvdGlvbjtDcmltc29uIEJyYWNlcnMgb2YgQWVvbnMgUHJlbTtGYWNlbGVzcyBNYWRuZXNzO0pld2VsIG9mIEFlb25zIFByZW07TWFjZSBvZiBBZW9ucyBQcmVtO1NpZ25zIG9mIHRoZSBBbGxmYXRoZXIgLSBBcm1zO1NoYWRvdyBpbiB0aGUgRGVlcCBIZWxtO1NoYWRvdyBpbiB0aGUgRGVlcCBBcm1vcjtHaWxkZWQgRWRnZSBQcmVtO1RoZSBHb2xkZW4gQmFyYiBvZiBTa2FkaSBQcmVtO0dvbGRlbiBGdWxsLUJvcmUgQm9uYW56YTtCbGFja3NhaWwgQ2Fubm9uZWVyIFdlYXBvbjtKdWdnZXJuYXV0IEFyY2FuYSBSZWQgQmxhZGVmb3JtIE9yaWdpbnM7SmFnZ2VkIEhvbm9yIE1hc2s7UHJvdm9jYXRpb24gb2YgUnVpbiBTd29yZDtCZWx0IG9mIHRoZSBCbGFkZWZvcm0gQWVzdGhldGU7UHJvdm9jYXRpb24gb2YgUnVpbiBQYXVsZHJvbjtBcm1vciBvZiBHcmltIERlc3Rpbnk7Qmxpc3RlcmluZyBTaGFkZSBmb3IgQXJjYW5hO0Nsb2FrIG9mIHRoZSBEYXJrIFJlc2Vydm9pcjtQYXVsZHJvbiBvZiB0aGUgRHJlYWRib3JuIFJlZ2VudDtIZWxtIG9mIHRoZSBEYXJrIFJlc2Vydm9pcjtTd29yZCBvZiB0aGUgTWFsaWduYW50IFJ1bGU7SGVsbC1TcGFyIEFuYXRoZW1hO0ZhbnRvY2Npbmk7SGF0IG9mIEZhbnRvY2NpbmlzIERpbGVtbWE7U3RhZmYgb2YgdGhlIEltcG9zc2libGUgUmVhbG0gR3JlZW47Q3J1eCBvZiBQZXJwbGV4IEFyY2FuYSBTdHlsZTtBc3BlY3Qgb2YgT3NjaWxsYTtEZWNsYXJhdGlvbiBvZiB0aGUgRGl2aW5lIExpZ2h0IFJhZGlhbnQgVG93ZXJzO0RlY2xhcmF0aW9uIG9mIHRoZSBEaXZpbmUgU2hhZG93IERpcmUgVG93ZXJzO0FnaGFuaW1zIEludGVyZGltZW5zaW9uYWwgQmFieSBSb3NoYW47Q3JpbXNvbiBIZWFydHMgb2YgTWlzcnVsZTtUaGUgU3VuYnJlZXplIEJpcnRocmlnaHQ7V2luZ3Mgb2YgdGhlIEZhZSBGb3JhZ2VyO1R1bmljIG9mIHRoZSBXYW5kZXJpbmcgRmxhbWU7TWFzdGVyIG9mIHRoZSBTZWFyaW5nIFBhdGggSGVhZDtBcG9nZWUgb2YgdGhlIEd1YXJkaWFuIEZsYW1lO1JhcGllcnMgb2YgdGhlIEJ1cm5pbmcgR29kIFYgMy4xO0d1YXJkIG9mIHRoZSBXYW5kZXJpbmcgRmxhbWU7R29sZGVuIE9yaWdpbnMgb2YgRmFpdGggUHJlbTtCcmFjZXJzIGFuZCBTaG91bGRlcnMgb2YgdGhlIFN1cnZpdm9yO0hhaXIgb2YgdGhlIFN1cnZpdm9yO0dvbGRlbiBCYXNoZXIgQmxhZGVzIFYgMi4wO0JlbHQgb2YgdGhlIFN1cnZpdm9yO0dvbGRlbiBTaWxlbnQgV2FrZTtBcmNhbmEgRHJlYWQgUmV0cmlidXRpb24gTWFzdGVyIG9mIE1hZG5lc3M7Q29uY29yZCBSZXZlcnNpb24gVVA7Q29uY29yZCBEb21pbmlvbjtQaGFudG9tIENvbmNvcmQgUHJlbTtJbW1vcnRhbCBQYW50aGVvbjtRdWVlbiBvZiBQYWluIEFyY2FuYSBNZWdhUGFjaztVcnNhIEltbW9ydGFscyBNZWdhUGFjaztXaW5kcmFuZ2VyIEFyY2FuYSBzdHlsZSAyIChPcmFuZ2UgQmlyZCkgYW5kIEZ1bGwgV1IgaW1tb3J0YWw7TWlyYW5hIFRJMTAgQ29sbGVjdG9ycyBDYWNoZSBNZWdhUGFjaztTdG9ybSBTcGlyaXQgTWVnYVBhY2s7R29sZGVuIERhcmsgTWF3IEluaGliaXRvIGFuZCBHb2xkZW4gUHJvZmFuZSBVbmlvbiBhbmQgR29sZGVuIERyZWFkIFJlcXVpc2l0aW9uIExpZmVzdGVhbGVyIEltbW9ydGFscyBNZWdhcGFjaztMZWdpb24gQ29tbWFuZGVyIE1vZE1ha2VyIE1lZ2FQYWNrO1J1YmljayBBcmNhbmEgd2l0aCBJbW1vcnRhbDtTaWxlbmNlciBNZWdhUGFjaztNZWR1c2EgTWVnYVBhY2sgTkVXO1JpZ2h0ZWQ5519cyBUaHVuZGVyYm9sdCBhbmQgQXJjYW5hIE1lZ2FQYWNrO0t1bmcgZnUgTWFzdGVyO055eCBBc3Nhc3NpbiBNZWdhUGFjayBVUDtTdmVuIEltbW9ydGFscyBNZWdhUGFjaztTdHJhbmdlciBpbiB0aGUgV2FuZGVyaW5nIElzbGVzO0t1bmtrYSBJbW1vcnRhbHMgTWVnYVBhY2s7U2NhbGVzIG9mIHRoZSBTaGFkb3cgV2Fsa2VyO01vcnBobGluZyBJbW1vcnRhbHMgTWVnYVBhY2sgVVA7T2dyZSBNYWdpIEltbW9ydGFscyBBcmNhbmEgTWVnYVBhY2s7QXJjYW5hIE1lZ2FQYWNrIFNoYWRvdyBGaWVuZDsgMTIzfHx8