bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogRDA1NUYyNUMtQzcxRC03OUIyLUZFRDYtM0M3QzNGM0MwRDk5IDExMXx8fCAyMjI6OiAkMnkkMTAkTURFNVl6RmxOMkl5TnpFM1lqZzVOZWF6c24walBLaENqZFAwOHAwSkkxcmJBMkExWC5rMUMgMjIyfHx8IDEyMzo6IEdvbGRlbiBCYXNoZXIgQmxhZGVzIFYgMi4wO0dvbGRlbiBDcnVjaWJsZSBvZiBSaWxlO0dvbGRlbiBTaWxlbnQgV2FrZTtSZWFwZXJzIFdyZWF0aDtEaWFib2xpYyBBc3BlY3Q7VGFsb25zIG9mIHRoZSBFbmRsZXNzIFN0b3JtIE1vdW50O0dvbGRlbiBDaGFvcyBGdWxjcnVtO0NoYW9zIEFyYml0ZXI7QnJhY2VycyBvZiBBZW9ucztQZXJjZXB0aW9ucyBvZiB0aGUgRXRlcm5hbCBNaW5kO0pld2VsIG9mIEFlb25zO01hY2Ugb2YgQWVvbnMgUHJlbTtBdG9taWMgUmF5IFRocnVzdGVycyBQcmVtO0NyaW1zb24gRWRnZSBvZiB0aGUgTG9zdCBPcmRlcjtKdWdnZXJuYXV0IEFyY2FuYSBCbGFkZWZvcm0gTGVnYWN5O0dvbGRlbiBUd2lsaWdodCBTY2hpc207TW9vbmZhbGwgUHJlbTtNYW5pZm9sZCBQYXJhZG94IFBBIEFyY2FuYSBTdHlsZSAzO0F2b3dhbmNlIG9mIHRoZSBWZWlsZWQgT25lcztTaGFkb3cgaW4gdGhlIERlZXAgQXJtb3I7UGhhbnRvbSBBc2NlbnNpb24gV2VhcG9uO1BoYW50b20gQXNjZW5zaW9uO1BoYW50b20gQXNjZW5zaW9uIEJlbHQ7UGhhbnRvbSBBc2NlbnNpb24gU2hvdWxkZXJzO0JpdHRlciBMaW5lYWdlIEltbW9ydGFsIEF4ZXM7U2NhbGUgb2YgQml0dGVyIFNwb2lsIEltbW9ydGFsIFVQO1N3aWZ0IENsYXcgYW5kIEZlcm9jaWQ5519cyBIZWFydDtEaXBwZXIgdGhlIERlc3Ryb3llcjtDcmltc29uIFBpcXVlO1NraXR0ZXJpbmcgRGVzb2xhdGlvbiBQcmVtO0dvbGRlbiBDeXJyaWRhZSBQcmVtO1RJLTggU2Vhc29uYWwgQ3JlZXAgRGVueSBFZmZlY3Q7TWFzdGVyIG9mIHRoZSBTZWFyaW5nIFBhdGggT2ZmLUhhbmQ7VHVuaWMgb2YgdGhlIFdhbmRlcmluZyBGbGFtZTtNYXN0ZXIgb2YgdGhlIFNlYXJpbmcgUGF0aCBIZWFkO01hc3RlciBvZiB0aGUgU2VhcmluZyBQYXRoIFdlYXBvbjtBcG9nZWUgb2YgdGhlIEd1YXJkaWFuIEZsYW1lO1NvdWwgb2YgdGhlIFNsYXllciBQcmVtO0RyZXNzIG9mIHRoZSBCZXdpdGNoaW5nIEZsYXJlIFByZW1pdW07R2xvcnkgb2YgdGhlIEVsZGVyZmxhbWUgLSBBcm1zO1N1bGxlbiBSYW1wYXJ0O0dvbGRlbiBTdWxsZW4gSG9sbG93O1N1bGxlbiBIYXJ2ZXN0O0Jsb3Nzb20gb2YgdGhlIE1lcnJ5IFdhbmRlcmVyO0Nyb3duIG9mIHRoZSBBZ2VsZXNzIEZhZTtHb2xkZW4gRnVsbC1Cb3JlIEJvbmFuemE7TXVoIEtlZW4gR3VuO1RvcCBIYXQgb2YgdGhlIE9jY3VsdGlzdHMgUHVyc3VpdDtCbGFja3NhaWwgQ2Fubm9uZWVyIEJhY2s7QnJhY2VycyBvZiB0aGUgU2lsdmVyIEZveDtGb2NhbCBSZXNvbmFuY2UgViAzLjA7QW5jaWVudCBJbmhlcml0YW5jZSAtIFNob3VsZGVyO0FuY2llbnQgSW5oZXJpdGFuY2UgLSBCZWx0O0FuY2llbnQgSW5oZXJpdGFuY2UgLSBOZWNrO0FuY2llbnQgSW5oZXJpdGFuY2UgLSBCYWNrO1N3b3JkIG9mIHRoZSBDb2xvc3N1cztIaWRkZW4gVmVjdG9yIC0gQXJtb3I7SGlkZGVuIFZlY3RvciAtIEhhdDtIaWRkZW4gVmVjdG9yIC0gQmVsdDtIaWRkZW4gVmVjdG9yIC0gQmxhZGU7V2luZHJhbmdlciBBcmNhbmEgc3R5bGUgMTtJY2VmbGlnaHQgRWRpZmljZTtUZW1wZXN0IEhlbG0gb2YgdGhlIFRodW5kZXJnb2QgKyBSaWdodGVvdXMgVGh1bmRlcmJvbHQ7VGVtcGVzdCBSZXZlbGF0aW9uO0VtYmxlbSBvZiBEaXZpbml0eTtEYXJrYnJldyBFbmZvcmNlciBhbmQgRXRlcm5hbCBSYWRpYW5jZSBCbGFkZXMgYW5kIE1pZGFzIEtudWNrbGVzIE1lZ2FQYWNrO1BsZWRnZSBvZiB0aGUgRHJhZ29ucyBEaXNjaXBsZSBhbmQgR29sZGVuIEJhc2hlciBCbGFkZXMgYW5kIEdvbGRlbiBPcmlnaW5zIG9mIEZhaXRoIE1lZ2FQYWNrO0F4ZSBmdWxsIEltbW9ydGFscyBNZWdhcGFjayBhbHQ7RXZlcmJsYWNrO0NsaW5reiBNZWdhUGFjaztHb2xkZW4gRGFyayBNYXcgSW5oaWJpdG8gYW5kIEdvbGRlbiBQcm9mYW5lIFVuaW9uIGFuZCBHb2xkZW4gRHJlYWQgUmVxdWlzaXRpb24gTGlmZXN0ZWFsZXIgSW1tb3J0YWxzIE1lZ2FwYWNrO0Vzc2VuY2UgT2YgVGhlIERhcmsgTW9vbjtNZWR1c2EgTWVnYVBhY2sgTkVXO01vbmtleSBLaW5nIEFyY2FuYSBNZWdhUGFjaztTbGFyayBNZWdhUGFjayBOZXc7U3ZlbiBJbW1vcnRhbHMgTWVnYVBhY2s7VGhlIEFscGluZSBTdGFsa2VycyBTZXQ7V3JhaXRoIEtpbmcgQXJjYW5hIE1lZ2FQYWNrO1Njb3JjaGluZyBBbWJlciBEcmFnb29uO0VhcnRoc2hha2VyIE1lZ2FQYWNrIE5ldztIdXNrYXIgTWVnYVBhY2sgTkVXO0xlZ2lvbiBDb21tYW5kZXIgTW9kTWFrZXIgTWVnYVBhY2s7Rm93bCBQbGFndWUgU2V0O091dHdvcmxkIERldm91dmVyIE1lZ2FQYWNrO1F1ZWVuIG9mIFBhaW4gQXJjYW5hIE1lZ2FQYWNrO1NGIEFyY2FuYSBNZWdhcGFjaztDb25jZWFsZWQgUmF2ZW47VmlwZXIgTWVnYVBhY2s7Tm9ibGUgRnJvc3RoZWFydDsgMTIzfHx8