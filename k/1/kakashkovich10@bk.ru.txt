bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogIDExMXx8fCAyMjI6OiAkMnkkMTAkWXpFd1ptWm1ZekV6TUdOak5tRXpZZVRPaEdvU3VKRG5oQW9abE5meE9nSTJRbGhHTVBycUsgMjIyfHx8IDEyMzo6IEFzc2lzdGFudCpzIFJlc3BpcmF0b3I7UmF6emlscyBNaWRhcyBLbnVja2xlcyBQcmVtO0V4cGVyaW1lbnRhbGlzdCpzIExhYm9yYXRvcnkgRXNzZW50aWFscztUb3AgSGF0IG9mIHRoZSBEYXJrYnJldyBFbmZvcmNlcjtPZmYtSGFuZCBvZiB0aGUgQm9pbGVycGxhdGUgQnJ1aXNlcjtFdGVybmFsIFJhZGlhbmNlIEJsYWRlcyBQcmVtO0xvdmViZWFyO0JvbmtlcnMgb2YgQXdhbGViO1BhbnRhbG9vbnMgb2YgdGhlIFZvZG91IFJvdmVyO01hc3F1ZSBvZiBBd2FsZWI7Q29hdCBvZiB0aGUgVm9kb3UgUm92ZXI7UGFkZGFwb24gb2YgUmliYml0YXIgViA0LjA7QXdhbGVicyBUcnVuZGxld2VlZDtJY2VmbGlnaHQgRWRpZmljZTtBdXJvcmEqcyBQeXJlIEJhY2s7V2luZ3Mgb2YgdGhlIEthdGVraGVpbjtTa2l0dGVyaW5nIERlc29sYXRpb24gUHJlbTtDcmltc29uIFBpcXVlIFByZW07Q3JpbXNvbiBDeXJyaWRhZTtWZXNwb2lkIFN0YWxrZXIgTGVncztEcmVhZCBSZXRyaWJ1dGlvbiAtIEJyYWNlcnMgQWx0O0dvbGRlbiBTaWxlbnQgV2FrZTtEZWF0aEJsb3Nzb20gRHJvdyBSYW5nZXIgSGVhZDtEcmVhZCBSZXRyaWJ1dGlvbiAtIExlZyBBcm1vciBBbHQ7RHJlYWQgUmV0cmlidXRpb24gLSBRdWl2ZXIgQWx0O0RyZWFkIFJldHJpYnV0aW9uIC0gU2hvdWxkZXIgQXJtb3IgQWx0O0FyY2FuYSBEcmVhZCBSZXRyaWJ1dGlvbiBNYXN0ZXIgb2YgTWFkbmVzcztIaWRkZW4gVmVjdG9yIC0gQXJtb3I7SGlkZGVuIFZlY3RvciAtIEJlbHQ7SGlkZGVuIFZlY3RvciAtIEJsYWRlO0hpZGRlbiBWZWN0b3IgLSBIYXQ7Q29uc3RlbGxhdGlvbiBXZWFwb247U3dpZnQgQ2xhdyBhbmQgRmVyb2Npb3VzIEhlYXJ0O0RpcHBlciB0aGUgRGVzdHJveWVyO0JhcmRpbmcgb2YgdGhlIFNhbmdzdHJhdGggRm9sZDtNYXNrIG9mIHRoZSBTYW5nc3RyYXRoIEZvbGQ7Q2FwZSBvZiB0aGUgTGlmdGVkIFZlaWw7R290aGljIFdoaXNwZXIgQmVsdDtNYW5pZm9sZCBQYXJhZG94IFBBIEFyY2FuYSBTdHlsZSAyO0F2b3dhbmNlIG9mIHRoZSBWZWlsZWQgT25lcztDb2RpY2lsIG9mIHRoZSBWZWlsZWQgT25lcztIZWxtIG9mIHRoZSBTYXZhZ2UgTW9uZ2VyO0JpdHRlciBMaW5lYWdlIEltbW9ydGFsIEF4ZXM7U2NhbGUgb2YgQml0dGVyIFNwb2lsIEltbW9ydGFsIFVQO0FybW9yIG9mIHRoZSBJbXBlcmlvdXMgQ29tbWFuZDtUaW55IEJhZCBUbyBUaGUgQm9uZTtBbmNpZW50IEluaGVyaXRhbmNlIC0gU2hvdWxkZXI7QW5jaWVudCBJbmhlcml0YW5jZSAtIEJlbHQ7U21hbGwgQmFkIFRvIFRoZSBCb25lO0FuY2llbnQgSW5oZXJpdGFuY2UgLSBOZWNrO01lZGl1bSBCYWQgVG8gVGhlIEJvbmU7QW5jaWVudCBJbmhlcml0YW5jZSAtIEJhY2s7TGFyZ2UgQmFkIFRvIFRoZSBCb25lO0NyeXN0YWwgRHJ5YWQgUHJlbTtBcmNhbmljIFJlc29uYW5jZSBCZWFtO1N1Ym1lcmdlZCBIYXphcmQgSHVsbDtCbGFja3NoaWVsZCBQcm90b2Ryb25lIFN0aW5nZXI7Um9sbGVybWF3c3RlciBQcmVtO0JsYWNrc2hpZWxkIFByb3RvZHJvbmUgTWlzc2lsZSBMYXVuY2hlcjtTdWJtZXJnZWQgSGF6YXJkIFByb3BlbGxlcjtBcm1vciBvZiB0aGUgQWJ5c3NhbCBTY291cmdlO0VtZXJhbGQgU3VianVnYXRpb247RW1lcmFsZCBDb25xdWVzdDtHb2xkZW4gUGlzY2VhbiBQdWx2ZXJpemVyO1RvbWUgb2YgdGhlIEd1YXJkZWQgV29yZDtIYXQgb2YgRGlzdGluZ3Vpc2hlZCBFeHBlZGl0aW9uYXJ5O1R1c2tzIG9mIERpc3Rpbmd1aXNoZWQgRXhwZWRpdGlvbmFyeTtDb2F0IG9mIERpc3Rpbmd1aXNoZWQgRXhwZWRpdGlvbmFyeTtBbmNlc3RvcnMgRnJvemVuIEF4ZTtTaGVsbCBvZiB0aGUgUmF1Y291cyBHYXRlY3Jhc2hlcjtUcmFpbiBBcm1vciBCYWNrO0hhdCBvZiB0aGUgVHJhaWxibGF6ZXI7R29sZGVuIFJlY3RpZmllcjtGaW5zIG9mIHRoZSBNb2x0ZW4gRGVzdHJ1Y3RvcjtDb250cm9sbGVkIEJ1cm47RGVtb24gRm9ybSBvZiB0aGUgRm91bGZlbGwgQ29ycnVwdG9yIFVQO1BpbmsgQ29sb3IgZm9yIFRCO0NoYXNtIG9mIHRoZSBCcm9rZW4gQ29kZSBIZWxtO0ZyYWN0YWwgSG9ybnMgb2YgSW5uZXIgQWJ5c20gVVA7U2N5dGhlcyBvZiBTb3Jyb3c7U3BhbiBvZiBTb3Jyb3c7Q2hhc20gb2YgdGhlIEJyb2tlbiBDb2RlIEFybW9yO0NvbGxhciBvZiBFdGVybmFsIFB1cmdhdG9yeTtFcGl0YXBoaWMgVHJhcDtDaGltZXMgb2YgdGhlIFRlbXBsZSBBcm1vcjtIZWFkZHJlc3Mgb2YgdGhlIExveWFsIEZvbGQ7TWFudGxlIG9mIHRoZSBXaGlzcGVyZWQgQm9uZDtGb2NhbCBSZXNvbmFuY2UgViAzLjA7VmlnaWwgVHJpdW1waDtTaGF0dGVyZWQgR3JlYXRzd29yZDtMb3JkIG9mIE5vcnRod2FyZGVuIFNob3VsZGVyO1ZpZ2lsIE9keXNzZXk7UGFudGFsb29ucyBvZiB0aGUgRnJlZWxhbmNlcjtWaWdpbCBTaWduZXQ7UGhhbnRvbSBBc2NlbnNpb24gQmVsdDtQaGFudG9tIEFzY2Vuc2lvbjtUcmFuc3ZlcnNhbnQgU291bCBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzO1NvdWwgRGlmZnVzZXIgUHJlbTtBcm1zIG9mIHRoZSBTdXJnaW5nIFdpbmQ7QmVsdCBvZiB0aGUgRWxlbWVudGFsIEltcGVyYXRvcjtCZWx0IG9mIFVsdG9yaWFuIENoYXJnZXI7SXJvbiBTdXJnZTtNYW50bGUgb2YgVWx0b3JpYW4gQ2hhcmdlcjtUYWlsIG9mIHRoZSBFbGVtZW50YWwgUmVhbG1zO1RodW5kZXJpbmcgRmxhaWw7Q2Fubm9uIG9mIHRoZSBPY2N1bHRpc3RzIFB1cnN1aXQ7Q29sYXIgb2YgdGhlIEFyZGFsYW4gSW50ZXJkaWN0b3I7VG9wIEhhdCBvZiB0aGUgT2NjdWx0aXN0cyBQdXJzdWl0O0dvbGRlbiBGdWxsLUJvcmUgQm9uYW56YTtHYXVudGxldCBvZiB0aGUgSGludGVybGFuZCBTdGFsa2VyO0Rlc2VydCBCdXJuIFNhZGRsZTtEZXNlcnQgQnVybiBPdXRmaXQ7RGVzZXJ0IEJ1cm4gQ2FwO0Rlc2VydCBCdXJuIE1vcnR5IEltbW9ydGFsO0Rlc2VydCBCdXJuIENyb3NzYm93O0V5cmllYm91bmQgSW1wZXJhdG9yIC0gQXJtcztHb2xkZW4gRmxpZ2h0IG9mIEVwaXBoYW55O1NlY3JldHMgb2YgdGhlIENlbGVzdGlhbCBCZWx0O0NvbXBsZXRlIEhlbG0gb2YgdGhlIE1hbnRpY29yZTtUaG9ybndhdGNoIFBhdWxkcm9ucztHb2xkZW4gRW1weXJlYW4gUHJlbTtCb2dtYXJjaCBHYXJiO0hhdWwgb2YgdGhlIEx1Y2VudCBDYW5vcHk7Q3JpbXNvbiBDZW5zZXIgb2YgR2xpc3MgVVA7TGFzaCBvZiB0aGUgTGl6YXJkIEtpbjtTd2FtcCBTaGFtYW4gV2FyZHM7R29sZGVuIExhbWIgdG8gdGhlIFNsYXVnaHRlcjtBcm1zIG9mIERlc29sYXRpb247QXJjYW5hIFNGIERlbW9uIEVhdGhlcjtQYXVsZHJvbnMgb2YgRXRlcm5hbCBIYXJ2ZXN0O0hvcm5zIG9mIEV0ZXJuYWwgSGFydmVzdDtUaGUgQmFycmVuIFZlY3RvcjtUYWlsIG9mIHRoZSBLcmF5IExlZ2lvbnM7VGhlIEJhcnJlbiBDcm93bjtDcmF3bGVycyBvZiB0aGUgRnJvc3RiaXRlIER1bmVzO0NoaXRpbiBvZiB0aGUgS3JheSBMZWdpb25zO0Nyb3duIG9mIENhbGFwaGFzIEJhY2s7Q3Jvd24gb2YgQ2FsYXBoYXMgQXJtb3I7QmVsdCBvZiBEZXByYXZlZCBNYWxmb3JtYXRpb247VGFpbCBvZiBEZXByYXZlZCBNYWxmb3JtYXRpb247UnViaWNrIEFyY2FuYTtBZ2hzIEJQIENhcGUgb2YgdGhlIEltcG9zc2libGUgUmVhbG07QWdocyBCUCBIZWFkIG9mIHRoZSBJbXBvc3NpYmxlIFJlYWxtO0NydXggb2YgUGVycGxleCBJbW1vcnRhbCBTdHlsZTtHb2xkZW4gU3RhZmYgb2YgUGVycGxleCBQcmVtO0h1bmdlciBvZiB0aGUgSG93bGluZyBXaWxkcyBBcm1zO0NyaW1zb24gRWRpY3Qgb2YgU2hhZG93cztIdW5nZXIgb2YgdGhlIEhvd2xpbmcgV2lsZHMgT2ZmLUhhbmQgV2VhcG9uO0dvbGRlbiBTaGFkb3cgTWFzcXVlcmFkZSBQcmVtO1Ntb2tlIEJvbWIgb2YgTW9uc3Ryb3VzIFJlcHJpc2FsIFByZW07SHVuZ2VyIG9mIHRoZSBIb3dsaW5nIFdpbGRzIFdlYXBvbjtDcnVlbCBBc3NlbWJsYWdlIEFybW9yO0FybXMgb2YgdGhlIEZvcmxvcm4gTWF6ZTtCYXJkaW5nIG9mIHRoZSBNYXplIEtlZXBlcjtHb2xkZW4gU2V2ZXJpbmcgQ3Jlc3QgUHJlbTtTZXZlcmluZyBMYXNoIFByZW07TWFjZSBvZiBWaW5jZXJlIEF0YWNrIEVmZmVjdDtCbG9vZGZlYXRoZXIgV2luZ3M7Q3Jvd24gb2YgdGhlIFJveWFsIERlY3JlZTtHcmFjZSBvZiB0aGUgUm95YWwgRGVjcmVlO0NoYWluIG9mIEVuZHVyaW5nIFRvcm1lbnQ7RG90YUNpbmVtYSAtIFF1ZWVuIG9mIFBhaW4gU3BlbGxzO0dvbGRlbiBCbG9vZGZlYXRoZXIgRmVhc3Q7RnVyaWQ5519cyBOZXRoZXJnZWlzdCAtIFNwaWtlIEFybXM7RnVyaWQ5519cyBOZXRoZXJnZWlzdCAtIEJhY2s7QmVsdCBvZiB0aGUgTmFyY2lzc2lzdGljIExlZWNoO0dvbGRlbiBFeWUgb2YgSXgqeXhhO0FybW9yIG9mIHRoZSBOYXJjaXNzaXN0aWMgTGVlY2g7Q2hhbGljZSBvZiBJeHl4YTtDYW5keSBDYXQgQXJtcztHcmFuZCBBYnNjZXNzaW9uO0RlbmRpIERvbGw7R3JhbmQgQWJzY2Vzc2lvbiBDaGFpbjtMYXJnZSBUYXNzZWxzIG9mIHRoZSBCbGFjayBEZWF0aDtEYXBwZXIgRGlzZ3Vpc2UgQ2xlYXZlcjtHb2xkZW4gU2NhdmVuZ2luZyBHdXR0bGVzbHVnO0ZlYXN0IG9mIEFic2Nlc3Npb24gSG9vayBCdW5kbGU7Qmxvc3NvbSBvZiB0aGUgTWVycnkgV2FuZGVyZXI7Q3Jvd24gb2YgdGhlIEV0aGVyZWFsIE1vbmFyY2g7TWVycnkgV2FuZGVyZXIqcyBCcnVzaCBQcmVtO1NvbGFyIEZvcmdlIFByZW07QmxhemUgb2YgT2JsaXZpb24gQmFjaztQeXJhbWlkIG9mIHRoZSBUZW1wbGUgb2YgdGhlIEZhbGxlbiBTdW47QnJhY2VycyBvZiB0aGUgU3Vud2FycmlvcjtCZWx0IG9mIHRoZSBSZWQgU2FuZHM7TWFuZSBvZiB0aGUgU3Vud2FycmlvciBVUDtDb25jb3JkIERvbWluaW9uO1JpbmcgU3BlYXIgb2YgU291bCBEaWZmdXNpb247Q29hdCBvZiB0aGUgV2luZHdhcmQgUm9ndWU7TWFzayBvZiB0aGUgQ29uZmlkYW50O0xvcmQgRm94IFdlYXBvbjtFdGllbm5lKnMgUmV2ZW5nZTtQbGFndWUgQmFyb24gSGF0O01hc2sgb2YgRGVjYXk7R29sZGVuIFN1bGxlbiBIb2xsb3cgViAzLjI7U3VsbGVuIFJhbXBhcnQ7U3VsbGVuIEhhcnZlc3Q7Q29yYWxlbnRzIG9mIHRoZSBEcmVhZCBQcm9waGV0O0lyb253b29kIEFybXMgb2YgdGhlIEZ1bmdhbCBMb3JkO01vbmFyY2ggb2YgdGhlIFNhcHBoaXJlIEdsZW47U2lnbnMgb2YgdGhlIEFsbGZhdGhlciAtIEhlYWQ7RGVzZXJ0IEJsb29tIC0gTmVjaztNYW50bGUgb2YgdGhlIFRydWViYXJrIEFkaGVyZW50O1N1ZmZlcndvb2QgU2FwbGluZztQcmluY2VzcyBvZiB0aGUgQ29yYWwgU2VhIEFybW9yO1RoZSBCZWxsIG9mIE1lcmFudGhpYTtUaGUgT3JkZXIgb2YgQ3lwcmluO05hZ2luYXRhIG9mIHRoZSBBbGx1cmUgT2ZmLUhhbmQ7TmFnaW5hdGEgb2YgdGhlIEFsbHVyZTtCbGFkZSBvZiBUZWFycyBhbmQgQ3Jvd24gb2YgVGVhcnM7S2luZHJlZCBvZiB0aGUgQ3Vyc2VkIEFybXM7Q29sb3IgTWVlcG87QmFuZGFuYSBvZiB0aGUgQm9uZSBSdWluIEJhbmRpdHM7VGhlIFNwZWx1bmtlcipzIFRvcmNoO0plc3RlciBLaW5nIFNob3VsZGVyO1RhaWwgb2YgdGhlIEZyYWN0dXJlZCBPcmRlcjtCbGFkZSBvZiB0aGUgRnJhY3R1cmVkIE9yZGVyO0RhdWdodGVycyBvZiBIeWRyb3BoaWluYWUgUHJlbTtBcm1zIG9mIHRoZSBWb3cgRXRlcm5hbDtIZWxtIG9mIHRoZSBCZWhvbGRlcjtUYWlsIG9mIHRoZSBWb3cgRXRlcm5hbDtCb3cgb2YgdGhlIEJlaG9sZGVyO0FyZW5hIENoYW1waW9uIEFybW9yO0FyZW5hIENoYW1waW9uIEJlbHQ7R29kcyBNZXJjeSBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzO0NyaW1zb24gUHJvZ2VuaXRvcnMgQmFuZTtCcmFjZXIgb2YgdGhlIFNwaXJhbCBCb3JlO0JlbHQgb2YgT3JuYXRlIENydWVsdHk7RXllcyBvZiBBcmRlbm9rO0hvcm4gb2YgdGhlIFNwaXJhbCBCb3JlO1Nob2NrIG9mIHRoZSBBbnZpbCBQcmVtO1Njb3VyZ2Ugb2YgdGhlIHNhY3JlZCBncm92ZSBIZWFkO01vdW50IG9mIHRoZSBXaW5nZWQgU2VudGluZWw7R29sZGVuIE1vb25mYWxsIFByZW07TGluZWFnZSBBcm1vciBvZiB0aGUgUmFpZGZvcmdlZCBSaWRlcjtHb2xkZW4gVHdpbGlnaHQgU2NoaXNtO0Zvcm0gb2YgdGhlIERhcmsgV29vZDtDbGF3cyBvZiBOdXJhbnU7Q2F1bGRyb24gb2YgWGFocnl4IG9mIEVtaW5lbnQgUmV2aXZhbCBFeGNlcHRpb25hbDtBc3BlY3Qgb2YgdGhlIERhcmsgV29vZDtUcm9waHkgb2YgdGhlIFdvbGYgSHVudGVyO1NwaXJpdCBvZiBDYWxtIFYgMi4xO0NhdWxkcm9uIG9mIFhhaHJ5eDtIZWxsLVNwYXIgQW5hdGhlbWEgT2JzaWRpYW4gQmxpZ2h0O0luZmVybmFsIFdpbmdzO0hvcm5zIG9mIHRoZSBCZXRyYXllcjtNdWxjdGFudCBQYWxsO0ZpbiBLaW5ncyBDaGFybSBvZiBFbWluZW50IFJldml2YWwgRXhjZXB0aW9uYWw7R2xvcnkgb2YgdGhlIEVsZGVyZmxhbWUgLSBBcm1zO0dvbGRlbiBXeXJtd3JvdWdodCBGbGFyZSBQcmVtO1NvdWwgb2YgdGhlIFNsYXllciBQcmVtO0Rpc2NpcGxlIG9mIHRoZSBXeXJtd3JvdWdodCBGbGFtZTtHbGFyZSBvZiB0aGUgVHlyYW50O0JhY2sgb2YgdGhlIE1hZCBNdXRpbmVlcjtCZWx0IG9mIHRoZSBNYWQgTXV0aW5lZXI7TGljaCBJbW1vcnRhbCBIZWFkIFBlcnZlcnNpb25zIG9mIHRoZSBCbG9vZHdob3JsO1NoZWFyaW5nIERlcG9zaXRpb24gUHJlbTtEYXJrIEZvcmVzdCBQdW5pc2hlciBCYWNrO1Rvcm1lbnRlZCBDcm93bjtGb3JjZSBvZiBLeWxpbiBUYWlsO1Rvcm1lbnRlZCBTdGFmZjtGb3J0dW5lcyBUb3V0IFByZW07SmFnZ2VkIEhvbm9yIEJyYWNlcjtMaW5lYWdlIG9mIHRoZSBTdG9ybWxvcmRzIC0gQmFjaztTaWdpbCBNYXNrIG9mIHRoZSBCbGFkZWtlZXBlcjtKdWdnZXJuYXV0IEFyY2FuYSBSZWQgQmxhZGVmb3JtIE9yaWdpbnM7SmFnZ2VkIEhvbm9yIExlZ3M7R2VuamkgU3dvcmQgUHJlbWl1bSBFZGl0aW9uIFNlcnJha3VyYSBTdHlsZTtKYWtpcm8gSW1tb3J0YWxzIEhlYWRzO0pha2lybyBJbW1vcnRhbCBXaW5ncztQeXJleGFlYyBGbG9lO0JhcmRpbmcgb2YgQ2hpbWVyaWMgUmFwcG9ydDtFbGRlciBDb252ZXJnZW5jZSBXaW5ncztFbGVtZW50YWwgQ2hpbWVyYSBXaW5ncztXaW5ncyBvZiBFbGRlciBDb252ZXJnZW5jZTtGaXNzdXJlZCBGbGlnaHQgLSBCYWNrO0JlbmV2b2xlbnQgQ29tcGFuaW9uIFYgMi4wO0RhcmsgQXJ0aXN0cnkgVGhyb3diYWNrO0NvdmVuYW50IG9mIHRoZSBEZXB0aHMgU3Bpcml0O0ZsYXNocG9pbnQgUHJvc2VseXRlIC0gQXJtcztGbGFzaHBvaW50IFByb3NlbHl0ZSAtIEhlYWQ7Rmxhc2hwb2ludCBQcm9zZWx5dGUgLSBPZmYtSGFuZDtGbGFzaHBvaW50IFByb3NlbHl0ZSAtIFNob3VsZGVyO0dvbGRlbiBEcmFjYSBNYXc7VG9tbyprYW4gSW5jYXJuYXRlIEFybW9yO1RvbW8qa2FuIEluY2FybmF0ZSBIb29kO0hvb2R3aW5rIEdsZWlwbmlyO1RvbW8qa2FuIEluY2FybmF0ZSBUYWlsO1RvbW8qa2FuIEluY2FybmF0ZSBBcmJhbGVzdDtBcmNhbmUgSW52ZXJ0ZXIgLSBCYWNrO0hlYWQgb2YgUG9ydGVudCBQYXlsb2FkO1NhaWxmaXNoIENvbW1hbmRvcyBNaXNjO0IuVS5TLlQuRS5SO0F0b21pYyBSYXkgVGhydXN0ZXJzIFByZW07SGVyYWxkIG9mIHRoZSBFbWJlciBFeWUgLSBBcm1vcjtIZXJhbGQgb2YgdGhlIEVtYmVyIEV5ZSAtIEJlbHQ7UmVtbmFudHMgb2YgQXNjZW5zaW9uO0hlcmFsZCBvZiB0aGUgRW1iZXIgRXllIC0gQnJ1c2g7QnJhY2VycyBvZiBBZW9ucztBbmNpZW50IENhZ2U7RmFjZWxlc3MgTWFkbmVzcztKZXdlbCBvZiBBZW9ucyBQcmVtO01hY2Ugb2YgQWVvbnM7TG9yZCBvZiBMdW1pbmFyaWVzIEVpZG9sb25zO1R3aXN0ZWQgTWFlbHN0cm9tIHdpdGggV29ybGQgQ2hhc20gQXJ0aWZhY3Q7TWFzdGVyIG9mIHRoZSBTZWFyaW5nIFBhdGggQXJtcztUdW5pYyBvZiB0aGUgV2FuZGVyaW5nIEZsYW1lO01hc3RlciBvZiB0aGUgU2VhcmluZyBQYXRoIEhlYWQ7TWFzdGVyIG9mIHRoZSBTZWFyaW5nIFBhdGggT2ZmLUhhbmQ7QXBvZ2VlIG9mIHRoZSBHdWFyZGlhbiBGbGFtZTtNYXN0ZXIgb2YgdGhlIFNlYXJpbmcgUGF0aCBXZWFwb247QXJtcyAgb2YgdGhlIFNoYXR0ZXJlZCBUYXJnZTtCZWxsb3dzIG9mIENyZWF0aW9uO01hc2sgb2YgdGhlIE1vbnVtZW50IG9mIFJ1aW47Rm9ybSBvZiB0aGUgTW9udW1lbnQgb2YgUnVpbjtWaXNlIG9mIENyZWF0aW9uO1N0b25lIE1vbmtleSBTcGlyaXRzIFYgMy4xO1BsYXRlZCBCcmFjZXJzIG9mIHRoZSBEZW1vbiBTdG9uZTtCZWx0IG9mIHRoZSBKYWRlIEdlbmVyYWw7TWFuZSBvZiB0aGUgRGVtb24gU3RvbmU7RW1hbmF0aW9ucyBvZiB0aGUgV29ybGRjb3JlIEdhcmJzO0phZGUgUmVja29uaW5nIFByZW07QXJtbGV0cyBvZiB0aGUgRWxkd3VybSBDcmVzdDtCZWx0IG9mIHRoZSBUaGlyZCBBd2FrZW5pbmc7SGVsbSBvZiB0aGUgRWxkd3VybSBDcmVzdDtCdXJuaW5nIFNoaWVsZCBvZiB0aGUgT3V0bGFuZCBSYXZhZ2VyO0tpbmRyZWQgb2YgdGhlIElyb24gRHJhZ29uIFYgMy4wO0FybW9yIG9mIHRoZSBPdXRsYW5kIFJhdmFnZXI7RGVtb24gRWRnZSBmb3IgREs7V3JhcHMgb2YgdGhlIFN0b3JtY2hhcmdlIERyYWdvb247UmVzaXN0aXZlIFBpbmZvbGQgUHJlbTtNYXNrIG9mIHRoZSBHYWx2YW5pemVkIFNwYXJrO0JlYXN0IG9mIHRoZSBEZWZlbmRlciBvZiBSdWluO1Nob3VsZGVycyBvZiBTa2Fyc25paztPcmIgb2YgRGVsaXZlcmFuY2U7Q292ZXJzIG9mIHRoZSBNZXJxdWVlbjtGbHV0dGVyaW5nIE1vcnRpcyBQcmVtO0Nyb3duIG9mIHRoZSBCcmlnaHRzaHJvdWQ7QmVsdCBvZiB0aGUgV2ludGVyIFJldmVuYW50O0RhcmtjbGF3IEVtaXNzYXJ5IEFybXM7Q3JpbXNvbiBHYXRlcyBvZiBOb3RobDtEYXJrY2xhdyBFbWlzc2FyeSBEcmVzcztOb3RobGljIEJ1cmRlbiBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzO0RhcmtjbGF3IEVtaXNzYXJ5IFN0YWZmO0RyZXNzIG9mIHRoZSBGYWVzaGFkZSBGbG93ZXI7V2luZ3Mgb2YgdGhlIEZhZXNoYWRlIEZsb3dlcjtUaGUgU3VuYnJlZXplIEJpcnRocmlnaHQ7Q3JpbXNvbiBIZWFydHMgb2YgTWlzcnVsZTtUaGUgRHVza2Jsb29tIFRyaWNrc3RlciBPZmYtSGFuZDtHb2xkZW4gQnJhY2VycyBvZiBGb3Jsb3JuIFByZWNpcGljZTtIYXJuZXNzIG9mIHRoZSBGb3Jnb3R0ZW4gVGFjdGljaWFuO0JlbHQgb2YgdGhlIEFydGlmIENvbnZlcnQ7SG9vZCBvZiB0aGUgVml6aWVyIEV4aWxlO01hbnRsZSBvZiB0aGUgU2FwcGhpcmUgU2hyb3VkO0dvbGRlbiBJY2UgQmxvc3NvbTtZdWxzYXJpYSpzIE1hbnRsZTtZdWxzYXJpYSpzIEdsYWNpZXIgUHJlbTtBcmNhbmEgQ3J5c3RhbCBNYWlkZW4gRnJvc3QgQXZhbGFuY2hlO1ByZWxhdGVzIEJyYWNlcnMgb2YgdGhlIFd5dmVybiBMZWdpb247Q2hhb3MgQXJiaXRlcjtPZGEgTm9idW5hZ2EgU2hvdWxkZXI7Q2hhb3MgRnVsY3J1bTtQZXJkaXRpb247RGlhYm9saWMgQXNwZWN0O0ljZXBsYWluIFJhdmFnZXIgU2hpZWxkO0ljZXBsYWluIFJhdmFnZXIgSG9ybjtCZWx0IG9mIENvbnRlc3RlZCBGYXRlO0dvbGRlbiBJbmZlcm5hbCBDaGllZnRhaW47V2FybG9yZCBvZiBIZWxsIEd1YXJkO0ljZXBsYWluIFJhdmFnZXIgVGFpbDtJbmZlcm5hbCBNZW5hY2U7QWdoYW5pbXMgQmFzaGVyIFByZW07U2FzaCBvZiB0aGUgUnVtcnVubmVyKnMgQ2Fycm9uYWRlO0VsaXhpciBvZiBEcmFnb25zIEJyZWF0aCBQcmVtO0hlYWQgb2YgdGhlIEljZWJyZXcgQW5nbGVyO1d5cm1icmV3IENvbm5vaXNzZXVyIEJhY2s7R2xvdmVzIG9mIHRoZSBMb2FkZWQgUHJvc3BlY3RzO1RyYXBwaW5ncyBvZiB0aGUgT2xkLVRpbWVycyAtIFdlYXBvbjtNYXJrIG9mIHRoZSBGaXJzdCBIdW50IEJlc3Rvd2VkO1RpbmVzIG9mIFR5YmFyYTtUcmFwcGluZ3Mgb2YgdGhlIE9sZC1UaW1lcnMgLSBIZWFkO0h1bnRlcnMgSG9hcmQ7VHJhcHBpbmdzIG9mIHRoZSBPbGQtVGltZXJzIC0gQXJtb3I7QnJhY2VyIG9mIHRoZSBCbG9vZGZvcmdlO1NoaWVsZCBvZiB0aGUgUHJpbWV2YWwgUHJlZGF0b3I7QmVsdCBvZiBIYXJ2ZXN0KnMgSG91bmQ7VHJpYmFsIFRlcnJvciBIZWFkZHJlc3M7VGhpcnN0IG9mIEV6dHpob2sgLSBPZmYtSGFuZDtGZWFzdCBvZiB0aGUgVW53aWxsaW5nIFNob3VsZGVycztUaGlyc3Qgb2YgRXp0emhvayBCbGFkZTtCZWx0IG9mIHRoZSBBcGV4IEV4cGxvcmVyO0ZpcmVzdGFydGVyIEdhcyBNYXNrO01hbnRhIE1hcmF1ZGVycyBNYW50YSBSYXk7R2xpZGVyIG9mIHRoZSBNYXJhdWRpbmcgUHlybztPcmlnaW4gb2YgdGhlIFVubWFraW5nO1NsdW1iZXJpbmcgVGVycm9yO01vbHRlbiBDbGF3IFByZW07TGl0dGxlIEJsaW5rIERhZ2dlcjtSYW1wYW50IE91dHJhZ2UgUHJlbTtNYW50bGUgb2YgdGhlIENpbmRlciBCYXJvbiBTdHlsZSAyO0F4ZSBvZiB0aGUgRW5kdXJpbmcgQ29uc2NyaXB0O0FlZ2lzIGFuZCBSb3NoYW4gU3QuIFZhbGVudGluZSBEYXk7T3Zlcmdyb3duIEVtYmxlbSBBZ2hhbmltIEVmZmVjdDtMaWdodG5pbmcgQmxpbmsgViAyLjA7VEktOSBCb3R0bGUgRWZmZWN0OzI1IGx2bCBwaW5nO0F1ZGlvIENvdW50ZG93bnMgU3BlbGxzO0VtaW5lbmNlIG9mIFJpc3R1bCBEZW55IDI7UmFuZG9tIEVtYmxlbTtUSS05IEV1bCBTY2VwdGVyIEVmZmVjdDtUSS05IEZvcmNlIFN0YWZmIEVmZmVjdDtUSS05IEZvdW50YWluIGx2bCAzIEVmZmVjdDtUaGUgSW50ZXJuYXRpb25hbCAyMDE5IFZlcnN1cyBTY3JlZW4gSUk7UGxhbmV0ZmFsbCBTdHVuIEVmZmVjdDtUSS05IFNoaXZhcyBFZmZlY3Q7QWdoYW5pbXMgTGFieXJpbnRoIFNoYWRlciBFZmZlY3Q7Uml2ZXIgVmlhbCBQaW5rO01pbmUgUmFkaXVzIDcwMjtUSS05IFJhZGlhbmNlIEVmZmVjdDtQdW1wa2luIFRyZWVzIFVQO1RJLTkgUGhhc2UgQm9vdHMgRWZmZWN0O1RJLTkgTWpvbGxuaXIgRWZmZWN0O1RJLTEwIE1la2FzbSBFZmZlY3Q7VEktOSBNZWthc20gRWZmZWN0O1RJLTkgTGV2ZWwgVXAgRWZmZWN0O0xhc3RoaXQgR29sZCAtIE5ldyBCbG9vbSAyMDE5O0lyb24gQnJhbmNoIEdHO1BlZGVzdGFsIFRoZSBGYWxsIE1ham9yIDIwMTYgRGlyZTtFbWVyYWxkIFNlYSBDdXJzb3IgUGFjaztXZWF0aGVyIFNwcmluZztUZXJyYWluIC0gVGhlIEtpbmdzIE5ldyBKb3VybmV5O0RyZWFkIFJldHJpYnV0aW9uIC0gQ2FwZSBBbHQ7RHJlYWQgUmV0cmlidXRpb24gLSBIZWFkd2VhciBBbHQ7QmxpZ2h0ZmFsbDtaZXVzIEdvbGRlbiBNZWdhcGFjaztXcmFpdGggS2luZyBBcmNhbmEgTWVnYVBhY2s7V2luZHJhbmdlciBBcmNhbmEgc3R5bGUgMSArIFdSIGltbW9ydGFsO1B1cHBldCBTdW1tb25lcjtQaXQgR3VhcmQgU2V0O1RyZWFudCBQcm90ZWN0b3IgTWVnYVBhY2s7VmlwZXIgTWVnYVBhY2s7TWlsbGlwZWRlIFNldDtFY2hvZXMgb2YgdGhlIEV5cmllIFYgMi4wO0Rpcmdlc3dvcm4gRHluYXN0eTtUaWRlaHVudGVyIE1lZ2FQYWNrO1Bvd2RlcnNsZWQgUm9va2VyeTtTdG9ybSBTcGlyaXQgTWVnYVBhY2s7U2xhcmsgTWVnYVBhY2sgTmV3O1NsYXJkYXIgTWVnYVBhY2sgc2V0O1NpbGVuY2VyIE1lZ2FQYWNrO091dHdvcmxkIERldm91dmVyIE1lZ2FQYWNrO0F1dGhvcml0eSBvZiB0aGUgSW1wZXJpc2hhYmxlIEdyYW5kIEhpZXJvcGhhbnQ7T21uaWtuaWdodCBNZWdhUGFjaztOeXggQXNzYXNzaW4gTWVnYVBhY2s7T2dyZSBNYWdpIEltbW9ydGFscyBBcmNhbmEgTWVnYVBhY2s7TmlnaHQgU3RhbGtlciBJbW1vcnRhbCBhbmQgUmVhcGVyIEtpc2lsZXYgTW9kTWFrZXIgTWVnYVBhY2s7TW9ua2V5IEtpbmcgQXJjYW5hIE1lZ2FQYWNrO01pcmFuYSBUSTEwIENvbGxlY3RvcnMgQ2FjaGUgTWVnYVBhY2s7THljYW4gS2lzaWxldiBNb2RNYWtlciBNZWdhUGFjaztHb2xkZW4gRGFyayBNYXcgSW5oaWJpdG8gYW5kIEdvbGRlbiBQcm9mYW5lIFVuaW9uIGFuZCBHb2xkZW4gRHJlYWQgUmVxdWlzaXRpb24gTGlmZXN0ZWFsZXIgSW1tb3J0YWxzIE1lZ2FwYWNrO0xlZ2lvbiBDb21tYW5kZXIgTW9kTWFrZXIgTWVnYVBhY2s7S3Vua2thIEltbW9ydGFscyBNZWdhUGFjaztGb3Jnb3R0ZW4gUmVuZWdhZGU7SmFraXJvIE1lZ2FQYWNrO1RoZSBTaGVlcCBTZXQ7RWFydGhzaGFrZXIgTWVnYVBhY2sgTmV3O0Rvb20gSW1tb3J0YWxzIE1lZ2FQYWNrO1BlcmNlcHRpb24gb2YgdGhlIEZpcnN0IExpZ2h0O0JyaXN0bGViYWNrIE1lZ2FQYWNrO0Nsb2Nrd2VyayBNZWdhUGFjaztDbGlua3ogTWVnYVBhY2s7UGVyaWxzIG9mIHRoZSBSZWQgQmFua3M7QnJvb2Rtb3RoZXIgTWVnYVBhY2s7QmVhc3RtYXN0ZXIgTWVnYVBhY2s7Q29zbWljIFdhbmRlcmVyO0FudGlNYWdlIFJFRCBNZWdhUGFjaztTaGF0dGVyYmxhc3QgU2V0OyAxMjN8fHw=