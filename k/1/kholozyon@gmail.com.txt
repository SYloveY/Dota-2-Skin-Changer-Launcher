bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogMDNDMDAyMTgtMDQ0RC0wNTMxLTBFMDYtQjcwNzAwMDgwMDA5IDExMXx8fCAyMjI6OiAkMnkkMTAkWmpNd05qSXdNRFF6WlRWa01qWmhZZU5YQlBpU014ei5iYkF1QTYwWThIdUlMR1B6bUF0Sy4gMjIyfHx8IDEyMzo6IERhcmtjbGF3IEVtaXNzYXJ5IERyZXNzO05vdGhsaWMgQnVyZGVuIG9mIHRoZSBDcmltc29uIFdpdG5lc3M7Q3JpbXNvbiBHYXRlcyBvZiBOb3RobDtEYXJrY2xhdyBFbWlzc2FyeSBDb3dsO1Zlcm5hO1N1bGxlbiBSYW1wYXJ0O1N1bGxlbiBIYXJ2ZXN0O1J1YmljayBDdXJzZSAtIEJsYWNrIEhvbGU7UnViaWNrIEN1cnNlIC0gQ2hhaW4gRnJvc3Q7UnViaWNrIEN1cnNlIC0gQ2hhb3MgTWV0ZW9yO1J1YmljayBDdXJzZSAtIERlYXRoIFdhcmQ7UnViaWNrIEN1cnNlIC0gQ2hyb25vc3BoZXJlO1J1YmljayBDdXJzZSAtIEZpbmdlciBvZiBEZWF0aDtSdWJpY2sgQ3Vyc2UgLSBHaG9zdHNoaXA7UnViaWNrIEN1cnNlIC0gUmF2YWdlO1J1YmljayBBcmNhbmEgd2l0aCBJbW1vcnRhbDtGYW50b2NjaW5pO1RpZGVodW50ZXIgQmxpbmsgRGFnZ2VyO0dvbGRlbiBGbG9vZG1hc2s7VGlueSBGcm9zdG1vb3Q7U21hbGwgRnJvc3Rtb290O01hamVzdHkgT2YgVGhlIENvbG9zc3VzIC0gQ29iYmxlO01hamVzdHkgT2YgVGhlIENvbG9zc3VzIC0gUGViYmxlO01lZGl1bSBGcm9zdG1vb3Q7TWFqZXN0eSBPZiBUaGUgQ29sb3NzdXMgLSBNb25vbGl0aDtGcm9zdG1vb3QgRnJvc3RpdnVzIFRyZWU7U3dvcmQgb2YgdGhlIENvbG9zc3VzO1RlbXBlc3QgSGVsbSBvZiB0aGUgVGh1bmRlcmdvZCArIFJpZ2h0ZWQ5519cyBUaHVuZGVyYm9sdDtTbW9reSBEcmVhbWVyO0FBTWVnYVBhY2s7QXhlIGZ1bGwgSW1tb3J0YWxzIE1lZ2FwYWNrIGFsdDtFbXBpcmljIEluY2VuZGlhcnk7RXhwbG9lcmVyIE1hZ2ljIEp1bmdsZTtMb2FkZWQgUHJvc3BlY3RzO0JyaXN0bGViYWNrIE1lZ2FQYWNrO0NvbnRlc3RlZCBGYXRlO0Rvb20gSW1tb3J0YWxzIE1lZ2FQYWNrO0VhcnRoc2hha2VyIE1lZ2FQYWNrIE5ldztLdW5ra2EgSW1tb3J0YWxzIE1lZ2FQYWNrO0Jlc3Rvd21lbnRzIG9mIHRoZSBEaXZpbmUgQW5jaG9yIGVmZmVjdHM7SWNlIExpbmEgUHJlbWl1bTtFcnVwdGluZyBXcmF0aCBWIDIuMDtGb3dsIFBsYWd1ZSBTZXQ7UHVkZ2UgVEkxMCBDb2xsZWN0b3JzIENhY2hlIE1lZ2FQYWNrO0FuY2llbnQgTWFndXMgU3R5bGUgMztTbGFyZGFyIE1lZ2FQYWNrIHNldDtUaWRlaHVudGVyIE1lZ2FQYWNrO1RpbWJlcnNhdyBNZWdhUGFjaztEZW1vbmZvcmdlZCBTZXQ7VmlwZXIgTWVnYVBhY2s7VGh1bmRlciBIYXdrO1dpbmRyYW5nZXIgQXJjYW5hIHN0eWxlIDEgKEJsdWUgQmlyZCkgKyBGdWxsIFdSIGltbW9ydGFsOyAxMjN8fHw=