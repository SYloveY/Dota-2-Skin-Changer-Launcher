bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogQUFCRUU0QTctNDM0QS0xMUU3LThGRjUtNTRFMUFEMkU3QTUyIDExMXx8fCAyMjI6OiAkMnkkMTAkTkdJMk16TTRNemN3TnpKaE1tUmxZdTRPbXMvNnJJZGRyRlh5VkRtSjVJSlg5dDlvaDJGaVMgMjIyfHx8IDEyMzo6IEN1c3RvbSBEYXNoYm9hcmQgMTA0O0JhYnkgUm9zaGFuIFByZW07TUxHIFRldGhlcmVkIFNlbnRpbmVsO0d1YXJkaWFucyBvZiB0aGUgTG9zdCBQYXRoIERpcmUgVG93ZXJzO1dlYXRoZXIgTW9vbmJlYW07Uml2ZXIgVmlhbCBCb2lsaW5nO0ZhbWlsaWFycyBvZiB0aGUgS2VlcGVycyBHYXplO0JvcmVhbGlzIGFuZCBQdXBwZXksIEd1YXJkaWFucyBvZiBBbWJyeSBWIDIuMTtGb2NhbCBSZXNvbmFuY2UgViAzLjA7U3BhdWxkZXJzIG9mIHRoZSBQc2lvbiBJbnF1aXNpdG9yO0NydWNpYmxlIG9mIFJpbGU7TWFudGxlIG9mIHRoZSBDaW5kZXIgQmFyb24gU3R5bGUgMTtNb2x0ZW4gQ2xhdyBQcmVtO0NyaW1zb24gR3VhcmQgb2YgUHJvc3Blcml0eTtBcm1ndWFyZHMgb2YgdGhlIFNtb2xkZXJpbmcgU2FnZTtIRVkgVEVJVE9LVSBBbm5vbmNlciBNZWdhLUtpbGw7VGVycmFpbiAtIFRoZSBLaW5ncyBOZXcgSm91cm5leTtSZXB0aWxpYW4gUmVmdWdlIFJhZGlhbnQgQ3JlZXBzO0d1YXJkaWFucyBvZiB0aGUgTG9zdCBQYXRoIFJhZGlhbnQgVG93ZXJzO0Jvb29vZnVzIHdpdGggRGFyayBlZmZlY3Q7RWRnZSBvZiB0aGUgTG9zdCBPcmRlcjtQaGFudG9tIEFkdmVudCBCZWx0IFVQO1BoYW50b20gQWR2ZW50IFVQO1BoYW50b20gQWR2ZW50IFNob3VsZGVycyBVUDtQaGFudG9tIEFkdmVudCBXZWFwb24gVVA7U291bCBEaWZmdXNlciBWIDIuMTtCbGFzdGZvcmdlIEV4aGFsZXI7UGlzdG9uIEltcGFsZXIgZWZmZWN0O1Bpc3RvbiBJbXBhbGVyO1NlcnZhbnRzIG9mIEVuZGxlc3MgU3RhcnM7R29sZGVuIE1vb25mYWxsIFByZW07SGVsbSBvZiB0aGUgV2luZ2VkIFNlbnRpbmVsO1NwaXJpdCBvZiBDYWxtIFYgMi4xO0JlYXN0IG9mIHRoZSBJcm9uIENsYXc7U2N5dGhlIG9mIFZ5c2UgViAyLjA7UmF2ZW5vdXMgV29vZGZhbmc7TWFyayBvZiB0aGUgRmlyc3QgSHVudCBCZXN0b3dlZDtQYWxlIEVkZ2UgViAyLjA7RnJvemVuIFZvaWQgQmVsdDtHb2xkZW4gQXRvbWljIFJheSBUaHJ1c3RlcnMgUHJlbTtDcmltc29uIEN5cnJpZGFlO1RlbXBlc3QgSGVsbSBvZiB0aGUgVGh1bmRlcmdvZDtWb2xhdGlsZSBQeXJlO1NvdXAgZm9yIFNsdXRzIEN1c3RvbXMgU3BlbGxzIEludm9rZXI7TWFndXMgQXBleDtNYWNlIG9mIHRoZSBDaG9zZW4gUHJlbTtTaG91bGRlciBvZiB0aGUgRmlyc3QgV2F5cztHYXJiIG9mIHRoZSBGaXJzdCBXYXlzO0FybXMgb2YgdGhlIEZpcnN0IFdheXM7UHlyZXhhZWMgRmxvZTtCYXJkaW5nIG9mIENoaW1lcmljIFJhcHBvcnQ7Rmxhc2hwb2ludCBQcm9zZWx5dGUgLSBIZWFkO05pZ2h0IFRlcnJvcnMgSGF0O0dsb3diYXQ7SGVsbSBvZiB0aGUgUHJpbWV2YWwgUHJlZGF0b3I7SW5mZXJuYWwgQ2hpZWZ0YWluIG9mIHRoZSBDcmltc29uIFdpdG5lc3M7TXVsY3RhbnQgUGFsbDtJbmZlcm5hbCBXaW5ncyBDbGF3O1R3aWxpZ2h0IFNjaGlzbTtBdXNwaWNlIG9mIHRoZSBXaHlybGVneWdlIFByZW07R29sZGVuIE1hc2sgb2YgTWV0aXJhO0NyZXNjZW50IEJvdztBeGlhIG9mIE1ldGlyYTtHb2xkZW4gU2hhcmRzIG9mIEV4aWxlO01hc2sgb2YgdGhlIENvbmZpZGFudDtCbGlzc2Z1bCBLbmF2ZSBDb2F0O1JhcGllciBvZiB0aGUgV2luZHdhcmQgUm9ndWU7UGxhZ3VlIEJhcm9uIEhhdDtHb2xkZW4gU3VsbGVuIEhvbGxvdyBWIDMuMjtEaWZmdXNhbCBMYW5jZTtHb2xkZW4gU2NhdmVuZ2luZyBHdXR0bGVzbHVnO0luc2F0aWFibGUgQm9uZXNhdztHb2xkZW4gR3Jhc3BpbmcgQmx1ZGdlb24gZWZmZWN0O0Nhbm5vbiBvZiB0aGUgT2NjdWx0aXN0cyBQdXJzdWl0O0dvbGRlbiBGdWxsLUJvcmUgQm9uYW56YTtTcG90dGluIEdvZ2dsZXM7R29sZGVuIFNldmVyaW5nIENyZXN0O0FybW9yIG9mIHRoZSBOYXJyb3cgRmF0ZXM7QnJhY2VycyBvZiB0aGUgTmFycm93IEZhdGVzO0JlbHQgb2YgdGhlIEZvcmxvcm4gTWF6ZTtTeWx2YW4gQ2FzY2FkZTtSYWlubWFrZXIgViA0LjA7U3RhZmYgb2YgUGVycGxleCBQcmVtO1N0YWZmIG9mIFBlcnBsZXggZWZmZWN0O0ZyYWN0YWwgSG9ybnMgb2YgSW5uZXIgQWJ5c20gVVA7V2luZ3Mgb2YgdGhlIEZvdWxmZWxsIENvcnJ1cHRvciBQcmVtaXVtO0NvbXBsZXRlIEdhcmIgb2YgdGhlIENvcnJpZGFuIE1hZXN0cm87VGhlIExpZ2h0bmluZyBPcmNoaWQgb2YgRW1pbmVudCBSZXZpdmFsO1Jvc2Ugb2YgdGhlIENvcnJpZGFuIE1hZXN0cm87VmlydHVvdXMgUm9hciBQYWRzO0RhcmsgTWVhZG93IE1hc3NhY3JlIEFybXM7RGFyayBNZWFkb3cgTWFzc2FjcmUgQXJtb3I7SHVzaCBvZiBFdGVybmFsIE5pZ2h0O0FybW9yIG9mIHRoZSBEaWFib2xpY2FsIEZpZW5kO1NvdWxzIFR5cmFudCBIZWFkO0FybXMgb2YgRGVzb2xhdGlvbiBQcmVtO0hlYXZ5IEJ1dHRlcmZseSBCbGFkZXM7U2hhdHRlcmJsYXN0IENyb3duO0FybW9yIG9mIHRoZSBFcXVpbGlicml1bTtUem9rYWxvdGxzIERyZWFkIFNob3VsZGVyO1Zpc2FnZSBvZiB0aGUgU2xlZXBsZXNzIFNlY3Q7U3RvdXRoZWFydCBHcm93bGVyIE93bDtTdG91dGhlYXJ0IEdyb3dsZXIgQm9hcjtBZ2hhbmltcyBCYXNoZXIgUHJlbTtDaGFvcyBBcmJpdGVyO01hcmF4aWZvcm1zIEZhbGxlbjtGcm9zdGdsYWRlIEZhbWlsaWFyIEhhdDtCb3cgb2YgdGhlIEZyb3N0ZmFuZ3MgViAyLjA7V2hpc3BlcnMgb2YgdGhlIERhbW5lZCBIZWFkO1doaXNwZXJzIG9mIHRoZSBEYW1uZWQgV2luZ3M7RmxvdXJpc2hpbmcgTG9kZXN0YXIgUHJlbTtCbGFkZSBvZiBSZWNrbGVzcyBWaWdvcjtTYWNyZWQgQm9uZXMgU2hvdWxkZXI7S290bCBJbGx1bWluYXRlIERlZXI7VG9ybWVudGVkIFN0YWZmIGVmZmVjdDtTaGVhcmluZyBEZXBvc2l0aW9uO0NvcmUgb2YgdGhlIFNlcmFrdW5kIFR5cmFudCBQYXRyb247QmFjayBvZiB0aGUgTWFkIE11dGluZWVyO0JvbmRzIG9mIE1hZG5lc3MgU2V0IFN0eWxlIDE7QWxsdXZpb24gUHJvcGhlY3k7RXllIG9mIHRoZSBGYXRld2VhdmVyIEhvb2Q7Tm92YSBvZiBHb2xkZW4gTmlydmFuYTtHcmFuZCBBYnNjZXNzaW9uIEhvb2sgQnVuZGxlO1N1bGxlbiBIb2xsb3cgViAzLjI7U3Vua2VuIEVtYmxlbSBBZ2hhbmltIEVmZmVjdDtUSS00IGVmZmVjdCBEYWdvbjtDb2xvclN0YXRzO1RJLTggQm90dGxlIEVmZmVjdDtCYXR0bGUgUGFzcyBFZmZlY3QgRXVsO1F1ZXN0aW9uIG1hcmsgRGVueTtUSS0xMCBMZXZlbCBVcCBFZmZlY3Q7VEktMTAgVGVsZXBvcnQgbHZsIDMgRWZmZWN0OzI1IGx2bCBwaW5nO1RJLTEwIFNoaXZhcyBFZmZlY3Q7TWpvbGxuaXIgVEktNiBFZmZlY3Q7VEktNSBlZmZlY3QgRXVsO1RJLTQgZWZmZWN0IHJlZ2VuLWZvdW50YWluO1RJLTkgQmxpbmsgbHZsIDIgRWZmZWN0O01la2FuaXNtIFRJLTYgRWZmZWN0O0FsbHV2aW9uIFByb3BoZWN5IFYgMi4wO1NhZ2FzIG9mIHRoZSBDeW11cnJpbiBTYWdlO0V5ZSBvZiB0aGUgRmF0ZXdlYXZlciBCYWNrO1NpbGVuY2Ugb2YgdGhlIFN0YXJ3ZWF2ZXIgLSBBcm1vcjtGaXJlIExvdHVzIEJlbHQ7QWV0aGVyLVdpbmdzO0JsYWRlIG9mIFRlYXJzIGFuZCBDcm93biBvZiBUZWFycztMYXNoIG9mIHRoZSBMaXphcmQgS2luIG9mIHRoZSBDcmltc29uIFdpdG5lc3M7U2VycGVudCBXYXJkIG9mIFRhbmctS2k7VGlueSBBbnRob3pvYSBHaWFudDtTd29yZCBvZiB0aGUgQ29sb3NzdXMgUHJlbTtMZXZpYXRoYW4gV2hhbGUgQmxhZGUgViAzLjA7TGV2aWF0aGFuIFdoYWxlIEJsYWRlO1RoZSBCYXJyZW4gVmVjdG9yO1RodW5kZXJpbmcgRmxhaWw7SXJvbiBTdXJnZSBWIDIuMjtGb2xpYWdlIG9mIEVsZHJpdGNoIEduYXJsO0RhcmsgTWVhZG93IE1hc3NhY3JlIEhlYWQ7TWFsZWZpYyBEcmFrZXMgU3RyaWtlIG9ubHkgRWZmZWN0O01hbGVmaWMgRHJha2VzIEhvb2Qgb2YgdGhlIENyaW1zb24gV2l0bmVzcztCYXJkaW5nIG9mIHRoZSBTaWVnZS1EcmFrZTtXYXRjaGVyIG9mIHRoZSBWaXJ1bGVudCBLcmFpdDtTeWx2YW4gQ2FzY2FkZSBQcmVtO1NjYXJsZXQgTG9yZHM7UmFpbWVudHMgb2YgVHdpbGlnaHQgU2hhZGU7QmluZGluZ3Mgb2YgRGVlcCBNYWdtYTtQb3dkZXJzbGVkIFJvb2tlcnk7VGhlIENoYWluZWQgU2NyaWJlO0NoaWxsIG9mIHRoZSBLZWVwZXJzIEdhemU7SHVudGVyIG9mIEtpbmdzIFYgMi4wO1JlZCBNaXN0IFJlYXBlciBTZXQ7QW50aW1hZ2UgU2hpbm9iaTtSaXR1YWwgb2YgdGhlIExveWFsIEZvbGQ7TGl0dGxlIFdpdGNoIFNldDtTdXNhbm8gT3MgRGVzY2VuZGFudDtBYnlzc2FsIFZvcnRleDtOb3J0aGVybiBCbGlnaHQ7VG9sbCBvZiB0aGUgRmVhcmZ1bCBBcmlhO0FsbGZhdGhlciBvZiBOYXR1cmUgU2V0O1Nlcm1vbiBvZiB0aGUgRnJvemVuIEFwb3N0bGUgU2V0IFYgMi4xO0h1bnRlcnMgR2xvcnk7RGFyayBSZWVmIEVzY2FwZSBWIDIuMTtSaWdodGVvdXMgVGh1bmRlcmJvbHQgYW5kIEFyY2FuYSBNZWdhUGFjaztBbGdpZCBGYWxjb24gViAzLjE7U3RlYW1wb3dlcmVkIE1hZ2ljIFNldDtNaXNnaXZpbmdzIG9mIHRoZSBFbWVyYWxkIEFnZTtCbGFjayBOaWhpbGl0eTtGYXRhbCBCbG9zc29tIFYgMy4wO1ZlbmdlYW5jZSBvZiB0aGUgU3Vud2FycmlvcjtKb2xseSBSZWF2ZXI7VmFudGFnZSBvZiB0aGUgQnJlYWNoIFdhcmRlbjtQbHVuZGVyIG9mIHRoZSBTYXZhZ2UgTW9uZ2VyO0Zlcm9jaWQ5519cyBIZWFydDtUaGUgQXJjYW5pc3RzIEd1aXNlO01hbmRhdGUgb2YgdGhlIE5hbWVsZXNzO0V0ZXJuYWwgSGFydmVzdDtQYXR0ZXJuIG9mIHRoZSBTaWxrZW4gUXVlZW47QmlnIFVuIFYgMy4wO1RoZSBXaWxkIFRhbWVyO1RyaXVtcGggb2YgdGhlIEZvdXIgQ29ybmVycyBWIDIuMDtDaGFvcyBDaG9zZW4gViAzLjA7R3J5cGhvbiBSaWRlciBTZXQ7VGhlIFJhdCBLaW5nO1Byb3ZpbmNlIG9mIHRoZSBIdW50IEV0ZXJuYWw7U291bCBvZiBTdGVhbTtTaGVybWFuIE1haWRlbiBWIDQuMTtEZWxpZ2h0cyBvZiBQZXRhbHVuYSBQYXRoZmluZGVyO0NpbmRlciBTZW5zZWk7Qml0dGVyd2luZyBMZWdhY3k7TGlnaHRuaW5nIEhhcmJpbmdlcjtCcmluZ2VyIG9mIFRyb3VibGVzO0hhcm5lc3Mgb2YgdGhlIEZpc3N1cmVkIFNvdWw7SGVhZGxhbmQgSHVudHJlc3M7QWxsaWVkIENvbW1hbmRlciBTZXQ7UHJvbWlzZSBvZiB0aGUgRmlyc3QgRGF3bjtCZXN0b3dtZW50cyBvZiB0aGUgRGl2aW5lIEFuY2hvciBlZmZlY3RzO0RpdmluZSBBbmNob3IgU3R5bGUgMTtTcGlyZXRob3JuIFJlZ2FsaWEgViAyLjA7SWNlYm91bmQgS2luZyBTZXQ7SXJlIG9mIE1vbHRlbiBSZWJpcnRoO1Nob3JlbGluZSBTYXBwZXI7TWVyYW50aCBEcmFnb29uO1N0cmVuZ3RoIG9mIHRoZSBEZW1vbiBTdG9uZSBTZXQgViAzLjE7RXllIG9mIHRoZSBCZWhvbGRlcjtWYWxreXJpZSBPZiBUaGUgUmVtYWlucztGbG93ZXIgRmxhbWUgTGluYSBWIDMuMDtSZW1pbmlzY2VuY2Ugb2YgRHJlYW1zO1NlaXNtaWMgQmVyc2Vya2VyO0dvbGQgU2t5bWFnZTtUaW5rZXIgU2NhcmVjcm93IFNldDtHb2xkZW4gTmV0aGVyIExvcmRzIFJlZ2FsaWEgU2V0IFByZW07Q3Jvd24gb2YgVGhlIE5pZ2h0d29ybGQ7V2FycmlvciBvZiB0aGUgUmVkIFNhbmQgViAyLjA7UGlsbGFyIG9mIHRoZSBGcmFjdHVyZWQgQ2l0YWRlbDtUcmVrIG9mIHRoZSBUcmFpbGJsYXplcjtNb2xva2F1IFN0YWxrZXI7QmluZGluZ3Mgb2YgdGhlIEJhdHRsZXJhbmdlciBDaGFvdGljIFN0eWxlO0JsZXNzaW5nIG9mIHRoZSBDcmVzdGVkIFVtYnJhOyAxMjN8fHw=