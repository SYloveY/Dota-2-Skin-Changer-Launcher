bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogQUFCRUU0QTctNDM0QS0xMUU3LThGRjUtNTRFMUFEMkU3QTUyIDExMXx8fCAyMjI6OiAkMnkkMTAkTkdJMk16TTRNemN3TnpKaE1tUmxZdTRPbXMvNnJJZGRyRlh5VkRtSjVJSlg5dDlvaDJGaVMgMjIyfHx8IDEyMzo6IEN1c3RvbSBEYXNoYm9hcmQgMTA0O0RvdGEgMiBTY3JlZW47QmFieSBSb3NoYW4gUHJlbTtNTEcgVGV0aGVyZWQgU2VudGluZWw7R3VhcmRpYW5zIG9mIHRoZSBMb3N0IFBhdGggRGlyZSBUb3dlcnM7V2VhdGhlciBNb29uYmVhbTtSaXZlciBWaWFsIEJvaWxpbmc7RmFtaWxpYXJzIG9mIHRoZSBLZWVwZXJzIEdhemU7Qm9yZWFsaXMgYW5kIFB1cHBleSwgR3VhcmRpYW5zIG9mIEFtYnJ5IFYgMi4xO0ZvY2FsIFJlc29uYW5jZSBWIDMuMDtDaW5kZXIgU2Vuc2VpIE9mZiBIYW5kIFdlYXBvbjtSYXBpZXIgb2YgdGhlIEJ1cm5pbmcgR29kO0NpbmRlciBTZW5zZWkgU3R5bGU7U3BhdWxkZXJzIG9mIHRoZSBQc2lvbiBJbnF1aXNpdG9yO0NydWNpYmxlIG9mIFJpbGU7TWFudGxlIG9mIHRoZSBDaW5kZXIgQmFyb24gU3R5bGUgMTtNb2x0ZW4gQ2xhdyBQcmVtO0NyaW1zb24gR3VhcmQgb2YgUHJvc3Blcml0eTtBcm1ndWFyZHMgb2YgdGhlIFNtb2xkZXJpbmcgU2FnZTtEb25iYXNzIEN1cCBIVUQ7SEVZIFRFSVRPS1UgQW5ub25jZXIgTWVnYS1LaWxsO1RlcnJhaW4gLSBUaGUgS2luZ3MgTmV3IEpvdXJuZXk7UmVwdGlsaWFuIFJlZnVnZSBSYWRpYW50IENyZWVwcztHdWFyZGlhbnMgb2YgdGhlIExvc3QgUGF0aCBSYWRpYW50IFRvd2VycztCb29vb2Z1cyB3aXRoIERhcmsgZWZmZWN0O0VtaW5lbmNlIG9mIFJpc3R1bCBEZW55IDI7RXVscyBTY2VwdGVyIFRJLTYgRWZmZWN0O0JsaW5rIERhZ2dlciBsdmwgMiBUSS02IEVmZmVjdDtPdmVyZ3Jvd24gRW1ibGVtIEFnaGFuaW0gRWZmZWN0O0VkZ2Ugb2YgdGhlIExvc3QgT3JkZXI7UGhhbnRvbSBBZHZlbnQgQmVsdCBVUDtQaGFudG9tIEFkdmVudCBVUDtQaGFudG9tIEFkdmVudCBTaG91bGRlcnMgVVA7UGhhbnRvbSBBZHZlbnQgV2VhcG9uIFVQO1NvdWwgRGlmZnVzZXIgViAyLjE7Qmxhc3Rmb3JnZSBFeGhhbGVyO1Bpc3RvbiBJbXBhbGVyIGVmZmVjdDtQaXN0b24gSW1wYWxlcjtTZXJ2YW50cyBvZiBFbmRsZXNzIFN0YXJzO0dvbGRlbiBNb29uZmFsbCBQcmVtO0hlbG0gb2YgdGhlIFdpbmdlZCBTZW50aW5lbDtTcGlyaXQgb2YgQ2FsbSBWIDIuMTtCZWFzdCBvZiB0aGUgSXJvbiBDbGF3O0JsYWNrc2hpZWxkIFByb3RvZHJvbmUgSGVsbTtCbGFja3NoaWVsZCBQcm90b2Ryb25lIE1pc3NpbGUgTGF1bmNoZXI7U2N5dGhlIG9mIFZ5c2UgViAyLjA7UmF2ZW5vdXMgV29vZGZhbmc7TGVnYWN5IG9mIHRoZSBGYWxsZW4gTGVnaW9uO01hcmsgb2YgdGhlIEZpcnN0IEh1bnQgQmVzdG93ZWQ7UGFsZSBFZGdlIFYgMi4wO0Zyb3plbiBWb2lkIEJlbHQ7VGltZWJyZWFrZXIgUHJlbTtHb2xkZW4gQXRvbWljIFJheSBUaHJ1c3RlcnMgUHJlbTtDcmltc29uIEN5cnJpZGFlO1RlbXBlc3QgSGVsbSBvZiB0aGUgVGh1bmRlcmdvZDtWb2xhdGlsZSBQeXJlO1NvdXAgZm9yIFNsdXRzIEN1c3RvbXMgU3BlbGxzIEludm9rZXI7TWFndXMgQXBleDtNYWNlIG9mIHRoZSBDaG9zZW4gUHJlbTtTaG91bGRlciBvZiB0aGUgRmlyc3QgV2F5cztHYXJiIG9mIHRoZSBGaXJzdCBXYXlzO0FybXMgb2YgdGhlIEZpcnN0IFdheXM7UHlyZXhhZWMgRmxvZTtCYXJkaW5nIG9mIENoaW1lcmljIFJhcHBvcnQ7Rmxhc2hwb2ludCBQcm9zZWx5dGUgLSBIZWFkO0JsYWRlIG9mIFJlY2tsZXNzIFZpZ29yO0FybWxldCBvZiBSZWNrbGVzcyBWaWdvcjtOaWdodCBUZXJyb3JzIEhhdDtHbG93YmF0O0Jsb29kc3RvbmUgQmxhZGUgUGFjaztIZWxtIG9mIHRoZSBQcmltZXZhbCBQcmVkYXRvcjtJbmZlcm5hbCBDaGllZnRhaW4gb2YgdGhlIENyaW1zb24gV2l0bmVzcztNdWxjdGFudCBQYWxsO0luZmVybmFsIFdpbmdzIENsYXc7VHdpbGlnaHQgU2NoaXNtO0F1c3BpY2Ugb2YgdGhlIFdoeXJsZWd5Z2UgUHJlbTtIZWFkcyBvZiB0aGUgR3JleSBXYXN0ZXM7Q2x1YiBvZiBQYWd1cztHb2xkZW4gTWFzayBvZiBNZXRpcmE7Q3Jlc2NlbnQgQm93O0F4aWEgb2YgTWV0aXJhO0dvbGRlbiBTaGFyZHMgb2YgRXhpbGU7TWFzayBvZiB0aGUgQ29uZmlkYW50O0JsaXNzZnVsIEtuYXZlIENvYXQ7UmFwaWVyIG9mIHRoZSBXaW5kd2FyZCBSb2d1ZTtXaWdodHMgZnJvbSB0aGUgR2xvb207U2hhdHRlcmJsYXN0IENyb3duO1RhaWwgb2YgdGhlIEVxdWlsaWJyaXVtO0FybW9yIG9mIHRoZSBFcXVpbGlicml1bTtTcGlyZXMgb2YgdGhlIFByb3BoZXQgRm9yZXRvbGQ7SW9sbyBXaXNwIFN0eWxlIDE7UGxhZ3VlIEJhcm9uIEhhdDtHb2xkZW4gU3VsbGVuIEhvbGxvdyBWIDMuMjtEaWZmdXNhbCBMYW5jZTtHb2xkZW4gU2NhdmVuZ2luZyBHdXR0bGVzbHVnO0luc2F0aWFibGUgQm9uZXNhdztHb2xkZW4gR3Jhc3BpbmcgQmx1ZGdlb24gZWZmZWN0O0Nhbm5vbiBvZiB0aGUgT2NjdWx0aXN0cyBQdXJzdWl0O0dvbGRlbiBGdWxsLUJvcmUgQm9uYW56YTtTcG90dGluIEdvZ2dsZXM7R29sZGVuIFNldmVyaW5nIENyZXN0O0FybW9yIG9mIHRoZSBOYXJyb3cgRmF0ZXM7QnJhY2VycyBvZiB0aGUgTmFycm93IEZhdGVzO0JlbHQgb2YgdGhlIEZvcmxvcm4gTWF6ZTtTeWx2YW4gQ2FzY2FkZTtSYWlubWFrZXIgViA0LjA7U3RhZmYgb2YgUGVycGxleCBQcmVtO1N0YWZmIG9mIFBlcnBsZXggZWZmZWN0O0ZyYWN0YWwgSG9ybnMgb2YgSW5uZXIgQWJ5c20gVVA7V2luZ3Mgb2YgdGhlIEZvdWxmZWxsIENvcnJ1cHRvciBQcmVtaXVtO0NvbXBsZXRlIEdhcmIgb2YgdGhlIENvcnJpZGFuIE1hZXN0cm87VGhlIExpZ2h0bmluZyBPcmNoaWQgb2YgRW1pbmVudCBSZXZpdmFsO1Jvc2Ugb2YgdGhlIENvcnJpZGFuIE1hZXN0cm87VmlydHVvdXMgUm9hciBQYWRzO0dvbGRlbiBQYWxlIE1hdXNvbGV1bTtEYXJrIE1lYWRvdyBNYXNzYWNyZSBBcm1zO0RhcmsgTWVhZG93IE1hc3NhY3JlIEFybW9yO0h1c2ggb2YgRXRlcm5hbCBOaWdodDtBcm1vciBvZiB0aGUgRGlhYm9saWNhbCBGaWVuZDtTb3VscyBUeXJhbnQgSGVhZDtBcm1zIG9mIERlc29sYXRpb24gUHJlbTtOb21hZCBvZiB0aGUgQnVybmluZyBEZWNyZWU7Q3JpbXNvbiBCZWFzdCBWIDMuMDtDdW5uaW5nIENvcnNhaXI7U2NhcmxldCBMb3JkcztSYWltZW50cyBvZiBUd2lsaWdodCBTaGFkZTtCaW5kaW5ncyBvZiBEZWVwIE1hZ21hO1Bvd2RlcnNsZWQgUm9va2VyeTtUaGUgQ2hhaW5lZCBTY3JpYmU7Q2hpbGwgb2YgdGhlIEtlZXBlcnMgR2F6ZTtIdW50ZXIgb2YgS2luZ3MgViAyLjA7UmVkIE1pc3QgUmVhcGVyIFNldDtBbnRpbWFnZSBTaGlub2JpO1JpdHVhbCBvZiB0aGUgTG95YWwgRm9sZDtMaXR0bGUgV2l0Y2ggU2V0O1N1c2FubyBPcyBEZXNjZW5kYW50O0FieXNzYWwgVm9ydGV4O05vcnRoZXJuIEJsaWdodDtUb2xsIG9mIHRoZSBGZWFyZnVsIEFyaWE7QWxsZmF0aGVyIG9mIE5hdHVyZSBTZXQ7RXJyYW50IFNvbGRpZXI7U2VybW9uIG9mIHRoZSBGcm96ZW4gQXBvc3RsZSBTZXQgViAyLjE7QmV3aXRjaGluZyBGbGFyZSBWIDIuMDtIdW50ZXJzIEdsb3J5O0RhcmsgUmVlZiBFc2NhcGUgViAyLjE7UmlnaHRlb3VzIFRodW5kZXJib2x0IGFuZCBBcmNhbmEgTWVnYVBhY2s7QWxnaWQgRmFsY29uIFYgMy4xO1N0ZWFtcG93ZXJlZCBNYWdpYyBTZXQ7TWlzZ2l2aW5ncyBvZiB0aGUgRW1lcmFsZCBBZ2U7QmxhY2sgTmloaWxpdHk7RmF0YWwgQmxvc3NvbSBWIDMuMDtBcG9zdGxlIG9mIERlY2F5IFYgMi4xO1ZlbmdlYW5jZSBvZiB0aGUgU3Vud2FycmlvcjtKb2xseSBSZWF2ZXI7VmFudGFnZSBvZiB0aGUgQnJlYWNoIFdhcmRlbjtBcm1hdHVyZSBvZiB0aGUgQmVsbGlnZXJlbnQgUmFtIFJlZDtQbHVuZGVyIG9mIHRoZSBTYXZhZ2UgTW9uZ2VyO0Zlcm9jaWQ5519cyBIZWFydDtCaW5kaW5ncyBvZiB0aGUgQmF0dGxlcmFuZ2VyO1RoZSBBcmNhbmlzdHMgR3Vpc2U7TWFuZGF0ZSBvZiB0aGUgTmFtZWxlc3M7RXRlcm5hbCBIYXJ2ZXN0OyAxMjN8fHw=