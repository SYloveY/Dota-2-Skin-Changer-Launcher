bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogIDExMXx8fCAyMjI6OiAkMnkkMTAkTnpZMU9UUmpNVFV5TURKa01EWXdOLlFXZjBsUEUvYjN4SU5QSkowR0IwYldlRTZJUGhOVFcgMjIyfHx8IDEyMzo6IEhlYXZ5IEJhcmJlZCBBcm1zO0JhcmJhcm91cyBCbGFkZXMgTWFzaztHYWxsb3dzIFVuZGVyc3R1ZHkgQmFjaztHYWxsb3dzIFVuZGVyc3R1ZHkgU2tpcnQ7TWFzayBvZiB0aGUgV2VlcGluZyBCZWFzdDtUaGlyc3Qgb2YgRXp0emhvayAtIE9mZi1IYW5kO0Jsb29kc3RvbmUgQmxhZGU7R29sZGVuIEdyZWV2aWw7RHJhZ29uIFdhcmQ7SGVsbGZpcmUgSW5zdXJnZW50IEFybXM7QmFjayBvZiB0aGUgU2FuZ3VpbmUgU3BlY3RydW07Q29hdCBvZiB0aGUgU2NhcmxldCBSYXZlbjtCYXJiYXJvdXMgQmxhZGVzIEJhY2s7QmFyYmFyb3VzIEJsYWRlcyBXZWFwb247VGhpcnN0IG9mIEV6dHpob2sgQmxhZGU7U2hvdWxkZXJzIG9mIHRoZSBTYWNyaWZpY2lhbCBTZXJwZW50O0dhdW50bGV0cyBvZiB0aGUgV2VlcGluZyBCZWFzdDtBcm1zIG9mIHRoZSBTYWNyaWZpY2lhbCBTZXJwZW50O0R1c2tsaWdodCBDcmVzdDtGaW50YWlsIFJlZWYgS3l0ZTtTY291cmdlIG9mIHRoZSBzYWNyZWQgZ3JvdmUgT2ZmLUhhbmQ7QXJtb3Igb2YgdGhlIFdpbmdlZCBTZW50aW5lbDtMaW5lYWdlIEJsYWRlIG9mIHRoZSBSYWlkZm9yZ2VkIFJpZGVyO1Njb3VyZ2Ugb2YgdGhlIHNhY3JlZCBncm92ZSBXZWFwb247TGluYSBBbWJlciBRdWVlbiBCZWx0O0dsb3J5IG9mIHRoZSBFbGRlcmZsYW1lIC0gSGVhZDtFcGF1bGV0dGVzIG9mIHRoZSBTY29yY2hpbmcgUHJpbmNlc3M7QXNzYXNzaW5hdGlvbiBvZiBEYXJrIEZlYXRoZXIgQmFjaztCZWx0IG9mIHRoZSBMaWZ0ZWQgVmVpbDtBc3Nhc3NpbmF0aW9uIG9mIERhcmsgRmVhdGhlciBIZWFkO0FybW9yIG9mIENydWVsIFJlcHJpc2FsO0dsb29tYmxhZGU7U291bCBDb3JwdWxlbmNlIC0gQXJtcztIb3JucyBvZiB0aGUgRGlhYm9saWNhbCBGaWVuZDtTb3VsIENvcnB1bGVuY2UgLSBTaG91bGRlcjtTd2luZSBQb3dkZXIgQmFycmVsO0NvYXQgb2YgdGhlIFBvd2RlcmtlZyBQYXRyb2w7UGlyYXRlIG9mIFRyZWFzdXJlKnMgQmlnaHQgTWQ5519bnQ7UGlyYXRlIG9mIFRyZWFzdXJlKnMgQmlnaHQgU2hvdWxkZXI7UGlyYXRlIG9mIFRyZWFzdXJlKnMgQmlnaHQgV2VhcG9uO0FybSBvZiB0aGUgRHJhZ29uKnMgRGlzY2lwbGU7QmVsdCBvZiB0aGUgRHJhZ29uKnMgRGlzY2lwbGU7RmFjZWxlc3MgRGVhdGggLSBIZWFkO0ZhY2VsZXNzIERlYXRoIC0gT2ZmLUhhbmQ7U2hvdWxkZXJzIG9mIHRoZSBTdXJ2aXZvcjtGYWNlbGVzcyBEZWF0aCAtIFdlYXBvbjsgMTIzfHx8