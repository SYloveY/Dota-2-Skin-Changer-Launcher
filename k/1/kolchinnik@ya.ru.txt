bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogMDMwMDAyMDAtMDQwMC0wNTAwLTAwMDYtMDAwNzAwMDgwMDA5IDExMXx8fCAyMjI6OiAkMnkkMTAkTWpBd09UUTVNemsxWm1JMk5EZzRaLlpzZGJKTHNadk0wZ05FM3Q4RVI5Ump4WWFSWlhRMW0gMjIyfHx8IDEyMzo6IFF1ZWVuIG9mIHRoZSBKYWNrIEJvbWJlcjtNYXNrIG9mIHRoZSBCbG9vZGZvcmdlO09mZi1IYW5kIFdlYXBvbiBvZiB0aGUgQmxvb2Rmb3JnZTtQaXN0b24gSW1wYWxlcjtCbGFzdGZvcmdlIEV4aGFsZXI7TWFuaWFzIE1hc2sgUHJlbTtCcmFjZXJzIG9mIHRoZSBDYXZlcm4gTHVtaW5hcjtBcm1zIG9mIEZvcmdvdHRlbiBFcG9jaDtHb2xkZW4gR3JhdmVsbWF3O1JhcGllcnMgb2YgdGhlIEJ1cm5pbmcgR29kIFYgMy4xO0VpZGVsb24gb2YgVHdpc3RlZCBNYWVsc3Ryb207Rmxhc2hwb2ludCBQcm9zZWx5dGUgLSBIZWFkO01hZ3VzIEFwZXg7Q2FwZSBvZiBBcmNhbmUgQXJ0aXN0cnk7U2xlZXZlcyBvZiB0aGUgQmxhY2tndWFyZCBNYWd1cztCZWx0IG9mIENhZGVuemEgTWFnaWMgTWFzdGVyO0hvb2Qgb2YgdGhlIERpdmluZSBTb3Jyb3cgViAzLjE7UHlyZXhhZWMgRmxvZTtUaGUgV2FyZCBvZiBPZG9jb2VsZXVzO0ltYWdlIG9mIFNlYWJvcm5lIFJlcHJpc2FsO0luZmVybmFsIFdpbmdzO1NoYXJkcyBvZiB0aGUgTWFsaWduYW50IENvcnJ1cHRpb247U2NlcHRlciBvZiB0aGUgR3J1ZXNvbWUgRW1icmFjZTtDdXJzZSBvZiB0aGUgTmV3IFNlYXNvbiBWIDIuMTtCbGFkZSBvZiBUZWFycyBhbmQgQ3Jvd24gb2YgVGVhcnM7U2xhc2hpbmcgUXVpY2tzbGljZXI7Q2FsbCBvZiB0aGUgRGVuZHJvY2hyb247QXVzcGljZSBvZiB0aGUgV2h5cmxlZ3lnZSBQcmVtO0FsbHV2aW9uIFByb3BoZWN5O0dvbGRlbiBTaGFyZHMgb2YgRXhpbGU7SGVhcnQgb2YgdGhlIEluYXVzcGljaWQ5519cyBBYnlzcztCbGFja2dhdGUgU2VudGluZWwgQmFjaztCbGFja2dhdGUgU2VudGluZWwgSGVhZDtCbGlzc2Z1bCBLbmF2ZSBIYXQ7Qmxpc3NmdWwgS25hdmUgQ29hdDtSYXBpZXIgb2YgdGhlIFdpbmR3YXJkIFJvZ3VlO0dvbGRlbiBTY2F2ZW5naW5nIEd1dHRsZXNsdWc7R3JhbmQgQWJzY2Vzc2lvbiBIb29rIEJ1bmRsZTtEaXJlY291cnQgSmVzdGVyIENhcDtFbWluZW5jZSBvZiBSaXN0dWwgS25pZmUgQXR0YWNrO1RoZSBCYXJyZW4gVmVjdG9yO1NvdWxzIFR5cmFudCBIZWFkO0FybXMgb2YgRGVzb2xhdGlvbiBQcmVtO0h1c2ggb2YgRXRlcm5hbCBOaWdodDtHb2xkZW4gR3Jhc3BpbmcgQmx1ZGdlb24gZWZmZWN0O1dhdmVjdXR0ZXI7SG9vZCBvZiB0aGUgQWJ5c3NhbCBBcm1zO1NoZWxsIG9mIHRoZSBVbWl6YXIgQ3Jhd2xlcjtUaGUgR29sZGVuIEJhcmIgb2YgU2thZGk7UGFsZSBFZGdlIFYgMi4wO0dvbGRlbiBGdWxsLUJvcmUgQm9uYW56YTtDYW5ub24gb2YgdGhlIE9jY3VsdGlzdHMgUHVyc3VpdDtCcmFjZXJzIG9mIHRoZSBBcmRhbGFuIEludGVyZGljdG9yO0lyb24gU3VyZ2UgViAyLjI7VGh1bmRlcmluZyBGbGFpbDtSb3NlIG9mIHRoZSBDb3JyaWRhbiBNYWVzdHJvO0JvbWJ0cmFpbHMgYW5kIEJvb21zdGlja3MgU3F1ZWU7Qm9tYnRyYWlscyBhbmQgQm9vbXN0aWNrcyBTcGxlZW47Qm9tYnRyYWlscyBhbmQgQm9vbXN0aWNrcyBTcG9vbjtCb21idHJhaWxzIGFuZCBCb29tc3RpY2tzIENhcnQ7UGFjaHlkZXJtIFBvd2RlcndhZ29uIFdlYXBvbjtNYWplc3R5IE9mIFRoZSBDb2xvc3N1cyAtIENvYmJsZTtQbGF0aW5nIG9mIHRoZSBOZXRoZXJzd2FybSBWYW5ndWFyZDtNYWxlZmljIERyYWtlcyBIb29kIG9mIHRoZSBDcmltc29uIFdpdG5lc3M7TWFsZWZpYyBEcmFrZXMgU3RyaWtlIG9ubHkgRWZmZWN0O1RlbXBlc3QgSGVsbSBvZiB0aGUgVGh1bmRlcmdvZDtBZWdpcyBhbmQgUm9zaGFuIFN0LiBWYWxlbnRpbmUgRGF5O0VtYmxlbSBvZiB0aGUgQ3J5c3RhbCBFY2hlbG9uIEFnaGFuaW0gRWZmZWN0O0JsaW5rIERhZ2dlciBsdmwgMSBUSS02IEVmZmVjdDtUSS0xMCBCb3R0bGUgRWZmZWN0OzI1IGx2bCBwaW5nO0NvbG9yU3RhdHM7Q2F2ZXJuaXRlIFJhZGlhbnQgQ3JlZXBzO0NhdmVybml0ZSBEaXJlIENyZWVwcztUSS01IGVmZmVjdCBEYWdvbjtUSS05IFNlYXNvbmFsIENyZWVwIERlbnkgRWZmZWN0O1RJLTggRXVsIEVmZmVjdDtUSS04IEZvdXJjZSBTdGFmZiBFZmZlY3Q7VEktOCBGb3VudGFpbiBsdmwgMiBFZmZlY3Q7UGVkZXN0YWwgVGhlIEZhbGwgTWFqb3IgMjAxNiBSYWRpYW50O0lyb24gQnJhbmNoIEdHO0xhc3RoaXQgR29sZCAtIE5ldyBCbG9vbSAyMDE5O0xldmVsVXAgVEktNiBFZmZlY3Q7TWpvbGxuaXIgVEktNiBFZmZlY3Q7UGhhc2UgQm9vdHMgVEktNiBFZmZlY3Q7UHVtcGtpbiBUcmVlcyBVUDtSYWRpYW5jZSBUSS02IEVmZmVjdDtNaW5lIFJhZGl1cyA3MDI7VGktOSBSb3NoYW47VEktOCBTaGl2YXMgRWZmZWN0O0thcHBhIFNpbGVuY2U7VEktNSBlZmZlY3QgVGVsZXBvcnQ7R3VhcmRpYW5zIG9mIHRoZSBMb3N0IFBhdGggRGlyZSBUb3dlcnM7R3VhcmRpYW5zIG9mIHRoZSBMb3N0IFBhdGggUmFkaWFudCBUb3dlcnM7TGlldXRlbmFudCBTcXVhd2tpbnMgUm93Ym9hdDtEQUMgMjAxNSBDaGFvcyBLbmlnaHQgQ3Vyc29yIFBhY2s7V2VhdGhlciBTaXJvY2NvO1RlcnJhaW4gLSBEZXNlcnQ7TWFyayBvZiB0aGUgTWlzdHJhbCBGaWVuZCBWIDIuMTtCaWcgVW4gViAzLjA7QW5jaWVudCBBcHBhcml0aW9uIENoaW5hIE1vZGVsO0FudGltYWdlIFNoaW5vYmk7VGltZSBXYW5kZXJlcjtSZWQgTWlzdCBSZWFwZXIgU2V0O0tvbWVpamkgS29pc2hpIDIgZm9yIEJhbmUgYnkgUGF0Y2hvdWxpIEtub3dsZWRnZTtNYXJhdWRlciBvZiB0aGUgQ2hhb3MgV2FzdGVzO0JvdW50eSBIdW50ZXIgTWFuaWFjIFNldDtCcmV3IEpvdXN0aW5nIFBhbmRhIGFuZCBEb25rZXkgS29uZztQb2lzb24gQnJvb2Rtb3RoZXI7UmVsZW50bGVzcyBXYXJicmluZ2VyIFYgMy4wO0dyeXBob24gUmlkZXIgU2V0O0JhcnJlbiBTdXJ2aXZvciBWIDIuMDtQdXJwbGUgRmlyZSBDbGlua3ogRnVuIE1vZCBWIDMuMDtUaGUgSXJvbiBQaW9uZWVyO0JsdWVoZWFydCBTb3ZlcmVpZ24gViAyLjA7Rm9yZ290dGVuIFRhY3RpY2lhbjtTYWNjaGFyaW5lIFNhYm90ZXVyO0RlbGlnaHRzIG9mIFBldGFsdW5hIFBhdGhmaW5kZXI7Qmxvb2R5IEJyaWRlO0xpZ2h0bmluZyBIYXJiaW5nZXI7RGVhdGggQmxvc3NvbSBTZXQ7QW52aWwgb2YgdGhlIEVhcnRod3JpZ2h0O0ZpcmVzIG9mIHRoZSBWb2xjYW5pYyBHdWFyZDtGaXJzdCBOaWdodCBvZiB0aGUgU3VtbWVyIENoaWxkO0V4cG9uZW50IG9mIHRoZSBFbmRsZXNzIFN0YXJzO1RoZSBDb3JydXB0aW9uIG9mIE5lenp1cmVlbTtHaG9zdCBKdWRnZXI7QWxsaWVkIENvbW1hbmRlciBTZXQ7RXhwbG9zaXZlIE1hbmlhYztMb2xsaXBvcCBKdWdnZXJuYXV0IFYgMy4wO1dpc2RvbSBvZiB0aGUgTWlkbmlnaHQgU3VuO0VycmFudCBTb2xkaWVyO0RhcmsgRm9yZXN0IFB1bmlzaGVyO0FzY2VuZGFuY2Ugb2YgdGhlIFJpbWUgTG9yZCAxc3QgU3R5bGU7RmlyZWZsaWdodCBTY2lvbjtXYXItQnVycm93IFJhdmFnZXI7QmxhY2sgSWNlIFNjb3VyZ2U7RnVyeSBvZiBXYXIgR29kO0V5ZSBvZiB0aGUgQmVob2xkZXI7Q3J5c3RhbCBTY2F2ZW5nZXI7RGFya2ZhbGwgV2FyZGVuIG5vIGVmZmVjdHMgViAyLjE7QWxsZmF0aGVyIG9mIE5hdHVyZSBTZXQ7V3JhdGggb2YgS2EgViAyLjE7VW5mZXR0ZXJlZCBNYWxldm9sZW5jZTtDYXJhcGFjZSBvZiB0aGUgSGlkZGVuIEhpdmUgU2V0O0FybW9yIG9mIHRoZSBTdGFsd2FydCBTb3VsO1RvbGwgb2YgdGhlIEZlYXJmdWwgQXJpYTtWZW5nZWFuY2Ugb2YgdGhlIFN1bndhcnJpb3I7SXJlIG9mIE1vbHRlbiBSZWJpcnRoO1JlbWluaXNjZW5jZSBvZiBEcmVhbXM7R29sZGVuIE5ldGhlciBMb3JkcyBSZWdhbGlhIFNldCBQcmVtO01hZ2lzdGVyIG9mIHRoZSBOYXJyb3cgRmF0ZXM7Q3VubmluZyBDb3JzYWlyO0FuY2llbnQgTWFndXMgU3R5bGUgMTtDcm93biBvZiBUaGUgTmlnaHR3b3JsZDtDaGFybWVyIG9mIEZpcmVzbmFrZTtHb2xkIFNreW1hZ2U7VmFudGFnZSBvZiB0aGUgQnJlYWNoIFdhcmRlbjtFbmR1cmluZyBTb2xpdHVkZTtBcm1hdHVyZSBvZiB0aGUgQmVsbGlnZXJlbnQgUmFtIFJlZDtDbGFuZGVzdGluZSBUcmFpbDtSaXR1YWwgb2YgdGhlIExveWFsIEZvbGQ7U3VibWVyZ2VkIEhhemFyZDtCYXJrIG9mIHRoZSBBZ2VsZXNzIFdpdG5lc3M7WnVsamluIGZvciBUcm9sbCBXYXJsb3JkIFN0eWxlIDM7UmVnYWxpYSBvZiB0aGUgV3JhaXRoIExvcmQgU2V0O1JpZ2h0ZWQ5519cyBUaHVuZGVyYm9sdCBhbmQgQXJjYW5hIE1lZ2FQYWNrOyAxMjN8fHw=