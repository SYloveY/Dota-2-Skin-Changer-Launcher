bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogIDExMXx8fCAyMjI6OiAkMnkkMTAkTURFMFl6UTJaRGhtWkRCbVl6WmtNLlhoWDRadW14Q2w1MW9iTU5kbTFWR1loWGs3Y0Y0ZGEgMjIyfHx8IDEyMzo6IEtyb2JlbGluZyBQcmVtO1RhaWwgb2YgdGhlIEVxdWlsaWJyaXVtO0FybW9yIG9mIHRoZSBFcXVpbGlicml1bTtIYXQgb2YgRW1waXJpYyBJbmNlbmRpYXJ5O0Nyb3cgb2YgRW1waXJpYyBJbmNlbmRpYXJ5O0JlbHQgb2YgRW1waXJpYyBJbmNlbmRpYXJ5O0J1cm5pbmcgSmFja3M7RmxhbWVzdGl0Y2hlZCBTdWl0aW5ncyBXcmFwIGFuZCBNb2xvdG92O1NlZXIgb2YgSW5maW5pdHkgU3BhY2UgRWlkb2xvbjtGdXJ5IG9mIHRoZSBEYW1uZWQgQnJ1c2g7VGhlIENoYWluZWQgU2NyaWJlIEhlYWQ7R2F1bnRsZXQgb2YgdGhlIFRyZWFjaGVyb3VzIERlbW9uO01hbnRsZSBvZiB0aGUgSW5mZXJuYWwgUmFtYmxlcjtMaW9uIEdyZWVkeSBLaW5nIFdlYXBvbjtEcmFnb25Ub290aCBIZWFkO1NpZ2lsIG9mIHRoZSBTcGl0ZWZ1bCBFeWU7Qm9nbWFyY2ggR2FyYjtUaGUgZWFnbGUgb2YgdGhlIGRlc2VydCBBcm1zO0VraSBCdWthdyBCcmFjZXJzO1JlY2x1c2UgUmVlZiBEZW5pemVuO0dyaXAgb2YgdGhlIERyb3duaW5nIFRyZW5jaDtGcm9zdG1vb3QgVHJlZTtUaW55IEVsZW1lbnRhbCBJY2U7U21hbGwgRWxlbWVudGFsIEljZTtNZWRpdW0gRWxlbWVudGFsIEljZTtMYXJnZSBFbGVtZW50YWwgSWNlO1RlbXBlc3QgSGVsbSBvZiB0aGUgVGh1bmRlcmdvZCBQcmVtO1dhdGNoZXIgQmVsb3c7VGVycmFpbiAtIFdpbnRlcjtUSTkgQ2FjaGUgQmFuZSBFbmRsZXNzIE5pZ2h0bWFyZSBIZWFkO0Jlc3Rvd2VkIFNob3VsZGVycztGaXJzdCBMaWdodCBBcm1vcjtGaXJzdCBMaWdodCBXZWFwb247Rmlyc3QgTGlnaHQgQXJtcztGaXJzdCBMaWdodCBIZWFkO0FybXMgIG9mIHRoZSBTaGF0dGVyZWQgVGFyZ2U7U2hpZWxkIG9mIHRoZSBXb3JsZCBTcGxpdHRlcjtTaGFyZHMgb2YgdGhlIE1vbnVtZW50IG9mIFJ1aW47TWFzayBvZiB0aGUgTW9udW1lbnQgb2YgUnVpbjtGb3JtIG9mIHRoZSBNb251bWVudCBvZiBSdWluO01hY2Ugb2YgdGhlIFd5cm1mb3JnZSBTaGFyZDtCYXJkaW5nIG9mIENoaW1lcmljIFJhcHBvcnQ7QXJzZW5hbCBvZiB0aGUgQmxhZGVrZWVwZXI7QnJhY2VycyBvZiB0aGUgVW55aWVsZGluZyBNYXNrO0dpZnRzIG9mIHRoZSBWYW5pc2hlZCBJc2xlIEJhY2s7Qm9uZHMgb2YgTWFkbmVzcyBTZXQgU3R5bGUgMTtBcmVuYSBDaGFtcGlvbiBTcGVhcjtBcmVuYSBDaGFtcGlvbiBTaGllbGQ7QXJlbmEgQ2hhbXBpb24gQmVsdDtBcmVuYSBDaGFtcGlvbiBBcm1vcjtEYXJrbmVzcyBXYWlsaW5nIEJhY2s7T3JpZ2luIG9mIHRoZSBEYXJrIE9hdGggLSBMZWdzO0RhcmtuZXNzIFdhaWxpbmcgVGFpbDtTb2xhciBHeXJlO1NvbGFyIEZvcmdlO0NvbXBsZXRlIFdpbmdzIG9mIHRoZSBFdGhlcmVhbCBNb25hcmNoO01pc2NoaWV2b3VzIEZydWl0cztDeWNsZXMgb2YgdGhlIFNlcmVuZSBUYWlsO1NvdWwgQ29ycHVsZW5jZSAtIFNob3VsZGVyO1NvdWwgQ29ycHVsZW5jZSAtIEFybXM7U291bCBDb3JwdWxlbmNlIC0gSGVhZDtTaWxlbnQgRWRpY3Q7TGVhc2hlZCBSb2Nrc2hhcms7U3Vua2VuIEZyb3N0c2hhcmQ7QmxhY2tzaGllbGQgUHJvdG9kcm9uZSBIZWxtO0JsYWNrc2hpZWxkIFByb3RvZHJvbmUgTWlzc2lsZSBMYXVuY2hlcjtCbGFja3NoaWVsZCBQcm90b2Ryb25lIEFybW9yO0JsYWNrc2hpZWxkIFByb3RvZHJvbmUgTGFzZXI7QmxhY2tzaGllbGQgUHJvdG9kcm9uZSBTdGluZ2VyO0FybW9yIG9mIHRoZSBJbXBlcmlvdXMgQ29tbWFuZDtIZWxtIG9mIHRoZSBTYXZhZ2UgTW9uZ2VyO1Nob3VsZGVycyBvZiB0aGUgSW1wZXJpb3VzIENvbW1hbmQ7VHdpbiBCbGFkZXMgb2YgdGhlIEltcGVyaWQ5519cyBDb21tYW5kO0FuZ2VyIERpdmluaXR5IEFybW9yO0FuZ2VyIERpdmluaXR5IEhlYWQ7QW5nZXIgRGl2aW5pdHkgV2VhcG9uO0Zvcm0gb2YgdGhlIEZlcnZpZCBNb25hcmNoO01hbGVmaWMgRHJha2VzIEhvb2Qgb2YgdGhlIENyaW1zb24gV2l0bmVzcztBcnNlbmFsIG9mIHRoZSBEZW1vbmljIFZlc3NlbCBWIDIuMTtLaXQgb2YgdGhlIEZpcnN0IEh1bnQgViAyLjE7UGVhY29jayBQcmllc3Q7RWxkd3VybXMgVG91Y2g7Q3JpbXNvbiBCZWFzdCBWIDMuMDtUaGUgQ29ycnVwdGlvbiBvZiBOZXp6dXJlZW07R2hvc3QgSnVkZ2VyO1ZvbGF0aWxlIE1hamVzdHk7V2l0Y2ggSHVudGVyIFRlbXBsYXI7RGFyayBNb29uIFN0YWxrZXIgViAyLjE7TWlnaHQgb2YgdGhlIEdhbGxvcGluZyBBdmVuZ2VyIFYgMi4xO0Jsb29kcm9vdCBHdWFyZDtQbGFndWUgQ2hhbXBpb24gb2YgTnVyZ2xlO01hZ2lzdGVyIG9mIHRoZSBOYXJyb3cgRmF0ZXM7V2FycmlvciBvZiB0aGUgUmVkIFNhbmQgViAyLjA7Qmxlc3Npbmcgb2YgdGhlIENyZXN0ZWQgRGF3biBWIDIuMTtCZXN0b3dtZW50cyBvZiB0aGUgQ2VudHVyaW9uIFZhbmd1YXJkO0lyb25iYXJkZSBDaGFyZ2VyO0NvcnJpZGFuIE1hZXN0cm8gViAyLjA7QXJtcyBvZiBSaXNpbmcgRnVyeTtIdW50ZXIgb2YgdGhlIENyeXN0YWwgRHJpZnQ7QXJyYXkgb2YgVHJhbnF1aWxpdHk7R3JpbSBEZXN0aW55O1JveWFsIFdpbnRlcmJsb29tO0NoYW9zIENob3NlbiBWIDMuMDtGaXJlcyBvZiBWYXNodW5kb2wgbm8gZWZmZWN0IFYgMi4xO0NhZXJ1bGEgU2lsdmE7TmV3IENoaWVmdGFpbiBTdHlsZSAyO1RoZSBPYmxpdGVyYXRvciBvZiBNYWdpYztUaW1lIFdhbmRlcmVyO0JsYWNrIE9yYyBXYXJib3NzIFYgMi4wO01hcmF1ZGVyIG9mIHRoZSBDaGFvcyBXYXN0ZXM7SGFydmVzdHMgSG91bmQ7VGlwc3kgQnJhd2xlcjtXYXJyaW9yIG9mIEFyZW5hIFNldDtGZWFzdCBvZiB0aGUgR2x1dHRvbnMgTGFyZGVyO0NoYW1waW9uIG9mIERpc2NvcmQgViAzLjE7U2F2aW9yIGZvciBKdW5nbGVzIEhvbm9yO0Nsb2FrIG9mIHRoZSBGYWxsZW47RnVybmF0b3IgU2V0O09wdXMgb2YgdGhlIFZpemllciBFeGlsZSBWIDIuMTtCdXJnbGFyIG9mIFdhc3A7U21va3kgRHJlYW1lcjtLaXJpbiBSaWRlciBTZXQ7QmxhemluZyBPYmxpdmlvbiBWIDMuMDtUaGUgSmFkZSBHZW5lcmFsO0FkYWdlIG9mIHRoZSBTbW9sZGVyaW5nIFNhZ2U7R3JhbmRwYXMgRmlyZWJyZWF0aGluZztUaGUgQmFwdGlzbSBvZiBNZWx0aW5nIEZpcmU7V2lzZG9tIG9mIHRoZSBNaWRuaWdodCBTdW47RGVzb2xhdGUgQ29ucXVlc3Q7RGFyayBGb3Jlc3QgUHVuaXNoZXI7Uml0ZXMgb2YgVmlsZSBDb252b2NhdGlvbjtEaXZpbmUgRmxhbWUgViAyLjA7VGhlIElyb24gQ2xhdyB2IDIuMDtIdW50ZXIgb2YgS2luZ3MgViAyLjA7TWVtb3JpZXMgb2YgdGhlIFZvdyBFdGVybmFsO1RoZSBGcmFjdHVyZWQgT3JkZXIgViAzLjA7TW9vbiBSaWZ0IFYgMi4xO1N0ZWxsYXIgSmFkZTtBbGx1cmUgb2YgdGhlIERlZXA7VmFuZ3VhcmQgb2YgdGhlIEVtZXJhbGQgSW5zdXJnZW5jZTtMaWNoIE1hc3RlciBOZWNyb21hbmNlciBWIDIuMTtXcml0aGluZyBFeGVjdXRpb25lcjtTaG9yZWxpbmUgU2FwcGVyO0hlYXZlbmx5IExpZ2h0O1RoZSBGYXRlIEZpZGRsZXI7TWFuZGF0ZSBvZiB0aGUgTmFtZWxlc3M7VGFsZXMgb2YgdGhlIFdpbmR3YXJkIFJvZ3VlO0hhcnNoIFNvam91cm47TmFyY2lzc2lzdGljIExlZWNoO1Nhbmd1aW5lIFJveWFsdHk7Q3VubmluZyBDb3JzYWlyO0FuY2llbnQgTWFndXMgU3R5bGUgMTtPcmlnaW5zIG9mIHRoZSBTaGFkb3cgQ3JlZWQ7S2luZHJlZCBvZiB0aGUgVW1pemFyIENyYXdsZXI7RXhhY3QgTWFya3NtYW47Rmxvd2VyaW5nIFNoYWRlIFYgMi4wO1NoYWRvd3Mgb2YgdGhlIFd1eGlhO1NhbXVyYWkgU2V0O0x1bWJlcmNsYXc7QmFyayBvZiB0aGUgQWdlbGVzcyBXaXRuZXNzO0JhcnJpZXIgUm9ndWU7RGlyZ2Vzd29ybiBEeW5hc3R5O0NvcnJ1cHRpb24gb2YgdGhlIFZpcnVsZW50IEtyYWl0O0JhcmRpbmcgb2YgdGhlIFNvdWwgS2VlcGVyO1B1cHBldCBTdW1tb25lcjtUaGUgRHVzayBDcmF3bGVyIFNldDtXaW5ncyBvZiBDb2xvcmZ1bCBJY2VjcnlzdGFscztCZWFyZXIgb2YgdGhlIEFya3R1cmFuIFRhbG9uOyAxMjN8fHw=