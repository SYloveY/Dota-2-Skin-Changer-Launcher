bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogIDExMXx8fCAyMjI6OiAkMnkkMTAkTURFMFl6UTJaRGhtWkRCbVl6WmtNLlhoWDRadW14Q2w1MW9iTU5kbTFWR1loWGs3Y0Y0ZGEgMjIyfHx8IDEyMzo6IEtyb2JlbGluZyBQcmVtO1RhaWwgb2YgdGhlIEVxdWlsaWJyaXVtO0FybW9yIG9mIHRoZSBFcXVpbGlicml1bTtIYXQgb2YgRW1waXJpYyBJbmNlbmRpYXJ5O0Nyb3cgb2YgRW1waXJpYyBJbmNlbmRpYXJ5O0JlbHQgb2YgRW1waXJpYyBJbmNlbmRpYXJ5O0J1cm5pbmcgSmFja3M7RmxhbWVzdGl0Y2hlZCBTdWl0aW5ncyBXcmFwIGFuZCBNb2xvdG92O1NlZXIgb2YgSW5maW5pdHkgU3BhY2UgRWlkb2xvbjtGdXJ5IG9mIHRoZSBEYW1uZWQgQnJ1c2g7VGhlIENoYWluZWQgU2NyaWJlIEhlYWQ7R2F1bnRsZXQgb2YgdGhlIFRyZWFjaGVyb3VzIERlbW9uO01hbnRsZSBvZiB0aGUgSW5mZXJuYWwgUmFtYmxlcjtMaW9uIEdyZWVkeSBLaW5nIFdlYXBvbjtEcmFnb25Ub290aCBIZWFkO1NpZ2lsIG9mIHRoZSBTcGl0ZWZ1bCBFeWU7Qm9nbWFyY2ggR2FyYjtUaGUgZWFnbGUgb2YgdGhlIGRlc2VydCBBcm1zO0VraSBCdWthdyBCcmFjZXJzO1JlY2x1c2UgUmVlZiBEZW5pemVuO01hZWxyYXduKnMgYWJ5c3NhbCBHdWFyZCBBcm1zO0dyaXAgb2YgdGhlIERyb3duaW5nIFRyZW5jaDtNYWVscmF3bipzIGFieXNzYWwgR3VhcmQgQmVsdDtGcm9zdG1vb3QgVHJlZTtUaW55IEVsZW1lbnRhbCBJY2U7U21hbGwgRWxlbWVudGFsIEljZTtNZWRpdW0gRWxlbWVudGFsIEljZTtMYXJnZSBFbGVtZW50YWwgSWNlO1RlbXBlc3QgSGVsbSBvZiB0aGUgVGh1bmRlcmdvZCBQcmVtO1dhdGNoZXIgQmVsb3c7VGVycmFpbiAtIFdpbnRlcjtUSTkgQ2FjaGUgQmFuZSBFbmRsZXNzIE5pZ2h0bWFyZSBIZWFkO0Jlc3Rvd2VkIFNob3VsZGVycztBcm1zICBvZiB0aGUgU2hhdHRlcmVkIFRhcmdlO1NoaWVsZCBvZiB0aGUgV29ybGQgU3BsaXR0ZXI7U2hhcmRzIG9mIHRoZSBNb251bWVudCBvZiBSdWluO01hc2sgb2YgdGhlIE1vbnVtZW50IG9mIFJ1aW47Rm9ybSBvZiB0aGUgTW9udW1lbnQgb2YgUnVpbjtNYWNlIG9mIHRoZSBXeXJtZm9yZ2UgU2hhcmQ7QmFyZGluZyBvZiBDaGltZXJpYyBSYXBwb3J0O0Fyc2VuYWwgb2YgdGhlIEJsYWRla2VlcGVyO0JyYWNlcnMgb2YgdGhlIFVueWllbGRpbmcgTWFzaztHaWZ0cyBvZiB0aGUgVmFuaXNoZWQgSXNsZSBCYWNrO0JvbmRzIG9mIE1hZG5lc3MgU2V0IFN0eWxlIDE7QXJlbmEgQ2hhbXBpb24gU3BlYXI7QXJlbmEgQ2hhbXBpb24gU2hpZWxkO0FyZW5hIENoYW1waW9uIEJlbHQ7QXJlbmEgQ2hhbXBpb24gQXJtb3I7R3JlYXQgU2FnZSpzIFJlY2tvbmluZztEYXJrbmVzcyBXYWlsaW5nIEJhY2s7T3JpZ2luIG9mIHRoZSBEYXJrIE9hdGggLSBMZWdzO0RhcmtuZXNzIFdhaWxpbmcgVGFpbDtTb2xhciBHeXJlO1NvbGFyIEZvcmdlO0NvbXBsZXRlIFdpbmdzIG9mIHRoZSBFdGhlcmVhbCBNb25hcmNoO01pc2NoaWV2b3VzIEZydWl0cztDeWNsZXMgb2YgdGhlIFNlcmVuZSBUYWlsO1NvdWwgQ29ycHVsZW5jZSAtIFNob3VsZGVyO1NvdWwgQ29ycHVsZW5jZSAtIEFybXM7U291bCBDb3JwdWxlbmNlIC0gSGVhZDtTaWxlbnQgRWRpY3Q7UGlyYXRlIG9mIFRyZWFzdXJlKnMgQmlnaHQgQmFjaztQaXJhdGUgb2YgVHJlYXN1cmUqcyBCaWdodCBIZWFkO1BpcmF0ZSBvZiBUcmVhc3VyZSpzIEJpZ2h0IE1vdW50O1BpcmF0ZSBvZiBUcmVhc3VyZSpzIEJpZ2h0IFNob3VsZGVyO1BpcmF0ZSBvZiBUcmVhc3VyZSpzIEJpZ2h0IFdlYXBvbjtMZWFzaGVkIFJvY2tzaGFyaztTdW5rZW4gRnJvc3RzaGFyZDtCbGFja3NoaWVsZCBQcm90b2Ryb25lIEhlbG07QmxhY2tzaGllbGQgUHJvdG9kcm9uZSBNaXNzaWxlIExhdW5jaGVyO0JsYWNrc2hpZWxkIFByb3RvZHJvbmUgQXJtb3I7QmxhY2tzaGllbGQgUHJvdG9kcm9uZSBMYXNlcjtCbGFja3NoaWVsZCBQcm90b2Ryb25lIFN0aW5nZXI7QXJtb3Igb2YgdGhlIEltcGVyaWQ5519cyBDb21tYW5kO0hlbG0gb2YgdGhlIFNhdmFnZSBNb25nZXI7U2hvdWxkZXJzIG9mIHRoZSBJbXBlcmlvdXMgQ29tbWFuZDtUd2luIEJsYWRlcyBvZiB0aGUgSW1wZXJpb3VzIENvbW1hbmQ7QW5nZXIgRGl2aW5pdHkgQXJtb3I7QW5nZXIgRGl2aW5pdHkgSGVhZDtBbmdlciBEaXZpbml0eSBXZWFwb247Q29udGVzc2EqcyBDcmVlZCBIYXQ7Q29udGVzc2EqcyBDcmVlZCBEcmVzcztGb3JtIG9mIHRoZSBGZXJ2aWQgTW9uYXJjaDtNYWxlZmljIERyYWtlcyBIb29kIG9mIHRoZSBDcmltc29uIFdpdG5lc3M7QnJhY2VycyBvZiB0aGUgQ2F2ZXJuIEx1bWluYXI7TGluZWFnZSBUb29sYmVsdCBvZiB0aGUgRWFydGh3cmlnaHQ7QXJtcyBvZiBGb3Jnb3R0ZW4gRXBvY2g7R29sZGVuIFJlZWwgR3VhcmRpYW4gQXJtcztHYW1iaXRzIG9mIE5pc2hhaSBQYXVsZHJvbnM7QXJzZW5hbCBvZiB0aGUgRGVtb25pYyBWZXNzZWwgViAyLjE7S2l0IG9mIHRoZSBGaXJzdCBIdW50IFYgMi4xO1BlYWNvY2sgUHJpZXN0O0VsZHd1cm1zIFRvdWNoO1RoZSBDb3JydXB0aW9uIG9mIE5lenp1cmVlbTtHaG9zdCBKdWRnZXI7Vm9sYXRpbGUgTWFqZXN0eTtXaXRjaCBIdW50ZXIgVGVtcGxhcjtEYXJrIE1vb24gU3RhbGtlciBWIDIuMTtNaWdodCBvZiB0aGUgR2FsbG9waW5nIEF2ZW5nZXIgViAyLjE7Qmxvb2Ryb290IEd1YXJkO1BsYWd1ZSBDaGFtcGlvbiBvZiBOdXJnbGU7TWFnaXN0ZXIgb2YgdGhlIE5hcnJvdyBGYXRlcztXYXJyaW9yIG9mIHRoZSBSZWQgU2FuZCBWIDIuMDtCbGVzc2luZyBvZiB0aGUgQ3Jlc3RlZCBEYXduIFYgMi4xO0Jlc3Rvd21lbnRzIG9mIHRoZSBDZW50dXJpb24gVmFuZ3VhcmQ7SXJvbmJhcmRlIENoYXJnZXI7Q29ycmlkYW4gTWFlc3RybyBWIDIuMDtBcm1zIG9mIFJpc2luZyBGdXJ5O0h1bnRlciBvZiB0aGUgQ3J5c3RhbCBEcmlmdDtBcnJheSBvZiBUcmFucXVpbGl0eTtHcmltIERlc3Rpbnk7Um95YWwgV2ludGVyYmxvb207Q2hhb3MgQ2hvc2VuIFYgMy4wO0ZpcmVzIG9mIFZhc2h1bmRvbCBubyBlZmZlY3QgViAyLjE7Q2FlcnVsYSBTaWx2YTtOZXcgQ2hpZWZ0YWluIFN0eWxlIDI7VGhlIE9ibGl0ZXJhdG9yIG9mIE1hZ2ljO1RpbWUgV2FuZGVyZXI7QmxhY2sgT3JjIFdhcmJvc3MgViAyLjA7TWFyYXVkZXIgb2YgdGhlIENoYW9zIFdhc3RlcztIYXJ2ZXN0cyBIb3VuZDtUaXBzeSBCcmF3bGVyO1dhcnJpb3Igb2YgQXJlbmEgU2V0O0ZlYXN0IG9mIHRoZSBHbHV0dG9ucyBMYXJkZXI7Q2hhbXBpb24gb2YgRGlzY29yZCBWIDMuMTtTYXZpb3IgZm9yIEp1bmdsZXMgSG9ub3I7Q2xvYWsgb2YgdGhlIEZhbGxlbjtGdXJuYXRvciBTZXQ7T3B1cyBvZiB0aGUgVml6aWVyIEV4aWxlIFYgMi4xO0J1cmdsYXIgb2YgV2FzcDtTbW9reSBEcmVhbWVyO0tpcmluIFJpZGVyIFNldDtCbGF6aW5nIE9ibGl2aW9uIFYgMy4wO1RoZSBKYWRlIEdlbmVyYWw7QWRhZ2Ugb2YgdGhlIFNtb2xkZXJpbmcgU2FnZTtHcmFuZHBhcyBGaXJlYnJlYXRoaW5nO1RoZSBCYXB0aXNtIG9mIE1lbHRpbmcgRmlyZTtXaXNkb20gb2YgdGhlIE1pZG5pZ2h0IFN1bjtEZXNvbGF0ZSBDb25xdWVzdDtEYXJrIEZvcmVzdCBQdW5pc2hlcjtSaXRlcyBvZiBWaWxlIENvbnZvY2F0aW9uO0RpdmluZSBGbGFtZSBWIDIuMDtUaGUgSXJvbiBDbGF3IHYgMi4wO0h1bnRlciBvZiBLaW5ncyBWIDIuMDtNZW1vcmllcyBvZiB0aGUgVm93IEV0ZXJuYWw7VGhlIEZyYWN0dXJlZCBPcmRlciBWIDMuMDtNb29uIFJpZnQgViAyLjE7U3RlbGxhciBKYWRlO0FsbHVyZSBvZiB0aGUgRGVlcDtWYW5ndWFyZCBvZiB0aGUgRW1lcmFsZCBJbnN1cmdlbmNlO0xpY2ggTWFzdGVyIE5lY3JvbWFuY2VyIFYgMi4xO1dyaXRoaW5nIEV4ZWN1dGlvbmVyO1Nob3JlbGluZSBTYXBwZXI7SGVhdmVubHkgTGlnaHQ7VGhlIEZhdGUgRmlkZGxlcjtNYW5kYXRlIG9mIHRoZSBOYW1lbGVzcztUYWxlcyBvZiB0aGUgV2luZHdhcmQgUm9ndWU7SGFyc2ggU29qb3VybjtOYXJjaXNzaXN0aWMgTGVlY2g7U2FuZ3VpbmUgUm95YWx0eTtDdW5uaW5nIENvcnNhaXI7QW5jaWVudCBNYWd1cyBTdHlsZSAxO09yaWdpbnMgb2YgdGhlIFNoYWRvdyBDcmVlZDtLaW5kcmVkIG9mIHRoZSBVbWl6YXIgQ3Jhd2xlcjtFeGFjdCBNYXJrc21hbjtGbG93ZXJpbmcgU2hhZGUgViAyLjA7U2hhZG93cyBvZiB0aGUgV3V4aWE7U2FtdXJhaSBTZXQ7THVtYmVyY2xhdztCYXJrIG9mIHRoZSBBZ2VsZXNzIFdpdG5lc3M7QmFycmllciBSb2d1ZTtEaXJnZXN3b3JuIER5bmFzdHk7Q29ycnVwdGlvbiBvZiB0aGUgVmlydWxlbnQgS3JhaXQ7QmFyZGluZyBvZiB0aGUgU291bCBLZWVwZXI7UHVwcGV0IFN1bW1vbmVyO1RoZSBEdXNrIENyYXdsZXIgU2V0O1dpbmdzIG9mIENvbG9yZnVsIEljZWNyeXN0YWxzO0JlYXJlciBvZiB0aGUgQXJrdHVyYW4gVGFsb247U2FtdXJhaSBTb3VsIFYgMy4wOyAxMjN8fHw=