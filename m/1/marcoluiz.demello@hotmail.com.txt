bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogQkRDMjg1NzAtODJEMS0wMDAwLTAwMDAtMDAwMDAwMDAwMDAwIDExMXx8fCAyMjI6OiAkMnkkMTAkTVdJd1l6ZzFaR1UyTkROa01UTTRPT1Ewdm1MaG00OXhNcDZsUWNORzcvcGdnZ2FSbXQ3QnkgMjIyfHx8IDEyMzo6IFN0ZWFtIENob3BwZXIgQ3Vyc29yIFBhY2s7Q29uY29yZCBSZXZlcnNpb24gVVA7VG9ybWVudGVkIFN0YWZmIG9mIEVtaW5lbnQgUmV2aXZhbDtHb2xkZW4gQmFzaGVyIEJsYWRlcyBWIDIuMDtNb25hcmNoIG9mIHRoZSBTYXBwaGlyZSBHbGVuO1NuaXBlciBJbW1vcnRhbCBXZWFwb24gb2YgdGhlIEFyZGFsYW4gSW50ZXJkaWN0b3I7UGFjayBvZiB0aGUgQXJkYWxhbiBJbnRlcmRpY3RvcjtCcmFjZXJzIG9mIHRoZSBBcmRhbGFuIEludGVyZGljdG9yO0NvbGFyIG9mIHRoZSBBcmRhbGFuIEludGVyZGljdG9yO0hlbG0gb2YgdGhlIEFyZGFsYW4gSW50ZXJkaWN0b3I7Q2FwIG9mIHRoZSBGdW5nYWwgTG9yZDtEZXNlcnQgQmxvb20gLSBOZWNrO1N1ZmZlcndvb2QgU2FwbGluZztNYW50bGUgb2YgdGhlIFRydWViYXJrIEFkaGVyZW50O0dvbGRlbiBXeXJtd3JvdWdodCBGbGFyZSBQcmVtO1NoaWVsZCBvZiB0aGUgRW1lcmFsZCBJbnN1cmdlbmNlO0xpdmluZyBOZWx1bTtFbWluZW5jZSBvZiBSaXN0dWwgRGVueSAxO0dhYmUgTmV3ZWxsIFNob3BrZWVwZXI7Uml2ZXIgVmlhbCBCbGFjaztEZXNlcnQgUm9zaGFuO0RpcmV0aWRlIFNoYWRlciBNYXAgRWZmZWN0O0RlZXBlc3QgRGVwdGhzIEhVRDtTaGFkb3cgaW4gdGhlIERlZXAgQXJtb3I7UGFsZSBFZGdlIERvdGEgMiBDaGFuZ2VyIEVkaXRpb247U2hhZG93IGluIHRoZSBEZWVwIEJyYWNlcnM7U2hhZG93IGluIHRoZSBEZWVwIEJhY2s7U25vdyBNZXRlb3I7U2VhIFJha2VzIEJyaWRsZTtTdWJtZXJnZWQgSGF6YXJkIFByb3BlbGxlcjtTdWJtZXJnZWQgSGF6YXJkIExhdW5jaGVyO1N1Ym1lcmdlZCBIYXphcmQgSHVsbDtTdWJtZXJnZWQgSGF6YXJkIExhc2VyO1JvbGxlcm1hd3N0ZXIgYW5kIE1lY2hhIEJvb3RzIG9mIFRyYXZlbCBNayBJSUk7TWFzayBvZiB0aGUgQ29uZmlkYW50O0hvb2R3aW5rIEdsZWlwbmlyO0hvb2R3aW5rIERyYWdvbiBDcm9zc2JvdztTaG91bGRlcnMgb2YgdGhlIEJsYWRlZm9ybSBBZXN0aGV0ZTtKdWdnZXJuYXV0IEFyY2FuYSBSZWQgQmxhZGVmb3JtIE9yaWdpbnM7U2VycGVudGluZSBHdWFyZCBXYXJkO1NlcnJha3VyYSBQcmVtO0F0b21pYyBSYXkgVGhydXN0ZXJzIFByZW07QnJhY2VycyBvZiBBZW9ucztCYXR0bGVmdXJ5O1NwYXVsZGVyIG9mIHRoZSBXYW5kZXJpbmcgRmxhbWU7QnJhY2VycyBvZiB0aGUgRnJhY3R1cmVkIEVudm95O0lyZSBvZiB0aGUgQW5jaWVudCBHYW9sZXIgQmFjaztHb2xkZW4gQ3lycmlkYWUgUHJlbTtGYWNlIG9mIEluZXJyYW50IEVtaW5lbmNlO0ZvY2FsIFJlc29uYW5jZSBWIDMuMDtMZWdpb24gQ29tbWFuZGVyIEFyY2FuYSBVUDtTcGVhciBvZiB0aGUgRGFlbW9uZmVsbCBGbGFtZTtMZWdhY3kgb2YgdGhlIEZhbGxlbiBMZWdpb24gU3R5bGUgMjtHb2RzIE1lcmN5IG9mIHRoZSBDcmltc29uIFdpdG5lc3M7Q3JpbXNvbiBQcm9nZW5pdG9ycyBCYW5lO1J1YmljayBDdXJzZSAtIEdvZHMgUmVidWtlO1N3aW5lIG9mIHRoZSBTdW5rZW4gR2FsbGV5IFByZW07UG93ZGVyc2xlZCBSb29rZXJ5IENhbm5vbjtUaGUgS2luZyBPZiBUaGlldmVzIFdlYXBvbjtXcmFpdGhiaW5kZXI7U2hhZG93IEZpZW5kIEFyY2FuYSBEZW1vbiBFYXRlcjtTb3VscyBUeXJhbnQgU2hvdWxkZXI7R29sZGVuIEFybXMgb2YgRGVzb2xhdGlvbiBQcmVtO1BpbmsgQ29sb3IgZm9yIFRCO0ZyYWN0YWwgSG9ybnMgb2YgSW5uZXIgQWJ5c20gVVA7SG9vZCBvZiB0aGUgU2hhdHRlcmVkIFRhcmdlO1Nob3VsZGVyIG9mIHRoZSBTaGF0dGVyZWQgVGFyZ2U7TWFjZSBvZiB0aGUgRmlzc3VyZWQgU291bDtCZWxsb3dzIG9mIENyZWF0aW9uO0JhY2sgb2YgdGhlIFNoYXR0ZXJlZCBUYXJnZTtSb3lhbCBEZWNyZWUgV2hpcCBBdHRhY2s7R29sZGVuIEJsb29kZmVhdGhlciBGZWFzdDtGYXNoaW9uIG9mIFlvc2tyZXRoIGFsdDtQaGFudG9tIENvbmNvcmQgUHJlbTtCcmFjZXJzIG9mIHRoZSBSZWQgU2FuZHM7QXJtb3Igb2YgdGhlIEZvcmdvdHRlbiBQbGFuZTtCcmFjZXIgb2YgdGhlIEZvcmdvdHRlbiBQbGFuZTtCZWx0IG9mIHRoZSBGb3Jnb3R0ZW4gUGxhbmU7U2hvdWxkZXJzIG9mIHRoZSBXaXRjaCBIdW50ZXI7SGFpciBvZiB0aGUgU3Vydml2b3I7QWNvbHl0ZSBvZiB0aGUgTG9zdCBBcnRzIHdpdGggVGF1bnQgQXR0YWNrcztBcmNhbmljIFJlc29uYW5jZSBCZWFtO1N1Ym1lcmdlZCBIYXphcmQgTWFzaztBcm1vciBvZiB0aGUgRGVtb24gVHJpY2tzdGVyIEJsdWU7U3RhZmYgb2YgdGhlIERlbW9uIFRyaWNrc3RlcjtCbGFkZXMgb2YgUHJpc21hdGljIEdyYWNlO1RoZSBPcmRlciBvZiBDeXByaW47R2FyYiBvZiB0aGUgQ29ycmlkYW4gTWFlc3RybztHb2xkZW4gTWFuZGF0ZSBvZiB0aGUgU3Rvcm1ib3JuO0RpcHBlciB0aGUgRGVzdHJveWVyO01hbmUgb2YgdGhlIENyeXN0YWwgRHJpZnQ7SGlkZSBvZiB0aGUgQ3J5c3RhbCBEcmlmdDtCZWx0IG9mIHRoZSBSYWRpYW50IFByb3RlY3RvcjtUaGUgTGlnaHRuaW5nIE9yY2hpZCBvZiBFbWluZW50IFJldml2YWwgRG90YSAyIENoYW5nZXIgRWRpdGlvbjtCbGlzdGVyaW5nIFNoYWRlIGZvciBBcmNhbmE7Qml0dGVyIExpbmVhZ2UgSW1tb3J0YWwgQXhlcztBcm1vciBvZiB0aGUgU2F2YWdlIE1vbmdlcjtDb25zcGljdWQ5519cyBDdWxwcml0IE1vaGF3aztHcmVhdCBTYWdlcyBSZWNrb25pbmcgVGltZWxlc3MgVGFsZTtUaGUgVW5jb250ZXN0ZWQ7SGlkZGVuIFZlY3RvciAtIEJsYWRlO0hpZGRlbiBWZWN0b3IgLSBCZWx0O0hpZGRlbiBWZWN0b3IgLSBBcm1vcjtHb2xkZW4gSW5mZXJuYWwgQ2hpZWZ0YWluO1ZpZ2lsIFRyaXVtcGg7VGVycmFpbiAtIEltbW9ydGFsIEdhcmRlbnM7V2VhdGhlciBQZXN0aWxlbmNlO0QyQ0wgU2Vhc29uIDUgSFVEO0dyZWVuIERhZ29uO1dpbnRlciBDcmVlcHMgViAzLjA7R29sZGVuIEJyYWNlcnMgb2YgRm9ybG9ybiBQcmVjaXBpY2U7SGFybmVzcyBvZiB0aGUgRm9yZ290dGVuIFRhY3RpY2lhbjtMaW5lYWdlIG9mIHRoZSBTdG9ybWxvcmRzIC0gTGVncztMaW5lYWdlIG9mIHRoZSBTdG9ybWxvcmRzIC0gQXJtcztHb3RoaWMgV2hpc3BlciBCbGFkZTtHb2xkZW4gVHdpbGlnaHQgU2NoaXNtO0dvbGRlbiBNb29uZmFsbCBQcmVtO0NyeXN0YWwgRHJ5YWQgUHJlbTtBbnRob3pvYW4gQXNzYXVsdCAtIFRpbnk7QW50aG96b2FuIEFzc2F1bHQgLSBNZWRpdW07QW50aG96b2FuIEFzc2F1bHQgLSBMYXJnZTtBbnRob3pvYW4gQXNzYXVsdCAtIEh1Z2U7VGFsb25zIG9mIHRoZSBFbmRsZXNzIFN0b3JtIE1vdW50O0dvbGRlbiBDaGFvcyBGdWxjcnVtO1RhbG9ucyBvZiB0aGUgRW5kbGVzcyBTdG9ybSBXZWFwb247VGFsb25zIG9mIHRoZSBFbmRsZXNzIFN0b3JtIEhlYWQ7QXJtb3Igb2YgdGhlIERhcmsgUmVzZXJ2b2lyO0FybXMgb2YgdGhlIERhcmsgUmVzZXJ2b2lyO0hlYWQgb2YgdGhlIFNhbmd1aW5lIFNwZWN0cnVtO0JsYWRlcyBvZiB0aGUgU2FuZ3VpbmUgU3BlY3RydW07QXJtcyBvZiB0aGUgU2FuZ3VpbmUgU3BlY3RydW07QmVsdCBvZiB0aGUgQmxvb2Rmb3JnZTtHb2xkZW4gU3VsbGVuIEhvbGxvdztTdWxsZW4gSGFydmVzdDtUb3AgSGF0IG9mIHRoZSBEYXJrYnJldyBFbmZvcmNlcjtHYXJiIG9mIHRoZSBEYXJrYnJldyBFbmZvcmNlcjtSYXp6aWxzIE1pZGFzIEtudWNrbGVzIFByZW07RXRlcm5hbCBSYWRpYW5jZSBCbGFkZXMgUHJlbTtUaHVuZGVyIEdyaWZmaW47U3VibWVyZ2VkIEhhemFyZDtOaWdodHN0YWxrZXIgTWVnYVBhY2sgc2V0O1BpdGZhbGwgQ3J1c2FkZXI7UG9ydGVudCBQYXlsb2FkO1NwYXRpYWwgUmlmdGVyIFYgMy4wO0NpbmRlciBTZW5zZWk7RGV2aWwgUmlwcGVyO0t1bmtrYSBJbW1vcnRhbHMgTWVnYVBhY2s7QXJjdGljIFNob2NrIFRBIFYgMy4wO0F4ZSBmdWxsIEltbW9ydGFscyBNZWdhcGFjayBhbHQ7VGhlIEdyeXBob253aW5nIEtuaWdodDtUaGUgS2luZyBvZiBUaGlldmVzO0FuY2llbnQgTWFndXMgU3R5bGUgMztFbXBpcmljIEluY2VuZGlhcnk7QXJteSBPZiBUaGUgVmFzdCBTZWE7RmVsbHN0cmF0aCBTZXJwZW50O0ljZSBMaW5hIFByZW1pdW07Q2hhb3MgQ2hvc2VuIFYgMy4wO1JlbGljcyBvZiB0aGUgTG9zdCBWaWdpbDtNb3JwaGxpbmcgSW1tb3J0YWxzIE1lZ2FQYWNrIFVQO1J1c3NpYW4gVXJzYS1CZWFyO0tpbiBvZiB0aGUgU2FuZ3N0cmF0aCBGb2xkO0ZvcmdvdHRlbiBUYWN0aWNpYW47QnJld21hc3RlciBmcm9tIEhPVFM7Q3JlZXBpbmcgU2hhZG93O0dvbGRlbiBEYXJrIE1hdyBJbmhpYml0byBhbmQgR29sZGVuIFByb2ZhbmUgVW5pb24gYW5kIEdvbGRlbiBEcmVhZCBSZXF1aXNpdGlvbiBMaWZlc3RlYWxlciBJbW1vcnRhbHMgTWVnYXBhY2s7R3J5cGhvbiBSaWRlciBTZXQ7Rm93bCBQbGFndWUgU2V0O0Vzc2VuY2UgT2YgVGhlIERhcmsgTW9vbjtDYXVzdGljIFN0ZWVsIFNldDsgMTIzfHx8