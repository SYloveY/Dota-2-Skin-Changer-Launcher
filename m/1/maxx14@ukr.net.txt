bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogNUNFRUNEMzctQjI3Mi0zNjg3LUExMEEtRjAyRjc0ODBBQjk5IDExMXx8fCAyMjI6OiAkMnkkMTAkTVRjMlpEbGhNV1kyTkRCbE1qVmpaLk40NFg4aG16LmIubHBSTlNmWmg3cWNDLi44ZTVRZy4gMjIyfHx8IDEyMzo6IFRlcnJhaW4gLSBXaW50ZXI7Uml2ZXIgVmlhbCBCb2lsaW5nO0Jvb2sgb2YgdGhlIFZpemllciBFeGlsZTtNdWxjdGFudCBQYWxsO0RhdWdodGVycyBvZiBIeWRyb3BoaWluYWU7Q29tcGxldGUgR2FyYiBvZiB0aGUgQ29ycmlkYW4gTWFlc3RybztSYXp6aWxzIE1pZGFzIEtudWNrbGVzIFByZW07TW9sdGVuIENsYXcgUHJlbTtDcnVjaWJsZSBvZiBSaWxlO01hbnRsZSBvZiB0aGUgQ2luZGVyIEJhcm9uIFN0eWxlIDE7U2hhdHRlcmJsYXN0IENyb3duO1NwaXJlcyBvZiB0aGUgUHJvcGhldCBGb3JldG9sZDtHYXJiIG9mIHRoZSBQcm9waGV0IEZvcmV0b2xkO1RhaWwgb2YgdGhlIEVxdWlsaWJyaXVtO1N0b3V0aGVhcnQgR3Jvd2xlciBPd2w7U3RvdXRoZWFydCBHcm93bGVyIEJvYXI7TWFzayBvZiB0aGUgQmxvb2Rmb3JnZTtCbG9vZHN0b25lIEJsYWRlIFBhY2s7TWFyayBvZiB0aGUgRmlyc3QgSHVudCBCZXN0b3dlZDtBZ2hhbmltcyBCYXNoZXIgUHJlbTtUSS00IGVmZmVjdCBUZWxlcG9ydDtKaW4gYW5kIFlpbiBGb3ggU3Bpcml0cyBPbmx5IEJsYWNrO0RBQyAyMDE1IENoYW9zIEtuaWdodCBDdXJzb3IgUGFjaztTbWVldmlscyBQZW5hbmNlIFN0eWxlIDM7R3VhcmRpYW5zIG9mIHRoZSBMb3N0IFBhdGggUmFkaWFudCBUb3dlcnM7R3VhcmRpYW5zIG9mIHRoZSBMb3N0IFBhdGggRGlyZSBUb3dlcnM7SFVEIG9mIHRoZSBCdXJuaW5nIFNjYWxlIEljZTtJbmZlcm5hbCBDaGllZnRhaW4gb2YgdGhlIENyaW1zb24gV2l0bmVzcztXaGlzcGVycyBvZiB0aGUgRGFtbmVkIEhlYWQ7U2hhZG93IG9mIHRoZSBCdXJuaW5nIFNjYWxlO1dhcnJpb3JzIG9mIHRoZSBEZW1vbiBTdG9uZSBWIDMuMTtHb2xkZW4gR3JhdmVsbWF3O0JyYWNlcnMgb2YgdGhlIENhdmVybiBMdW1pbmFyO0JyYWNlcnMgb2YgQWVvbnMgUHJlbTtKZXdlbCBvZiBBZW9ucyBQcmVtO0dvbGRlbiBBdG9taWMgUmF5IFRocnVzdGVycyBQcmVtO0ZsYXNocG9pbnQgUHJvc2VseXRlIC0gSGVhZDtQeXJleGFlYyBGbG9lO1Rvcm1lbnRlZCBTdGFmZiBlZmZlY3Q7R29sZGVuIE1vb25mYWxsIFByZW07VHdpbGlnaHQgU2NoaXNtO0Zvcm0gb2YgdGhlIEdyZXkgR2hvc3Q7QmxhZGUgb2YgVGVhcnMgYW5kIENyb3duIG9mIFRlYXJzO0dvbGRlbiBTdWxsZW4gSG9sbG93IFYgMy4yO0Nyb3duIG9mIEdpbGRlZCBXb3JzaGlwO0F1c3BpY2Ugb2YgdGhlIFdoeXJsZWd5Z2UgUHJlbTtBbGx1dmlvbiBQcm9waGVjeTtHb2xkZW4gU2hhcmRzIG9mIEV4aWxlO01hc2sgb2YgdGhlIENvbmZpZGFudDtOb3ZhIG9mIEdvbGRlbiBOaXJ2YW5hO0dvbGRlbiBTY2F2ZW5naW5nIEd1dHRsZXNsdWc7R3JhbmQgQWJzY2Vzc2lvbiBIb29rIEJ1bmRsZTtHb2xkZW4gU2V2ZXJpbmcgQ3Jlc3Q7VGhlIEJhcnJlbiBWZWN0b3I7QXJtcyBvZiBEZXNvbGF0aW9uIFByZW07U2VycGVudCBXYXJkIG9mIFRhbmctS2k7VG9vbHMgb2YgdGhlIEZpbmFsIFV0dGVyYW5jZTtUaGUgQmFyYiBvZiBTa2FkaTtHb2xkZW4gRnVsbC1Cb3JlIEJvbmFuemE7Q2Fubm9uIG9mIHRoZSBPY2N1bHRpc3RzIFB1cnN1aXQ7SXJvbiBTdXJnZSBWIDIuMjtTYXZhZ2UgTWV0dGxlO1RoZSBMaWdodG5pbmcgT3JjaGlkIG9mIEVtaW5lbnQgUmV2aXZhbDtGb2NhbCBSZXNvbmFuY2UgViAzLjA7RXBpdGFwaGljIFRyYXA7UmVjdGlmaWVyO1JvbGxlcm1hd3N0ZXIgYW5kIE1lY2hhIEJvb3RzIG9mIFRyYXZlbCBNayBJSUk7TWFqZXN0eSBPZiBUaGUgQ29sb3NzdXMgLSBQZWJibGU7TWFqZXN0eSBPZiBUaGUgQ29sb3NzdXMgLSBDb2JibGU7TWFqZXN0eSBPZiBUaGUgQ29sb3NzdXMgLSBNb25vbGl0aDtTd29yZCBvZiB0aGUgQ29sb3NzdXMgUHJlbTtGb2xpYWdlIG9mIEVsZHJpdGNoIEduYXJsO1Bpc2NlYW4gUHVsdmVyaXplcjtGb3JtIG9mIHRoZSBGZXJ2aWQgTW9uYXJjaDtNYWxlZmljIERyYWtlcyBIb29kIG9mIHRoZSBDcmltc29uIFdpdG5lc3M7VG9sbGluZyBTaGFkb3dzO0NyaW1zb24gQ3lycmlkYWU7U3lsdmFuIENhc2NhZGU7VEktNyBQaGFzZSBCb290cyBFZmZlY3Q7QmxpbmsgRGFnZ2VyIGx2bCAxIFRJLTYgRWZmZWN0O01qb2xsbmlyIFRJLTYgRWZmZWN0O1JhZGlhbmNlIFRJLTYgRWZmZWN0O1BoYW50b20gQWR2ZW50IEJlbHQgVVA7UGhhbnRvbSBBZHZlbnQgV2VhcG9uIFVQO1BoYW50b20gQWR2ZW50IFVQO1BoYW50b20gQWR2ZW50IFNob3VsZGVycyBVUDtTdGFmZiBvZiBHdW4tWXU7RHJlYWQgb2YgdGhlIEdsZWFtaW5nIFNlYWwgU2V0O1JveWFsIERlY3JlZSBLbmlmZSBBdHRhY2s7V2VhdGhlciBTbm93O0tpZHMgT3JiO01hZ3VzIEFwZXg7VHJhaW5lciBEcmFnb247R29kZGVzcyBvZiBXb29kcztIYXJ2ZXN0cyBIb3VuZDtUaGUgQ29ycnVwdGlvbiBvZiBOZXp6dXJlZW07VGhlIE1hbmlwdWxhdG9yIFNldDtCbG9vZHkgQnJpZGU7Q2hhcmdlIG9mIHRoZSBXcmF0aHJ1bm5lcjtPcHVzIG9mIHRoZSBWaXppZXIgRXhpbGUgViAyLjE7R2FyYiBvZiB0aGUgRnJvc3QgTG9yZDtCbGF6aW5nIENvc21vcztEdXNrbGlnaHQgTWFyYXVkZXIgViAyLjE7QXBvc3RsZSBvZiBEZWNheSBWIDIuMTtTaGFyZHMgb2YgTWV0ZW9yaXRlO1J1bGVyIG9mIHRoZSBGcm9zdGJpdGUgRHVuZXM7Qml0ZSBvZiB0aGUgU3VyZ2luZyBXaW5kO0NvcnJpZGFuIE1hZXN0cm8gViAyLjA7Q2xhbmRlc3RpbmUgVHJhaWw7U2FtdXJhaSBTZXQ7SHVudGVyIG9mIHRoZSBDcnlzdGFsIERyaWZ0O0FycmF5IG9mIFRyYW5xdWlsaXR5O1NjYXJsZXQgTG9yZHM7QW5jaWVudCBNZWNoYW5pc207QW50aW1hZ2UgU2hpbm9iaTtSYWlkIG9mIHRoZSBOb3J0aGVybiBFeGlsZXM7V3JhdGhmdWwgQW5uaWhpbGF0b3I7VGhlIFJvd2R5IEZpcmVicmFuZDtNYXJrIG9mIHRoZSBNaXN0cmFsIEZpZW5kIFYgMi4xO01hcmF1ZGVyIENoaWVmdGFpbiBvZiB0aGUgQ2hhb3MgV2FzdGVzO0JvdW50eSBIdW50ZXIgTWFuaWFjIFNldDtUcml1bXBoIG9mIHRoZSBGb3VyIENvcm5lcnMgViAyLjA7R3J5cGhvbiBSaWRlciBTZXQ7SWNlcGxhaW4gUmF2YWdlcjtUaGUgUmF0IEtpbmc7VGhlIEZhaXRoIG9mIEF2ZW5nZXJzO1RoZSBCcmFzcyBGbHllcjtTaGVybWFuIE1haWRlbiBWIDQuMTtMaWdodG5pbmcgSGFyYmluZ2VyO0JyaW5nZXIgb2YgVHJvdWJsZXM7TGVnYWN5IG9mIHRoZSBFbGR3dXJtIENyZXN0O1ZhbnF1aXNoaW5nIERlbW9ucyBHZW5lcmFsIFYgMy4xO09ic2lkaWFuaG9vZiBHdWFyZGlhbjtDaW5kZXIgU2Vuc2VpO0ZpcnN0IE5pZ2h0IG9mIHRoZSBTdW1tZXIgQ2hpbGQ7U2t5LUhpZ2ggV2Fyc2hpcCBTdHlsZSAxIFYgMy4wO0h1bnRlcnMgRGF3bjtTYW11cmFpIG9mIFdpbmQgViAzLjA7RGl2aW5lIEFuY2hvciBTdHlsZSAyO1NpZWdlIG9mIHRoZSBBcmN0aWMgSGFsbDtMb3JkIG9mIENocm9ub3B0aWMgU3ludGhlc2lzO1dhci1CdXJyb3cgUmF2YWdlcjtUcmFpbCBvZiB0aGUgR3JleSBHaG9zdDtFcnVwdGluZyBXcmF0aCBWIDIuMDtGdXJ5IG9mIFdhciBHb2Q7TWVtb3JpZXMgb2YgdGhlIFZvdyBFdGVybmFsO1RoZSBGcmFjdHVyZWQgT3JkZXIgViAzLjA7RGFya2ZhbGwgV2FyZGVuO1ByaXNtYXRpYyBHcmFjZTtUcnVlYmFyayBBZGhlcmVudDtCbGFjayBOaWhpbGl0eTtUYWxlcyBvZiB0aGUgR3JleSBXYXN0ZXM7V2luZ3Mgb2YgdGhlIFBhbGFkaW4gU2V0O1N0YXJnYXplciBGaW5hbCBQcm9waGVjeTtNYW5kYXRlIG9mIHRoZSBOYW1lbGVzcztUYWxlcyBvZiB0aGUgV2luZHdhcmQgUm9ndWU7VmVuZ2VhbmNlIG9mIHRoZSBTdW53YXJyaW9yO0lyZSBvZiBNb2x0ZW4gUmViaXJ0aDtSZW1pbmlzY2VuY2Ugb2YgRHJlYW1zO1N1cmdpY2FsIFByZWNpc2lvbjtFeWUgb2YgdGhlIE1hemUgS2VlcGVyO01vbnN0cm91cyBSZXByaXNhbDtBbmNpZW50IE1hZ3VzIFN0eWxlIDI7RmF0aG9tbGVzcyBSYXZhZ2VyO0RhbmNlciBvZiB0aGUgU3BpdGVmdWwgRXllIFYgMy4wO0Jhc3Rpb24gb2YgdGhlIExpb25zZ3VhcmQ7R29sZCBTa3ltYWdlO1ZhbnRhZ2Ugb2YgdGhlIEJyZWFjaCBXYXJkZW47T2NlYW4gQ29ucXVlcm9yO0tlZW4gTWFjaGluZTtDeWNsb3BlYW4gTWFyYXVkZXI7VHJlayBvZiB0aGUgVHJhaWxibGF6ZXI7U3RvcmVnZ2EgMyBMVkwgVWx0ICsgSWNlIFRpbnk7QmFyayBvZiB0aGUgQWdlbGVzcyBXaXRuZXNzO1BsdW5kZXIgb2YgdGhlIFNhdmFnZSBNb25nZXI7RnJvc3QgQnJpZ2FkaWVyO0F0cm9jaXRpZXMgb2YgdGhlIEFieXNzYWwgU2NvdXJnZTtFY2hvZXMgb2YgdGhlIEV5cmllIFYgMi4wO0Zlcm9jaWQ5519cyBUb3hpY2FudDtDaGlsbCBvZiB0aGUgS2VlcGVycyBHYXplO0RyZWFkIENvbXBhY3Q7VGhlIER1c2sgQ3Jhd2xlciBTZXQ7T3V0bGFuZGlzaCBHb3VybWV0O0VtcGVyb3IgT2YgVGhlIENsZXJneTtSaWdodGVvdXMgVGh1bmRlcmJvbHQgYW5kIEFyY2FuYSBNZWdhUGFjaztIYXZvYyBvZiBEcmFnb24gUGFsYWNlIFYgMi4wO1NpbmlzdGVyIExpZ2h0bmluZzsgMTIzfHx8