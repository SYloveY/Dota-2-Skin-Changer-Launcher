bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogIDExMXx8fCAyMjI6OiAkMnkkMTAkWlRKaE1ESTNZVGhpTjJJMk9XRmpNZUhvRG9QejlGamU3bEx5UWI2NllGcWZRUThBY3pPa20gMjIyfHx8IDEyMzo6IFRlcnJhaW4gLSBXaW50ZXI7QXJtcyBvZiBEZXNvbGF0aW9uO0dvbGRlbiBIeWRyYWthbiBMYXRjaDtTb2xhciBGb3JnZTtXaW5ncyBvZiBNb2x0ZW4gUmViaXJ0aDtUZW1wZXN0IEhlbG0gb2YgdGhlIFRodW5kZXJnb2QgUHJlbTtHb2xkZW4gSW1tb3J0YWwgUGFudGhlb247QWVnaXMgYW5kIFJvc2hhbiBTdC4gVmFsZW50aW5lIERheTtCYWJ5IFJvc2hhbiBQcmVtO1NoYW1ibGluZyBEcmF1ZztIeW1uIG9mIHRoZSBQaWQ5519cyBQbGFndWUgSG9vZDtIZWxsKnMgR3VpZGU7QXNzYXNzaW5hdGlvbiBvZiBEYXJrIEZlYXRoZXIgU2hvdWxkZXI7QXRoZW5hIFBBIEhlYWQ7R3JhbmQgU3dvcmQgb2YgdGhlIFdpdGNoIEh1bnRlciBUZW1wbGFyO0luZG9taXRhYmxlIExlZ2FjeSAtIFdlYXBvbjtQYXVsZHJvbnMgb2YgdGhlIEd1YXJkaWFuIG9mIHRoZSBTYXBwaGlyZSBGbGFtZTtIZWxtIG9mIHRoZSBTdG9ybXdyb3VnaHQgQXJiaXRlcjtDb21tYW5kZXIqcyBTa2lydCBvZiB0aGUgRmxhbWVndWFyZDtCcmFjZXJzIG9mIHRoZSBTdG9ybXdyb3VnaHQgQXJiaXRlcjtDbGF3cyBvZiB0aGUgU2FuZ3N0cmF0aCBGb2xkO01hbnRsZSBvZiB0aGUgU2FuZ3N0cmF0aCBGb2xkO0JhcmRpbmcgb2YgdGhlIFNhbmdzdHJhdGggRm9sZDtIZWxtIG9mIHRoZSBGZXJvY2lvdXMgSGVhcnQ7RGFyayBXaWxsb3cgQW5ub3VuY2VyO0dsb29tYm9iO1RoZSBEdXNrYmxvb20gVHJpY2tzdGVyIEhlYWQ7RGFyayBXaWxsb3cgSXJvbiBUaG9ybiBCZWx0O1dpbmdzIG9mIHRoZSBGYWUgRm9yYWdlcjtUaGUgRHVza2Jsb29tIFRyaWNrc3RlciBBcm1vcjtEcmFnb25jbGF3IEhvb2s7RnVsbC1Cb3JlIEJvbmFuemE7QnJhY2VycyBvZiB0aGUgQ2F2ZXJuIEx1bWluYXI7R2FtYml0cyBvZiBOaXNoYWkgQmVsdDtHcmVhdCBTYWdlKnMgUmVja29uaW5nO1N0YWZmIG9mIEd1bi1ZdTtMaW5lYWdlIEhlbG0gb2YgQnJva2VuIFNjYWxlO0xpbmVhZ2UgQmVsdCBvZiBCcm9rZW4gU2NhbGU7TGluZWFnZSBCcmFjZXJzIG9mIEJyb2tlbiBTY2FsZTtMaW5lYWdlIEFybW9yIG9mIEJyb2tlbiBTY2FsZTtQYXVsZHJvbiBvZiB0aGUgRHJhZ29uKnMgRGlzY2lwbGU7TGluZWFnZSBCbGFkZSBvZiBCcm9rZW4gU2NhbGU7VGhlIEJhc2hlciBCbGFkZXM7UmVkIEdlbmVyYWxzIFNvdWwgU3BsaXR0ZXI7WXVsc2FyaWEqcyBNYW50bGU7R2xhY2lhbCBHYXJkZW5zIEhlYWQ7Um95YWwgV2ludGVyYmxvb20gQmFjaztSb3lhbCBXaW50ZXJibG9vbSBXZWFwb247V1cgUG9sYXIgTmlnaHQgQmFjaztBdXJvcmEqcyBQeXJlIEhlYWQ7QXVyb3JhKnMgUHlyZSBCYWNrO01hY2Ugb2YgQWVvbnM7RnJvemVuIFZvaWQgU2hvdWxkZXI7QXVndXIgb2YgT2JsaXZpb24gLSBIZWFkO0Zyb3plbiBWb2lkIEJlbHQ7RnJvemVuIFZvaWQgQXJtcztNYWxpY2lvdXMgU3RpbmcgQmFjaztUYWlsIG9mIERlcHJhdmVkIE1hbGZvcm1hdGlvbjtCZWx0IG9mIERlcHJhdmVkIE1hbGZvcm1hdGlvbjtSYXBpZXIgb2YgdGhlIEJ1cm5pbmcgR29kIE9mZmhhbmQ7UGF1bGRyb25zIG9mIHRoZSBWb2xjYW5pYyBHdWFyZDtCbGFja3NoaWVsZCBQcm90b2Ryb25lIE1pc3NpbGUgTGF1bmNoZXI7QmxhY2tzaGllbGQgUHJvdG9kcm9uZSBBcm1vcjtCbGFja3NoaWVsZCBQcm90b2Ryb25lIExhc2VyO0JsYWRlcyBvZiB0aGUgUHJlZGF0b3I7Q2xhd3Mgb2YgdGhlIEJsb29kIE1vb247R29kKnMgTWVyY3k7QXJlbmEgQ2hhbXBpb24gQXJtb3I7QXJlbmEgQ2hhbXBpb24gU3BlYXI7RnJvc3Rtb290IFRyZWU7TGFyZ2UgRWxlbWVudGFsIEljZTtNZWRpdW0gRWxlbWVudGFsIEljZTtTbWFsbCBFbGVtZW50YWwgSWNlO1RpbnkgRWxlbWVudGFsIEljZTtDb21wbGV0ZSBXaW5ncyBvZiB0aGUgRXRoZXJlYWwgTW9uYXJjaDtSaXR1YWwgb2YgdGhlIExveWFsIEZvbGQ7VG94aWMgRGVhdGggRWF0ZXI7R29sZGVuIE5pcnZhbmE7SGFydmVzdHMgSG91bmQ7RmlyZXMgb2YgVmFzaHVuZG9sIG5vIGVmZmVjdCBWIDIuMTtEaXJnZXN3b3JuIER5bmFzdHk7VGhlIEJhcHRpc20gb2YgTWVsdGluZyBGaXJlO1NlYWJvcm5lIFJlcHJpc2FsO1NhbXVyYWkgU2V0O0h1bnRlciBvZiB0aGUgQ3J5c3RhbCBEcmlmdDtNZW1vcmllcyBvZiB0aGUgVm93IEV0ZXJuYWw7SWNlIFNoYWtlcjtOb21hZCBvZiB0aGUgQnVybmluZyBEZWNyZWU7V2lja2VkIFNwYWNlIEtuaWdodDtEZXNlcnQgQnJvb2Rtb3RoZXI7R3JpbSBEZXN0aW55O1ZvbGF0aWxlIEZpcm1hbWVudCBWIDIuMDtXYXJkZW4gb2YgdGhlIFd5cm1mb3JnZSBTaGFyZDtMdXJrYWJsbztOYXJjaXNzaXN0aWMgTGVlY2g7TWFuZGF0ZSBvZiB0aGUgTmFtZWxlc3M7VGhlIE1hbmlwdWxhdG9yIFNldDtSdWxlciBvZiB0aGUgRnJvc3RiaXRlIER1bmVzO0JpdGUgb2YgdGhlIFN1cmdpbmcgV2luZDtNYXJhdWRlciBvZiB0aGUgQ2hhb3MgV2FzdGVzO09wdXMgb2YgdGhlIFZpemllciBFeGlsZSBWIDIuMTtUcmlhbHMgb2YgdGhlIEJsYWNrZ3VhcmQgTWFndXMgTm8gZWZmZWN0czsgMTIzfHx8