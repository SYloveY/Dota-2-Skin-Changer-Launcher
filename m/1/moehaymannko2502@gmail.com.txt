bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogMzY0NDQzMzUtMzMzMy0zNDM4LTU4NDMtRUM4RUI1NTYwQUYxOzsgMTExfHx8IDIyMjo6ICQyeSQxMCRNVEptT1dWa056WmpNV0ppTXpabU0uSi9YWUo3cEN6dE44SnpHZWtXWE10NjVCZGlTMDUxYSAyMjJ8fHwgMTIzOjogSmFkZSBSZWNrb25pbmcgUHJlbTtXYXJyaW9ycyBvZiB0aGUgRGVtb24gU3RvbmUgViAzLjE7UGxhdGVkIEJyYWNlcnMgb2YgdGhlIERlbW9uIFN0b25lO1BsYWNrYXJ0IG9mIHRoZSBEZW1vbiBTdG9uZTtNYW5lIG9mIHRoZSBEZW1vbiBTdG9uZTtOZWNrbGFjZSBvZiB0aGUgRGVtb24gU3RvbmU7Q3JpbXNvbiBCcmFjZXJzIG9mIEFlb25zIFByZW07UGVyY2VwdGlvbnMgb2YgdGhlIEV0ZXJuYWwgTWluZDtKZXdlbCBvZiBBZW9ucztNYWNlIG9mIEFlb25zIFByZW07RGFyayBBcnRpc3RyeSBUaHJvd2JhY2s7SnVnZ2VybmF1dCBBcmNhbmEgQmxhZGVmb3JtIExlZ2FjeTtMaW5lYWdlIG9mIHRoZSBTdG9ybWxvcmRzIC0gQmFjaztGb3J0dW5lcyBUb3V0IFByZW07TGluZWFnZSBvZiB0aGUgU3Rvcm1sb3JkcyAtIEFybXM7TGluZWFnZSBvZiB0aGUgU3Rvcm1sb3JkcyAtIExlZ3M7Q3JpbXNvbiBFZGdlIG9mIHRoZSBMb3N0IE9yZGVyO0hvcm5zIG9mIHRoZSBCZXRyYXllcjtIZWxsLVNwYXIgQW5hdGhlbWE7TXVsY3RhbnQgUGFsbCBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzO0ZpbiBLaW5ncyBDaGFybSBvZiBFbWluZW50IFJldml2YWw7Q3VsdCBvZiBBa3RvaztDaG9tcGVyIFdhcmQ7V2luZ3Mgb2YgdGhlIEZhdGFsIEJsb29tO1RhaWwgb2YgdGhlIEZlcm9jaWQ5519cyBUb3hpY2FudDtNb25hcmNoIG9mIHRoZSBTYXBwaGlyZSBHbGVuO1NpZ25zIG9mIHRoZSBBbGxmYXRoZXIgLSBIZWFkO1NpZ25zIG9mIHRoZSBBbGxmYXRoZXIgLSBXZWFwb247U2lnbnMgb2YgdGhlIEFsbGZhdGhlciAtIEFybXM7TWFudGxlIG9mIHRoZSBUcnVlYmFyayBBZGhlcmVudDtTaHJvb20gVGhpbmc7Q29uY29yZCBSZXZlcnNpb24gVVA7UGhhbnRvbSBDb25jb3JkIFByZW07Q29uY29yZCBEb21pbmlvbjtCcmFjZXJzIG9mIHRoZSBTdW53YXJyaW9yO0h1bWJsZSBEcmlmdGVyIFBhbnRzO0NvZGljaWwgb2YgdGhlIFZlaWxlZCBPbmVzO01hbmlmb2xkIFBhcmFkb3ggUEEgQXJjYW5hIFN0eWxlIDM7R290aGljIFdoaXNwZXIgQ2FwZTtHb3RoaWMgV2hpc3BlciBCZWx0O1NoYWRvdyBGaWVuZCBBcmNhbmEgRGVtb24gRWF0ZXI7R29sZGVuIEFybXMgb2YgRGVzb2xhdGlvbiBQcmVtO1BoYW50b20gQWR2ZW50IFdlYXBvbiBVUDtQaGFudG9tIEFkdmVudCBVUDtQaGFudG9tIEFkdmVudCBTaG91bGRlcnMgVVA7UGhhbnRvbSBBZHZlbnQgQmVsdCBVUDtCZW5ldm9sZW50IENvbXBhbmlvbiBQcmVtO0hpZGRlbiBWZWN0b3IgLSBCbGFkZTtIaWRkZW4gVmVjdG9yIC0gSGF0O0hpZGRlbiBWZWN0b3IgLSBCZWx0O0hpZGRlbiBWZWN0b3IgLSBBcm1vcjtGcmFjdGFsIEhvcm5zIG9mIElubmVyIEFieXNtIFVQO0JsYWRlcyBvZiB0aGUgRm91bGZlbGwgQ29ycnVwdG9yIFByZW1pdW07V2luZ3Mgb2YgdGhlIEZvdWxmZWxsIENvcnJ1cHRvciBQcmVtaXVtO0FuY2llbnQgSW5oZXJpdGFuY2UgLSBCYWNrO0FuY2llbnQgSW5oZXJpdGFuY2UgLSBTaG91bGRlcjtBbmNpZW50IEluaGVyaXRhbmNlIC0gQmVsdDtBbmNpZW50IEluaGVyaXRhbmNlIC0gTmVjaztDcnlzdGFsIERyeWFkIFByZW07U2tpdHRlcmluZyBEZXNvbGF0aW9uIFByZW07Q3JpbXNvbiBQaXF1ZTtHb2xkZW4gQ3lycmlkYWUgUHJlbTtDcmltc29uIEhlYXJ0cyBvZiBNaXNydWxlO1RoZSBTdW5icmVlemUgQmlydGhyaWdodDtEcmVzcyBvZiB0aGUgRmFlc2hhZGUgRmxvd2VyO0JlbGxvd3Mgb2YgQ3JlYXRpb247TWFjZSBvZiB0aGUgRmlzc3VyZWQgU291bDtWaXJnYXMgQXJjO0NhZXJ1bGVhbiBTdGFyIC0gQmVsdDtGbG91cmlzaGluZyBMb2Rlc3RhcjtTd2luZSBvZiB0aGUgU3Vua2VuIEdhbGxleSBQcmVtO0hlbG0gb2YgdGhlIEFyZGFsYW4gSW50ZXJkaWN0b3I7UGFjayBvZiB0aGUgQXJkYWxhbiBJbnRlcmRpY3RvcjtTbmlwZXIgSW1tb3J0YWwgV2VhcG9uIG9mIHRoZSBBcmRhbGFuIEludGVyZGljdG9yO0JyYWNlcnMgb2YgdGhlIEFyZGFsYW4gSW50ZXJkaWN0b3I7SW5rIERyYWdvbiBQb2V0O0VhcnRoc2hha2VyIE1lZ2FQYWNrIE5ldztBbnRpTWFnZSBGZW1hbGU7QXhlIGZ1bGwgSW1tb3J0YWxzIE1lZ2FwYWNrO01vbmtleSBLaW5nIEFyY2FuYSBNZWdhUGFjaztCYWJ5IFRveSBQdWRnZSBQZXJzb25hO09ncmUgTWFnaSBJbW1vcnRhbHMgQXJjYW5hIE1lZ2FQYWNrO1Zpc2lvbiBvZiB0aGUgU2VyYXBoIFNjaW9uIC0gTGlnaHQ7V2luZHJhbmdlciBBcmNhbmEgc3R5bGUgMSAoQmx1ZSBCaXJkKSArIEZ1bGwgV1IgaW1tb3J0YWw7RW1wZXJvciBvZiB0aGUgU3VuO0RlZmVuZGVyIG9mIHRoZSBCcnVtYWwgQ3Jlc3Q7UmlnaHRlb3VzIFRodW5kZXJib2x0IGFuZCBBcmNhbmEgTWVnYVBhY2s7Tnl4IEFzc2Fzc2luIE1lZ2FQYWNrIG5ldztXaXRjaCBEb2N0b3IgTWVnYVBhY2s7IDEyM3x8fA==