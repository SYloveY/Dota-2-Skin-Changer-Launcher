bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogIDExMXx8fCAyMjI6OiAkMnkkMTAkTUdGbE1UazFOemRpWXpjNE1qTTVNLmpXdzhBejlYSHJGT3RtaWtPeFh1S3RoRC9QL3JXYU8gMjIyfHx8IDEyMzo6IEdob3N0bHkgU2lsZW5jZSBIVUQ7VGhlIEludGVybmF0aW9uYWwgMjAyMCBNdXNpYyBQYWNrO1RlcnJhaW4gLSBTYW5jdHVtcyBvZiB0aGUgRGl2aW5lO1JlcHRpbGlhbiBSZWZ1Z2UgRGlyZSBDcmVlcHM7UmVwdGlsaWFuIFJlZnVnZSBSYWRpYW50IENyZWVwcztEZWNsYXJhdGlvbiBvZiB0aGUgRGl2aW5lIExpZ2h0IFJhZGlhbnQgVG93ZXJzO0RlY2xhcmF0aW9uIG9mIHRoZSBEaXZpbmUgU2hhZG93IERpcmUgVG93ZXJzO1dyYWl0aGJpbmRlcjtDcmltc29uIEdhdGVzIG9mIE5vdGhsO05vdGhsaWMgQnVyZGVuIG9mIHRoZSBDcmltc29uIFdpdG5lc3M7RGFya2NsYXcgRW1pc3NhcnkgU3RhZmY7RGFyayBBcnRpc3RyeSBUaHJvd2JhY2s7QmVuZXZvbGVudCBDb21wYW5pb24gViAyLjA7SnVnZ2VybmF1dCBBcmNhbmEgQmxhZGVmb3JtIExlZ2FjeTtEcmVhZCBSZXF1aXNpdGlvbjtTdWxsZW4gSGFydmVzdDtTdWxsZW4gUmFtcGFydDtTdWxsZW4gSG9sbG93O01hc2sgb2YgdGhlIENvbmZpZGFudDtDb2F0IG9mIHRoZSBXaW5kd2FyZCBSb2d1ZTtSYXBpZXIgb2YgdGhlIFdpbmR3YXJkIFJvZ3VlO01hbmlmb2xkIFBhcmFkb3ggUEEgQXJjYW5hIFN0eWxlIDE7Q29uY29yZCBSZXZlcnNpb24gVVA7Q29uY29yZCBEb21pbmlvbjtQaGFudG9tIENvbmNvcmQgUHJlbTtFZGljdCBvZiBTaGFkb3dzO1NoYWRvdyBNYXNxdWVyYWRlO0h1c2ggb2YgRXRlcm5hbCBOaWdodDtQaGFudG9tIEFkdmVudCBCZWx0IFVQO1BoYW50b20gQWR2ZW50IFVQO1BoYW50b20gQWR2ZW50IFNob3VsZGVycyBVUDtQaGFudG9tIEFkdmVudCBXZWFwb24gVVA7UGF1bGRyb25zIG9mIHRoZSBMb3lhbCBGb2xkO0hlYWRkcmVzcyBvZiB0aGUgTG95YWwgRm9sZDtBcm1vciBvZiB0aGUgTG95YWwgRm9sZDtUaW55IEZyb3N0bW9vdDtTbWFsbCBGcm9zdG1vb3Q7TWVkaXVtIEZyb3N0bW9vdDtMYXJnZSBGcm9zdG1vb3Q7RGFyayBNZWFkb3cgTWFzc2FjcmUgQXJtb3I7RGFyayBNZWFkb3cgTWFzc2FjcmUgSGVhZDtEYXJrIE1lYWRvdyBNYXNzYWNyZSBBcm1zO0hpZGRlbiBWZWN0b3IgLSBIYXQ7SGlkZGVuIFZlY3RvciAtIEFybW9yO0hpZGRlbiBWZWN0b3IgLSBCZWx0O0hpZGRlbiBWZWN0b3IgLSBCbGFkZTtXaW5kcmFuZ2VyIEFyY2FuYSBzdHlsZSAxO1Byb2ZhbmUgVW5pb24gQ2xvc2U7QXJjYW5hIERyZWFkIFJldHJpYnV0aW9uO0RyZWFkIFJldHJpYnV0aW9uIC0gQnJhY2VycztEcmVhZCBSZXRyaWJ1dGlvbiAtIENhcGU7RHJlYWQgUmV0cmlidXRpb24gLSBIZWFkd2VhcjtEcmVhZCBSZXRyaWJ1dGlvbiAtIExlZyBBcm1vcjtEcmVhZCBSZXRyaWJ1dGlvbiAtIFF1aXZlcjtEcmVhZCBSZXRyaWJ1dGlvbiAtIFNob3VsZGVyIEFybW9yO01hbnRsZSBvZiB0aGUgQ2luZGVyIEJhcm9uIFN0eWxlIDE7TW9sdGVuIENsYXcgUHJlbTtDcnVjaWJsZSBvZiBSaWxlO0Fkb3JpbmcgV2luZ2ZhbGw7UGFyYWdvbnMgUmVidWtlO0FybW9yIG9mIFNhY3JlZCBMaWdodDtGZXR0ZXJzIG9mIE9tbmlzY2llbmNlO0dyYW5kIEFic2Nlc3Npb247U2VjcmV0cyBvZiB0aGUgQ2VsZXN0aWFsIEhlYWQ7U2VjcmV0cyBvZiB0aGUgQ2VsZXN0aWFsIEJlbHQ7U2VjcmV0cyBvZiB0aGUgQ2VsZXN0aWFsIEJhY2s7SW5kb21pdGFibGUgTGVnYWN5IC0gQXJtcztJbmRvbWl0YWJsZSBMZWdhY3kgLSBCZWx0O0luZG9taXRhYmxlIExlZ2FjeSAtIEhlYWQ7SW5kb21pdGFibGUgTGVnYWN5IC0gU2hvdWxkZXI7VmlnaWwgVHJpdW1waDtDb2xsZWN0b3JzIEJhYnkgUm9zaGFuIDIwMTg7VEktMTAgQmxpbmsgbHZsIDIgRWZmZWN0O1RJLTEwIEV1bCBTY2VwdGVyIEVmZmVjdDtUSS0xMCBMZXZlbCBVcCBFZmZlY3Q7VEktMTAgUmFkaWFuY2UgRWZmZWN0O1RJLTEwIFRlbGVwb3J0IGx2bCAyIEVmZmVjdDtHcmFuZCBBYnNjZXNzaW9uIENoYWluO0FudGlNYWdlIEZlbWFsZTtCb3VudHkgSHVudGVyIE1hbmlhYyBTZXQ7RW1waXJpYyBJbmNlbmRpYXJ5O1d5cm1icmV3IENvbm5vaXNzZXVyO01hbmlwdWxhdG9yIG9mIFdhcnNpdHVhdGlvbjtUaGUgRHVza2Jsb29tIFRyaWNrc3RlcjtESyBQZXJzb25hIERhdmlvbjtLdW5nIGZ1IE1hc3RlcjtFbmlnbWEgTWVnYVBhY2s7RXhwbG9zaXZlIE1hbmlhYztUaGUgS2luZyBvZiBUaGlldmVzO0hlbGxmaXJlIEluc3VyZ2VudDtNaXJhbmEgVEkxMCBDb2xsZWN0b3JzIENhY2hlIE1lZ2FQYWNrO0JsYWNrIE5paGlsaXR5O09ncmUgTWFnaSBJbW1vcnRhbHMgQXJjYW5hIE1lZ2FQYWNrO1N0YXJnYXplciBGaW5hbCBQcm9waGVjeTtRdWVlbiBvZiBQYWluIEFyY2FuYSBNZWdhUGFjaztSdWJpY2sgQXJjYW5hIHdpdGggSW1tb3J0YWw7VGlua2VyIFNjYXJlY3JvdyBTZXQ7VmlzaW9uIG9mIHRoZSBTZXJhcGggU2Npb24gLSBGYWxsZW47VG9vbHMgb2YgdGhlIEhlbGxzd29ybjtGb3JldGVsbGVycyBPYXRoO1JpZ2h0ZWQ5519cyBUaHVuZGVyYm9sdCBhbmQgQXJjYW5hIE1lZ2FQYWNrO1RoZSBBbHBpbmUgU3RhbGtlcnMgU2V0O0J1cm5pbmcgTmlnaHRtYXJlO0Vzc2VuY2UgT2YgVGhlIERhcmsgTW9vbjtDcnVlbCBBc3NlbWJsYWdlOyAxMjN8fHw=