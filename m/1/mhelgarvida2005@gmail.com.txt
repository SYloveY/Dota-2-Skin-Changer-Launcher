limitHWID:: 1 000||| 111:: 2ABF4ADB-B9A4-BC48-BF84-89DACA020B92;; 111||| 222:: $2y$10$ZTZiZDg5ODgzNjQxZWRjNeiV3fxaXB.0BRoJeRhhg4tg2CcMOzuz6 222||| 123:: Black Ice Constellation - Arms;Black Ice Constellation - Cloak;Shooting Stars Head;Black Ice Constellation - Legs;Quiver of the Frostborne Wayfarer;Silver Dragon King Shoulder;TI-8 Fountain lvl 1 Effect;TI-7 Level Up Effect;Silver Dragon King Arms;Silver Dragon King Head;Drapes of Ascension;Silver Dragon King Off-Hand;Bloodfeather Wings;Assassination of Dark Feather Back;Assassination of Dark Feather Head;Assassination of Dark Feather Belt;Assassination of Dark Feather Shoulder;Gleaming Seal;The Gilded Maw Weapon;Cloak of the Battleranger;Bow of the Battleranger;Featherfall Locks;Featherfall Quiver;Pauldrons of the Battleranger;Black Ice Constellation - Shoulders;Complete Algid Legacy;Dreams of Midsummer Arms;Dreams of Midsummer Back;Dreams of Midsummer Quiver;Temple Gala - Mount;Dreams of Midsummer Shoulder;Temple Gala - Head;Temple Gala - Weapon;Krobeling Prem;Song of the Solstice Belt;Song of the Solstice Arms;Song of the Solstice Head;Song of the Solstice Neck;Song of the Solstice Weapon;Queen of Misrule Arms;Queen of Misrule Belt;Queen of Misrule Head;Queen of Misrule Neck;Honored Servant of the Empire; 123|||