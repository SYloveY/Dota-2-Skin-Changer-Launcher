bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogRUExODUxQ0MtQTY4Ni05RDE3LUEwQjUtMDBEODYxQTY5QUZBIDExMXx8fCAyMjI6OiAkMnkkMTAkTkdFNU9UQmlNak13TkRGaE16QXlNT2o0V2ZMd3E4ZUZYYURJd0d3TDFRSkxWZFdYWmlXaW0gMjIyfHx8IDEyMzo6IGRyaXZlX2Rpcjo6RGFya2JyZXcgRW5mb3JjZXIgYW5kIEV0ZXJuYWwgUmFkaWFuY2UgQmxhZGVzIGFuZCBNaWRhcyBLbnVja2xlcyBNZWdhUGFjaztkcml2ZV9kaXI6OkFBTWVnYVBhY2s7ZHJpdmVfZGlyOjpXaWNrZWQgU3BhY2UgS25pZ2h0O2RyaXZlX2Rpcjo6SXJlIG9mIHRoZSBBbmNpZW50IEdhb2xlciBBcm1zO2RyaXZlX2Rpcjo6SXJlIG9mIHRoZSBBbmNpZW50IEdhb2xlciBCYWNrO2RyaXZlX2Rpcjo6V3JhaXRoYmluZGVyO2RyaXZlX2Rpcjo6QXhlIGZ1bGwgSW1tb3J0YWxzIE1lZ2FwYWNrIGFsdDtkcml2ZV9kaXI6Ok9yaWdpbiBvZiB0aGUgVW5tYWtpbmc7ZHJpdmVfZGlyOjpTbHVtYmVyaW5nIFRlcnJvcjtkcml2ZV9kaXI6Ok5pZ2h0IFRlcnJvcnMgQmVsdDtkcml2ZV9kaXI6Ok5pZ2h0IFRlcnJvcnMgSGF0O2RyaXZlX2Rpcjo6R2hhc3RseSBOb2N0dXJuZTtkcml2ZV9kaXI6OkZpcmVzdGFydGVyIEZ1ZWwgQ2FubmlzdGVyO2RyaXZlX2Rpcjo6QmVhc3RtYXN0ZXIgTWVnYVBhY2s7ZHJpdmVfZGlyOjpFZGdlIG9mIEV4dGluY3Rpb24gSGVsbTtkcml2ZV9kaXI6OkNoaWVmdGFpbiBvZiB0aGUgUHJpbWFsIFRyaWJlcyBCZWFzdDtkcml2ZV9kaXI6OkNoaWVmdGFpbiBvZiB0aGUgUHJpbWFsIFRyaWJlcyBIYXdrO2RyaXZlX2Rpcjo6VGhpcnN0IG9mIEV6dHpob2sgQnVuZGxlIFByZW07ZHJpdmVfZGlyOjpTaG91bGRlciBvZiB0aGUgQmxvb2Rmb3JnZTtkcml2ZV9kaXI6Ok1hdyBvZiBFenR6aG9rO2RyaXZlX2Rpcjo6QmVsdCBvZiB0aGUgQmxvb2Rmb3JnZTtkcml2ZV9kaXI6OkNhcGUgb2YgdGhlIEJsb29kZm9yZ2U7ZHJpdmVfZGlyOjpCcmFjZXIgb2YgdGhlIEJsb29kZm9yZ2U7ZHJpdmVfZGlyOjpIZWFydGxlc3MgSHVudCAtIEFybW9yO2RyaXZlX2Rpcjo6SHVudGVycyBIb2FyZCBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzO2RyaXZlX2Rpcjo6SGVhcnRsZXNzIEh1bnQgLSBIZWFkO2RyaXZlX2Rpcjo6SGVhcnRsZXNzIEh1bnQgLSBPZmYtSGFuZDtkcml2ZV9kaXI6OlRpbmVzIG9mIFR5YmFyYTtkcml2ZV9kaXI6Ok1hcmsgb2YgdGhlIEZpcnN0IEh1bnQgSGFydmVzdGVkO2RyaXZlX2Rpcjo6TG9hZGVkIFByb3NwZWN0cztkcml2ZV9kaXI6OkVsaXhpciBvZiBEcmFnb25zIEJyZWF0aCBQcmVtO2RyaXZlX2Rpcjo6QmVhc3Qgb2YgdGhlIENyaW1zb24gUmluZyBCcmFjZXJzO2RyaXZlX2Rpcjo6UGlzdG9uIEltcGFsZXI7ZHJpdmVfZGlyOjpCbGFzdGZvcmdlIEV4aGFsZXIgb2YgdGhlIENyaW1zb24gV2l0bmVzcztkcml2ZV9kaXI6OkJlYXN0IG9mIHRoZSBDcmltc29uIFJpbmcgQXJtb3I7ZHJpdmVfZGlyOjpCZWFzdCBvZiB0aGUgQ3JpbXNvbiBSaW5nIFdlYXBvbjtkcml2ZV9kaXI6OkJyb29kbW90aGVyIE1lZ2FQYWNrO2RyaXZlX2Rpcjo6SWNlcGxhaW4gUmF2YWdlciBTaGllbGQ7ZHJpdmVfZGlyOjpJY2VwbGFpbiBSYXZhZ2VyIEhvcm47ZHJpdmVfZGlyOjpCZWx0IG9mIENvbnRlc3RlZCBGYXRlO2RyaXZlX2Rpcjo6R29sZGVuIEluZmVybmFsIENoaWVmdGFpbjtkcml2ZV9kaXI6OkljZXBsYWluIFJhdmFnZXIgQXJtb3I7ZHJpdmVfZGlyOjpJY2VwbGFpbiBSYXZhZ2VyIFRhaWw7ZHJpdmVfZGlyOjpJbmZlcm5hbCBNZW5hY2U7ZHJpdmVfZGlyOjpEaWFib2xpYyBBc3BlY3Q7ZHJpdmVfZGlyOjpUYWxvbnMgb2YgdGhlIEVuZGxlc3MgU3Rvcm0gTWQ5519bnQ7ZHJpdmVfZGlyOjpDaGFvcyBGdWxjcnVtO2RyaXZlX2Rpcjo6VGFsb25zIG9mIHRoZSBFbmRsZXNzIFN0b3JtIFNob3VsZGVyO2RyaXZlX2Rpcjo6Q2hhb3MgQXJiaXRlcjtkcml2ZV9kaXI6OkVtcGVyb3Igb2YgdGhlIFN1bjtkcml2ZV9kaXI6OkNsaW5reiBNZWdhUGFjaztkcml2ZV9kaXI6OkNsb2Nrd2VyayBNZWdhUGFjaztkcml2ZV9kaXI6OlJhYmlkIFdhdGNoY29nO2RyaXZlX2Rpcjo6UHJlbGF0ZXMgQnJhY2VycyBvZiB0aGUgV3l2ZXJuIExlZ2lvbjtkcml2ZV9kaXI6Oll1bHNhcmlhKnMgR2xhY2llciBQcmVtO2RyaXZlX2Rpcjo6WXVsc2FyaWFzIE1hbnRsZSBQcmVtO2RyaXZlX2Rpcjo6SWNlIEJsb3Nzb207ZHJpdmVfZGlyOjpCcmFjZXJzIG9mIEZvcmxvcm4gUHJlY2lwaWNlO2RyaXZlX2Rpcjo6Qm9vayBvZiB0aGUgVml6aWVyIEV4aWxlIFByZW07ZHJpdmVfZGlyOjpLZWVwZXIgb2YgT2xveGljYW0qcyBHbGFzcyBCZWx0O2RyaXZlX2Rpcjo6S2VlcGVyIG9mIE9sb3hpY2FtKnMgR2xhc3MgSGVhZDtkcml2ZV9kaXI6OktlZXBlciBvZiBPbG94aWNhbSpzIEdsYXNzIFBhdWxkcm9ucztkcml2ZV9kaXI6OkRyZXNzIG9mIHRoZSBGYWVzaGFkZSBGbG93ZXI7ZHJpdmVfZGlyOjpXaW5ncyBvZiB0aGUgRmFlc2hhZGUgRmxvd2VyO2RyaXZlX2Rpcjo6VGhlIFN1bmJyZWV6ZSBCaXJ0aHJpZ2h0O2RyaXZlX2Rpcjo6Q3JpbXNvbiBIZWFydHMgb2YgTWlzcnVsZTtkcml2ZV9kaXI6OkRhcmtjbGF3IEVtaXNzYXJ5IEFybXM7ZHJpdmVfZGlyOjpDcmltc29uIEdhdGVzIG9mIE5vdGhsO2RyaXZlX2Rpcjo6RGFya2NsYXcgRW1pc3NhcnkgRHJlc3M7ZHJpdmVfZGlyOjpOb3RobGljIEJ1cmRlbiBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzIFByZW07ZHJpdmVfZGlyOjpEYXJrY2xhdyBFbWlzc2FyeSBTdGFmZjtkcml2ZV9kaXI6Okdob3N0cyBvZiBFdGVybmFsIFRlc3RhbWVudDtkcml2ZV9kaXI6OkNvdmVycyBvZiB0aGUgTWVycXVlZW47ZHJpdmVfZGlyOjpTbGVldmVzIG9mIHRoZSBNZXJxdWVlbjtkcml2ZV9kaXI6OkNyb3duIG9mIHRoZSBNZXJxdWVlbjtkcml2ZV9kaXI6OkRyZXNzIG9mIHRoZSBNZXJxdWVlbjtkcml2ZV9kaXI6OldyYXBzIG9mIHRoZSBTdG9ybWNoYXJnZSBEcmFnb29uO2RyaXZlX2Rpcjo6UmVzaXN0aXZlIFBpbmZvbGQgUHJlbTtkcml2ZV9kaXI6OkhhdCBvZiB0aGUgU3Rvcm1jaGFyZ2UgRHJhZ29vbjtkcml2ZV9kaXI6OkJlYXN0IG9mIHRoZSBEZWZlbmRlciBvZiBSdWluO2RyaXZlX2Rpcjo6TWFudGxlIG9mIHRoZSBTdG9ybWNoYXJnZSBEcmFnb29uO2RyaXZlX2Rpcjo6T3JiIG9mIERlbGl2ZXJhbmNlO2RyaXZlX2Rpcjo6RG9vbSBJbW1vcnRhbHMgTWVnYVBhY2s7ZHJpdmVfZGlyOjpTY29yY2hlZCBBbWJlciBCcmFjZXI7ZHJpdmVfZGlyOjpTY29yY2hlZCBBbWJlciBCZWx0O2RyaXZlX2Rpcjo6U2NvcmNoZWQgQW1iZXIgSGVsbTtkcml2ZV9kaXI6OlNjb3JjaGVkIEFtYmVyIFNoaWVsZDtkcml2ZV9kaXI6OktpbmRyZWQgb2YgdGhlIElyb24gRHJhZ29uIFYgMy4wO2RyaXZlX2Rpcjo6U2NvcmNoZWQgQW1iZXIgQXJtb3I7ZHJpdmVfZGlyOjpTY29yY2hlZCBBbWJlciBTd29yZDtkcml2ZV9kaXI6OkJyYWNlcnMgb2YgdGhlIFNhY3JlZCBIdW50O2RyaXZlX2Rpcjo6U2lsZW50IFdha2Ugb2YgdGhlIENyaW1zb24gV2l0bmVzcztkcml2ZV9kaXI6OkNyb3duIG9mIHRoZSBTYWNyZWQgSHVudDtkcml2ZV9kaXI6OlNraXJ0IG9mIHRoZSBTYWNyZWQgSHVudDtkcml2ZV9kaXI6OlF1aXZlciBvZiB0aGUgS2hhLVJlbiBGYWl0aGZ1bDtkcml2ZV9kaXI6OlNob3VsZGVycyBvZiB0aGUgU2FjcmVkIEh1bnQ7ZHJpdmVfZGlyOjpSZWFwZXJzIFdyZWF0aDtkcml2ZV9kaXI6OlR1cnF1b2lzZSBHaWFudCBHdWFyZDtkcml2ZV9kaXI6OkphZGUgUmVja29uaW5nIFByZW07ZHJpdmVfZGlyOjpNb251bWVudHMgb2YgdGhlIE5hdHVyYWwgRGVtaXVyZ2U7ZHJpdmVfZGlyOjpNYWNlIG9mIHRoZSBGaXNzdXJlZCBTb3VsO2RyaXZlX2Rpcjo6QmVsbG93cyBvZiBDcmVhdGlvbjtkcml2ZV9kaXI6OlR1bmljIG9mIHRoZSBXYW5kZXJpbmcgRmxhbWU7ZHJpdmVfZGlyOjpNYXN0ZXIgb2YgdGhlIFNlYXJpbmcgUGF0aCBIZWFkO2RyaXZlX2Rpcjo6Q2luZGVyIFNlbnNlaSBPZmYgSGFuZCBXZWFwb247ZHJpdmVfZGlyOjpBcG9nZWUgb2YgdGhlIEd1YXJkaWFuIEZsYW1lO2RyaXZlX2Rpcjo6Q2luZGVyIFNlbnNlaSBXZWFwb247ZHJpdmVfZGlyOjpNYXN0ZXIgb2YgdGhlIFNlYXJpbmcgUGF0aCBBcm1zO2RyaXZlX2Rpcjo6U29uZ3Mgb2YgU3RhcmZhbGwgR2xlbiAtIEFybXM7ZHJpdmVfZGlyOjpCZWx0IG9mIHRoZSBTb3V0aCBTdGFyO2RyaXZlX2Rpcjo6RmxvdXJpc2hpbmcgTG9kZXN0YXIgUHJlbTtkcml2ZV9kaXI6OlZpcmdhcyBBcmM7ZHJpdmVfZGlyOjpCcmFjZXJzIG9mIEFlb25zIFByZW07ZHJpdmVfZGlyOjpDbGFzenVyZW1lIEluY3Vyc2lvbiBCZWx0O2RyaXZlX2Rpcjo6RmFjZWxlc3MgTWFkbmVzcztkcml2ZV9kaXI6Okpld2VsIG9mIEFlb25zIFByZW07ZHJpdmVfZGlyOjpNYWNlIG9mIEFlb25zIFByZW07ZHJpdmVfZGlyOjpIZXJhbGQgb2YgdGhlIEVtYmVyIEV5ZSAtIEFybW9yO2RyaXZlX2Rpcjo6UmVtbmFudHMgb2YgQXNjZW5zaW9uO2RyaXZlX2Rpcjo6Rm9ydHVuZSBvZiB0aGUgRml2ZSBIb3VzZXM7ZHJpdmVfZGlyOjpIZXJhbGQgb2YgdGhlIEVtYmVyIEV5ZSAtIEJlbHQ7ZHJpdmVfZGlyOjpQcm9wZWxsZXJzIG9mIHRoZSBWZXNwaWR1biBIdW50ZXItS2lsbGVyO2RyaXZlX2Rpcjo6SGVhZCBvZiB0aGUgVmVzcGlkdW4gSHVudGVyLUtpbGxlcjtkcml2ZV9kaXI6OkNvbmUgb2YgdGhlIFZlc3BpZHVuIEh1bnRlci1LaWxsZXI7ZHJpdmVfZGlyOjpQYXlsb2FkIG9mIHRoZSBWZXNwaWR1biBIdW50ZXItS2lsbGVyO2RyaXZlX2Rpcjo6R29sZGVuIEF0b21pYyBSYXkgVGhydXN0ZXJzIFByZW07ZHJpdmVfZGlyOjpIdXNrYXIgTWVnYVBhY2sgTkVXO2RyaXZlX2Rpcjo6SW1tb3J0YWwgSW52b2tlciBLaWQ7ZHJpdmVfZGlyOjpCZW5ldm9sZW50IENvbXBhbmlvbiBQcmVtO2RyaXZlX2Rpcjo6SmFraXJvIEltbW9ydGFscyBIZWFkcztkcml2ZV9kaXI6Okpha2lybyBJbW1vcnRhbCBXaW5ncztkcml2ZV9kaXI6OlRoZSBLaW5nIE9mIFRoaWV2ZXMgQmVsdDtkcml2ZV9kaXI6OlRoZSBLaW5nIE9mIFRoaWV2ZXMgSGVhZDtkcml2ZV9kaXI6OldpbmdzIG9mIERheWJyZWFrO2RyaXZlX2Rpcjo6UHJvbWluZW5jZTtkcml2ZV9kaXI6Okt1bmtrYSBJbW1vcnRhbHMgTWVnYVBhY2s7ZHJpdmVfZGlyOjpMZWdpb24gQ29tbWFuZGVyIE1vZE1ha2VyIE1lZ2FQYWNrO2RyaXZlX2Rpcjo6VGh1bmRlciBHcmlmZmluO2RyaXZlX2Rpcjo6VG9ybWVudGVkIENyb3duO2RyaXZlX2Rpcjo6VG9ybWVudGVkIFN0YWZmO2RyaXZlX2Rpcjo6R2xhcmUgb2YgdGhlIFR5cmFudDtkcml2ZV9kaXI6OlRvbWUgb2YgRm9yYmlkZGVuIEtub3dsZWRnZTtkcml2ZV9kaXI6OkJlbHQgb2YgVmlsZSBDb252b2NhdGlvbjtkcml2ZV9kaXI6OkxpY2ggSW1tb3J0YWwgSGVhZCBQZXJ2ZXJzaW9ucyBvZiB0aGUgQmxvb2R3aG9ybDtkcml2ZV9kaXI6OlNoZWFyaW5nIERlcG9zaXRpb247ZHJpdmVfZGlyOjpHb2xkZW4gRGFyayBNYXcgSW5oaWJpdG8gYW5kIEdvbGRlbiBQcm9mYW5lIFVuaW9uIGFuZCBHb2xkZW4gRHJlYWQgUmVxdWlzaXRpb24gTGlmZXN0ZWFsZXIgSW1tb3J0YWxzIE1lZ2FwYWNrO2RyaXZlX2Rpcjo6R2xvcnkgb2YgdGhlIEVsZGVyZmxhbWUgLSBBcm1zO2RyaXZlX2Rpcjo6V3lybXdyb3VnaHQgRmxhcmU7ZHJpdmVfZGlyOjpTb3VsIG9mIHRoZSBTbGF5ZXIgUHJlbTtkcml2ZV9kaXI6OkRpc2NpcGxlIG9mIHRoZSBXeXJtd3JvdWdodCBGbGFtZTtkcml2ZV9kaXI6OkN1cnNlIG9mIHRoZSBNYWxpZ25hbnQgQ29ycnVwdGlvbiBTZXQ7ZHJpdmVfZGlyOjpGaW4gS2luZ3MgQ2hhcm0gb2YgRW1pbmVudCBSZXZpdmFsIEV4Y2VwdGlvbmFsO2RyaXZlX2Rpcjo6TXVsY3RhbnQgUGFsbCBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzO2RyaXZlX2Rpcjo6SG9ybnMgb2YgdGhlIEJldHJheWVyO2RyaXZlX2Rpcjo6SGVsbC1TcGFyIEFuYXRoZW1hIE9ic2lkaWFuIEJsaWdodDtkcml2ZV9kaXI6OkxvbmUgRHJ1aWQgTWVnYVBhY2s7ZHJpdmVfZGlyOjpIZWxtIG9mIHRoZSBEYXJrIE1vb24gU3RhbGtlcjtkcml2ZV9kaXI6Ok1vdW50IG9mIHRoZSBXaW5nZWQgU2VudGluZWw7ZHJpdmVfZGlyOjpNb29uZmFsbCBQcmVtO2RyaXZlX2Rpcjo6QXJtb3Igb2YgdGhlIFdpbmdlZCBTZW50aW5lbDtkcml2ZV9kaXI6OlR3aWxpZ2h0IFNjaGlzbTtkcml2ZV9kaXI6Okx5Y2FuIEtpc2lsZXYgTW9kTWFrZXIgTWVnYVBhY2s7ZHJpdmVfZGlyOjpCcmFjZXIgb2YgdGhlIFNwaXJhbCBCb3JlO2RyaXZlX2Rpcjo6QmVsdCBvZiBPcm5hdGUgQ3J1ZWx0eTtkcml2ZV9kaXI6OkV5ZXMgb2YgQXJkZW5vaztkcml2ZV9kaXI6Okhvcm4gb2YgdGhlIFNwaXJhbCBCb3JlO2RyaXZlX2Rpcjo6U2hvY2sgb2YgdGhlIEFudmlsIFByZW07ZHJpdmVfZGlyOjpHb2QqcyBNZXJjeTtkcml2ZV9kaXI6OkZvcnN3b3JuIExlZ2FjeSAtIEFybW9yO2RyaXZlX2Rpcjo6Rm9yc3dvcm4gTGVnYWN5IC0gTGVncztkcml2ZV9kaXI6Ok1lZHVzYSBNZWdhUGFjayBORVc7ZHJpdmVfZGlyOjpQaXRtb3VzZSBGcmF0ZXJuaXR5IEJyYWNlcjtkcml2ZV9kaXI6OkNvbG9zc2FsIENyeXN0YWwgQ2hvcnVzIFByZW07ZHJpdmVfZGlyOjpQaXRtb3VzZSBGcmF0ZXJuaXR5IEdvZ2dsZXM7ZHJpdmVfZGlyOjpQaXRtb3VzZSBGcmF0ZXJuaXR5IFBhdWxkcm9uO2RyaXZlX2Rpcjo6UGl0bWQ5519c2UgRnJhdGVybml0eSBUYWlsO2RyaXZlX2Rpcjo6QmxhZGUgb2YgdGhlIEZyYWN0dXJlZCBPcmRlcjtkcml2ZV9kaXI6OlB1bHNhciBSZW1uYW50IFByZW07ZHJpdmVfZGlyOjpBeGlhIG9mIE1ldGlyYTtkcml2ZV9kaXI6OlNwaXJpdCBvZiB0aGUgU2FjcmVkIEdyb3ZlIC0gQXJtcztkcml2ZV9kaXI6OlNwaXJpdCBvZiB0aGUgU2FjcmVkIEdyb3ZlIC0gQmFjaztkcml2ZV9kaXI6OlNwaXJpdCBvZiB0aGUgU2FjcmVkIEdyb3ZlIC0gUXVpdmVyO2RyaXZlX2Rpcjo6U3Bpcml0IG9mIHRoZSBTYWNyZWQgR3JvdmUgLSBTaG91bGRlcjtkcml2ZV9kaXI6OkJsYWRlcyBvZiBQcmlzbWF0aWMgR3JhY2U7ZHJpdmVfZGlyOjpUaGUgT3JkZXIgb2YgQ3lwcmluO2RyaXZlX2Rpcjo6Q2hpbGRyZW4gb2YgVmVyb2RpY2lhO2RyaXZlX2Rpcjo6U2lnbnMgb2YgdGhlIEFsbGZhdGhlciAtIEFybXM7ZHJpdmVfZGlyOjpNb25hcmNoIG9mIHRoZSBTYXBwaGlyZSBHbGVuO2RyaXZlX2Rpcjo6U2lnbnMgb2YgdGhlIEFsbGZhdGhlciAtIEhlYWQ7ZHJpdmVfZGlyOjpTaWducyBvZiB0aGUgQWxsZmF0aGVyIC0gTmVjaztkcml2ZV9kaXI6Ok1hbnRsZSBvZiB0aGUgVHJ1ZWJhcmsgQWRoZXJlbnQ7ZHJpdmVfZGlyOjpTdWZmZXJ3b29kIFNhcGxpbmc7ZHJpdmVfZGlyOjpTdWxsZW4gSGFydmVzdDtkcml2ZV9kaXI6OlN1bGxlbiBIb2xsb3cgUHJlbTtkcml2ZV9kaXI6OlN1bGxlbiBSYW1wYXJ0O2RyaXZlX2Rpcjo6Rm93bCBPbWVuIEhlYWQ7ZHJpdmVfZGlyOjpGb3dsIE9tZW4gQmVhcmQ7ZHJpdmVfZGlyOjpOaWdodCBTdGFsa2VyIE1lZ2FQYWNrO2RyaXZlX2Rpcjo6T2dyZSBNYWdpIEltbW9ydGFscyBBcmNhbmEgTWVnYVBhY2s7ZHJpdmVfZGlyOjpBZG9yaW5nIFdpbmdmYWxsIFByZW07ZHJpdmVfZGlyOjpGZXR0ZXJzIG9mIE9tbmlzY2llbmNlO2RyaXZlX2Rpcjo6UGFyYWdvbnMgUmVidWtlO2RyaXZlX2Rpcjo6RmxpZ2h0IG9mIHRoZSBVbmR5aW5nIExpZ2h0O2RyaXZlX2Rpcjo6R2F1bnRsZXRzIG9mIFNhY3JlZCBMaWdodDtkcml2ZV9kaXI6OkRyZXNzIG9mIHRoZSBIaWVyb3BoYW50O2RyaXZlX2Rpcjo6QmFjayBvZiB0aGUgSGllcm9waGFudDtkcml2ZV9kaXI6OlNhZ2FzIG9mIHRoZSBDeW11cnJpbiBTYWdlO2RyaXZlX2Rpcjo6QWxsdXZpb24gUHJvcGhlY3kgViAyLjA7ZHJpdmVfZGlyOjpPdXR3b3JsZCBEZXZvdXZlciBNZWdhUGFjaztkcml2ZV9kaXI6OlRhbGVzIG9mIHRoZSBXaW5kd2FyZCBSb2d1ZTtkcml2ZV9kaXI6Ok1hc2sgb2YgdGhlIENvbmZpZGFudDtkcml2ZV9kaXI6Ok1hbmlmb2xkIFBhcmFkb3ggUEEgQXJjYW5hIFN0eWxlIDM7ZHJpdmVfZGlyOjpQaGFudG9tIENvbmNvcmQgUHJlbTtkcml2ZV9kaXI6OkNvbmNvcmQgRG9taW5pb247ZHJpdmVfZGlyOjpDb25jb3JkIFJldmVyc2lvbiBVUDtkcml2ZV9kaXI6OkJyYWNlcnMgb2YgdGhlIFJlZCBTYW5kcztkcml2ZV9kaXI6OkJlbHQgb2YgdGhlIFJlZCBTYW5kcztkcml2ZV9kaXI6OlNvbGFyIEZvcmdlIFByZW07ZHJpdmVfZGlyOjpTb2xhciBHeXJlO2RyaXZlX2Rpcjo6QmxhemUgb2YgT2JsaXZpb24gU3VwZXJub3ZhO2RyaXZlX2Rpcjo6UmVtaW5pc2NlbmNlIG9mIERyZWFtcztkcml2ZV9kaXI6OlB1Z25hIEltbW9ydGFscyBNZWdhUGFjaztkcml2ZV9kaXI6OkdvbGRlbiBFeWUgb2YgSXgqeXhhO2RyaXZlX2Rpcjo6QnJhY2VycyBvZiB0aGUgR3VhcmRpYW4gQ29uc3RydWN0IEJlc3Rvd2VkO2RyaXZlX2Rpcjo6Q2hlc3RwbGF0ZSBvZiB0aGUgR3VhcmRpYW4gQ29uc3RydWN0IEJlc3Rvd2VkO2RyaXZlX2Rpcjo6U2tpcnQgb2YgdGhlIEd1YXJkaWFuIENvbnN0cnVjdCBCZXN0b3dlZDtkcml2ZV9kaXI6OkdvbGRlbiBTZXZlcmluZyBDcmVzdCBQcmVtO2RyaXZlX2Rpcjo6U2V2ZXJpbmcgTGFzaCBQcmVtO2RyaXZlX2Rpcjo6SHVuZ2VyIG9mIHRoZSBIb3dsaW5nIFdpbGRzIEFybXM7ZHJpdmVfZGlyOjpHb2xkZW4gRWRpY3Qgb2YgU2hhZG93cztkcml2ZV9kaXI6Okh1bmdlciBvZiB0aGUgSG93bGluZyBXaWxkcyBPZmYtSGFuZCBXZWFwb247ZHJpdmVfZGlyOjpHb2xkZW4gU2hhZG93IE1hc3F1ZXJhZGUgUHJlbTtkcml2ZV9kaXI6OlNtb2tlIEJvbWIgb2YgTW9uc3Ryb3VzIFJlcHJpc2FsO2RyaXZlX2Rpcjo6SHVuZ2VyIG9mIHRoZSBIb3dsaW5nIFdpbGRzIFdlYXBvbjtkcml2ZV9kaXI6OkhhdCBvZiBGYW50b2NjaW5pcyBEaWxlbW1hO2RyaXZlX2Rpcjo6VGhlIEJhcnJlbiBDcm93biBQcmVtO2RyaXZlX2Rpcjo6VGFpbCBvZiB0aGUgU2NvdXJpbmcgRHVuZXM7ZHJpdmVfZGlyOjpUaGUgQmFycmVuIFZlY3Rvcjtkcml2ZV9kaXI6OlNob3VsZGVyYmxhZGVzIG9mIHRoZSBSZWQgU2FuZCBXYXJyaW9yO2RyaXZlX2Rpcjo6TGVncyBvZiB0aGUgUmVkIFNhbmQgV2Fycmlvcjtkcml2ZV9kaXI6OkNyb3duIG9mIENhbGFwaGFzIEFybW9yO2RyaXZlX2Rpcjo6R29sZGVuIE1hbnRsZSBvZiBHcmltIEZhY2FkZTtkcml2ZV9kaXI6OkNyb3duIG9mIENhbGFwaGFzIFRhaWw7ZHJpdmVfZGlyOjpDcm93biBvZiBDYWxhcGhhcyBCZWx0O2RyaXZlX2Rpcjo6U0YgQXJjYW5hIE1lZ2FwYWNrO2RyaXZlX2Rpcjo6QXJtcyBvZiB0aGUgTHVjZW50IENhbm9weTtkcml2ZV9kaXI6OkhhdWwgb2YgdGhlIEx1Y2VudCBDYW5vcHk7ZHJpdmVfZGlyOjpMYXNoIG9mIHRoZSBMaXphcmQgS2luO2RyaXZlX2Rpcjo6Q3JpbXNvbiBDZW5zZXIgb2YgR2xpc3MgVVA7ZHJpdmVfZGlyOjpTd2FtcCBTaGFtYW4gV2FyZHM7ZHJpdmVfZGlyOjpHb2xkZW4gTGFtYiB0byB0aGUgU2xhdWdodGVyIFByZW07ZHJpdmVfZGlyOjpTaWxlbnQgU2xheWVyIC0gRXF1aXBtZW50O2RyaXZlX2Rpcjo6U2lsZW50IFNsYXllciAtIEJlbHQ7ZHJpdmVfZGlyOjpBc3BlY3Qgb2YgT3NjaWxsYTtkcml2ZV9kaXI6OlNpbGVudCBTbGF5ZXIgLSBTaG91bGRlcjtkcml2ZV9kaXI6OkdsYWl2ZSBvZiBPc2NpbGxhO2RyaXZlX2Rpcjo6RGFtYXJha2FuIE11enpsZTtkcml2ZV9kaXI6OlNlY3JldHMgb2YgdGhlIENlbGVzdGlhbCBTaG91bGRlcjtkcml2ZV9kaXI6OlNlY3JldHMgb2YgdGhlIENlbGVzdGlhbCBIZWFkO2RyaXZlX2Rpcjo6U2VjcmV0cyBvZiB0aGUgQ2VsZXN0aWFsIEJlbHQ7ZHJpdmVfZGlyOjpHb2xkZW4gRmxpZ2h0IG9mIEVwaXBoYW55O2RyaXZlX2Rpcjo6R29sZGVuIEVtcHlyZWFuIFByZW07ZHJpdmVfZGlyOjpTZWNyZXRzIG9mIHRoZSBDZWxlc3RpYWwgQXJtcztkcml2ZV9kaXI6OkdvbGRlbiBIeWRyYWthbiBMYXRjaDtkcml2ZV9kaXI6OlNoYWRvdyBpbiB0aGUgRGVlcCBBcm1vcjtkcml2ZV9kaXI6OlNlYSBSYWtlcyBCcmlkbGU7ZHJpdmVfZGlyOjpTaGFkb3cgaW4gdGhlIERlZXAgQmFjaztkcml2ZV9kaXI6OlNoYWRvdyBpbiB0aGUgRGVlcCBCcmFjZXJzO2RyaXZlX2Rpcjo6RGVzZXJ0IEJ1cm4gU2FkZGxlO2RyaXZlX2Rpcjo6RGVzZXJ0IEJ1cm4gT3V0Zml0O2RyaXZlX2Rpcjo6RGVzZXJ0IEJ1cm4gQ2FwO2RyaXZlX2Rpcjo6RGVzZXJ0IEJ1cm4gTW9ydHkgSW1tb3J0YWw7ZHJpdmVfZGlyOjpEZXNlcnQgQnVybiBDcm9zc2Jvdztkcml2ZV9kaXI6OlNuaXBlciBJbW1vcnRhbCBXZWFwb24gb2YgdGhlIEFyZGFsYW4gSW50ZXJkaWN0b3I7ZHJpdmVfZGlyOjpCbGFja3NhaWwgQ2Fubm9uZWVyIFNob3VsZGVyO2RyaXZlX2Rpcjo6VG9wIEhhdCBvZiB0aGUgT2NjdWx0aXN0cyBQdXJzdWl0O2RyaXZlX2Rpcjo6R29sZGVuIEZ1bGwtQm9yZSBCb25hbnphO2RyaXZlX2Rpcjo6QnJhY2VycyBvZiB0aGUgU2lsdmVyIEZveDtkcml2ZV9kaXI6OlNwaXJpdCBCcmVha2VyIE1lZ2FQYWNrO2RyaXZlX2Rpcjo6U3Rvcm0gU3Bpcml0IE1lZ2FQYWNrO2RyaXZlX2Rpcjo6U3ZlbiBJbW1vcnRhbHMgTWVnYVBhY2sgVVA7ZHJpdmVfZGlyOjpTd2luZSBvZiB0aGUgU3Vua2VuIEdhbGxleSBQcmVtO2RyaXZlX2Rpcjo6U3Rld2FyZCBvZiB0aGUgRm9yYmlkZGVuIENoYW1iZXIgSGVhZDtkcml2ZV9kaXI6Ok1hbnRsZSBvZiB0aGUgV2hpc3BlcmVkIEJvbmQ7ZHJpdmVfZGlyOjpGb2NhbCBSZXNvbmFuY2UgViAzLjA7ZHJpdmVfZGlyOjpHb2xkIENvbG9yIGZvciBUQjtkcml2ZV9kaXI6OlNjeXRoZXMgb2YgU29ycm93O2RyaXZlX2Rpcjo6Q2hhc20gb2YgdGhlIEJyb2tlbiBDb2RlIEFybW9yO2RyaXZlX2Rpcjo6Q2hhc20gb2YgdGhlIEJyb2tlbiBDb2RlIEhlbG07ZHJpdmVfZGlyOjpEZW1vbiBGb3JtIG9mIHRoZSBGb3VsZmVsbCBDb3JydXB0b3IgVVA7ZHJpdmVfZGlyOjpDb250cm9sbGVkIEJ1cm47ZHJpdmVfZGlyOjpDbGVhcmN1dCBDYXZhbGllciBTaG91bGRlcnM7ZHJpdmVfZGlyOjpHb2xkZW4gUmVjdGlmaWVyO2RyaXZlX2Rpcjo6SGVsbSBvZiB0aGUgU2llZ2UgRW5naW5lO2RyaXZlX2Rpcjo6SHVsbCBvZiB0aGUgU2llZ2UgRW5naW5lO2RyaXZlX2Rpcjo6QXJtb3Igb2YgdGhlIFNpZWdlIEVuZ2luZTtkcml2ZV9kaXI6OkFyY2FuaWMgUmVzb25hbmNlIEJlYW07ZHJpdmVfZGlyOjpSb2xsZXJtYXdzdGVyIGFuZCBNZWNoYSBCb290cyBvZiBUcmF2ZWwgTWsgSUlJO2RyaXZlX2Rpcjo6U3VibWVyZ2VkIEhhemFyZCBQcm9wZWxsZXI7ZHJpdmVfZGlyOjpTdWJtZXJnZWQgSGF6YXJkIExhdW5jaGVyO2RyaXZlX2Rpcjo6U3VibWVyZ2VkIEhhemFyZCBIdWxsO2RyaXZlX2Rpcjo6VHJlYW50IEltbW9ydGFsIEhlYWQgU3R1bnR3b29kIFN5bWJpb250O2RyaXZlX2Rpcjo6U3RvY2sgb2YgdGhlIFNwbGludGVyaW5nIEF3ZTtkcml2ZV9kaXI6OkFybXMgb2YgdGhlIFNwbGludGVyaW5nIEF3ZTtkcml2ZV9kaXI6OlN0dW50d29vZCBTYW5jdHVhcnk7ZHJpdmVfZGlyOjpMYXJnZSBGcm9zdG1vb3Q7ZHJpdmVfZGlyOjpNZWRpdW0gRnJvc3Rtb290O2RyaXZlX2Rpcjo6U21hbGwgRnJvc3Rtb290O2RyaXZlX2Rpcjo6VGlueSBGcm9zdG1vb3Q7ZHJpdmVfZGlyOjpTd29yZCBvZiB0aGUgQ29sb3NzdXMgUHJlbTtkcml2ZV9kaXI6OkFybW9yIG9mIHRoZSBTYXZhZ2UgTW9uZ2VyO2RyaXZlX2Rpcjo6SGVsbSBvZiB0aGUgU2F2YWdlIE1vbmdlcjtkcml2ZV9kaXI6OlNjYWxlIG9mIEJpdHRlciBTcG9pbCBJbW1vcnRhbCBVUDtkcml2ZV9kaXI6OkJpdHRlciBMaW5lYWdlIEltbW9ydGFsIEF4ZXM7ZHJpdmVfZGlyOjpFeWUgb2YgdGhlIFdlYXRoZXJlZCBTdG9ybSBTaWdpbDtkcml2ZV9kaXI6OkdvbGRlbiBQaXNjZWFuIFB1bHZlcml6ZXI7ZHJpdmVfZGlyOjpXaGlza3kgdGhlIFN0b3V0IEFydGlmYWN0IFByZW07ZHJpdmVfZGlyOjpIZWxtIG9mIHRoZSBHdWFyZGVkIFdvcmQ7ZHJpdmVfZGlyOjpUdXNrcyBvZiB0aGUgR3VhcmRlZCBXb3JkO2RyaXZlX2Rpcjo6QXJtb3Igb2YgdGhlIEd1YXJkZWQgV29yZDtkcml2ZV9kaXI6OktuaWZlIG9mIERpc3Rpbmd1aXNoZWQgRXhwZWRpdGlvbmFyeTtkcml2ZV9kaXI6OkRlbW9uZm9yZ2VkIFNldDtkcml2ZV9kaXI6OkVtZXJhbGQgQ29ucXVlc3Q7ZHJpdmVfZGlyOjpBcm1vciBvZiBHcmltIFJlZm9ybWF0aW9uO2RyaXZlX2Rpcjo6UGFsZSBBdWd1ciBQcmVtO2RyaXZlX2Rpcjo6VGhlIEhhbGxvd3MgV2l0aGluO2RyaXZlX2Rpcjo6VGhlIEhhbGxvd3MgV2l0aGluIFRvbWJzdG9uZTtkcml2ZV9kaXI6OkNvcnBzZSBIaXZlIG9mIEdyaW0gUmVmb3JtYXRpb247ZHJpdmVfZGlyOjpVcnNhIEltbW9ydGFscyBNZWdhUGFjaztkcml2ZV9kaXI6OkhlbG0gb2YgRWNob2VzO2RyaXZlX2Rpcjo6TGVncyBvZiB0aGUgRmFsbGVuIFByaW5jZXNzO2RyaXZlX2Rpcjo6Q3JpbXNvbiBNb3VybmZ1bCBSZXZlcmllO2RyaXZlX2Rpcjo6U2NyZWVhdWtzIFRhbG9uIFByZW07ZHJpdmVfZGlyOjpDaG9tcGVyIFdhcmQ7ZHJpdmVfZGlyOjpTcGl0dGVycyBvZiB0aGUgVmlydWxlbnQgS3JhaXQ7ZHJpdmVfZGlyOjpDdWx0IG9mIEFrdG9rO2RyaXZlX2Rpcjo6V2luZ3Mgb2YgdGhlIEZhdGFsIEJsb29tO2RyaXZlX2Rpcjo6VGFpbCBvZiB0aGUgRmVyb2Npb3VzIFRveGljYW50O2RyaXZlX2Rpcjo6VmlzYWdlIE1lZ2FQYWNrO2RyaXZlX2Rpcjo6QmVob2xkZW4gb2YgdGhlIEJhbmlzaGVkIE9uZXMgLSBXZWFwb247ZHJpdmVfZGlyOjpCZWhvbGRlbiBvZiB0aGUgQmFuaXNoZWQgT25lcyAtIFNob3VsZGVyO2RyaXZlX2Rpcjo6VW1icmFsIEdseXBoO2RyaXZlX2Rpcjo6V2FyZGVuIG9mIHRoZSBIZWxsYm9ybjtkcml2ZV9kaXI6OkJlbHQgb2YgdGhlIFNwaXRlZnVsIERqaW5uO2RyaXZlX2Rpcjo6QmVob2xkZW4gb2YgdGhlIEJhbmlzaGVkIE9uZXMgLSBCYWNrO2RyaXZlX2Rpcjo6QmVob2xkZW4gb2YgdGhlIEJhbmlzaGVkIE9uZXMgLSBBcm1zO2RyaXZlX2Rpcjo6QmVob2xkZW4gb2YgdGhlIEJhbmlzaGVkIE9uZXMgLSBHb2xlbTtkcml2ZV9kaXI6OkRldmlsIFJpcHBlcjtkcml2ZV9kaXI6OkNyaW1zb24gQ3lycmlkYWU7ZHJpdmVfZGlyOjpDcmltc29uIFBpcXVlIFByZW07ZHJpdmVfZGlyOjpTa2l0dGVyaW5nIERlc29sYXRpb24gUHJlbTtkcml2ZV9kaXI6OkZyb3N0aGVhcnQ7ZHJpdmVfZGlyOjpCb25rZXJzIG9mIEF3YWxlYjtkcml2ZV9kaXI6Ok1hc3F1ZSBvZiBBd2FsZWI7ZHJpdmVfZGlyOjpQYWRkYXBvbiBvZiBSaWJiaXRhciBWIDQuMDtkcml2ZV9kaXI6OkF3YWxlYnMgVHJ1bmRsZXdlZWQ7ZHJpdmVfZGlyOjpCZWx0IG9mIHRoZSBGb3JldGVsbGVyKnMgT2F0aDtkcml2ZV9kaXI6OlJhdHRsZWJpdGU7ZHJpdmVfZGlyOjpXcmFpdGggS2luZyBBcmNhbmEgTWVnYVBhY2s7ZHJpdmVfZGlyOjpQYXVsZHJvbiBvZiB0aGUgRHJlYWRib3JuIFJlZ2VudDtkcml2ZV9kaXI6OlRlbXBlc3QgSGVsbSBvZiB0aGUgVGh1bmRlcmdvZCArIFJpZ2h0ZWQ5519cyBUaHVuZGVyYm9sdDtkcml2ZV9kaXI6OkRlc2VydCBTYW5kcyBCYWJ5IFJvc2hhbjtkcml2ZV9kaXI6OlRoZSBJbnRlcm5hdGlvbmFsIDIwMTYgQ3Vyc29yIFBhY2s7ZHJpdmVfZGlyOjpOZW9raW4gRmFpZXJpZSBXYXJkO2RyaXZlX2Rpcjo6RGVjbGFyYXRpb24gb2YgdGhlIERpdmluZSBMaWdodCBSYWRpYW50IFRvd2Vycztkcml2ZV9kaXI6OkRlY2xhcmF0aW9uIG9mIHRoZSBEaXZpbmUgU2hhZG93IERpcmUgVG93ZXJzO2RyaXZlX2Rpcjo6UmVwdGlsaWFuIFJlZnVnZSBSYWRpYW50IENyZWVwcztkcml2ZV9kaXI6OlJlcHRpbGlhbiBSZWZ1Z2UgRGlyZSBDcmVlcHM7ZHJpdmVfZGlyOjpSaWNrIGFuZCBNb3J0eSBBbm5vdW5jZXI7ZHJpdmVfZGlyOjpSaWNrIGFuZCBNb3J0eSBNZWdhLUtpbGw7ZHJpdmVfZGlyOjpBenVyZSBDb25zdGVsbGF0aW9uIEhVRDtkcml2ZV9kaXI6OlNwYW4gb2YgU29ycm93O2RyaXZlX2Rpcjo6U3Rld2FyZCBvZiB0aGUgRm9yYmlkZGVuIENoYW1iZXIgQXJtb3I7ZHJpdmVfZGlyOjpCZWFyaW5nIG9mIHRoZSBLaW5nIFJlc3RvcmVkIERpc3Rpbmd1aXNoZWQ7ZHJpdmVfZGlyOjpQcm9nZW5pdG9ycyBCYW5lO2RyaXZlX2Rpcjo6Qmxvc3NvbSBvZiB0aGUgTWVycnkgV2FuZGVyZXI7ZHJpdmVfZGlyOjpNZXJyeSBXYW5kZXJlcipzIEJydXNoIFByZW07ZHJpdmVfZGlyOjpUZW1wZXN0IFJldmVsYXRpb247ZHJpdmVfZGlyOjpNYW5lIG9mIHRoZSBDcnlzdGFsIERyaWZ0O2RyaXZlX2Rpcjo6SWNlZmxpZ2h0IEVkaWZpY2U7ZHJpdmVfZGlyOjpNaW5lcyBvZiB0aGUgUHJlc3N1cmUgUmVndWxhdG9yO2RyaXZlX2Rpcjo6RW5pZ21hIE1lZ2FQYWNrO2RyaXZlX2Rpcjo6R29sZGVuIE9ybml0aG9tYW5jZXIgTWFudGxlO2RyaXZlX2Rpcjo6Q3J1eCBvZiBQZXJwbGV4IEltbW9ydGFsIFN0eWxlO2RyaXZlX2Rpcjo6R29sZGVuIFN0YWZmIG9mIFBlcnBsZXggUHJlbTtkcml2ZV9kaXI6OlByZWxhdGVzIENsb2FrIG9mIHRoZSBXeXZlcm4gTGVnaW9uO2RyaXZlX2Rpcjo6TWFzayBvZiB0aGUgRGVtb24gVHJpY2tzdGVyO2RyaXZlX2Rpcjo6UGF1bGRyb25zIG9mIHRoZSBEZW1vbiBUcmlja3N0ZXI7ZHJpdmVfZGlyOjpBcm1vciBvZiB0aGUgRGVtb24gVHJpY2tzdGVyIFJlZDtkcml2ZV9kaXI6OlN0YWZmIG9mIHRoZSBEZW1vbiBUcmlja3N0ZXI7ZHJpdmVfZGlyOjpDcm93biBvZiBQcmlzbWF0aWMgR3JhY2U7ZHJpdmVfZGlyOjpBcm1vciBvZiBQcmlzbWF0aWMgR3JhY2U7ZHJpdmVfZGlyOjpUaWRlaHVudGVyIE1lZ2FQYWNrO2RyaXZlX2Rpcjo6SG9ycm9yIGZyb20gdGhlIERlZXAgQXJtcztkcml2ZV9kaXI6OkhvcnJvciBmcm9tIHRoZSBEZWVwIEJlbHQ7ZHJpdmVfZGlyOjpUZXJyYWluIC0gU2FuY3R1bXMgb2YgdGhlIERpdmluZTtkcml2ZV9kaXI6OlNsYXJkYXIgTWVnYVBhY2sgc2V0O2RyaXZlX2Rpcjo6Tnl4IEFzc2Fzc2luIE1lZ2FQYWNrIG5ldztkcml2ZV9kaXI6OkdvdGhpYyBXaGlzcGVyIENhcGU7ZHJpdmVfZGlyOjpHb3RoaWMgV2hpc3BlciBCZWx0O2RyaXZlX2Rpcjo6Q29kaWNpbCBvZiB0aGUgVmVpbGVkIE9uZXM7ZHJpdmVfZGlyOjpBdm93YW5jZSBvZiB0aGUgVmVpbGVkIE9uZXM7ZHJpdmVfZGlyOjpFbmRsZXNzIE5pZ2h0IENhcGU7ZHJpdmVfZGlyOjpIb29kIG9mIHRoZSBFdmVyYmxhY2s7ZHJpdmVfZGlyOjpFbmRsZXNzIE5pZ2h0IE1vdW50O2RyaXZlX2Rpcjo6UGF1bGRyb25zIG9mIHRoZSBFdmVyYmxhY2s7ZHJpdmVfZGlyOjpCbGFkZSBvZiB0aGUgRGVtb25pYyBWZXNzZWwgUHJlbTtkcml2ZV9kaXI6Ok9yaWdpbnMgb2YgRmFpdGggUHJlbTtkcml2ZV9kaXI6OkJyYWNlcnMgYW5kIFNob3VsZGVycyBvZiB0aGUgU3Vydml2b3I7ZHJpdmVfZGlyOjpCZWx0IG9mIHRoZSBTdXJ2aXZvcjtkcml2ZV9kaXI6OkhhaXIgb2YgdGhlIFN1cnZpdm9yO2RyaXZlX2Rpcjo6T2ZmaGFuZCBCYXNoZXIgb2YgTWFnZSBTa3VsbHM7ZHJpdmVfZGlyOjpTaG91bGRlcnMgb2YgdGhlIFN1cnZpdm9yO2RyaXZlX2Rpcjo6QmFzaGVyIG9mIE1hZ2UgU2t1bGxzO2RyaXZlX2Rpcjo6UHJpbWFsIFBlYWNlbWFrZXI7ZHJpdmVfZGlyOjpNYXNrIG9mIE1ldGlyYTtkcml2ZV9kaXI6OkhhcmJvcmJsb3Nzb207ZHJpdmVfZGlyOjpIaWRkZW4gVmVjdG9yIC0gQXJtb3I7ZHJpdmVfZGlyOjpIaWRkZW4gVmVjdG9yIC0gQmVsdDtkcml2ZV9kaXI6OkhpZGRlbiBWZWN0b3IgLSBIYXQ7ZHJpdmVfZGlyOjpIaWRkZW4gVmVjdG9yIC0gQmxhZGU7ZHJpdmVfZGlyOjpGb3J0dW5lcyBUb3V0IFByZW07ZHJpdmVfZGlyOjpCcmFjZXJzIG9mIHRoZSBCbGFkZWZvcm0gQWVzdGhldGU7ZHJpdmVfZGlyOjpTaG91bGRlcnMgb2YgdGhlIEJsYWRlZm9ybSBBZXN0aGV0ZTtkcml2ZV9kaXI6OkJlbHQgb2YgdGhlIEJsYWRlZm9ybSBBZXN0aGV0ZTtkcml2ZV9kaXI6OkNyaW1zb24gRWRnZSBvZiB0aGUgTG9zdCBPcmRlcjtkcml2ZV9kaXI6Okhvb2Qgb2YgdGhlIEJsYWRlZm9ybSBBZXN0aGV0ZTtkcml2ZV9kaXI6OkdvbGRlbiBTY2F2ZW5naW5nIEd1dHRsZXNsdWc7ZHJpdmVfZGlyOjpJbnNhdGlhYmxlIEJvbmVzYXcgUHJlbTtkcml2ZV9kaXI6OkxhcmdlIFRhc3NlbHMgb2YgdGhlIEJsYWNrIERlYXRoO2RyaXZlX2Rpcjo6RGVuZGkgRG9sbDtkcml2ZV9kaXI6OlBhdWxkcm9uIFBlcmNoO2RyaXZlX2Rpcjo6V3Jpc3QgU2hhY2tsZXMgb2YgdGhlIEJsYWNrIERlYXRoO2RyaXZlX2Rpcjo6RHJhZ29uY2xhdyBIb29rO2RyaXZlX2Rpcjo6TW9ycGhsaW5nIEltbW9ydGFscyBNZWdhUGFjayBVUDtkcml2ZV9kaXI6OlF1ZWVuIG9mIFBhaW4gQXJjYW5hIE1lZ2FQYWNrO2RyaXZlX2Rpcjo6TGFudGVybiBvZiB0aGUgRmFlc2hhZGUgRmxvd2VyO2RyaXZlX2Rpcjo6UGhhbnRvbSBBZHZlbnQgVVA7ZHJpdmVfZGlyOjpQaGFudG9tIEFkdmVudCBCZWx0IFVQO2RyaXZlX2Rpcjo6V2luZHJhbmdlciBBcmNhbmEgc3R5bGUgMSAoQmx1ZSBCaXJkKSArIEZ1bGwgV1IgaW1tb3J0YWw7ZHJpdmVfZGlyOjpTb3VsIERpZmZ1c2VyIFByZW07ZHJpdmVfZGlyOjpUcmFuc3ZlcnNhbnQgU291bDtkcml2ZV9kaXI6OkV0aWVubmUqcyBSZXZlbmdlO2RyaXZlX2Rpcjo6UGxhbmV0ZmFsbCBhbmQgSnVkZ2VtZW50IG9mIHRoZSBGYWxsZW4gYW5kIEJyYWNlcnMgb2YgdGhlIENhdmVybiBMdW1pbmFyIEFSQ0FOQSBNZWdhUGFjazsgMTIzfHx8