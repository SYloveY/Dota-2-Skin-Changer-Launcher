bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogIDExMXx8fCAyMjI6OiAkMnkkMTAkTW1JeU1XWXhOREJoWW1Wak1qVXlOLlZHMTdQSWJhcU4yOHNraEZWdzZPSkt3QkNrWVJFZnUgMjIyfHx8IDEyMzo6IEppbiBhbmQgWWluIEZveCBTcGlyaXRzIE9ubHkgQmxhY2s7U2hhdHRlcmJsYXN0IENyb3duO0dhcmIgb2YgdGhlIFByb3BoZXQgRm9yZXRvbGQ7TWFudGxlIG9mIHRoZSBDaW5kZXIgQmFyb24gU3R5bGUgMTtNb2x0ZW4gQ2xhdyBQcmVtO0NydWNpYmxlIG9mIFJpbGU7SGFydmVzdGVkIFNob3VsZGVycztUSTkgQ2FjaGUgQmFuZSBFbmRsZXNzIE5pZ2h0bWFyZSBIZWFkO1Bpc3RvbiBJbXBhbGVyO1Rob3JuZWQgTWFuZTtTdXJseSBCb2dzdG9tcGVyIEJyYWNlcnM7Tm90aGxpYyBCdXJkZW47VGVtcGVzdCBIZWxtIG9mIHRoZSBUaHVuZGVyZ29kIFByZW07SW1tb3J0YWwgUGFudGhlb247QnJhY2VycyBvZiB0aGUgV2FydG9ybiBIZWF2ZW5zO0JlbHQgb2YgdGhlIFdhcnRvcm4gSGVhdmVucztNYXJheGlmb3JtcyBGYWxsZW47U3RhZmYgb2YgR3VuLVl1O0FybW9yIG9mIHRoZSBEZW1vbiBUcmlja3N0ZXI7V2hpc3BlcnMgb2YgdGhlIERhbW5lZCBXaW5ncztXaGlzcGVycyBvZiB0aGUgRGFtbmVkIEhlYWQ7U3RvdXRoZWFydCBHcm93bGVyIE93bDtTdG91dGhlYXJ0IEdyb3dsZXIgQm9hcjtNYXJrIG9mIHRoZSBGaXJzdCBIdW50IEJlc3Rvd2VkO1RoaXN0bGUgQ3Jhd2xlcjtJbmZlcm5hbCBDaGllZnRhaW4gb2YgdGhlIENyaW1zb24gV2l0bmVzcztQdWRnZSBibG9vZCBhZnRlciBob29rO0ZpcnN0IExpZ2h0IEFybW9yO0ZpcnN0IExpZ2h0IEhlYWQ7Rmlyc3QgTGlnaHQgQXJtcztGaXJzdCBMaWdodCBXZWFwb247QnJhY2VycyBvZiB0aGUgQ2F2ZXJuIEx1bWluYXI7UmFwaWVycyBvZiB0aGUgQnVybmluZyBHb2QgViAzLjE7QnJhY2VycyBvZiBBZW9ucyBQcmVtO0pld2VsIG9mIEFlb25zIFByZW07RGF0YXN0YXIgUHJvZ2VuaXRvciAoQWx0ZXIgQXJjYW5hKTtGbGFzaHBvaW50IFByb3NlbHl0ZSAtIEhlYWQ7TWFndXMgQXBleDtLaWRzIE9yYjtDb3ZlbmFudCBvZiB0aGUgRGVwdGhzIFNwaXJpdDtFZGdlIG9mIHRoZSBMb3N0IE9yZGVyO1RoZSBXYXJkIG9mIE9kb2NvZWxldXM7TGVnYWN5IG9mIHRoZSBGYWxsZW4gTGVnaW9uO0ludmVyc2UgQmF5b25ldDtHb2xkZW4gTW9vbmZhbGwgUHJlbTtUd2lsaWdodCBTY2hpc207TXVsY3RhbnQgUGFsbDtBeGlhIG9mIE1ldGlyYTtHb2xkZW4gTWFzayBvZiBNZXRpcmE7RHJlYW1zIG9mIE1pZHN1bW1lciBBcm1zO0Rhd24gb2YgdGhlIE1vb24gU2tpcnQ7QXJtb3Igb2YgdGhlIFNsaXRoZXJlZW4gRXhpbGU7SGVsbSBvZiB0aGUgU2xpdGhlcmVlbiBFeGlsZTtXaW5ncyBvZiBNb2x0ZW4gUmViaXJ0aDtCZWFrIG9mIE1vbHRlbiBSZWJpcnRoO0dvbGRlbiBTaGFyZHMgb2YgRXhpbGU7Qmxvb2RmZWF0aGVyIFdpbmdzO1BvbGUgb2YgdGhlIENlbnR1cmlvbiBWYW5ndWFyZDtBcm1zIG9mIERlc29sYXRpb24gUHJlbTtTb3VscyBUeXJhbnQgSGVhZDtHcmFuZCBBYnNjZXNzaW9uIEhvb2sgQnVuZGxlO0luc2F0aWFibGUgQm9uZXNhdztHb2xkZW4gU2NhdmVuZ2luZyBHdXR0bGVzbHVnO0NhbmR5IENhdCBIZWFkO0NhbmR5IENhdCBCYWNrO0NhbmR5IENhdCBBcm1zO1RoZSBMaWdodG5pbmcgT3JjaGlkIG9mIEVtaW5lbnQgUmV2aXZhbDtGcmFjdGFsIEhvcm5zIG9mIElubmVyIEFieXNtIFVQO1BpbmsgQ29sb3IgZm9yIFRCO1JlY3RpZmllcjtNYWplc3R5IE9mIFRoZSBDb2xvc3N1cyAtIFBlYmJsZTtNYWplc3R5IE9mIFRoZSBDb2xvc3N1cyAtIENvYmJsZTtNYWplc3R5IE9mIFRoZSBDb2xvc3N1cyAtIE1vbm9saXRoO0NsdWIgb2YgdGhlIElnbmVvdXMgU3RvbmU7QmxhY2tzaGllbGQgUHJvdG9kcm9uZSBIZWxtO0JsYWNrc2hpZWxkIFByb3RvZHJvbmUgTWlzc2lsZSBMYXVuY2hlcjtCbGFja3NoaWVsZCBQcm90b2Ryb25lIEFybW9yO0JsYWNrc2hpZWxkIFByb3RvZHJvbmUgTGFzZXI7U2hvdWxkZXJzIG9mIHRoZSBGb3J0aWZpZWQgRmFicmljYXRvcjtCbGFja3NoaWVsZCBQcm90b2Ryb25lIFN0aW5nZXI7Q2FwZSBvZiB0aGUgUmlzaW5nIEdhbGU7Qm93IG9mIHRoZSBCYXR0bGVyYW5nZXI7R29sZGVuIFBhbGUgTWF1c29sZXVtO0RhcmsgTWVhZG93IE1hc3NhY3JlIEFybW9yO0RhcmsgTWVhZG93IE1hc3NhY3JlIEFybXM7RGFyayBNZWFkb3cgTWFzc2FjcmUgSGVhZDtQaGFudG9tIEFkdmVudCBVUDtQaGFudG9tIEFkdmVudCBCZWx0IFVQO1NvdWwgRGlmZnVzZXIgViAyLjE7U3Vua2VuIFNuYXBwZXIgV2luZ3M7TWFsZWZpYyBEcmFrZXMgSG9vZCBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzO01hbGVmaWMgRHJha2VzIFN0cmlrZSBvbmx5IEVmZmVjdDtFcGl0YXBoaWMgVHJhcDtGb2NhbCBSZXNvbmFuY2UgViAzLjA7UGlzY2VhbiBQdWx2ZXJpemVyO0F1c3BpY2Ugb2YgdGhlIFdoeXJsZWd5Z2UgUHJlbTtSZWNsdXNlIFJlZWYgRGVuaXplbjtTdGFmZiBvZiBQZXJwbGV4IFByZW07Q29tcGxldGUgV2luZ3Mgb2YgdGhlIE1hbnRpY29yZTtCcmFjZXJzIG9mIENlcnVsZWFuIExpZ2h0O1BhbGUgRWRnZSBWIDIuMDtHb2xkZW4gRnVsbC1Cb3JlIEJvbmFuemE7RHJhZ29uIExvcmUgQVdQO0lyb24gU3VyZ2UgViAyLjI7U2F2YWdlIE1ldHRsZTtEaW1lbnNpb24gUmlwcGVyIEhlYWQ7QW5nZXIgRGl2aW5pdHkgQXJtb3I7QW5nZXIgRGl2aW5pdHkgSGVhZDtNYXJrIG9mIHRoZSBNaXN0cmFsIEZpZW5kIFYgMi4xO0FuY2llbnQgQXBwYXJpdGlvbiBDaGluYSBNb2RlbDtBbnRpLU1hZ2UgVWx0aW1hdGUgUmVkIERyYWdvbjtSZWQgTWlzdCBSZWFwZXIgU2V0O1RpbWUgV2FuZGVyZXI7S2l0IG9mIHRoZSBGaXJzdCBIdW50IFYgMi4xO0RlbGlnaHRzIG9mIFBldGFsdW5hIFBhdGhmaW5kZXI7U2hlcm1hbiBNYWlkZW4gViA0LjE7UHVycGxlIEZpcmUgQ2xpbmt6IEZ1biBNb2QgViAzLjA7TGluZWFnZSBQcm92aW5jZSBvZiB0aGUgSHVudCBFdGVybmFsO1RoZSBTaGVlcCBTZXQ7QnJpbmdlciBvZiBUcm91YmxlcztCaWcgVW4gViAzLjA7TWFyYXVkZXIgb2YgdGhlIENoYW9zIFdhc3RlcztCb3VudHkgSHVudGVyIE1hbmlhYyBTZXQ7UGF0dGVybiBvZiB0aGUgU2lsa2VuIFF1ZWVuO1JlbGVudGxlc3MgV2FyYnJpbmdlciBWIDMuMDtCZXdpdGNoaW5nIEZsYXJlIFYgMi4wO0Z1cnkgb2YgV2FyIEdvZDtTYWNjaGFyaW5lIFNhYm90ZXVyO1dhaWwgb2YgdGhlIFdpbnRlciBSZXZlbmFudDtLaXJpbiBSaWRlciBTZXQ7RHJhZ29uIEd1YXJkaWFuO0xhZHkgU3lsdmFuYXMgZm9yIERyb3cgLSBUb29scyBvZiB0aGUgTWFzdGVyIFRoaWVmIFNldDtDaW5kZXIgU2Vuc2VpO01pc2dpdmluZ3Mgb2YgdGhlIEVtZXJhbGQgQWdlO1RoZSBNYW5pcHVsYXRvciBTZXQ7RXhwbG9zaXZlIE1hbmlhYztGYXRlIE1lcmlkaWFuO1N1c2FubyBPcyBEZXNjZW5kYW50O0RhZW1vbmZlbGwgRmxhbWU7RGl2aW5lIEFuY2hvciBTdHlsZSAyO05vcnRoZXJuIEJsaWdodDtDb21wZW5kaXVtIEJsb29keSBSaXBwZXI7UmV2aXZhbCBvZiB0aGUgSWNlIFdpdGNoO0V5ZSBvZiB0aGUgQmVob2xkZXI7SmVzdGVyIEtpbmcgU2V0O1N0ZWxsYXIgSmFkZTtXcmF0aCBvZiBLYSBWIDIuMSBTdHlsZSAyO01hbmRhdGUgb2YgdGhlIE5hbWVsZXNzO1Nhbmd1aW5lIFJveWFsdHk7TW9uc3Ryb3VzIFJlcHJpc2FsO0RhbWUgZGUgQ2FycmVhdTtFdGVybmFsIEhhcnZlc3Q7U3RlZWwgS2luZztWaXJ0dWQ5519cyBSb2FyIFYgMi4wO0ZvdWxmZWxsIENvcnJ1cHRvcjtNb2x0ZW4gRGVzdHJ1Y3RvcjtTdG9yZWdnYSAzIExWTCBVbHQgKyBJY2UgVGlueTtBcnJheSBvZiBUcmFucXVpbGl0eTtHcmltIERlc3Rpbnk7TG9zdCBTZXJhcGggU2V0O0VwaXRhcGhpYyBCb25kcztFeWUgb2YgdGhlIFdlYXRoZXJlZCBTdG9ybTtSZW1pbmlzY2VuY2Ugb2YgRHJlYW1zO1VuZmV0dGVyZWQgTWFsZXZvbGVuY2U7QWxsZmF0aGVyIG9mIE5hdHVyZSBTZXQ7TWFnaXN0ZXIgb2YgdGhlIE5hcnJvdyBGYXRlcztWZW5nZWFuY2Ugb2YgdGhlIFN1bndhcnJpb3I7UmFtYmxpbmcgRmF0ZWJlbmRlcjtHb2xkIFNreW1hZ2U7Q2hhcm1lciBvZiBGaXJlc25ha2U7RGFyayBSZWVmIEVzY2FwZSBWIDIuMTtLZWVuIE1hY2hpbmU7Qml0ZSBvZiB0aGUgU3VyZ2luZyBXaW5kO0Jhcmsgb2YgdGhlIEFnZWxlc3MgV2l0bmVzcyBEaXN0aW5ndWlzaGVkO1RoZSBEdXNrIENyYXdsZXIgU2V0O0ZhdGhlciBPZiBTcGlyaXRzO1B1cHBldCBTdW1tb25lcjtEcmVhZCBDb21wYWN0OyAxMjN8fHw=