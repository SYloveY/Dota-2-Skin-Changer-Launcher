limitHWID:: 1 000||| 111:: 31F8E0A3-6D2F-1E4A-AE03-37022D37FB50;; 111||| 222:: $2y$10$YjIxZWYyMjc0ZWIxNjNmYuzgjMJowo7a52LKX96ICrJtR.0LnBhwW 222||| 123:: Swine Powder Barrel;Powdersled Rookery Squee;Maze of Anguish;Arms of Desolation Prem;Wings of the Elder Myth;Crown of the Arctic Recluse;Chain of Enduring Torment;Ancient Rhythm Loading Screen;Healing Ward of the Kuur-Ishiminari;Edge of the Lost Order;Horns of the Arch Temptress;Boooofus with Dark effect;Knight Statue;Reptilian Refuge Radiant Creeps;Reptilian Refuge Dire Creeps;Terrain - The Kings New Journey;Emerald Roshan;Nova of Golden Nirvana;Staff of Gun-Yu;Tempest Helm of the Thundergod Prem;Eidolons of Abyssal Vortex;The Golden Barb of Skadi;Terrain - Winter;River Vial Blue;Custom Dashboard 103;Weather Ash;Blade of the Creeping Shadow;Insights of the Sapphire Shroud;Mentor of the Artif Convert V 2.1;Imperial Relics V 2.1;Powdersled Rookery;Abyssal Vortex;Shimmer of the Anointed;Eternal Harvest;Hidden Flower;Yaya for Slardar by Patchouli Knowledge;Roshan Hunters Set;Fate Meridian;Storm Dragon Potente;Ironbarde Charger;Lollipop Juggernaut V 3.0;Ire of Molten Rebirth;Bewitching Flare V 2.0;Exponent of the Endless Stars;Cthugha for Huskar by Patchouli Knowledge;Havoc of Dragon Palace V 2.0;GopoPudge;Dark Reef Escape V 2.1;Tomoe Mami for Sniper by Patchouli Knowledge;Swift Pathfinder Set;Creeping Shadow; 123|||