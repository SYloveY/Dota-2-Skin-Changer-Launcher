limitHWID:: 1 000||| 111::  111||| 222:: $2y$10$NDIwYmFmMGNiMGU2ODgzYeOS77W9.SdKiJgaBODqoT13SM/BljesO 222||| 123:: Weather Ash;River Vial Blue;Bloodfeather Wings;Shade of Anguish;Sash of Twilight Shade;Golden Immortal Pantheon;Arc of the Sovereign Back;Tempest Helm of the Thundergod Prem;Belt of the Blood Moon;Mantle of the Blood Moon;Pauldron of the Blood Moon;Claws of the Blood Moon;Rapier of the Burning God Offhand;Rapier of the Burning God;Valentine Ward;Sigil Mask of the Bladekeeper;Pantaloons of the Bladekeeper;Arsenal of the Bladekeeper;Belt of the Dragon*s Disciple;Arm of the Dragon*s Disciple;Faceless Death - Head;Pauldron of the Dragon*s Disciple;AM Azzinots;Golden Hydrakan Latch;Wraith King Corrupted Ashbringer;Heaven-Piercing Pauldrons;Dark Artistry Cape;Dark Artistry Bracers;Dark Artistry Belt;Razzils Midas Knuckles Prem;Eternal Radiance Blades Prem;Waaagh Garb of Little Big *Un;Formed Alloy Goggles;Flask of Little Big *Un;Waaagh Spaulders of Big *Un;Waaagh Helm of Big *Un;Cape of the Burning Scale;Silver Dragon King Head;Silver Dragon King Off-Hand;Silver Dragon King Arms;Silver Dragon King Shoulder;Silver Dragon King Weapon;Mace of Aeons;Frozen Void Head;Frozen Void Shoulder;Frozen Void Arms;Phantom Concord;Barding of the Siege-Drake;Kunkka*s Shadow Blade;The Lightning Orchid of Eminent Revival;Arms of Desolation Prem;Magus Apex;Genji Sword for Jugg with effects V 3.1;Flashpoint Proselyte - Head;Blade of Reckless Vigor;Spear of Reckless Vigor;Pedestal Ti-6 Radiant;Radiance TI-6 Effect;TI-9 Seasonal Creep Deny Effect;Phase Boots TI-6 Effect;Mjollnir TI-6 Effect;TI-8 Fountain lvl 2 Effect;LevelUp TI-6 Effect;Bottle TI-6 Effect;Force Staff TI-6 Effect;Mekanism TI-6 Effect;TI-8 Shivas Effect;TI-10 Teleport lvl 3 Effect;Focal Resonance V 3.0;Fluttering Amethyst Trap + Icon;Spaulders of the Psion Inquisitor;Cape of the Creeping Shadow;Belt of the Creeping Shadow;Helm of the Bloodroot Guard;Shawl of the Creeping Shadow;Valkyrie*s Shade Weapon;Tinker Scarecrow Set;Magister of the Narrow Fates;Bestowments of the Centurion Vanguard;Exact Marksman;Hunter of the Crystal Drift;Army Of The Vast Sea;Voodoo Priestess;Warrior of Arena Set;Honored Servant of the Empire;Troll Warlord JahRakal;Herald of Measureless Ruin V 2.1;Illidan Stormrage for Terrorblade V 2.0;Lightbringer SF;Polar Night; 123|||