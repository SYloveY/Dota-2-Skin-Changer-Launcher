bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogMDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtNENDQzZBQjJEQTc1IDExMXx8fCAyMjI6OiAkMnkkMTAkWVdFMll6QmxaVGxsTnpJMU9EUTFZZVh4UktxUlNRZ0F1MHplektEOUJHWjJWTXhXMzRHOGkgMjIyfHx8IDEyMzo6IE9yaWdpbiBvZiB0aGUgVW5tYWtpbmc7U2x1bWJlcmluZyBUZXJyb3I7SGVhcnRsZXNzIEh1bnQgLSBIZWFkO0h1bnRlcnMgSG9hcmQgb2YgdGhlIENyaW1zb24gV2l0bmVzcztUaW5lcyBvZiBUeWJhcmE7TWFyayBvZiB0aGUgRmlyc3QgSHVudCBIYXJ2ZXN0ZWQ7QmVhc3Qgb2YgdGhlIENyaW1zb24gUmluZyBCcmFjZXJzO0dvbGRlbiBJbmZlcm5hbCBDaGllZnRhaW47SW5mZXJuYWwgTWVuYWNlO0ljZXBsYWluIFJhdmFnZXIgSG9ybjtEaWFib2xpYyBBc3BlY3Q7VGFsb25zIG9mIHRoZSBFbmRsZXNzIFN0b3JtIE1vdW50O0NoYW9zIEZ1bGNydW07RW50cm9waWMgU2hvdWxkZXJwYWRzIFByZW07VGFsb25zIG9mIHRoZSBFbmRsZXNzIFN0b3JtIFdlYXBvbjtBcmNhbmEgQ3J5c3RhbCBNYWlkZW4gRnJvc3QgQXZhbGFuY2hlO0dvbGRlbiBJY2UgQmxvc3NvbTtSb3lhbCBXaW50ZXJibG9vbSBBcm1zO0NyaW1zb24gR2F0ZXMgb2YgTm90aGw7RGFya2NsYXcgRW1pc3NhcnkgQXJtcztEYXJrY2xhdyBFbWlzc2FyeSBEcmVzcztOb3RobGljIEJ1cmRlbiBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzO0RhcmtjbGF3IEVtaXNzYXJ5IFN0YWZmO01hc3RlciBvZiB0aGUgU2VhcmluZyBQYXRoIEJlbHQ7R3VhcmQgb2YgdGhlIFdhbmRlcmluZyBGbGFtZTtNYXN0ZXIgb2YgdGhlIFNlYXJpbmcgUGF0aCBIZWFkO01hc3RlciBvZiB0aGUgU2VhcmluZyBQYXRoIE9mZi1IYW5kO0Fwb2dlZSBvZiB0aGUgR3VhcmRpYW4gRmxhbWU7TWFzdGVyIG9mIHRoZSBTZWFyaW5nIFBhdGggV2VhcG9uO0FybSBvZiB0aGUgU291dGggU3RhcjtDYWVydWxlYW4gU3RhciAtIEJlbHQ7U29uZyBvZiB0aGUgU29sc3RpY2UgSGVhZDtIYXJib3JibG9zc29tO1ZpcmdhcyBBcmM7QnJhY2VycyBvZiBBZW9ucztDbGFzenVyZW1lIEluY3Vyc2lvbiBCZWx0O0ZhY2VsZXNzIE1hZG5lc3M7SmV3ZWwgb2YgQWVvbnM7TWFjZSBvZiBBZW9ucyBQcmVtO0RhcmsgQXJ0aXN0cnkgVGhyb3diYWNrO0JlbmV2b2xlbnQgQ29tcGFuaW9uIFByZW07SmFraXJvIEltbW9ydGFsIFdpbmdzO0ZvcnR1bmVzIFRvdXQgUHJlbTtQcm92b2NhdGlvbiBvZiBSdWluIEJyYWNlcnM7UHJvdm9jYXRpb24gb2YgUnVpbiBQYXVsZHJvbjtKdWdnZXJuYXV0IEFyY2FuYSBSZWQgQmxhZGVmb3JtIE9yaWdpbnM7QmVsdCBvZiB0aGUgQmxhZGVmb3JtIEFlc3RoZXRlO0NyaW1zb24gRWRnZSBvZiB0aGUgTG9zdCBPcmRlcjtHbGFyZSBvZiB0aGUgVHlyYW50O0Nyb3duIG9mIFZpbGUgQ29udm9jYXRpb247U2hlYXJpbmcgRGVwb3NpdGlvbiBQcmVtO1RvbWUgb2YgRm9yYmlkZGVuIEtub3dsZWRnZTtCZWx0IG9mIFZpbGUgQ29udm9jYXRpb247RGlzY2lwbGUgb2YgdGhlIFd5cm13cm91Z2h0IEZsYW1lO1d5cm13cm91Z2h0IEZsYXJlO1NvdWwgb2YgdGhlIFNsYXllciBQcmVtO0JyYWNlcnMgb2YgU21vbGRlcmluZyBKb3VybmV5O0hlbGwtU3BhciBBbmF0aGVtYSBPYnNpZGlhbiBCbGlnaHQ7SG9ybnMgb2YgdGhlIEJldHJheWVyO011bGN0YW50IFBhbGwgb2YgdGhlIENyaW1zb24gV2l0bmVzcztGaW4gS2luZ3MgQ2hhcm0gb2YgRW1pbmVudCBSZXZpdmFsIEV4Y2VwdGlvbmFsO0NvbXBsZXRlIEhlbG0gb2YgdGhlIERhcmsgTW9vbiBTdGFsa2VyO01vdW50IG9mIHRoZSBXaW5nZWQgU2VudGluZWw7TW9vbmZhbGwgUHJlbTtBcm1vciBvZiB0aGUgV2luZ2VkIFNlbnRpbmVsO1R3aWxpZ2h0IFNjaGlzbTtDb2xvciBNZWVwbztMYXNoIG9mIHRoZSBMaXphcmQgS2luO0JvZ21hcmNoIEdhcmI7Qm9nbWFyY2ggQmFycmVsO0NlbnNlciBvZiBHbGlzcztTd2FtcCBTaGFtYW4gV2FyZHM7R29sZGVuIExhbWIgdG8gdGhlIFNsYXVnaHRlciBQcmVtO0JyYWNlciBvZiBTaGFkb3dwYXNzO1NlYSBSYWtlcyBCcmlkbGU7U2hhZG93IGluIHRoZSBEZWVwIEFybW9yO1RoZSBCYXJiIG9mIFNrYWRpO0FybW9yIG9mIEdyaW0gUmVmb3JtYXRpb247UGFsZSBBdWd1cjtUaGUgSGFsbG93cyBXaXRoaW47VGhlIEhhbGxvd3MgV2l0aGluIFRvbWJzdG9uZTtNYXNrIG9mIHRoZSBTYW5nc3RyYXRoIEZvbGQ7Um9zaGFuIEh1bnRlciBCZWx0O0Nyb3duIG9mIHRoZSBNYWxpZ25hbnQgUnVsZTtDcmltc29uIFVuYnJva2VuIEZlYWx0eTtIaWRkZW4gVmVjdG9yIC0gQmVsdDtIaWRkZW4gVmVjdG9yIC0gQXJtb3I7SGlkZGVuIFZlY3RvciAtIEhhdDtIaWRkZW4gVmVjdG9yIC0gQmxhZGU7VGVtcGVzdCBSZXZlbGF0aW9uO1BhdWxkcm9ucyBvZiB0aGUgV2FydG9ybiBIZWF2ZW5zO0JlbHQgb2YgdGhlIFdhcnRvcm4gSGVhdmVucztUZW1wZXN0IEhlbG0gb2YgdGhlIFRodW5kZXJnb2QgKyBSaWdodGVvdXMgVGh1bmRlcmJvbHQ7QnJhY2VycyBvZiB0aGUgUmVkIFNhbmRzO0NhbmR5IENhdCBBcm1zO0NhbmR5IENhdCBCZWx0O0RpcmVjb3VydCBKZXN0ZXIgQ2FwO0luc2F0aWFibGUgQm9uZXNhdyBQcmVtO0dvbGRlbiBTY2F2ZW5naW5nIEd1dHRsZXNsdWc7R3JhbmQgQWJzY2Vzc2lvbiBIb29rIEJ1bmRsZTtHcmFuZCBBYnNjZXNzaW9uO0dyYW5kIEFic2Nlc3Npb24gQ2hhaW47RGVjbGFyYXRpb24gb2YgdGhlIERpdmluZSBTaGFkb3cgRGlyZSBUb3dlcnM7RGVjbGFyYXRpb24gb2YgdGhlIERpdmluZSBMaWdodCBSYWRpYW50IFRvd2VycztSZXB0aWxpYW4gUmVmdWdlIFJhZGlhbnQgQ3JlZXBzO1JlcHRpbGlhbiBSZWZ1Z2UgRGlyZSBDcmVlcHM7V2VhdGhlciBTcHJpbmc7VGVycmFpbiAtIFRoZSBLaW5ncyBOZXcgSm91cm5leTtSaXZlciBWaWFsIEJsdWU7U3dpZnQgQ2xhdyBhbmQgRmVyb2Npb3VzIEhlYXJ0O0RpcHBlciB0aGUgRGVzdHJveWVyO0JhcmRpbmcgb2YgdGhlIFNhbmdzdHJhdGggRm9sZDtIZWFydGxlc3MgSHVudCAtIEFybW9yO0hlYXJ0bGVzcyBIdW50IC0gV2VhcG9uO0ZsYXNocG9pbnQgUHJvc2VseXRlIC0gQXJtcztGbGFzaHBvaW50IFByb3NlbHl0ZSAtIEhlYWQ7Rmxhc2hwb2ludCBQcm9zZWx5dGUgLSBPZmYtSGFuZDtBcm1vciBvZiB0aGUgRW1iZXIgRGVtb25zO1NwZWFyIG9mIHRoZSBFbWJlciBEZW1vbnM7QmFuZGFuYSBvZiB0aGUgQm9uZSBSdWluIEJhbmRpdHM7SmVzdGVyIEtpbmcgU2hvdWxkZXI7UGl0bWQ5519c2UgRnJhdGVybml0eSBUYWlsO1NraXR0ZXJpbmcgRGVzb2xhdGlvbiBQcmVtO0NyaW1zb24gUGlxdWU7Q3JpbXNvbiBDeXJyaWRhZTtMaW1icyBvZiBFbnR3aW5lZCBGYXRlO0ZsdXR0ZXJpbmcgQW1ldGh5c3QgVHJhcCArIEljb247Rm9jYWwgUmVzb25hbmNlIFYgMy4wO1N0ZXdhcmQgb2YgdGhlIEZvcmJpZGRlbiBDaGFtYmVyIEFybW9yO0hlYWRkcmVzcyBvZiB0aGUgTG95YWwgRm9sZDtTdGV3YXJkIG9mIHRoZSBGb3JiaWRkZW4gQ2hhbWJlciBTaG91bGRlcjtBcm1vciBvZiBHcmltIERlc3Rpbnk7Qmxpc3RlcmluZyBTaGFkZSBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzO0NhcGUgb2YgR3JpbSBEZXN0aW55O1BhdWxkcm9uIG9mIHRoZSBEcmVhZGJvcm4gUmVnZW50O1BoYW50b20gQWR2ZW50IEJlbHQgVVA7UGhhbnRvbSBBZHZlbnQgVVA7VHJhbnN2ZXJzYW50IFNvdWw7U291bCBEaWZmdXNlciBQcmVtO0FiYWRkb24gUkVEIE1lZ2FQYWNrO0RhcmticmV3IEVuZm9yY2VyIGFuZCBFdGVybmFsIFJhZGlhbmNlIEJsYWRlcyBhbmQgTWlkYXMgS251Y2tsZXMgTWVnYVBhY2s7QUFNZWdhUGFjaztBbnRpTWFnZSBSRUQgTWVnYVBhY2s7QXhlIGZ1bGwgSW1tb3J0YWxzIE1lZ2FwYWNrIGFsdDtFbXBpcmljIEluY2VuZGlhcnk7QmVhc3RtYXN0ZXIgTWVnYVBhY2s7QnJldyBKb3VzdGluZyBQYW5kYSBhbmQgRG9ua2V5IEtvbmc7QnJpc3RsZWJhY2sgTWVnYVBhY2s7QnJvb2Rtb3RoZXIgTWVnYVBhY2s7RW1wZXJvciBvZiB0aGUgU3VuO0NsaW5reiBNZWdhUGFjaztCYXR0bGV0cmFwIFYgMy4wO01hbmlwdWxhdG9yIG9mIFdhcnNpdHVhdGlvbjtTYWNjaGFyaW5lIFNhYm90ZXVyO0V0ZXJuYWwgVGVzdGFtZW50O0tpcmluIFJpZGVyIFNldDtEb29tIEltbW9ydGFscyBNZWdhUGFjaztESyBQZXJzb25hIERhdmlvbjtFYXJ0aHNoYWtlciBNZWdhUGFjayBOZXc7RW5pZ21hIE1lZ2FQYWNrO0t1bmtrYSBJbW1vcnRhbHMgTWVnYVBhY2s7TGVnaW9uIENvbW1hbmRlciBNb2RNYWtlciBNZWdhUGFjaztUaHVuZGVyIEdyaWZmaW47TG9uZSBEcnVpZCBNZWdhUGFjaztMeWNhbiBLaXNpbGV2IE1vZE1ha2VyIE1lZ2FQYWNrO01hcnMgVEkxMCBDb2xsZWN0b3JzIENhY2hlIE1lZ2FQYWNrO01lZHVzYSBNZWdhUGFjayBORVc7TW9ua2V5IEtpbmcgQXJjYW5hIE1lZ2FQYWNrO01hbmlmb2xkIFBhcmFkb3ggR290aGljIEh1bnRlcjtTRiBBcmNhbmEgTWVnYXBhY2s7U3ZlbiBJbW1vcnRhbHMgTWVnYVBhY2s7V2luZHJhbmdlciBBcmNhbmEgc3R5bGUgMiArIFdSIGltbW9ydGFsO1F1ZWVuIG9mIFBhaW4gQXJjYW5hIE1lZ2FQYWNrO1NwaXJpdCBCcmVha2VyIE1lZ2FQYWNrO1dpdGNoIERvY3RvciBNZWdhUGFjaztOaWdodCBTdGFsa2VyIEltbW9ydGFsIGFuZCBSZWFwZXIgS2lzaWxldiBNb2RNYWtlciBNZWdhUGFjazsgMTIzfHx8