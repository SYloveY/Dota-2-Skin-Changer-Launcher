bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogMDNENTAyRTAtMDQ1RS0wNTA2LUMzMDYtQkUwNzAwMDgwMDA5IDExMXx8fCAyMjI6OiBkMzdkM2YyMGNkNjA3ZDdhMDA4MTNiYTZhZWIxOTAxZTg4Y2E5MDQ2Y2Q0MWViZTJmNDBjZjMzYjQyMmI4ODNkMTQ1NmFmZWViZGZjNDJiNzA3MDJhYmY1ZjBiNzUzYzQ2YmRlMTM0NDI0YmIxYWRiMTM0NzExOWUzMjEzNjc2MyAyMjJ8fHwgMTIzOjogSGFpciBvZiB0aGUgU3Vydml2b3I7VGhlIEJhc2hlciBCbGFkZXMgZm9yIFdlaTtCcmFjZXJzIGFuZCBTaG91bGRlcnMgb2YgdGhlIFN1cnZpdm9yO0JlbHQgb2YgdGhlIFN1cnZpdm9yO0F4ZSBKdW5nbGU7TWF3IG9mIEV6dHpob2s7U2hvdWxkZXIgb2YgdGhlIEJsb29kZm9yZ2U7VGhpcnN0IG9mIEV6dHpob2sgQnVuZGxlIFByZW07QmVsdCBvZiB0aGUgU2NhcmxldCBSYXZlbjtIdW50ZXJzIEhvYXJkIG9mIHRoZSBDcmltc29uIFdpdG5lc3M7TWFjZSBvZiBBZW9ucyBQcmVtO0Zyb3plbiBWb2lkIEhlYWQ7RnJvemVuIFZvaWQgU2hvdWxkZXI7RnJvemVuIFZvaWQgQmVsdDtGcm96ZW4gVm9pZCBBcm1zO1RJLTkgVGVsZXBvcnQgbHZsIDMgRWZmZWN0O0RhcmsgTW9vbiBCYWJ5IFJvc2hhbjtDaGlja2VuIEh1dCBXYXJkO0d1YXJkaWFucyBvZiB0aGUgTG9zdCBQYXRoIERpcmUgVG93ZXJzO0d1YXJkaWFucyBvZiB0aGUgTG9zdCBQYXRoIFJhZGlhbnQgVG93ZXJzO1BsYW5ldGZhbGw7T3JpZ2lucyBvZiBGYWl0aCBQcmVtO1JlYXBlcnMgV3JlYXRoO1dvcmxkIENoYXNtIEFydGlmYWN0O1NlcnZhbnRzIG9mIEVuZGxlc3MgU3RhcnM7UGF5bG9hZCBvZiB0aGUgVmVzcGlkdW4gSHVudGVyLUtpbGxlcjtBcm1hbWVudHMgb2YgdGhlIFZlc3BpZHVuIEh1bnRlci1LaWxsZXI7Q29uZSBvZiB0aGUgVmVzcGlkdW4gSHVudGVyLUtpbGxlcjtIZWFkIG9mIHRoZSBWZXNwaWR1biBIdW50ZXItS2lsbGVyO1Byb3BlbGxlcnMgb2YgdGhlIFZlc3BpZHVuIEh1bnRlci1LaWxsZXI7SmFnZ2VkIEhvbm9yIEJsYWRlO0phZ2dlZCBIb25vciBMZWdzO0phZ2dlZCBIb25vciBCcmFjZXI7SmFnZ2VkIEhvbm9yIEJhbm5lcjtKYWdnZWQgSG9ub3IgTWFzaztNYW5pZm9sZCBQYXJhZG94IFBBIEFyY2FuYSBTdHlsZSAxO1NldmVyaW5nIENyZXN0IFByZW07RWRpY3Qgb2YgU2hhZG93cztIdW5nZXIgb2YgdGhlIEhvd2xpbmcgV2lsZHMgQXJtcztTaGFkb3cgTWFzcXVlcmFkZTtQaWVyY2luZyBVbWJyYWdlIFBhY2sgRG90YSAyIENoYW5nZXIgRWRpdGlvbjtGaXJzdCBvZiB0aGUgRmxvb2Q7UGlrZSBvZiBFbGFzbXlyO1RyYW5zdmVyc2FudCBTb3VsO1NvdWwgRGlmZnVzZXIgUHJlbTtDcmVzdCBvZiB0aGUgRmxvd2VyaW5nIFNoYWRlO1NwYW4gb2YgU29ycm93O1JvbGxlcm1hd3N0ZXIgYW5kIE1lY2hhIEJvb3RzIG9mIFRyYXZlbCBNayBJSUk7U3VibWVyZ2VkIEhhemFyZCBQcm9wZWxsZXI7U3VibWVyZ2VkIEhhemFyZCBMYXVuY2hlcjtTdWJtZXJnZWQgSGF6YXJkIEh1bGw7U3VibWVyZ2VkIEhhemFyZCBNYXNrO0JpdHRlciBMaW5lYWdlIEltbW9ydGFsIEF4ZXM7U2tpdHRlcmluZyBEZXNvbGF0aW9uIFByZW07Q3JpbXNvbiBDeXJyaWRhZTtDbG9hayBvZiB0aGUgRGFyayBSZXNlcnZvaXI7SGVsbSBvZiB0aGUgRGFyayBSZXNlcnZvaXI7U2hvdWxkZXIgb2YgdGhlIERhcmsgUmVzZXJ2b2lyO0FybW9yIG9mIHRoZSBEYXJrIFJlc2Vydm9pcjtBcm1zIG9mIHRoZSBEYXJrIFJlc2Vydm9pcjtBeGUgb2YgVmlsZSBSZWxpcXVhcnk7TXVsY3RhbnQgUGFsbCBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzO0hvcm5zIG9mIHRoZSBCZXRyYXllcjtHYXVudGxldCBvZiB0aGUgVHJlYWNoZXJvdXMgRGVtb247SW5mZXJuYWwgV2luZ3MgTWFjZTtUSS05IExldmVsIFVwIEVmZmVjdDtUSS05IEZvdW50YWluIGx2bCAzIEVmZmVjdDtUaW5lcyBvZiBUeWJhcmE7SGVhcnRsZXNzIEh1bnQgLSBPZmYtSGFuZDtTdWJtZXJnZWQgSGF6YXJkIExhc2VyO1JhZGlhbnRhbmNpZW50IGxvYWRpbmdzY3JlZW47Vm9pY2Ugb2YgVGhlIEludGVybmF0aW9uYWwgQW5ub3VuY2VyO1JhcGllcnMgb2YgdGhlIEJ1cm5pbmcgR29kIFYgMy4xO0Zyb3N0IEF2YWxhbmNoZSBQcmVtO0JlbmV2b2xlbnQgQ29tcGFuaW9uIFByZW07RmxvdXJpc2hpbmcgTG9kZXN0YXIgUHJlbTtSaWNrIGFuZCBNb3J0eSBNZWdhLUtpbGw7VGVtcGVzdCBSZXZlbGF0aW9uO1N3aWZ0IENsYXcgYW5kIEZlcm9jaWQ5519cyBIZWFydDtBcXVlbWVyYWxkIEJsYWRlO1RpbnkgSWduZWQ5519cyBTdG9uZTtTbWFsbCBJZ25lb3VzIFN0b25lO01lZGl1bSBJZ25lb3VzIFN0b25lO0xhcmdlIElnbmVvdXMgU3RvbmU7Q3J5c3RhbCBEcnlhZCBQcmVtO1JpdmVyIFZpYWwgQm9pbGluZztSb3NoYW4gR2FyZGVucztTY3l0aGUgb2YgSWNlIFYgMi4wO0V0ZXJuYWwgUmFkaWFuY2UgQmxhZGVzIFByZW07UmF6emlscyBNaWRhcyBLbnVja2xlcyBQcmVtO1Njb3JjaGluZyBBbWJlciBEcmFnb29uIEZvcm07VGVycmFpbiAtIFNhbmN0dW1zIG9mIHRoZSBEaXZpbmU7V2VhdGhlciBCbHVlIFNreSBmcm9tIFNvdXAgZm9yIFNsdXRzO01hbmEgUG9vbCBIVUQ7U2tpcnQgb2YgdGhlIEd1YXJkaWFuIENvbnN0cnVjdCBCZXN0b3dlZDtDaGVzdHBsYXRlIG9mIHRoZSBHdWFyZGlhbiBDb25zdHJ1Y3QgQmVzdG93ZWQ7QnJhY2VycyBvZiB0aGUgR3VhcmRpYW4gQ29uc3RydWN0IEJlc3Rvd2VkO0hlbG0gb2YgdGhlIEd1YXJkaWFuIENvbnN0cnVjdCBCZXN0b3dlZDtTZXZlcmluZyBMYXNoIFByZW07Rm9ybSBvZiB0aGUgT255eCBHcm92ZTtTcGlyaXQgb2YgQ2FsbSBWIDIuMTtDYXVsZHJvbiBvZiBYYWhyeXggUHJlbTtBYmFkZG9uIFJFRCBNZWdhUGFjaztBQU1lZ2FQYWNrO1R3aW4gQmxhZGVzIEFzc2Fzc2luIFNldDtCcmlzdGxlYmFjayBNZWdhUGFjaztDb250ZXN0ZWQgRmF0ZTtCdXJuaW5nIE5pZ2h0bWFyZTtGaXJzdCBOaWdodCBvZiB0aGUgU3VtbWVyIENoaWxkO0t1bmtrYSBJbW1vcnRhbHMgTWVnYVBhY2s7U291cCBmb3IgU2x1dHMgQWthbWFuYWggQXJjYW5hO01hcnMgVEkxMCBDb2xsZWN0b3JzIENhY2hlIE1lZ2FQYWNrO0V5ZSBvZiB0aGUgQmVob2xkZXI7TW9ua2V5IEtpbmcgQXJjYW5hIE1lZ2FQYWNrO05pZ2h0IFN0YWxrZXIgSW1tb3J0YWwgYW5kIFJlYXBlciBLaXNpbGV2IE1vZE1ha2VyIE1lZ2FQYWNrO09tbmlrbmlnaHQgTWVnYVBhY2s7RXRlcm5hbCBIYXJ2ZXN0O0VsZW1lbnRhbCBJbXBlcmF0b3IgViAyLjA7RGlyZ2Vzd29ybiBEeW5hc3R5O1NoYWRvd3Mgb2YgUmF2ZW5zbWFuZTtMb3JkIG9mIENocm9ub3B0aWMgU3ludGhlc2lzO1NpbGVuY2VyIE1lZ2FQYWNrO1dhaWwgb2YgdGhlIFdpbnRlciBSZXZlbmFudDtEb29tIEltbW9ydGFscyBNZWdhUGFjaztEYXJrIE1vb24gU3RhbGtlciBWIDIuMTtNaXJhbmEgVEkxMCBDb2xsZWN0b3JzIENhY2hlIE1lZ2FQYWNrO1F1ZWVuIG9mIFBhaW4gQXJjYW5hIE1lZ2FQYWNrO1N0b3JtIFNwaXJpdCBNZWdhUGFjaztNZXJhbnRoIERyYWdvb247SWNld3JhY2sgTWFyYXVkZXI7VmlwZXIgTWVnYVBhY2s7RHJlYWQgQ29tcGFjdDtCZWFyZXIgb2YgdGhlIEFya3R1cmFuIFRhbG9uO1ZlbmdlYW5jZSBvZiB0aGUgU3Vud2FycmlvcjtUaGUgTWFndXMgTWFnbnVzIFNldDtFZnJpdCBTdWx0YW4gU2V0O0NsaW5reiBNZWdhUGFjaztDaGFybWVyIG9mIEZpcmVzbmFrZTtDb3JydXB0ZWQgU2hyaW5lIEdhcm1lbnRzO1dpbmRyYW5nZXIgQXJjYW5hIHN0eWxlIDIgKE9yYW5nZSBCaXJkKSBhbmQgRnVsbCBXUiBpbW1vcnRhbDtNb2x0ZW4gRGVzdHJ1Y3RvcjtMb3N0IFNlcmFwaCBTZXQ7VGhlIEJyaW5nZXIgb2YgUGxhZ3VlcztGZWxsc3RyYXRoIFNlcnBlbnQ7THljYW4gS2lzaWxldiBNb2RNYWtlciBNZWdhUGFjaztQYXJhZGlzZSBCaXJkIFN0aW5nO0NvbXBlbmRpdW0gQmxvb2R5IFJpcHBlcjtCZWFyaW5nIG9mIHRoZSBLaW5nIFJlc3RvcmVkO1JpZ2h0ZWQ5519cyBUaHVuZGVyYm9sdCBhbmQgQXJjYW5hIE1lZ2FQYWNrO1RpZGVodW50ZXIgTWVnYVBhY2s7SHVudGVyIG9mIHRoZSBDcnlzdGFsIERyaWZ0O01hbmlwdWxhdG9yIG9mIFdhcnNpdHVhdGlvbjtLaXJpbiBSaWRlciBTZXQ7SWNlYm91bmQgS2luZyBTZXQ7RGl2aW5lIEZsYW1lIFYgMi4wO09jY3VsdGlzdHMgUHVyc3VpdDtTY29yY2hpbmcgQW1iZXIgRHJhZ29vbjtPdXR3b3JsZCBEZXZvdXZlciBNZWdhUGFjaztQdWRnZSBUSTEwIENvbGxlY3RvcnMgQ2FjaGUgTWVnYVBhY2s7U2xhcmsgTWVnYVBhY2sgTmV3O1Rvb2xzIG9mIHRoZSBIYXJ1c3BleCBTZXQgdiAyLjA7IDEyM3x8fA==