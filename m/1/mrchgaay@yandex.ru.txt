bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogMDMwMDAyMDAtMDQwMC0wNTAwLTAwMDYtMDAwNzAwMDgwMDA5IDExMXx8fCAyMjI6OiAkMnkkMTAkTlRnMk1XUTRNekJsTUdWaU5EYzBaLndLdmw2TGoxa1RoSmh5MjNPZmVIMDRvWFByaEhtWTYgMjIyfHx8IDEyMzo6IFdpbmdzIG9mIHRoZSBGYWVzaGFkZSBGbG93ZXI7Q3J5c3RhbCBNYWlkZW4gQW5pbWUgVm9pY2U7TGluYSBBbmltZSBWb2ljZTtUZXJyb3JibGFkZSBFTkcgQXJjYW5lIHZvaWNlO1NoYWRvdyBGaWVuZCBFTkcgQXJjYW5lIHZvaWNlO1NGIFJVIEFyY2FuZSB2b2ljZTtQaGFudG9tIEFzc2FzaW4gUlUgQXJjYW5lIHZvaWNlO0xlZ2lvbiBDb21tYW5kZXIgRU5HIEFyY2FuZSB2b2ljZTtQdWNrIEFuaW1lIFZvaWNlO1F1ZWVuIG9mIFBhaW4gQW5pbWUgVm9pY2U7VGVtcGxhciBBc3Nhc3NpbiBBbmltZSBWb2ljZTtWZW5nZWZ1bCBTcGlyaXQgQW5pbWUgVm9pY2U7UHVkZ2UgQXJjYW5hIEVORyBWb2ljZTtUZXJyYWluIC0gU3ByaW5nO1dlYXRoZXIgU3ByaW5nO1JpdmVyIFZpYWwgUGluaztTb25nIG9mIHRoZSBTb2xzdGljZSBIZWFkO0tvdGwgSWxsdW1pbmF0ZSBSYW07TWQ5519bnQgb2YgdGhlIE1pZG5pZ2h0IFN1bjtIZWxtIG9mIHRoZSBGaXJzdCBEYXduO0FybW9yIG9mIFR3aXN0ZWQgV2lzZG9tO1NtYWxsIFNjYXJsZXQgUXVhcnJ5O0N1c3RvbSBEYXNoYm9hcmQgMTtCbG9vZGZlYXRoZXIgV2luZ3M7Q2hhaW5lZCBHdWFyZDtNYW50bGUgb2YgRGVsaWdodGZ1bCBBZmZsaWN0aW9uO1Nhc2ggb2YgVHdpbGlnaHQgU2hhZGU7TWFjZSBvZiBWaW5jZXJlO0VtZXJhbGQgUm9zaGFuO0J1cmdsYXIgb2YgV2FzcDtDdXJzZSBvZiB0aGUgV2ludGVyIFJvc2U7QmV3aXRjaGluZyBGbGFyZSBWIDIuMDtDaGFybWVyIG9mIEZpcmVzbmFrZTtUaW1lIFdhbmRlcmVyO0tvbWVpamkgS29pc2hpIDIgZm9yIEJhbmUgYnkgUGF0Y2hvdWxpIEtub3dsZWRnZTtDb250ZXN0ZWQgRmF0ZTtGb3Jnb3R0ZW4gVGFjdGljaWFuO0JpdHRlcndpbmcgTGVnYWN5O0NobG9lIHZvbiBFaW56YmVybiBmb3IgRWFydGggU3Bpcml0IGJ5IFBhdGNob3VsaSBLbm93bGVkZ2U7U2Vpc21pYyBCZXJzZXJrZXI7Q3J5c3RhbCBTY2F2ZW5nZXI7QWxsZmF0aGVyIG9mIE5hdHVyZSBTZXQ7QXVzcGljaWQ5519cyBTZWFkd2VsbGVyO1BpdGZhbGwgQ3J1c2FkZXI7Q3J1ZWwgUmVwcmlzYWw7VmVuZ2VhbmNlIG9mIHRoZSBTdW53YXJyaW9yO01hZ2lzdGVyIG9mIHRoZSBOYXJyb3cgRmF0ZXM7TW9uc3Ryb3VzIFJlcHJpc2FsO0dpZnRlZCBKZXN0ZXI7TWFqZXN0eSBvZiB0aGUgRm9yYmlkZGVuIFNhbmRzIFYgMi4wO1NvdWwgTGlsaXRoO0ZsdXR0ZXJpbmcgQW1ldGh5c3Q7Rm91bGZlbGwgQ29ycnVwdG9yO1BsdW5kZXIgb2YgdGhlIFNhdmFnZSBNb25nZXI7RnJvc3QgQnJpZ2FkaWVyOyAxMjN8fHw=