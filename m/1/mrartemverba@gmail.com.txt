limitHWID:: 1 000||| 111:: F1E886CB-A8A2-0B1B-AFE4-2CF05D5D47CF 111||| 222:: bb718857a3fe79bc17ea2a33c08fa0c0269af71f388a1917a9b4873cfb19a47e536e1ef4791321759268101daa9715b2bcb9a20268e6e090e6ac2abd7d52f046 222||| 123:: Pumpkin Trees UP;Weather Snow;Terrain - Winter;Emerald Roshan;Echo the Locator;River Vial Blue;Clockwerk Announcer;Clockwerk Mega-Kill;Brewery HUD;Combo Mega Greevil;Cavernite Dire Creeps;Cavernite Radiant Creeps;Guardians of the Lost Path Dire Towers;Guardians of the Lost Path Radiant Towers;Nothlic Burden Prem;Eidolons of Abyssal Vortex;Mulctant Pall;Fin King*s Charm Prem;Bow of the Beholder;Piston Impaler effect;Golden Moonfall Prem;Kotl Illuminate Deer;Auspice of the Whyrlegyge Prem;Pyrexaec Floe;Golden Severing Crest;Phantom Advent Shoulders UP;Phantom Advent UP;Phantom Advent Belt UP;Phantom Advent Weapon UP;Pale Edge V 2.0;Sherman Maiden V 4.1;Lineage Province of the Hunt Eternal;Brumal Berserker;Raid of the Northern Exiles;Mark of the Mistral Fiend V 2.1;Delights of Petaluna Pathfinder;Lightning Harbinger;First Night of the Summer Child;Exponent of the Endless Stars;Mandate of the Nameless;Convalescing Empress;Harness of the Fissured Soul;Lost Ranger;Spirit of the Emeraldine Rider V 2.1;Icebound King Set;Forgotten Renegade;Tales of the Grey Wastes;Reminiscence of Dreams;Jolly Reaver;Bitterwing Legacy;Bewitching Flare V 2.0;Rambling Fatebender;Foulfell Corruptor;Magister of the Narrow Fates;Valkyries Shade;Dark Reef Escape V 2.1; 123|||