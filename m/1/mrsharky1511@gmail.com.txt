limitHWID:: 1 000||| 111::  111||| 222:: $2y$10$YTQ2ZmZhNGE4MjNjMWNjYOagWV9zgBzDAZi4DX4q/Rlo9JxO4sT6C 222||| 123:: Carnage of the Endless Hunt - Shoulders;Axe Blackthorn Belt;Rampant Outrage Prem;Prize of the Snowpack Savage;Carnage of the Endless Hunt - Weapon;Blade of the Creeping Shadow;Tempest Helm of the Thundergod Prem;Cape of Falconside Armor;Song of the Bluebird - Quiver;Quiver of Falconside Armor;Song of the Bluebird - Shoulder;Song of the Bluebird - Bow;Provocation of Ruin Bracers;Provocation of Ruin Belt;Serrakura;Reptilian Refuge Dire Creeps;Black Ice Constellation - Arms;Black Ice Constellation - Legs;Black Ice Constellation - Weapon;Horns of the Arch Temptress;Blade of the Obsidian Nightmare;Cape of the Great Safari;Cyclopean Helm of the Keen Machine;Mantle of the Hinterland Stalker;Stonefire;Shawl of the Creeping Shadow;Dress of the Bewitching Flare;Heart of Fire Head;Heart of Fire Neck;Armor of Twisted Wisdom;Dark Forest Punisher Head;Force of Kylin Tail;Arms of the Iron Hog;Razors of the Iron Hog;Belt of the Iron Hog;Face of the Iron Hog;Chopper of the Iron Hog;Shoulder of the Iron Hog;Axe of the Iron Hog;Bracers of the Ardalan Interdictor;Mask of the Tahlin Watch;Shadowshard - Off-Hand;Tahlin Occult Shoulder Sigil;Slim Blade of the Tahlin Watch;Shadowshard;Cape of the Rising Gale;Song of the Bluebird - Head;Furstole of the Shadowcat;Shoulders of the Bladesrunner;Mask of the Bladesrunner;Ice Burst Cloak;Infernal Wings Claw;Lion Greedy King Back;Shards of the Malignant Corruption;Lion Greedy King Weapon;Cursed Decay Inhibitor Arms;Bonds of Madness Set Style 1;Redrage Crawler Belt;DeathBlossom Drow Ranger Head;Trail of the Fearful Aria;Bracer of the Silvered Talon;Belt of the Hazhadal Magebreaker;Mask of the Hazhadal Magebreaker;Shield of the Hazhadal Magebreaker;Cape of the Hazhadal Magebreaker;Edge of the Hazhadal Magebreaker;Complete Garb of the Corridan Maestro;Ruan of Blossoming Harmony;The Lightning Orchid;Bracers of the Ferocious Heart;Mane of the Ferocious Heart;Girdle of the Ferocious Heart;Skull of the Razorwyrm;Rune Forged Shoulders;Golden Immortal Pantheon;Zeus Emperor of the Clergy Arms;Arc of the Sovereign Belt;Restraints of the Frost Lord;Robe of the Rime Lord;Vestment of the Rime Lord;Rune Forged Bracers;Wings of the Manticore;Rune Forged Belt;Rune Forged Helm;Complete Staff of the Manticore;Arms of Fate Meridian;Iceforged Cape;Wraps of the Eastern Range;Crown of Fate Meridian;Heaven-Piercing Pauldrons;Wings of the Obsidian Nightmare;Wraps of the Wicked Succubus;Assassination of Dark Feather Belt;Capricious Fate Head; 123|||