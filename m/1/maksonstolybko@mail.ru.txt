bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogMDNERTAyOTQtMDQ4MC0wNUMxLTU0MDYtNEIwNzAwMDgwMDA5IDExMXx8fCAyMjI6OiBlYmJjZmVjYmI5NzY1NDMwNGYzYWVlMDIyODIzNmVjNGQ5NGZhMDU5M2VhMWVjODIzNmZjM2UyYjllNmIwMTU0NmQ5ZWU2MjU1MGQ4ZmYzMGQzZGY5ZWRjNjU1MTdjYWE3NWRjYjZkZDM1OGUxMWE5ZWM1ZDdjZGY4OTExYjBjMCAyMjJ8fHwgMTIzOjogQXBvZ2VlIG9mIHRoZSBHdWFyZGlhbiBGbGFtZTtIb29kIG9mIHRoZSBXYW5kZXJpbmcgRmxhbWU7TWFndXMgQWNjb3JkO0RhcmsgQXJ0aXN0cnkgQ2FwZSBQcmVtO0RhcmsgQXJ0aXN0cnkgSGFpciAybmQgU3R5bGU7SGVhdmVuLVBpZXJjaW5nIFBhdWxkcm9ucztNYWxsZXQgb2YgdGhlIFNwaXJhbCBCb3JlO01hbmlmb2xkIFBhcmFkb3ggUEEgQXJjYW5hIFN0eWxlIDM7Qmxvc3NvbSBvZiB0aGUgTWVycnkgV2FuZGVyZXI7RmVhc3Qgb2YgQWJzY2Vzc2lvbjtJbnNhdGlhYmxlIEJvbmVzYXcgUHJlbTtEcmFnb25jbGF3IEhvb2s7QXJjYW5pYyBSZXNvbmFuY2UgQmVhbTtGbHV0dGVyaW5nIEFtZXRoeXN0ICsgUHVycGxlIEZvY2FsIFJlc29uYW5jZSBEb3RhMkNoYW5nZXIgRWRpdGlvbjtGb2NhbCBSZXNvbmFuY2UgViAzLjA7Q29uc3RlbGxhdGlvbiBXZWFwb247Q29uc3RlbGxhdGlvbiBBcm1vcjtUaGUgSW50ZXJuYXRpb25hbCAyMDE1IEN1cnNvciBQYWNrO0hpZGRlbiBWZWN0b3IgLSBCZWx0O0hpZGRlbiBWZWN0b3IgLSBCbGFkZTtIaWRkZW4gVmVjdG9yIC0gSGF0O0hpZGRlbiBWZWN0b3IgLSBBcm1vcjtTb3VsIG9mIHRoZSBTbGF5ZXIgUHJlbTtXeXJtd3JvdWdodCBGbGFyZTtEaXNjaXBsZSBvZiB0aGUgV3lybXdyb3VnaHQgRmxhbWU7VG9ybWVudGVkIENyb3duO1Rvcm1lbnRlZCBTdGFmZjtTdWJtZXJnZWQgSGF6YXJkIFByb3BlbGxlcjtTdWJtZXJnZWQgSGF6YXJkIE1hc2s7U3VibWVyZ2VkIEhhemFyZCBMYXVuY2hlcjtUZXJyYWluIC0gU2FuY3R1bXMgb2YgdGhlIERpdmluZTtCbHVlU2t5IEl0ZW0gRWZmZXRzO1N1Ym1lcmdlZCBIYXphcmQgSHVsbDtXZWF0aGVyIFNub3c7VGVycmFpbiAtIFdpbnRlcjtOaWdodCBUZXJyb3JzIEhhdDtOaWdodCBUZXJyb3JzIE1vdW50O1RlbXBlc3QgSGVsbSBvZiB0aGUgVGh1bmRlcmdvZCArIFJpZ2h0ZWQ5519cyBUaHVuZGVyYm9sdDtUZW1wZXN0IFJldmVsYXRpb247U0YgQXJjYW5hIE1lZ2FwYWNrO0NvcnJpZGFuIE1hZXN0cm8gYW5kIFRoZSBMaWdodG5pbmcgT3JjaGlkIGFuZCBHb2xkZW4gTWFuZGF0ZSBvZiB0aGUgU3Rvcm1ib3JuIE1lZ2FQYWNrIE5FVztDaW5kZXIgU2Vuc2VpO0t1bmtrYSBJbW1vcnRhbHMgTWVnYVBhY2s7TW9ycGhsaW5nIEltbW9ydGFscyBNZWdhUGFjayBVUDtQYXJhZGlzZSBCaXJkIFN0aW5nO1Vyc2EgSW1tb3J0YWxzIE1lZ2FQYWNrO1F1ZWVuIG9mIFBhaW4gQXJjYW5hIE1lZ2FQYWNrOyAxMjN8fHw=