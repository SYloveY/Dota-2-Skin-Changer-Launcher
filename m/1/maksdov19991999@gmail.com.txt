bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogMEMwRjZBNEEtRjQ4RS0xMURFLTgxRDAtQjlGNzZFMzk1QzdCIDExMXx8fCAyMjI6OiAzZjQ1NzdhZWM0OGQ1NDRmMWZmZjZkMzQxNjE0YTIxYzcxNjFjZGM3NTQ2NTkzODc2MmVlNDBkYzFkNTM2ZDc3ODNjMTg2NjllYzVhMGQ5ZDNjNzcyZGI3YjNmY2Q2Njc3YzBiMTYyOTE0YjBkMzk3MTZiYjMyZmQ1MjcxNjhkZiAyMjJ8fHwgMTIzOjogVEk5IENhY2hlIEJhbmUgRW5kbGVzcyBOaWdodG1hcmUgSGVhZDtIYXJ2ZXN0ZWQgU2hvdWxkZXJzO09mZi1IYW5kIFdlYXBvbiBvZiB0aGUgQmxvb2Rmb3JnZTtXZWFwb24gb2YgdGhlIEJsb29kZm9yZ2U7TWFzayBvZiB0aGUgQmxvb2Rmb3JnZTtCbGFzdGZvcmdlIEV4aGFsZXI7UGlzdG9uIEltcGFsZXI7UGlzdG9uIEltcGFsZXIgZWZmZWN0O0luZmVybmFsIENoaWVmdGFpbiBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzO0NoYW9zIEFyYml0ZXI7Rmlyc3QgTGlnaHQgQXJtb3I7Rmlyc3QgTGlnaHQgQXJtcztGaXJzdCBMaWdodCBIZWFkO0ZpcnN0IExpZ2h0IFdlYXBvbjtXaGlzcGVycyBvZiB0aGUgRGFtbmVkIFdpbmdzO0Zyb3N0Z2xhZGUgRmFtaWxpYXIgSGF0O0JvdyBvZiB0aGUgRnJvc3RmYW5ncyBWIDIuMDtCbGFjayBJY2UgQ29uc3RlbGxhdGlvbiAtIEFybXM7U2hhZG93cyBvZiBSYXZlbnNtYW5lIENsb2FrO0JsYWNrIEljZSBDb25zdGVsbGF0aW9uIC0gTGVncztEZWF0aCBTaGFkb3cgUXVpdmVyO1Nob3VsZGVycyBvZiB0aGUgQmxhY2sgV2luZCBSYXZlbjtGbGFzaHBvaW50IFByb3NlbHl0ZSAtIEhlYWQ7TWFndXMgQXBleDtLaWRzIE9yYjtUaGUgR2FsYWN0aWMgSU87RWRnZSBvZiB0aGUgTG9zdCBPcmRlcjtUb3JtZW50ZWQgU3RhZmYgZWZmZWN0O0ZpbiBLaW5nKnMgQ2hhcm0gUHJlbTtSdWJ5IFJpbmcgb2YgUmFrLW5vdGggUmFrLW51bDtNdWxjdGFudCBQYWxsO0dvbGRlbiBNb29uZmFsbCBQcmVtO1R3aWxpZ2h0IFNjaGlzbTtBeGlhIG9mIE1ldGlyYTtHb2xkZW4gTWFzayBvZiBNZXRpcmE7Q3Jlc2NlbnQgQm93O0JsYWRlIG9mIFRlYXJzIGFuZCBDcm93biBvZiBUZWFycztTdWxsZW4gSG9sbG93IFYgMy4yO0RhcmtuZXNzIFdhaWxpbmcgQmFjaztBdXNwaWNlIG9mIHRoZSBXaHlybGVneWdlIFByZW07QWxsdXZpb24gUHJvcGhlY3kgViAyLjA7R29sZGVuIFNoYXJkcyBvZiBFeGlsZTtCbGlzc2Z1bCBLbmF2ZSBDb2F0O01hc2sgb2YgdGhlIENvbmZpZGFudDtCbGlzc2Z1bCBLbmF2ZSBSYXBpZXI7RGlmZnVzYWwgTGFuY2U7R3JhbmQgQWJzY2Vzc2lvbiBIb29rIEJ1bmRsZTtNdXJkZXIgTWFzaztEaXJlY291cnQgSmVzdGVyIENsZWF2ZXI7RW1pbmVuY2Ugb2YgUmlzdHVsIEtuaWZlIEF0dGFjaztIb3JucyBvZiBNb25zdHJvdXMgUmVwcmlzYWwgUHJlbTtUaGUgQmFycmVuIFZlY3RvcjtBcm1zIG9mIERlc29sYXRpb24gUHJlbTtTb3VscyBUeXJhbnQgSGVhZDtTb3VsIENvcnB1bGVuY2UgLSBTaG91bGRlcjtIdXNoIG9mIEV0ZXJuYWwgTmlnaHQ7SGVhZGh1bnRlciBTbGFyaztQYWxlIEVkZ2UgViAyLjA7R29sZGVuIEZ1bGwtQm9yZSBCb25hbnphO0Nhbm5vbiBvZiB0aGUgT2NjdWx0aXN0cyBQdXJzdWl0O0lyb24gU3VyZ2UgViAyLjI7U2F2YWdlIE1ldHRsZTtSZWN0aWZpZXI7TWFqZXN0eSBPZiBUaGUgQ29sb3NzdXMgLSBNb25vbGl0aDtTd29yZCBvZiB0aGUgQ29sb3NzdXMgUHJlbTtGb2xpYWdlIG9mIEVsZHJpdGNoIEduYXJsO0RhcmsgTWVhZG93IE1hc3NhY3JlIEFybW9yO0RhcmsgTWVhZG93IE1hc3NhY3JlIEFybXM7RGFyayBNZWFkb3cgTWFzc2FjcmUgSGVhZDtCYXJkaW5nIG9mIHRoZSBTaWVnZS1EcmFrZTtNYWxlZmljIERyYWtlcyBIb29kIG9mIHRoZSBDcmltc29uIFdpdG5lc3M7RG9vbSBvZiBJdGhvZ29ha2k7Q2FwZSBvZiBHcmltIERlc3Rpbnk7VGVtcGVzdCBIZWxtIG9mIHRoZSBUaHVuZGVyZ29kIFByZW07U3ltYm9sIG9mIHRoZSBLaW5nIFJlc3RvcmVkO0dvbGRlbiBJbW1vcnRhbCBQYW50aGVvbjtPdmVyZ3Jvd24gRW1ibGVtIEFnaGFuaW0gRWZmZWN0O1BsYW5ldGZhbGwgQmxpbms7MjUgbHZsIHBpbmc7Q29sb3JTdGF0cztSZXB0aWxpYW4gUmVmdWdlIERpcmUgQ3JlZXBzO1JlcHRpbGlhbiBSZWZ1Z2UgUmFkaWFudCBDcmVlcHM7VEktNCBlZmZlY3QgRGFnb247RW1pbmVuY2Ugb2YgUmlzdHVsIERlbnkgMjtMZXZlbFVwIFRJLTYgRWZmZWN0O01qb2xsbmlyIFRJLTYgRWZmZWN0O1BoYXNlIEJvb3RzIFRJLTYgRWZmZWN0O1Jvc2hhbiBIYWxsb3dlZW4gRnJhbmtlbnN0ZWluIFNraW47VEktOCBTaGl2YXMgRWZmZWN0O1RJLTEwIFRlbGVwb3J0IGx2bCAzIEVmZmVjdDtHdWFyZGlhbnMgb2YgdGhlIExvc3QgUGF0aCBEaXJlIFRvd2VycztHdWFyZGlhbnMgb2YgdGhlIExvc3QgUGF0aCBSYWRpYW50IFRvd2VycztCb29vb2Z1cyB3aXRoIERhcmsgZWZmZWN0O0Nocm9teSB0aGUgQ2VudGlwZWRlIFdhcmQ7V2VhdGhlciBTbm93O1RlcnJhaW4gLSBXaW50ZXI7VHJheGV4IDIgbG9hZGluZ3NjcmVlbjtCcm9vZCBIdW50ZXIgSFVEO0NydWNpYmxlIG9mIFJpbGU7TWFudGxlIG9mIHRoZSBDaW5kZXIgQmFyb24gU3R5bGUgMTtOb3RobGljIEJ1cmRlbiBQcmVtO0RhcmtjbGF3IEVtaXNzYXJ5IEFybXM7RGFya2NsYXcgRW1pc3NhcnkgQ293bDtEYXJrY2xhdyBFbWlzc2FyeSBEcmVzcztEaXZpbmF0aW9ucyBvZiB0aGUgTm90aGwgSGF6ZSBTdGFzaDtQaXBlIG9mIERlenVuO0RhcmsgUmVhbG0gT3JhY2xlcyBNYXNrO0RhcmsgUmVhbG0gT3JhY2xlcyBBcm1vcjtPdXRsYW5kIFdpdGNocyBTcGlyaXRzO1RJOSBDYWNoZSBEUCBWb29kb28gUHJpZXN0ZXNzIEJlbHQ7U2tpcnQgb2YgdGhlIEJyaWdodHNocm91ZDtCcmFjZXJzIG9mIHRoZSBDYXZlcm4gTHVtaW5hcjtCZWx0IG9mIHRoZSBSZWQgTWQ5519bnRhaW47VG90ZW0gb2YgRm9yZ290dGVuIEVwb2NoO0FybXMgIG9mIHRoZSBTaGF0dGVyZWQgVGFyZ2U7U2hhcmRzIG9mIHRoZSBNb251bWVudCBvZiBSdWluO0hvb2Qgb2YgdGhlIFNoYXR0ZXJlZCBUYXJnZTtWaXNlIG9mIENyZWF0aW9uO0JyYWNlcnMgb2YgQWVvbnMgUHJlbTtKZXdlbCBvZiBBZW9ucyBQcmVtO0F1Z3VyIG9mIE9ibGl2aW9uIC0gSGVhZDtNYWNlIG9mIEFlb25zO0dyZWF0IFNhZ2UqcyBSZWNrb25pbmc7RmxpZ2h0IG9mIHRoZSBVbmR5aW5nIExpZ2h0O0hhaXIgb2YgdGhlIEdyZXkgR2FsbGFudDtQYXVsZHJvbiBvZiBIZWF2ZW5seSBMaWdodDtDb21wbGV0ZSBNYWxsZXQgb2YgU2FjcmVkIExpZ2h0O1N5bHZhbiBDYXNjYWRlIFByZW07Qm93IG9mIHRoZSBCYXR0bGVyYW5nZXI7U29uZyBvZiB0aGUgQmx1ZWJpcmQgLSBIZWFkO1Nvbmcgb2YgdGhlIEJsdWViaXJkIC0gUXVpdmVyO1NoYW1ibGluZyBUcmlja3N0ZXIgQmVsdDtGb290ZmFsbHMgb2YgdGhlIFNwb3JlZmF0aGVycyAtIEhlYWQ7UmF0dGxlYml0ZTtGb290ZmFsbHMgb2YgdGhlIFNwb3JlZmF0aGVycyAtIFdlYXBvbjtGZWF0aGVyZWQgTWFudGxlIG9mIHRoZSBBcmt0dXJhbiBUYWxvbjtGcmlnaHRmdWwgUmV2ZWxyaWVzIExlZ3M7T3JpZ2luIG9mIHRoZSBEYXJrIE9hdGggLSBUYWlsO1NwYXVsZGVycyBvZiB0aGUgUHNpb24gSW5xdWlzaXRvcjtGb2NhbCBSZXNvbmFuY2UgViAzLjA7TWFyayBvZiB0aGUgTWlzdHJhbCBGaWVuZCBWIDIuMTtCaWcgVW4gViAzLjA7QnJ1bWFsIEJlcnNlcmtlcjtBbnRpbWFnZSBTaGlub2JpO0Nvc21pYyBXYW5kZXJlcjtUaGUgUm93ZHkgRmlyZWJyYW5kO01hcmF1ZGVyIG9mIHRoZSBDaGFvcyBXYXN0ZXM7V3JhdGggb2YgdGhlIEJsb29kIENvdmVuYW50IFNldDtCb3VudHkgSHVudGVyIE1hbmlhYyBTZXQ7V3lybWJyZXcgQ29ubm9pc3NldXI7UGF0dGVybiBvZiB0aGUgU2lsa2VuIFF1ZWVuO0JhdHRsZSBEcmVzcyBvZiB0aGUgUHJvdmVuO0dyeXBob24gUmlkZXIgU2V0O1RoZSBSYXQgS2luZztMaW5lYWdlIFByb3ZpbmNlIG9mIHRoZSBIdW50IEV0ZXJuYWw7VGhlIEJyYXNzIEZseWVyO1NoZXJtYW4gTWFpZGVuIFYgNC4xO0ZvcmdvdHRlbiBUYWN0aWNpYW47U2FjY2hhcmluZSBTYWJvdGV1cjtUZW1wZXN0cyBXcmF0aDtCcmluZ2VyIG9mIFRyb3VibGVzO0xvcmQgb2YgRmxhbWUgRHJhZ29uO1ZhbnF1aXNoaW5nIERlbW9ucyBHZW5lcmFsIFYgMy4xO1RoZSBTaGVlcCBTZXQ7RXhwb25lbnQgb2YgdGhlIEVuZGxlc3MgU3RhcnM7VGhlIENoYWluZWQgU2NyaWJlO0FsbGllZCBDb21tYW5kZXIgU2V0O0V4cGxvc2l2ZSBNYW5pYWM7RmF0ZSBNZXJpZGlhbjtTdXNhbm8gT3MgRGVzY2VuZGFudDtGb3Jnb3R0ZW4gUmVuZWdhZGU7RGl2aW5lIEFuY2hvciBTdHlsZSAxO0Jlc3Rvd21lbnRzIG9mIHRoZSBEaXZpbmUgQW5jaG9yIGVmZmVjdHM7TG9yZCBvZiBDaHJvbm9wdGljIFN5bnRoZXNpcztDb21wZW5kaXVtIEJsb29keSBSaXBwZXI7QmV3aXRjaGluZyBGbGFyZSBWIDIuMDtXYXItQnVycm93IFJhdmFnZXI7UmlkZXJzIEVjbGlwc2UgViAyLjE7SHVudGVyIG9mIEtpbmdzIFYgMi4wO1NlaXNtaWMgQmVyc2Vya2VyO0Z1cnkgb2YgV2FyIEdvZDtFeWUgb2YgdGhlIEJlaG9sZGVyO1Zvb2RvbyBNZWVwbztBbGx1cmUgb2YgdGhlIERlZXA7QWxsZmF0aGVyIG9mIE5hdHVyZSBTZXQ7V3JhdGggb2YgS2EgViAyLjE7RGV2aWFudCBNZXRhbW9ycGhvc2lzO1RhbGVzIG9mIHRoZSBHcmV5IFdhc3RlcztOZWJ1bGFzIFdhbGtlcjtNYW5kYXRlIG9mIHRoZSBOYW1lbGVzcztWZW5nZWFuY2Ugb2YgdGhlIFN1bndhcnJpb3I7SXJlIG9mIE1vbHRlbiBSZWJpcnRoO1JlbWluaXNjZW5jZSBvZiBEcmVhbXM7U3VyZ2ljYWwgUHJlY2lzaW9uO05hcmNpc3Npc3RpYyBMZWVjaDtNYWdpc3RlciBvZiB0aGUgTmFycm93IEZhdGVzO01vbnN0cm91cyBSZXByaXNhbDtBbmNpZW50IE1hZ3VzIFN0eWxlIDI7SXJvbmNsYWQgTW9sZCBWIDIuMDtDcm93biBvZiBUaGUgTmlnaHR3b3JsZDtDaGFybWVyIG9mIEZpcmVzbmFrZTtCZXN0b3dtZW50cyBvZiB0aGUgQ2VudHVyaW9uIFZhbmd1YXJkO0tlZW4gTWFjaGluZTtTb3VsIExpbGl0aDtHZW5pZSBTcGlyaXQ7UG93ZGVyc2xlZCBSb29rZXJ5O1RpZGVodW50ZXIgS2lsbGVyO1JhdWNvdXMgR2F0ZWNyYXNoZXI7VGlua2VyIFNjYXJlY3JvdyBTZXQ7Qm9nYm9ybmU7WnVsamluIGZvciBUcm9sbCBXYXJsb3JkIFN0eWxlIDM7QnJhd2xlciBvZiB0aGUgR2xhY2llciBTZWEgViAzLjA7QXRyb2NpdGllcyBvZiB0aGUgQWJ5c3NhbCBTY291cmdlO0Zlcm9jaWQ5519cyBIZWFydDtFY2hvZXMgb2YgdGhlIEV5cmllIFYgMi4wO0NvcnJ1cHRpb24gb2YgdGhlIFZpcnVsZW50IEtyYWl0O0NoaWxsIG9mIHRoZSBLZWVwZXJzIEdhemU7RHJlYWQgQ29tcGFjdDtUaGUgRHVzayBDcmF3bGVyIFNldDtXaW5ncyBvZiBDb2xvcmZ1bCBJY2VjcnlzdGFscztHcmltIERlc3Rpbnk7UmVkIE1pc3QgUmVhcGVyIFNldDtFZnJpdCBTdWx0YW4gU2V0O0VycmFudCBTb2xkaWVyO0ljZWJvdW5kIEtpbmcgU2V0O0Jhc3Rpb24gb2YgdGhlIExpb25zZ3VhcmQ7U3Rvcm13cm91Z2h0IEFyYml0ZXIgViAyLjA7VGhlIFRpbWVrZWVwZXIgU2lsdmVyO0lsbGlkYW4gU3Rvcm1yYWdlIGZvciBUZXJyb3JibGFkZSBWIDIuMDtUb2xsIG9mIHRoZSBGZWFyZnVsIEFyaWE7IDEyM3x8fA==