bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogMEMwRjZBNEEtRjQ4RS0xMURFLTgxRDAtQjlGNzZFMzk1QzdCIDExMXx8fCAyMjI6OiAzZjQ1NzdhZWM0OGQ1NDRmMWZmZjZkMzQxNjE0YTIxYzcxNjFjZGM3NTQ2NTkzODc2MmVlNDBkYzFkNTM2ZDc3ODNjMTg2NjllYzVhMGQ5ZDNjNzcyZGI3YjNmY2Q2Njc3YzBiMTYyOTE0YjBkMzk3MTZiYjMyZmQ1MjcxNjhkZiAyMjJ8fHwgMTIzOjogVEk5IENhY2hlIEJhbmUgRW5kbGVzcyBOaWdodG1hcmUgSGVhZDtIYXJ2ZXN0ZWQgU2hvdWxkZXJzO09mZi1IYW5kIFdlYXBvbiBvZiB0aGUgQmxvb2Rmb3JnZTtXZWFwb24gb2YgdGhlIEJsb29kZm9yZ2U7TWFzayBvZiB0aGUgQmxvb2Rmb3JnZTtCbGFzdGZvcmdlIEV4aGFsZXI7UGlzdG9uIEltcGFsZXI7UGlzdG9uIEltcGFsZXIgZWZmZWN0O0luZmVybmFsIENoaWVmdGFpbiBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzO0NoYW9zIEFyYml0ZXI7Rmlyc3QgTGlnaHQgQXJtb3I7Rmlyc3QgTGlnaHQgQXJtcztGaXJzdCBMaWdodCBIZWFkO0ZpcnN0IExpZ2h0IFdlYXBvbjtXaGlzcGVycyBvZiB0aGUgRGFtbmVkIFdpbmdzO0Zyb3N0Z2xhZGUgRmFtaWxpYXIgSGF0O0JvdyBvZiB0aGUgRnJvc3RmYW5ncyBWIDIuMDtCbGFjayBJY2UgQ29uc3RlbGxhdGlvbiAtIEFybXM7U2hhZG93cyBvZiBSYXZlbnNtYW5lIENsb2FrO0JsYWNrIEljZSBDb25zdGVsbGF0aW9uIC0gTGVncztEZWF0aCBTaGFkb3cgUXVpdmVyO1Nob3VsZGVycyBvZiB0aGUgQmxhY2sgV2luZCBSYXZlbjtGbGFzaHBvaW50IFByb3NlbHl0ZSAtIEhlYWQ7TWFndXMgQXBleDtLaWRzIE9yYjtUaGUgR2FsYWN0aWMgSU87RWRnZSBvZiB0aGUgTG9zdCBPcmRlcjtUb3JtZW50ZWQgU3RhZmYgZWZmZWN0O0ZpbiBLaW5nKnMgQ2hhcm0gUHJlbTtSdWJ5IFJpbmcgb2YgUmFrLW5vdGggUmFrLW51bDtNdWxjdGFudCBQYWxsO0dvbGRlbiBNb29uZmFsbCBQcmVtO1R3aWxpZ2h0IFNjaGlzbTtBeGlhIG9mIE1ldGlyYTtHb2xkZW4gTWFzayBvZiBNZXRpcmE7Q3Jlc2NlbnQgQm93O0JsYWRlIG9mIFRlYXJzIGFuZCBDcm93biBvZiBUZWFycztTdWxsZW4gSG9sbG93IFYgMy4yO0RhcmtuZXNzIFdhaWxpbmcgQmFjaztBdXNwaWNlIG9mIHRoZSBXaHlybGVneWdlIFByZW07QWxsdXZpb24gUHJvcGhlY3kgViAyLjA7R29sZGVuIFNoYXJkcyBvZiBFeGlsZTtCbGlzc2Z1bCBLbmF2ZSBDb2F0O01hc2sgb2YgdGhlIENvbmZpZGFudDtCbGlzc2Z1bCBLbmF2ZSBSYXBpZXI7RGlmZnVzYWwgTGFuY2U7R3JhbmQgQWJzY2Vzc2lvbiBIb29rIEJ1bmRsZTtNdXJkZXIgTWFzaztEaXJlY291cnQgSmVzdGVyIENsZWF2ZXI7RW1pbmVuY2Ugb2YgUmlzdHVsIEtuaWZlIEF0dGFjaztIb3JucyBvZiBNb25zdHJvdXMgUmVwcmlzYWwgUHJlbTtUaGUgQmFycmVuIFZlY3RvcjtBcm1zIG9mIERlc29sYXRpb24gUHJlbTtTb3VscyBUeXJhbnQgSGVhZDtTb3VsIENvcnB1bGVuY2UgLSBTaG91bGRlcjtIdXNoIG9mIEV0ZXJuYWwgTmlnaHQ7RW1weXJlYW47SGVhZGh1bnRlciBTbGFyaztQYWxlIEVkZ2UgViAyLjA7R29sZGVuIEZ1bGwtQm9yZSBCb25hbnphO0Nhbm5vbiBvZiB0aGUgT2NjdWx0aXN0cyBQdXJzdWl0O0lyb24gU3VyZ2UgViAyLjI7U2F2YWdlIE1ldHRsZTtSZWN0aWZpZXI7TWFqZXN0eSBPZiBUaGUgQ29sb3NzdXMgLSBNb25vbGl0aDtTd29yZCBvZiB0aGUgQ29sb3NzdXMgUHJlbTtGb2xpYWdlIG9mIEVsZHJpdGNoIEduYXJsO0RhcmsgTWVhZG93IE1hc3NhY3JlIEFybW9yO0RhcmsgTWVhZG93IE1hc3NhY3JlIEFybXM7RGFyayBNZWFkb3cgTWFzc2FjcmUgSGVhZDtCYXJkaW5nIG9mIHRoZSBTaWVnZS1EcmFrZTtNYWxlZmljIERyYWtlcyBIb29kIG9mIHRoZSBDcmltc29uIFdpdG5lc3M7RG9vbSBvZiBJdGhvZ29ha2k7Q2FwZSBvZiBHcmltIERlc3Rpbnk7VGVtcGVzdCBIZWxtIG9mIHRoZSBUaHVuZGVyZ29kIFByZW07U3ltYm9sIG9mIHRoZSBLaW5nIFJlc3RvcmVkO0dvbGRlbiBJbW1vcnRhbCBQYW50aGVvbjtPdmVyZ3Jvd24gRW1ibGVtIEFnaGFuaW0gRWZmZWN0O1BsYW5ldGZhbGwgQmxpbms7MjUgbHZsIHBpbmc7Q29sb3JTdGF0cztSZXB0aWxpYW4gUmVmdWdlIERpcmUgQ3JlZXBzO1JlcHRpbGlhbiBSZWZ1Z2UgUmFkaWFudCBDcmVlcHM7VEktNCBlZmZlY3QgRGFnb247RW1pbmVuY2Ugb2YgUmlzdHVsIERlbnkgMjtMZXZlbFVwIFRJLTYgRWZmZWN0O01qb2xsbmlyIFRJLTYgRWZmZWN0O1BoYXNlIEJvb3RzIFRJLTYgRWZmZWN0O1Jvc2hhbiBIYWxsb3dlZW4gRnJhbmtlbnN0ZWluIFNraW47VEktOCBTaGl2YXMgRWZmZWN0O1RJLTEwIFRlbGVwb3J0IGx2bCAzIEVmZmVjdDtHdWFyZGlhbnMgb2YgdGhlIExvc3QgUGF0aCBEaXJlIFRvd2VycztHdWFyZGlhbnMgb2YgdGhlIExvc3QgUGF0aCBSYWRpYW50IFRvd2VycztCb29vb2Z1cyB3aXRoIERhcmsgZWZmZWN0O0Nocm9teSB0aGUgQ2VudGlwZWRlIFdhcmQ7V2VhdGhlciBTbm93O1RlcnJhaW4gLSBXaW50ZXI7VHJheGV4IDIgbG9hZGluZ3NjcmVlbjtCcm9vZCBIdW50ZXIgSFVEO0NydWNpYmxlIG9mIFJpbGU7TWFudGxlIG9mIHRoZSBDaW5kZXIgQmFyb24gU3R5bGUgMTtOb3RobGljIEJ1cmRlbiBQcmVtO0RhcmtjbGF3IEVtaXNzYXJ5IEFybXM7RGFya2NsYXcgRW1pc3NhcnkgQ293bDtEYXJrY2xhdyBFbWlzc2FyeSBEcmVzcztEaXZpbmF0aW9ucyBvZiB0aGUgTm90aGwgSGF6ZSBTdGFzaDtQaXBlIG9mIERlenVuO0RhcmsgUmVhbG0gT3JhY2xlcyBNYXNrO0RhcmsgUmVhbG0gT3JhY2xlcyBBcm1vcjtPdXRsYW5kIFdpdGNocyBTcGlyaXRzO1RJOSBDYWNoZSBEUCBWb29kb28gUHJpZXN0ZXNzIEJlbHQ7U2tpcnQgb2YgdGhlIEJyaWdodHNocm91ZDtCcmFjZXJzIG9mIHRoZSBDYXZlcm4gTHVtaW5hcjtCZWx0IG9mIHRoZSBSZWQgTWQ5519bnRhaW47VG90ZW0gb2YgRm9yZ290dGVuIEVwb2NoO0FybXMgIG9mIHRoZSBTaGF0dGVyZWQgVGFyZ2U7U2hhcmRzIG9mIHRoZSBNb251bWVudCBvZiBSdWluO0hvb2Qgb2YgdGhlIFNoYXR0ZXJlZCBUYXJnZTtNaWdodCBvZiB0aGUgT2xkIFdvcmxkO1Zpc2Ugb2YgQ3JlYXRpb247QnJhY2VycyBvZiBBZW9ucyBQcmVtO0pld2VsIG9mIEFlb25zIFByZW07QXVndXIgb2YgT2JsaXZpb24gLSBIZWFkO1ZpcmlkdXMgU3BpbmU7TWFjZSBvZiBBZW9ucztHcmVhdCBTYWdlKnMgUmVja29uaW5nO0ZsaWdodCBvZiB0aGUgVW5keWluZyBMaWdodDtIYWlyIG9mIHRoZSBHcmV5IEdhbGxhbnQ7UGF1bGRyb24gb2YgSGVhdmVubHkgTGlnaHQ7Q29tcGxldGUgTWFsbGV0IG9mIFNhY3JlZCBMaWdodDtBc3Nhc3NpbmF0aW9uIG9mIERhcmsgRmVhdGhlciBCYWNrO0RyYWdvbnRlcnJvciBCZWx0O0hlbG0gb2YgdGhlIExpZnRlZCBWZWlsO0Fzc2Fzc2luYXRpb24gb2YgRGFyayBGZWF0aGVyIFNob3VsZGVyO0hlbGwqcyBHdWlkZTtTeWx2YW4gQ2FzY2FkZSBQcmVtO0JvdyBvZiB0aGUgQmF0dGxlcmFuZ2VyO1Nvbmcgb2YgdGhlIEJsdWViaXJkIC0gSGVhZDtTb25nIG9mIHRoZSBCbHVlYmlyZCAtIFF1aXZlcjtTaGFtYmxpbmcgVHJpY2tzdGVyIEJlbHQ7Rm9vdGZhbGxzIG9mIHRoZSBTcG9yZWZhdGhlcnMgLSBIZWFkO1JhdHRsZWJpdGU7Rm9vdGZhbGxzIG9mIHRoZSBTcG9yZWZhdGhlcnMgLSBXZWFwb247RmVhdGhlcmVkIE1hbnRsZSBvZiB0aGUgQXJrdHVyYW4gVGFsb247TWFyayBvZiB0aGUgTWlzdHJhbCBGaWVuZCBWIDIuMTtCaWcgVW4gViAzLjA7QnJ1bWFsIEJlcnNlcmtlcjtBbnRpbWFnZSBTaGlub2JpO0Nvc21pYyBXYW5kZXJlcjtUaGUgUm93ZHkgRmlyZWJyYW5kO01hcmF1ZGVyIG9mIHRoZSBDaGFvcyBXYXN0ZXM7V3JhdGggb2YgdGhlIEJsb29kIENvdmVuYW50IFNldDtCb3VudHkgSHVudGVyIE1hbmlhYyBTZXQ7V3lybWJyZXcgQ29ubm9pc3NldXI7UGF0dGVybiBvZiB0aGUgU2lsa2VuIFF1ZWVuO0JhdHRsZSBEcmVzcyBvZiB0aGUgUHJvdmVuO0dyeXBob24gUmlkZXIgU2V0O1RoZSBSYXQgS2luZztMaW5lYWdlIFByb3ZpbmNlIG9mIHRoZSBIdW50IEV0ZXJuYWw7VGhlIEJyYXNzIEZseWVyO1NoZXJtYW4gTWFpZGVuIFYgNC4xO0ZvcmdvdHRlbiBUYWN0aWNpYW47U2FjY2hhcmluZSBTYWJvdGV1cjtUZW1wZXN0cyBXcmF0aDtCcmluZ2VyIG9mIFRyb3VibGVzO0xvcmQgb2YgRmxhbWUgRHJhZ29uO1ZhbnF1aXNoaW5nIERlbW9ucyBHZW5lcmFsIFYgMy4xO1RoZSBTaGVlcCBTZXQ7RXhwb25lbnQgb2YgdGhlIEVuZGxlc3MgU3RhcnM7VGhlIENoYWluZWQgU2NyaWJlO0FsbGllZCBDb21tYW5kZXIgU2V0O0V4cGxvc2l2ZSBNYW5pYWM7RmF0ZSBNZXJpZGlhbjtTdXNhbm8gT3MgRGVzY2VuZGFudDtGb3Jnb3R0ZW4gUmVuZWdhZGU7RGl2aW5lIEFuY2hvciBTdHlsZSAxO0Jlc3Rvd21lbnRzIG9mIHRoZSBEaXZpbmUgQW5jaG9yIGVmZmVjdHM7VmFsa3lyaWUgT2YgVGhlIFJlbWFpbnM7TG9yZCBvZiBDaHJvbm9wdGljIFN5bnRoZXNpcztBc2NlbmRhbmNlIG9mIHRoZSBSaW1lIExvcmQgMXN0IFN0eWxlO0NvbXBlbmRpdW0gQmxvb2R5IFJpcHBlcjtCZXdpdGNoaW5nIEZsYXJlIFYgMi4wO1dhci1CdXJyb3cgUmF2YWdlcjtSaWRlcnMgRWNsaXBzZSBWIDIuMTtIdW50ZXIgb2YgS2luZ3MgViAyLjA7U2Vpc21pYyBCZXJzZXJrZXI7RnVyeSBvZiBXYXIgR29kO0V5ZSBvZiB0aGUgQmVob2xkZXI7Vm9vZG9vIE1lZXBvO0FsbHVyZSBvZiB0aGUgRGVlcDtBbGxmYXRoZXIgb2YgTmF0dXJlIFNldDtXcmF0aCBvZiBLYSBWIDIuMTtVbmZldHRlcmVkIE1hbGV2b2xlbmNlO0RldmlhbnQgTWV0YW1vcnBob3NpcztUYWxlcyBvZiB0aGUgR3JleSBXYXN0ZXM7TmVidWxhcyBXYWxrZXI7TWFuZGF0ZSBvZiB0aGUgTmFtZWxlc3M7VmVuZ2VhbmNlIG9mIHRoZSBTdW53YXJyaW9yO0lyZSBvZiBNb2x0ZW4gUmViaXJ0aDtSZW1pbmlzY2VuY2Ugb2YgRHJlYW1zO1N1cmdpY2FsIFByZWNpc2lvbjtOYXJjaXNzaXN0aWMgTGVlY2g7TWFnaXN0ZXIgb2YgdGhlIE5hcnJvdyBGYXRlcztNb25zdHJvdXMgUmVwcmlzYWw7QW5jaWVudCBNYWd1cyBTdHlsZSAyO0lyb25jbGFkIE1vbGQgViAyLjA7Q3Jvd24gb2YgVGhlIE5pZ2h0d29ybGQ7Q2hhcm1lciBvZiBGaXJlc25ha2U7R29sZCBTa3ltYWdlO0Jlc3Rvd21lbnRzIG9mIHRoZSBDZW50dXJpb24gVmFuZ3VhcmQ7S2VlbiBNYWNoaW5lO1NvdWwgTGlsaXRoO0dlbmllIFNwaXJpdDtSZWxpY3Mgb2YgdGhlIExvc3QgVmlnaWwgUGF0aGZpbmRlcjtQb3dkZXJzbGVkIFJvb2tlcnk7Q29uY2VhbGVkIFJhdmVuO0ZvdWxmZWxsIENvcnJ1cHRvcjtUaWRlaHVudGVyIEtpbGxlcjtSYXVjb3VzIEdhdGVjcmFzaGVyO1RpbmtlciBTY2FyZWNyb3cgU2V0O0JvZ2Jvcm5lO1p1bGppbiBmb3IgVHJvbGwgV2FybG9yZCBTdHlsZSAzO0JyYXdsZXIgb2YgdGhlIEdsYWNpZXIgU2VhIFYgMy4wO0F0cm9jaXRpZXMgb2YgdGhlIEFieXNzYWwgU2NvdXJnZTtGZXJvY2lvdXMgSGVhcnQ7RWNob2VzIG9mIHRoZSBFeXJpZSBWIDIuMDtDb3JydXB0aW9uIG9mIHRoZSBWaXJ1bGVudCBLcmFpdDtDaGlsbCBvZiB0aGUgS2VlcGVycyBHYXplO0RyZWFkIENvbXBhY3Q7VGhlIER1c2sgQ3Jhd2xlciBTZXQ7V2luZ3Mgb2YgQ29sb3JmdWwgSWNlY3J5c3RhbHM7R3JpbSBEZXN0aW55O1JlZCBNaXN0IFJlYXBlciBTZXQ7RWZyaXQgU3VsdGFuIFNldDsgMTIzfHx8