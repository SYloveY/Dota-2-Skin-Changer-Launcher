bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogIDExMXx8fCAyMjI6OiAyMmRlYjk0ZTNmNjZlOWU3MWJjNDMwODU3NjA3NzkzMGU3ODMyNDdiMzlhZDE2MTcyY2Q4NDZkNzIyZDUzNmI1ZTI2NTAxZmU4YzY4Y2JjM2ExMzMzNjFjMThkOWFhZTRiYTU3ZTZjY2U3YzU5MzE2NDliOTkzOWZmZDBmNDY4MCAyMjJ8fHwgMTIzOjogQ3VyaW9zaXR5IEhVRDtDdXN0b20gRGFzaGJvYXJkIDI4O1JlbSBNZWdhLUtpbGxzO1B1bXBraW4gVHJlZXMgVVA7QnJpZ2h0c2t5ZTtHb2xkZW4gT2ZmaGFuZCBCYXNoZXIgb2YgTWFnZSBTa3VsbHM7T2ZmaGFuZCBCYXNoZXIgb2YgTWFnZSBTa3VsbHM7QXJtb3Igb2YgdGhlIEZvcmdvdHRlbiBQbGFuZTtCcmFjZXIgb2YgdGhlIEZvcmdvdHRlbiBQbGFuZTtCZWx0IG9mIHRoZSBGb3Jnb3R0ZW4gUGxhbmU7QWNvbHl0ZSBvZiBWZW5nZWFuY2UgSG9vZGVkIE1hc2s7U2hvdWxkZXJzIG9mIHRoZSBTdXJ2aXZvcjtBcm1ndWFyZHMgb2YgdGhlIFNtb2xkZXJpbmcgU2FnZTtCZWx0IG9mIHRoZSBGb3JzYWtlbiBGbGFtZTtDYXAgb2YgdGhlIFNtb2xkZXJpbmcgU2FnZTtSYXBpZXIgb2YgdGhlIEJ1cm5pbmcgR29kIE9mZmhhbmQ7UGF1bGRyb25zIG9mIHRoZSBWb2xjYW5pYyBHdWFyZDtPZmYtSGFuZCBTd29yZCBvZiB0aGUgU21vbGRlcmluZyBTYWdlO0Zyb3plbiBWb2lkIEFybXM7RnJvemVuIFZvaWQgQmVsdDtGcm96ZW4gVm9pZCBIZWFkO0Zyb3plbiBWb2lkIFNob3VsZGVyO01hY2Ugb2YgQWVvbnM7Q2FwZSBvZiB0aGUgTGlmdGVkIFZlaWw7QmVsdCBvZiB0aGUgTGlmdGVkIFZlaWw7SGVsbSBvZiB0aGUgTGlmdGVkIFZlaWw7QXJtb3Igb2YgdGhlIExpZnRlZCBWZWlsO1ZhbGVudGluZSBXYXJkO0JyYWNlcnMgb2YgT2RvY29lbGV1cztQZWx0IG9mIE9kb2NvZWxldXM7U2lnaWwgTWFzayBvZiB0aGUgQmxhZGVrZWVwZXI7TGVncyBvZiBPZG9jb2VsZXVzO0JsYWNrZW5lZCBFZGdlIG9mIHRoZSBCbGFkZWtlZXBlcjtDb21wbGV0ZSBHYXJiIG9mIHRoZSBDb3JyaWRhbiBNYWVzdHJvO0NvbXBsZXRlIFJvc2Ugb2YgdGhlIENvcnJpZGFuIE1hZXN0cm87VGhlIExpZ2h0bmluZyBPcmNoaWQ7U3BsYXR0ZXJpbmcgRm9yY2lwdWxlO1NwaXR0ZXJzIG9mIHRoZSBWaXJ1bGVudCBLcmFpdDtOYWNyZWQ5519cyBTdGFnIEhlYWQ7U3BpbmVzIG9mIHRoZSBWaXJ1bGVudCBLcmFpdDtOYWNyZWQ5519cyBTdGFnIFRhaWw7Qmxvb2RmZWF0aGVyIFdpbmdzO1NoYWRlIG9mIEFuZ3Vpc2g7Rm9ybSBvZiB0aGUgQWJ5c3NhbCBLaW47QmxhZGUgb2YgdGhlIEFieXNzYWwgS2luO1RlbXBlc3QgSGVsbSBvZiB0aGUgVGh1bmRlcmdvZDtDYXAgb2YgdGhlIEZ1bmdhbCBMb3JkO0Rlc2VydCBCbG9vbSAtIE5lY2s7U2hpZWxkIG9mIHRoZSBFbWVyYWxkIEluc3VyZ2VuY2U7UGV0YWxzIG9mIHRoZSBXb29kbGFuZCBPdXRjYXN0OyAxMjN8fHw=