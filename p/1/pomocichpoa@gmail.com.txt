limitHWID:: 1 000||| 111::  111||| 222:: $2y$10$MGE2NjIzMjg1OWFhM2QyYuF2dAvaz/7ua0luxOE5fLz36CDrdu8vC 222||| 123:: Mindless Slaughter - Arms;Dapper Disguise Jacket;Doomsday Ripper Belt;Medium Tassels of the Black Death;Insatiable Bonesaw;Golden Scavenging Guttleslug;Grand Abscession Hook Bundle;Twilight Hex - Armor;Twilight Hex - Back;Twilight Hex - Belt;Twilight Hex - Head;Twilight Hex - Offhand;Heartless Hunt - Armor;Tools of the Giant Hunter;Mask of Dark Ferocity;Heartless Hunt - Off-Hand;Mark of the First Hunt Bestowed;Greater Twin Blade;Bracers of the Wartorn Heavens;Pauldrons of the Wartorn Heavens;Belt of the Wartorn Heavens;Tempest Helm of the Thundergod Prem;Cuirass of the Stonemarch Sovereign;Bracers of the One True King;Cloak of the Haunted Lord;Memories of Bone Helm;Pauldrons of the Stonemarch Sovereign;Blade of the Stonemarch Sovereign;Conspicuous Culprit Armor;Helm of the Savage Monger;Barding of the Savage Monger;The Ward of Odocoeleus;Provocation of Ruin Bracers;Sinister Shadow Back;Gifts of the Vanished Isle Head;Provocation of Ruin Belt;Edge of the Lost Order;Shield of the Battlehawk;Faulds of Rising Fury;Helm of the Battlehawk;Armature of the Belligerent Ram Shoulder;Rhuis Tuning-Fork;Gloves of the Loaded Prospects;Pack of the Loaded Prospects;Drill-Barrel of the Loaded Prospects;Apron of the Loaded Prospects;Aghanims Basher Prem;Bracers of the Manticore;Wings of the Lionsguard;Belt of the Penitent Scholar;Helm of the Lionsguard;Complete Armor of the Manticore;Empyrean;Cunning Cultivations Belt;Coat of the Vodou Rover;Paddapon of Ribbitar V 4.0;Gauntlets of the Fire Dragon;Skirt of the Fire Dragon;Helm of the Burning Scale;Shield of the Fire Dragon;Shadow of the Burning Scale;Pauldrons of the Fire Dragon;Blade of the Fire Dragon;Flashpoint Proselyte - Head;Obsidian Blade Dagger;Burning Spear (Equipment) V 3.0;Magus Apex;Bracers of Sinister Lightning;Cape of Sinister Lightning;Belt of Glorious Inspiration;Shoulders of the Arsenal Magus;Northern Blight Spirits;Belt of the Pack-Ice Privateer;Cuffs of the Divine Anchor;Style of the Divine Anchor;Legs of the Pack-Ice Privateer;Coat of the Pack-Ice Privateer;Inverse Bayonet;The Scarlet Flare Arms;Fire Lotus Belt;Headress of the Divine Flame;Wings of the Fireflight Scion;Crown of the Arctic Recluse;Submerged Hazard Mask;Blackshield Protodrone Missile Launcher;Blackshield Protodrone Armor;Cannon of the Fortified Fabricator;Bracers of the Elemental Imperator;Belt of the Elemental Imperator;Iron Surge V 2.2;Shoulder of the Fractured Citadel;Tail of the Elemental Imperator;Thundering Flail;Coat of the Windward Rogue;Mask of the Confidant;Rapier of the Windward Rogue;Arms of Desolation Prem;Hush of Eternal Night;River Vial Blue;Pumpkin Trees UP;Knight Statue;Jin and Yin Fox Spirits Only White;Sherman Maiden V 4.1;Eye of the Beholder;Havoc of Dragon Palace V 2.0;Wrath of Ka V 2.1;Tales of the Grey Wastes; 123|||