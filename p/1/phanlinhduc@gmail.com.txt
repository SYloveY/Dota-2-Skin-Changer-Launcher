bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogMDMwMDAyMDAtMDQwMC0wNTAwLTAwMDYtMDAwNzAwMDgwMDA5IDExMXx8fCAyMjI6OiAkMnkkMTAkTlRGaU16VXhOVFUzT1RobE1HWmlNZXJsRnF6aURPN0RSQWtpdk0xNmNzSEVzbW00Ljl1bUsgMjIyfHx8IDEyMzo6IFRoZUZhdFJhdCBXYXJyaW9yIFNvbmdzIE11c2ljIFBhY2sgT2ZmaWNpYWw7QmxhY2sgTW9ub2xpdGggSFVEO1JpY2sgYW5kIE1vcnR5IEFubm91bmNlcjtUSS05IEV1bCBTY2VwdGVyIEVmZmVjdDtIb3JucyBvZiB0aGUgQmV0cmF5ZXI7VEktOSBNam9sbG5pciBFZmZlY3Q7R29sZGVuIEF0b21pYyBSYXkgVGhydXN0ZXJzIFByZW07Q29uZSBvZiB0aGUgVmVzcGlkdW4gSHVudGVyLUtpbGxlcjtIZWFkIG9mIHRoZSBWZXNwaWR1biBIdW50ZXItS2lsbGVyO1Byb3BlbGxlcnMgb2YgdGhlIFZlc3BpZHVuIEh1bnRlci1LaWxsZXI7RW5kbGVzcyBOaWdodCBDYXBlO0Nyb3duIG9mIHRoZSBCcmluZWJyZWQgQ2F2YWxpZXI7RW5kbGVzcyBOaWdodCBNb3VudDtQYXVsZHJvbnMgb2YgdGhlIEV2ZXJibGFjaztCbGFkZSBvZiB0aGUgRGVtb25pYyBWZXNzZWwgUHJlbTtHb2xkZW4gT3JpZ2lucyBvZiBGYWl0aCBQcmVtO0JyYWNlcnMgYW5kIFNob3VsZGVycyBvZiB0aGUgU3Vydml2b3I7TWFzayBvZiB0aGUgRm9yZ290dGVuIFBsYW5lO09mZmhhbmQgQmxhZGUgb2YgdGhlIFN1cnZpdm9yIFByZW07QmxhZGUgb2YgdGhlIFN1cnZpdm9yOzI1IGx2bCBwaW5nO1RJLTkgTWVrYXNtIEVmZmVjdDtHb2xkZW4gTWFzayBvZiBNZXRpcmE7RHJlYW1zIG9mIE1pZHN1bW1lciBBcm1zO1NwaXJpdCBvZiB0aGUgU2FjcmVkIEdyb3ZlIC0gQmFjaztDcmVzY2VudCBCb3cgQXJyb3cgb25seTtTcGlyaXQgb2YgdGhlIFNhY3JlZCBHcm92ZSAtIFF1aXZlcjtTcGlyaXQgb2YgdGhlIFNhY3JlZCBHcm92ZSAtIEd1YXJkaWFuO1NwaXJpdCBvZiB0aGUgU2FjcmVkIEdyb3ZlIC0gU2hvdWxkZXI7UHVsc2FyIFJlbW5hbnQgUHJlbTtHb2xkZW4gU2lsZW50IFdha2U7UGhhbnRvbSBBc2NlbnNpb24gQmVsdDtQaGFudG9tIEFzY2Vuc2lvbjtQaGFudG9tIEFzY2Vuc2lvbiBTaG91bGRlcnM7UGhhbnRvbSBBc2NlbnNpb24gV2VhcG9uO0hlbGwtU3BhciBBbmF0aGVtYTtNdWxjdGFudCBQYWxsO01hc2sgb2YgWmVidWxvbjtCb290cyBvZiBaZWJ1bG9uO1F1aXZlciBvZiB0aGUgS2hhLVJlbiBGYWl0aGZ1bDtQYXVsZHJvbnMgb2YgWmVidWxvbjtSZWFwZXJzIFdyZWF0aDtBcm1zIG9mIFplYnVsb247Q3Jvd24gb2YgQ2FsYXBoYXMgQXJtb3I7QmVsdCBvZiB0aGUgU3R5Z2lhbiBNYXc7VGFpbCBvZiBEZXByYXZlZCBNYWxmb3JtYXRpb247SWNlZmxpZ2h0IEVkaWZpY2U7Q3Jvd24gb2YgQ2FsYXBoYXMgQmFjaztKYWtpcm8gSW1tb3J0YWwgV2luZ3M7SmFraXJvIEltbW9ydGFscyBIZWFkcztCcmFjZXJzIG9mIEFlb25zIFByZW07Q2xhc3p1cmVtZSBJbmN1cnNpb24gQmVsdDtGYWNlbGVzcyBNYWRuZXNzO0pld2VsIG9mIEFlb25zIFByZW07Q2xhc3p1cmVtZSBJbmN1cnNpb24gV2VhcG9uO0JsYWRlIG9mIHRoZSBGcmFjdHVyZWQgT3JkZXI7UmFkaWFudCBOZW1lc3RpY2UgQ3JlZXBzO0RpcmUgTmVtZXN0aWNlIENyZWVwcztMaWdodG5pbmcgQmxpbmsgViAyLjA7V3JhdGggb2YgS2EgQ3Vyc29yIFBhY2s7UGl0bWQ5519c2UgRnJhdGVybml0eSBCcmFjZXI7UGl0bWQ5519c2UgRnJhdGVybml0eSBQYWNrO1BpdG1vdXNlIEZyYXRlcm5pdHkgUGF1bGRyb247SmVzdGVyIEtpbmcgVGFpbDtXcmFpdGhiaW5kZXI7QnJhY2VycyBvZiB0aGUgRnJhY3R1cmVkIEVudm95O0lyZSBvZiB0aGUgQW5jaWVudCBHYW9sZXIgQmFjaztEZXNlcnQgQnVybiBTYWRkbGU7RGVjbGFyYXRpb24gb2YgdGhlIERpdmluZSBMaWdodCBSYWRpYW50IFRvd2VycztEZWNsYXJhdGlvbiBvZiB0aGUgRGl2aW5lIFNoYWRvdyBEaXJlIFRvd2VycztXZWF0aGVyIEJsdWUgU2t5IGZyb20gU291cCBmb3IgU2x1dHM7VGVycmFpbiAtIFRoZSBLaW5ncyBOZXcgSm91cm5leTtBbmltYXRlZCBEYXNoYm9hcmQgV2luZHJhbmdlciBBcmNhbmEgc3R5bGUgMiArIFNvdW5kO0Rlc2VydCBCdXJuIE91dGZpdDtEZXNlcnQgQnVybiBNb3J0eSBJbW1vcnRhbDtEZXNlcnQgQnVybiBDYXA7RGVzZXJ0IEJ1cm4gQ3Jvc3Nib3c7QWdoYW5pbSBEdW5nZW9uIFNjZXB0ZXIgRWZmZWN0O0VuaWdtYXRpYyBFbWJsZW0gb2YgdGhlIERpcmV0aWRlIC0gUmVkO1RJLTkgTGV2ZWwgVXAgRWZmZWN0O1JpdmVyIFZpYWwgT2lsO1BsYW5ldGZhbGwgU3R1biBFZmZlY3Q7VEktNyBEYWdvbiBFZmZlY3Q7QWlyYm9ybmUgTWFjaGV0ZTtQdWduYSBNZWdhUGFjaztCYWJ5IFRveSBQdWRnZSBQZXJzb25hO01pcmFuYSBUSTEwIENvbGxlY3RvcnMgQ2FjaGUgTWVnYVBhY2s7QW50aU1hZ2UgRmVtYWxlIFBlcnNvbmEgVGhlIERpc2NpcGxlcyBQYXRoIEFudGktTWFnZSBBcmNhbmEgQU1hO0x5Y2FuIEtpc2lsZXYgTW9kTWFrZXIgTWVnYVBhY2s7VGhlIEZhbWlseSBWYWx1ZXMgQnVuZGxlO0RLIFBlcnNvbmEgRGF2aW9uO0RlZmVuZGVyIG9mIHRoZSBCcnVtYWwgQ3Jlc3Q7IDEyM3x8fA==