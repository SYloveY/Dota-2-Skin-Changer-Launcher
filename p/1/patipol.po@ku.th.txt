bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogNEE3Qjg1QjctMzFGOC1FNzExLTgwQzgtOTgyOEE2MDFGM0NDIDExMXx8fCAyMjI6OiAkMnkkMTAkT1RJNE5EUXhNRFF6T0dJNU9EUTFOdVBsY0NHa2lKaWw3U2U1THJ6c3l5bHB2QVBFQlJnQmEgMjIyfHx8IDEyMzo6IEltbW9ydGFsIEludm9rZXIgS2lkO1BoYW50b20gQXNjZW5zaW9uIEJlbHQ7UGhhbnRvbSBBc2NlbnNpb247UGhhbnRvbSBBc2NlbnNpb24gU2hvdWxkZXJzO1BoYW50b20gQXNjZW5zaW9uIFdlYXBvbjtIb29kd2luayBEcmFnb24gQ3Jvc3Nib3c7RnJvc3QgQXZhbGFuY2hlIFByZW07SGVsbC1TcGFyIEFuYXRoZW1hIE9ic2lkaWFuIEJsaWdodDtNdWxjdGFudCBQYWxsIG9mIHRoZSBDcmltc29uIFdpdG5lc3M7RmluIEtpbmdzIENoYXJtIG9mIEVtaW5lbnQgUmV2aXZhbCBFeGNlcHRpb25hbDtIaWRkZW4gVmVjdG9yIC0gQXJtb3I7SGlkZGVuIFZlY3RvciAtIEJsYWRlO0hpZGRlbiBWZWN0b3IgLSBIYXQ7SGlkZGVuIFZlY3RvciAtIEJlbHQ7T3JpZ2luIG9mIHRoZSBVbm1ha2luZztTbHVtYmVyaW5nIFRlcnJvcjtNYXcgb2YgRXp0emhvaztIdW50ZXJzIEhvYXJkIG9mIHRoZSBDcmltc29uIFdpdG5lc3M7VGluZXMgb2YgVHliYXJhO01hcmsgb2YgdGhlIEZpcnN0IEh1bnQgSGFydmVzdGVkO0hlYXJ0bGVzcyBIdW50IC0gSGVhZDtFbGl4aXIgb2YgRHJhZ29ucyBCcmVhdGggUHJlbTtCb29rIG9mIHRoZSBWaXppZXIgRXhpbGUgUHJlbTtHb2xkZW4gQnJhY2VycyBvZiBGb3Jsb3JuIFByZWNpcGljZTtDcmltc29uIEdhdGVzIG9mIE5vdGhsO05vdGhsaWMgQnVyZGVuIG9mIHRoZSBDcmltc29uIFdpdG5lc3M7RGFya2NsYXcgRW1pc3NhcnkgU3RhZmYgd2l0aCBjdXN0b20gVXJuO1N3b3JkIG9mIHRoZSBPdXRsYW5kIFJhdmFnZXI7RmxvdXJpc2hpbmcgTG9kZXN0YXI7R2xvcnkgb2YgdGhlIFNvdXRoIFN0YXI7U29uZ3Mgb2YgU3RhcmZhbGwgR2xlbiAtIEFybXM7QmVsdCBvZiB0aGUgU291dGggU3RhcjtWaXJnYXMgQXJjO0xvcmQgb2YgTHVtaW5hcmllcyBFaWRvbG9ucztHb2xkZW4gQXRvbWljIFJheSBUaHJ1c3RlcnMgUHJlbTtQYXlsb2FkIG9mIHRoZSBWZXNwaWR1biBIdW50ZXItS2lsbGVyO1Byb3BlbGxlcnMgb2YgdGhlIFZlc3BpZHVuIEh1bnRlci1LaWxsZXI7SGVhZCBvZiB0aGUgVmVzcGlkdW4gSHVudGVyLUtpbGxlcjtDb25lIG9mIHRoZSBWZXNwaWR1biBIdW50ZXItS2lsbGVyO0FybWFtZW50cyBvZiB0aGUgVmVzcGlkdW4gSHVudGVyLUtpbGxlcjtCZW5ldm9sZW50IENvbXBhbmlvbiBQcmVtO0pha2lybyBJbW1vcnRhbHMgSGVhZHM7QnJhY2VycyBvZiB0aGUgU2lsdmVyIEZveDtQYWNrIG9mIHRoZSBBcmRhbGFuIEludGVyZGljdG9yO1RvcCBIYXQgb2YgdGhlIE9jY3VsdGlzdHMgUHVyc3VpdDtCbGFja3NhaWwgQ2Fubm9uZWVyIFNob3VsZGVyO1NuaXBlciBJbW1vcnRhbCBXZWFwb24gb2YgdGhlIEFyZGFsYW4gSW50ZXJkaWN0b3I7VGVycmFpbiAtIFNhbmN0dW1zIG9mIHRoZSBEaXZpbmU7QW5pbWF0ZWQgRGFzaGJvYXJkIFdpbmRyYW5nZXIgQXJjYW5hIHN0eWxlIDIgKyBTb3VuZDtIb25leSBIZWlzdCBCYWJ5IFJvc2hhbjtUSS0xMCBCbGluayBsdmwgMiBFZmZlY3Q7VEktOSBCb3R0bGUgRWZmZWN0O1RJLTggU2Vhc29uYWwgQ3JlZXAgRGVueSBFZmZlY3Q7VEktOSBFdWwgU2NlcHRlciBFZmZlY3Q7VEktOSBGb3JjZSBTdGFmZiBFZmZlY3Q7VEktOSBGb3VudGFpbiBsdmwgMyBFZmZlY3Q7UGVkZXN0YWwgRnJvc3QgQXZhbGFuY2hlO1RJLTkgTWpvbGxuaXIgRWZmZWN0O1RJLTkgVGVsZXBvcnQgbHZsIDMgRWZmZWN0O1RJLTkgUmFkaWFuY2UgRWZmZWN0O1RJLTkgTGV2ZWwgVXAgRWZmZWN0O0RlY2xhcmF0aW9uIG9mIHRoZSBEaXZpbmUgU2hhZG93IERpcmUgVG93ZXJzO0RlY2xhcmF0aW9uIG9mIHRoZSBEaXZpbmUgTGlnaHQgUmFkaWFudCBUb3dlcnM7VEktOSBTaGl2YXMgRWZmZWN0O0hvcm5zIG9mIHRoZSBCZXRyYXllcjtHb2xkZW4gVHdpbGlnaHQgU2NoaXNtO01vdW50IG9mIHRoZSBXaW5nZWQgU2VudGluZWw7U2F2YWdlIEJlYXN0IFNoYXBlc2hpZnQ7U2xhYiBvZiBFcnVwdGluZyBXcmF0aDtCcmFjZXIgb2YgdGhlIFNwaXJhbCBCb3JlO0JlbHQgb2YgT3JuYXRlIENydWVsdHk7RXllcyBvZiBBcmRlbm9rO0hvcm4gb2YgdGhlIFNwaXJhbCBCb3JlO0NvbG9yIE1lZXBvO1B1bHNhciBSZW1uYW50IFByZW07VGhlIE9yZGVyIG9mIEN5cHJpbjtCbGFkZXMgb2YgUHJpc21hdGljIEdyYWNlO1N1ZmZlcndvb2QgU2FwbGluZztNb25hcmNoIG9mIHRoZSBTYXBwaGlyZSBHbGVuO1NpZ25zIG9mIHRoZSBBbGxmYXRoZXIgLSBBcm1zO01hbnRsZSBvZiB0aGUgVHJ1ZWJhcmsgQWRoZXJlbnQ7U2lnbnMgb2YgdGhlIEFsbGZhdGhlciAtIEhlYWQ7Q29uY29yZCBSZXZlcnNpb24gVVA7Q29uY29yZCBEb21pbmlvbjtQaGFudG9tIENvbmNvcmQgUHJlbTtCbGF6ZSBvZiBPYmxpdmlvbiBTdXBlcm5vdmE7Q3Jvd24gb2YgdGhlIEFnZWxlc3MgRmFlO0Jsb3Nzb20gb2YgdGhlIE1lcnJ5IFdhbmRlcmVyO1J1YmljayBBcmNhbmE7SGVhZCBvZiB0aGUgTXlzdGljIE1hc3F1ZXJhZGU7Q3J1eCBvZiBQZXJwbGV4IEFyY2FuYSBTdHlsZTtHb2xkZW4gU3RhZmYgb2YgUGVycGxleCBQcmVtO0dvbGRlbiBNYW50bGUgb2YgR3JpbSBGYWNhZGU7Q3JpbXNvbiBDZW5zZXIgb2YgR2xpc3MgVVA7QXJtcyBvZiB0aGUgTHVjZW50IENhbm9weTtIYXVsIG9mIHRoZSBMdWNlbnQgQ2Fub3B5O1NoYWRlIG9mIHRoZSBTcGl0ZWZ1bCBFeWU7V2FyZCBvZiB0aGUgTHVjZW50IENhbm9weTtDaGFybSBvZiB0aGUgTHVjZW50IENhbm9weTtEZXNlcnQgQnVybiBDcm9zc2JvdztEZXNlcnQgQnVybiBDYXA7RGVzZXJ0IEJ1cm4gTW9ydHkgSW1tb3J0YWw7RGVzZXJ0IEJ1cm4gT3V0Zml0O0Rlc2VydCBCdXJuIFNhZGRsZTtTd2luZSBvZiB0aGUgU3Vua2VuIEdhbGxleSBQcmVtO0RlbW9uIEZvcm0gb2YgdGhlIEZvdWxmZWxsIENvcnJ1cHRvciBVUDtDcnlzdGFsIERyeWFkIFByZW07TWFqZXN0eSBPZiBUaGUgQ29sb3NzdXMgLSBQZWJibGU7Qml0dGVyIExpbmVhZ2UgSW1tb3J0YWwgQXhlcztDcmltc29uIEVtZXJhbGQgQ29ucXVlc3Q7Rmxlc2ggR29sZW0gb2YgRm9ybG9ybiBEZXNjZW50O1BhbGUgTWF1c29sZXVtO0NvYXQgb2YgRm9ybG9ybiBEZXNjZW50O1BhbGUgQXVndXIgUHJlbTtIZWxtIG9mIEdyaW0gUmVmb3JtYXRpb247V3JhdGggb2YgRWNob2VzO0hlbG0gb2YgRWNob2VzO0NyaW1zb24gTWQ5519cm5mdWwgUmV2ZXJpZTtGYW1pbGxhciBvZiBUcnVlIFZpc2lvbjtTZXJ2YW50IG9mIHRoZSBJbmZlcm5hbCBNYXc7U2tpdHRlcmluZyBEZXNvbGF0aW9uIFByZW07Q3JpbXNvbiBQaXF1ZTtHb2xkZW4gQ3lycmlkYWUgUHJlbTtEaW1lbnNpb24gUmlwcGVyIExlZ3M7VG9ybWVudGVkIFN0YWZmIG9mIEVtaW5lbnQgUmV2aXZhbCBFeGNlcHRpb25hbDtHb2xkZW4gQWVnaXM7UGxhbmV0ZmFsbCBTdHVuIEVmZmVjdDtCbHVlIERhZ29uO1JlcHRpbGlhbiBSZWZ1Z2UgRGlyZSBDcmVlcHM7V2FyZGNoZXN0IERpcmVsaW5nIFdhcmQ7Vm9pY2Ugb2YgRmxvY2toZWFydHMgR2FtYmxlO0hVRCBvZiB0aGUgQnVybmluZyBTY2FsZTtTdW1taXQgMiBsb2FkaW5nc2NyZWVuO0ljZWZsaWdodCBFZGlmaWNlO0lyZSBvZiB0aGUgQW5jaWVudCBHYW9sZXIgQXJtcztJcmUgb2YgdGhlIEFuY2llbnQgR2FvbGVyIEJhY2s7V3JhaXRoYmluZGVyO0NyaW1zb24gQnJhY2VycyBvZiBBZW9ucyBQcmVtO0NsYXN6dXJlbWUgSW5jdXJzaW9uIEJlbHQ7UGVyY2VwdGlvbnMgb2YgdGhlIEV0ZXJuYWwgTWluZDtKZXdlbCBvZiBBZW9ucyBQcmVtO01hY2Ugb2YgQWVvbnMgUHJlbTtIZWxtIG9mIHRoZSBEYXJrIE1vb24gU3RhbGtlcjtNb29uZmFsbCBQcmVtO0FybW9yIG9mIHRoZSBXaW5nZWQgU2VudGluZWw7U3BhbiBvZiBTb3Jyb3c7Q2hhc20gb2YgdGhlIEJyb2tlbiBDb2RlIEhlbG07U2N5dGhlcyBvZiBTb3Jyb3c7QnJhY2VyIG9mIENvbnRlc3RlZCBGYXRlO0ljZXBsYWluIFJhdmFnZXIgSG9ybjtCZWx0IG9mIENvbnRlc3RlZCBGYXRlO0dvbGRlbiBJbmZlcm5hbCBDaGllZnRhaW47SGFybmVzcyBvZiBDb250ZXN0ZWQgRmF0ZTtJbmZlcm5hbCBNZW5hY2U7Q3JpbXNvbiBFZGljdCBvZiBTaGFkb3dzO0dvbGRlbiBTaGFkb3cgTWFzcXVlcmFkZSBQcmVtO1Ntb2tlIEJvbWIgb2YgTW9uc3Ryb3VzIFJlcHJpc2FsO0h1bmdlciBvZiB0aGUgSG93bGluZyBXaWxkcyBXZWFwb247SHVuZ2VyIG9mIHRoZSBIb3dsaW5nIFdpbGRzIE9mZi1IYW5kIFdlYXBvbjtQdXJwbGUgQ29sb3IgZm9yIFRCO0RpcmUgTmVtZXN0aWNlIENyZWVwcztSYWRpYW50IE5lbWVzdGljZSBDcmVlcHM7RmxhbWUgb2YgdGhlIFBlbml0ZW50IFNjaG9sYXI7RXlyaWVib3VuZCBJbXBlcmF0b3IgLSBBcm1zO0V5cmllYm91bmQgSW1wZXJhdG9yIC0gQmFjaztFeXJpZWJvdW5kIEltcGVyYXRvciAtIEJlbHQ7RXlyaWVib3VuZCBJbXBlcmF0b3IgLSBIZWFkO0V5cmllYm91bmQgSW1wZXJhdG9yIC0gU2hvdWxkZXI7Uml2ZXIgVmlhbCBSZWQ7R29sZGVuIEh5ZHJha2FuIExhdGNoO0dhYmUgTmV3ZWxsIE1lZ2EtS2lsbDtWb2ljZSBvZiBUaGUgSW50ZXJuYXRpb25hbCBBbm5vdW5jZXI7R29sZGVuIEVtcHlyZWFuIFByZW07RHJlc3Mgb2YgdGhlIEZhZXNoYWRlIEZsb3dlcjtCZWx0IG9mIHRoZSBGYWVzaGFkZSBGbG93ZXI7Q3JpbXNvbiBIZWFydHMgb2YgTWlzcnVsZTtMYW50ZXJuIG9mIHRoZSBXaW50ZXIgUm9zZTtHb3RoaWMgV2hpc3BlciBDYXBlO0dvdGhpYyBXaGlzcGVyIEJlbHQ7Q29kaWNpbCBvZiB0aGUgVmVpbGVkIE9uZXM7QXZvd2FuY2Ugb2YgdGhlIFZlaWxlZCBPbmVzO01hbmlmb2xkIFBhcmFkb3ggUEEgQXJjYW5hIFN0eWxlIDI7VEktMTAgQWdoYW5pbSBFZmZlY3Q7RW1ibGVtIG9mIERpdmluaXR5O0Rpc2NpcGxlIG9mIG1vbmFyY2hzIFR1cnN0YXJrdXJpO1NoYXR0ZXJibGFzdCBDb3JlIFNoYXR0ZXJibGFzdCBDcm93biBBcG9jYWx5cHNlIFVuYm91bmQ7TGlnaHRmb3JnZWQgRHJhZW5laTtDdXN0b20gTWVnYVBhY2sgRHJvdyBSYW5nZXIgU3lsdmFuYXMgTGl2ZSAoRGlyZXRpZGUpO0N1c3RvbSBNZWdhUGFjayBGaWVyeSBTcGlyaXQ7Q3VzdG9tIE1lZ2FQYWNrIEdvbGQgUHlyb21hbmNlciBSRTtCbGFkZWZvcm0gTGVnYWN5IFByb3ZvY2F0aW9uIG9mIFJ1aW47Q3VzdG9tIE1lZ2FQYWNrIExlZ2lvbiBDb21tYW5kZXIgTWVyZWRpdGggUkU7Q3VzdG9tIE5pZ2h0IFN0YWxrZXIgTWVnYXBhY2sgRnJvc3QgV2Fsa2VyO0N1c3RvbSBNZWdhUGFjayBSYWluYm93IFN0YXRpY3M7QmFycmFjdWRhO0N1c3RvbSBNZWdhUGFjayBXcmFpdGggS2luZyBUaGUgT25lIFRydWUgS2luZyBCdW5kbGUgKFN0eWxlIDEgQ2hpbmVzZSk7Q3VzdG9tIE1lZ2FQYWNrIFRlbXBsYXIgQXNzYXNzaW4gSnVuZ2xlIFNlY3JldHMgUkU7Q3VzdG9tIE1lZ2FQYWNrIFN2ZW4gVHJ1ZSBWaWdpbDtVcnNhIEltbW9ydGFscyBNZWdhUGFjaztXaW5kcmFuZ2VyIEFyY2FuYSBzdHlsZSAxIChCbHVlIEJpcmQpICsgRnVsbCBXUiBpbW1vcnRhbDtRdWVlbiBvZiBQYWluIEFyY2FuYSBNZWdhUGFjaztNb3JwaGxpbmcgSW1tb3J0YWxzIE1lZ2FQYWNrIFVQO1N0b3JtIFNwaXJpdCBNZWdhUGFjaztCdXJuaW5nIE5pZ2h0bWFyZTtJY2UgTGluYSBQcmVtaXVtO0F4ZSBmdWxsIEltbW9ydGFscyBNZWdhcGFjayBhbHQ7RG9vbSBJbW1vcnRhbHMgTWVnYVBhY2s7RGFya2JyZXcgRW5mb3JjZXIgYW5kIEV0ZXJuYWwgUmFkaWFuY2UgQmxhZGVzIGFuZCBNaWRhcyBLbnVja2xlcyBNZWdhUGFjaztFeHBsb2VyZXIgTWFnaWMgSnVuZ2xlO0JlYXN0bWFzdGVyIE1lZ2FQYWNrO1RyaWJhbCBUZXJyb3IgViAzLjA7TG9hZGVkIFByb3NwZWN0cztCcmlzdGxlYmFjayBNZWdhUGFjaztCcm9vZG1vdGhlciBNZWdhUGFjaztFeWUgT2YgUG93ZXIgU2V0O0NsaW5reiBNZWdhUGFjaztDbG9ja3dlcmsgTWVnYVBhY2s7RXRlcm5hbCBUZXN0YW1lbnQ7QmluZGluZ3Mgb2YgdGhlIEdhbHZhbml6ZWQgU3Bhcms7REsgUGVyc29uYSBEYXZpb247RWFydGhzaGFrZXIgTWVnYVBhY2s7TW9udW1lbnRzIG9mIHRoZSBOYXR1cmFsIERlbWl1cmdlO0VuaWdtYSBNZWdhUGFjaztJbmsgRHJhZ29uIFBvZXQ7Q3VzdG9tIE1lZ2FwYWNrIEh1c2thciBGbGFzaHBvaW50IFByb3NlbHl0ZSArIFB1cnN1aXQgb2YgdGhlIEVtYmVyIERlbW9ucztLdW5ra2EgSW1tb3J0YWxzIE1lZ2FQYWNrO1RoZSBLaW5nIG9mIFRoaWV2ZXM7U3Bpcml0IEJyZWFrZXIgTWVnYVBhY2s7TGlmZXN0ZWFsZXIgTWVnYVBhY2s7TW9ua2V5IEtpbmcgQXJjYW5hIE1lZ2FQYWNrO0xvbmUgRHJ1aWQgTWVnYVBhY2s7THljYW4gS2lzaWxldiBNb2RNYWtlciBNZWdhUGFjaztNYXJzIFRJMTAgQ29sbGVjdG9ycyBDYWNoZSBNZWdhUGFjaztNZWR1c2EgTWVnYVBhY2sgTkVXO01pcmFuYSBUSTEwIENvbGxlY3RvcnMgQ2FjaGUgTWVnYVBhY2s7RGVhdGggTmVjcm9saWdodCBQcmVtaXVtIFN0eWxlIDE7Tnl4IEFzc2Fzc2luIE1lZ2FQYWNrIG5ldztPZ3JlIE1hZ2kgSW1tb3J0YWxzIEFyY2FuYSBNZWdhUGFjaztPbW5pa25pZ2h0IE1lZ2FQYWNrO0F1dGhvcml0eSBvZiB0aGUgSW1wZXJpc2hhYmxlIEdyYW5kIEhpZXJvcGhhbnQ7T3V0d29ybGQgRGV2b3V2ZXIgTWVnYVBhY2s7RXRpZW5uZSBTd2lmdGd1YXJkO0ljZSBQaG9lbml4IFByZW1pdW0gRWRpdGlvbjtCYWJ5IFRveSBQdWRnZSBQZXJzb25hO1B1Z25hIEltbW9ydGFscyBNZWdhUGFjaztMb3JkIG9mIHRoZSBTY291cmluZyBEdW5lcyBWIDIuMDtTRiBBcmNhbmEgTWVnYXBhY2s7U2lsZW5jZXIgTWVnYVBhY2s7U2xhcmRhciBNZWdhUGFjayBzZXQ7VGlkZWh1bnRlciBNZWdhUGFjaztUaW1iZXJzYXcgTWVnYVBhY2s7RCBPY3RvIFRpbmtlcjtCYXJrIG9mIHRoZSBBZ2VsZXNzIFdpdG5lc3MgRGlzdGluZ3Vpc2hlZDtBenRlYyBXYXJyaW9yO0p1bmdsZSBFeHBsb3JlciBTZXQ7VHJ1ZSBQaXRsb3JkO01pbGxpcGVkZSBTZXQ7VmlwZXIgTWVnYVBhY2s7VmlzYWdlIE1lZ2FQYWNrO1RyaWJhbCBXYXJsb2NrIFNldDtTcG9pbHMgb2YgdGhlIFZvZG91IFJvdmVyO0JlYXJpbmcgb2YgdGhlIEtpbmcgUmVzdG9yZWQ7VGh1bmRlciBHcmlmZmluO05vYmxlIEZyb3N0aGVhcnQ7QWJhZGRvbiBSRUQgTWVnYVBhY2s7IDEyM3x8fA==