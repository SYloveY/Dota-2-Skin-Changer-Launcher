bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogMDNBQTAyRkMtMDQxNC0wNThBLUQ0MDYtNkUwNzAwMDgwMDA5IDExMXx8fCAyMjI6OiAkMnkkMTAkTXpGaFkyVmlabUV6TlRZNU5HVm1ZdXQ4QjRuNS5jYWdPbVBISXJPNk5SRW9kQ2FTUmduZEcgMjIyfHx8IDEyMzo6IGRyaXZlX2Rpcjo6R3JlYXQgU2FnZSpzIFJlY2tvbmluZztkcml2ZV9kaXI6OlN0YWZmIG9mIEd1bi1ZdTtkcml2ZV9kaXI6OlNob3VsZGVycyBvZiB0aGUgUmlwdGlkZSBSYWlkZXI7ZHJpdmVfZGlyOjpCaWcgVW4gViAzLjA7ZHJpdmVfZGlyOjpBcmNzIG9mIE1hbnRhIFBhY2sgViAzLjA7ZHJpdmVfZGlyOjpIYXRjaGV0IG9mIHRoZSBTaGlmdGluZyBTb3JjZXJlciBCbGFkZXM7ZHJpdmVfZGlyOjpXb3JkcyBvZiB0aGUgQXdha2VuZWQ7ZHJpdmVfZGlyOjpNYW50bGUgb2YgdGhlIENpbmRlciBCYXJvbiBTdHlsZSAxO2RyaXZlX2Rpcjo6TW9sdGVuIENsYXcgUHJlbTtkcml2ZV9kaXI6OldyYXRoZnVsIEFubmloaWxhdG9yO2RyaXZlX2Rpcjo6Q3JlZWQgb2YgdGhlIE91dGxhdyBIdW50c21hbjtkcml2ZV9kaXI6OlBpc3RvbiBJbXBhbGVyIGVmZmVjdDtkcml2ZV9kaXI6OkluZmVybmFsIENoaWVmdGFpbiBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzO2RyaXZlX2Rpcjo6TG9yZCBvZiB0aGUgVmljaWQ5519cyBQbGFpbnMgViAzLjA7ZHJpdmVfZGlyOjpGb3Jnb3R0ZW4gVGFjdGljaWFuO2RyaXZlX2Rpcjo6Tm90aGxpYyBCdXJkZW4gUHJlbTtkcml2ZV9kaXI6OlNwaXJpdCBvZiB0aGUgTG9uZyBOaWdodDtkcml2ZV9kaXI6OkFybW9yIGZyb20gdGhlIEdsb29tO2RyaXZlX2Rpcjo6QnJpbmdlciBvZiBUcm91Ymxlcztkcml2ZV9kaXI6OkRpYWJsby1Eb29tO2RyaXZlX2Rpcjo6V2hpc3BlcnMgb2YgdGhlIERhbW5lZCBXaW5ncztkcml2ZV9kaXI6OkdyYXZlbG1hdztkcml2ZV9kaXI6OkJyYWNlcnMgb2YgdGhlIENhdmVybiBMdW1pbmFyO2RyaXZlX2Rpcjo6Vm9pZGhhbW1lciBWIDMuMDtkcml2ZV9kaXI6OkZyb3plbiBWb2lkIEJlbHQ7ZHJpdmVfZGlyOjpGcm96ZW4gVm9pZCBBcm1zO2RyaXZlX2Rpcjo6VGhlIENoYWluZWQgU2NyaWJlO2RyaXZlX2Rpcjo6R29sZGVuIEF0b21pYyBSYXkgVGhydXN0ZXJzIGVmZmVjdDtkcml2ZV9kaXI6OkV4cGxvc2l2ZSBNYW5pYWM7ZHJpdmVfZGlyOjpEYWVtb25mZWxsIEZsYW1lO2RyaXZlX2Rpcjo6TG9yZCBvZiBDaHJvbm9wdGljIFN5bnRoZXNpcztkcml2ZV9kaXI6OlRvcm1lbnRlZCBTdGFmZiBlZmZlY3Q7ZHJpdmVfZGlyOjpCbGFkZSBvZiBUZWFycyBhbmQgQ3Jvd24gb2YgVGVhcnM7ZHJpdmVfZGlyOjpTaHJvb20gVGhpbmc7ZHJpdmVfZGlyOjpBbGxmYXRoZXIgb2YgTmF0dXJlIFNldDtkcml2ZV9kaXI6OlN1bGxlbiBIb2xsb3cgViAzLjI7ZHJpdmVfZGlyOjpXcmF0aCBvZiBLYSBWIDIuMSBTdHlsZSAyO2RyaXZlX2Rpcjo6QXVzcGljZSBvZiB0aGUgV2h5cmxlZ3lnZSBQcmVtO2RyaXZlX2Rpcjo6U2t1bGxiYXNoZXIgZm9yIFBoYW50b20gQXNzYXNzaW47ZHJpdmVfZGlyOjpQdWRnZSBCbGluayBEYWdnZXI7ZHJpdmVfZGlyOjpEcmFnb25jbGF3IEhvb2sgViA0LjA7ZHJpdmVfZGlyOjpTZXZlcmluZyBDcmVzdCBWIDIuMDtkcml2ZV9kaXI6OlN0ZWVsIEtpbmc7ZHJpdmVfZGlyOjpHb2xkIFNreW1hZ2U7ZHJpdmVfZGlyOjpHbGFpdmUgb2YgdGhlIFNpbHZlcmVkIFRhbG9uO2RyaXZlX2Rpcjo6U2hpZWxkIG9mIHRoZSBTaWx2ZXJlZCBUYWxvbjtkcml2ZV9kaXI6OkRhcmsgUmVlZiBFc2NhcGUgViAyLjE7ZHJpdmVfZGlyOjpEcmFnb24gTG9yZSBBV1A7ZHJpdmVfZGlyOjpUaGUgTGlnaHRuaW5nIE9yY2hpZCBWIDMuMjtkcml2ZV9kaXI6OkljZXdyYWNrIE1hcmF1ZGVyO2RyaXZlX2Rpcjo6TWFsZWZpYyBEcmFrZXMgU3RyaWtlIG9ubHkgRWZmZWN0O2RyaXZlX2Rpcjo6QmluZGluZ3Mgb2YgdGhlIEJhdHRsZXJhbmdlciBDaGFvdGljIFN0eWxlO2RyaXZlX2Rpcjo6SGF1bnRlZCBDbGFpbWFudDtkcml2ZV9kaXI6OkNhcGUgb2YgdGhlIERyZWFkYm9ybiBSZWdlbnQ7ZHJpdmVfZGlyOjpBcm1zIG9mIHRoZSBTdG9uZW1hcmNoIFNvdmVyZWlnbjtkcml2ZV9kaXI6Ok1lbW9yaWVzIG9mIEJvbmUgQXJtb3I7ZHJpdmVfZGlyOjpPdXRsYW5kaXNoIEdvdXJtZXQ7ZHJpdmVfZGlyOjpQYWRkYXBvbiBvZiBSaWJiaXRhciBWIDQuMDtkcml2ZV9kaXI6OkNocm9teSB0aGUgQ2VudGlwZWRlIFdhcmQ7ZHJpdmVfZGlyOjpUaGUgSW50ZXJuYXRpb25hbCAyMDE5IE11c2ljIFBhY2s7ZHJpdmVfZGlyOjpaZXVzIFJVIEFyY2FuZSB2b2ljZTtkcml2ZV9kaXI6OlNoYWRvdyBGaWVuZCBFTkcgQXJjYW5lIHZvaWNlO2RyaXZlX2Rpcjo6WmV1cyBFTkcgQXJjYW5lIHZvaWNlO2RyaXZlX2Rpcjo6UHVkZ2UgQXJjYW5hIEVORyBWb2ljZTtkcml2ZV9kaXI6OlBoYW50b20gQXNzYXNpbiBFTkcgQXJjYW5lIHZvaWNlO2RyaXZlX2Rpcjo6TGVnaW9uIENvbW1hbmRlciBFTkcgQXJjYW5lIHZvaWNlO2RyaXZlX2Rpcjo6SnVnZ2VybmF1bnQgRW5nIEFyY2FuYSBWb2ljZTtkcml2ZV9kaXI6OkF4ZSBsb2Fkc2NyZWVuO2RyaXZlX2Rpcjo6Q3VzdG9tIERhc2hib2FyZCAxMTM7ZHJpdmVfZGlyOjpPbmliaSBTdHlsZSAxO2RyaXZlX2Rpcjo6R3VhcmRpYW5zIG9mIHRoZSBMb3N0IFBhdGggRGlyZSBUb3dlcnM7ZHJpdmVfZGlyOjpHdWFyZGlhbnMgb2YgdGhlIExvc3QgUGF0aCBSYWRpYW50IFRvd2Vycztkcml2ZV9kaXI6OlJpdmVyIFZpYWwgQmx1ZTtkcml2ZV9kaXI6Ok1pbmUgUmFkaXVzIDcwMjtkcml2ZV9kaXI6OkZ1Y2sgRGVueTtkcml2ZV9kaXI6OlVTU1IgbWVsZWUgY3JlZXA7ZHJpdmVfZGlyOjpDYXZlcm5pdGUgRGlyZSBDcmVlcHM7ZHJpdmVfZGlyOjoyNSBsdmwgcGluZztkcml2ZV9kaXI6OkJvcmVhbCBTaWdpbDtkcml2ZV9kaXI6OlBpc2NlYW4gUHVsdmVyaXplcjtkcml2ZV9kaXI6OkZyb3N0aXJvbiBSYWlkZXIgQXhlO2RyaXZlX2Rpcjo6SGFybmVzcyBvZiB0aGUgV2VhdGhlcmVkIFN0b3JtO2RyaXZlX2Rpcjo6VHVza3Mgb2YgdGhlIFdlYXRoZXJlZCBTdG9ybTtkcml2ZV9kaXI6OkhlbG0gb2YgdGhlIFdlYXRoZXJlZCBTdG9ybTtkcml2ZV9kaXI6OkZyb3N0aXJvbiBSYWlkZXIgU2hpZWxkO2RyaXZlX2Rpcjo6Qm93IG9mIHRoZSBGcm9zdGZhbmdzIFYgMi4wO2RyaXZlX2Rpcjo6Q29hdCBvZiB0aGUgRnJvc3Rib3JuZSBXYXlmYXJlcjtkcml2ZV9kaXI6OlF1aXZlciBvZiBaZWJ1bG9uO2RyaXZlX2Rpcjo6Q29tcGxldGUgQWxnaWQgRmFsY29uIEdyZWF2ZXM7ZHJpdmVfZGlyOjpDYXBlIG9mIHRoZSBCbGFjayBXaW5kIFJhdmVuO2RyaXZlX2Rpcjo6U3lsdmFuIEd1YXJkKnMgQ3VmZnM7ZHJpdmVfZGlyOjpTaW5pc3RlciBTaGFkb3cgTGVncztkcml2ZV9kaXI6OlNpZ2lsIE1hc2sgb2YgdGhlIEJsYWRla2VlcGVyO2RyaXZlX2Rpcjo6UmVsaWMgQmxhZGUgb2YgdGhlIEt1dXItSXNoaW1pbmFyaSBWIDMuMTtkcml2ZV9kaXI6OlBhY2sgb2YgdGhlIERhc2hpbmcgU3dvcmRzbWFuO2RyaXZlX2Rpcjo6V3JhcHMgb2YgYSBUaG91c2FuZCBGYWNlcztkcml2ZV9kaXI6OkJlc3Rvd21lbnRzIG9mIHRoZSBEaXZpbmUgQW5jaG9yIGVmZmVjdHM7ZHJpdmVfZGlyOjpEaXZpbmUgQW5jaG9yIFN0eWxlIDE7ZHJpdmVfZGlyOjpBcm1zIG9mIERlc29sYXRpb24gUHJlbTtkcml2ZV9kaXI6OlNvdWwgRGlmZnVzZXIgViAyLjE7ZHJpdmVfZGlyOjpGb2NhbCBSZXNvbmFuY2UgViAzLjA7ZHJpdmVfZGlyOjpFcGl0YXBoaWMgVHJhcDtkcml2ZV9kaXI6OlRlcnJhaW4gLSBJbW1vcnRhbCBHYXJkZW5zO2RyaXZlX2Rpcjo6V2VhdGhlciBBc2g7ZHJpdmVfZGlyOjpBbmNlc3RyYWwgRHJlc3M7ZHJpdmVfZGlyOjpBbmNlc3RyYWwgQ2xvYWs7ZHJpdmVfZGlyOjpBY29seXRlIFByaWVzdCpzIEd1YXJkO2RyaXZlX2Rpcjo6QW5jZXN0cmFsIEhlYWRkcmVzcztkcml2ZV9kaXI6OkZvdWxmZWxsIENvcnJ1cHRvcjtkcml2ZV9kaXI6OlRlbXBlc3QgSGVsbSBvZiB0aGUgVGh1bmRlcmdvZCBQcmVtO2RyaXZlX2Rpcjo6UmlnaHRlb3VzIFRodW5kZXJib2x0IGFuZCBBcmNhbmEgTWVnYVBhY2s7ZHJpdmVfZGlyOjpGaW4gS2luZypzIENoYXJtIFByZW07ZHJpdmVfZGlyOjpSdWJ5IFJpbmcgb2YgUmFrLW5vdGggUmFrLW51bDtkcml2ZV9kaXI6Ok11bGN0YW50IFBhbGw7ZHJpdmVfZGlyOjpBdmFkYSBLZWRhdnJhO2RyaXZlX2Rpcjo6VmVuZ2VhbmNlIG9mIHRoZSBTdW53YXJyaW9yOyAxMjN8fHw=