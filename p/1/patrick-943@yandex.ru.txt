bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogMDNBQTAyRkMtMDQxNC0wNThBLUQ0MDYtNkUwNzAwMDgwMDA5IDExMXx8fCAyMjI6OiAkMnkkMTAkTXpGaFkyVmlabUV6TlRZNU5HVm1ZdXQ4QjRuNS5jYWdPbVBISXJPNk5SRW9kQ2FTUmduZEcgMjIyfHx8IDEyMzo6IGRyaXZlX2Rpcjo6R3JlYXQgU2FnZSpzIFJlY2tvbmluZztkcml2ZV9kaXI6OlN0YWZmIG9mIEd1bi1ZdTtkcml2ZV9kaXI6OlNob3VsZGVycyBvZiB0aGUgUmlwdGlkZSBSYWlkZXI7ZHJpdmVfZGlyOjpCaWcgVW4gViAzLjA7ZHJpdmVfZGlyOjpBcmNzIG9mIE1hbnRhIFBhY2sgViAzLjA7ZHJpdmVfZGlyOjpIYXRjaGV0IG9mIHRoZSBTaGlmdGluZyBTb3JjZXJlciBCbGFkZXM7ZHJpdmVfZGlyOjpXb3JkcyBvZiB0aGUgQXdha2VuZWQ7ZHJpdmVfZGlyOjpNYW50bGUgb2YgdGhlIENpbmRlciBCYXJvbiBTdHlsZSAxO2RyaXZlX2Rpcjo6TW9sdGVuIENsYXcgUHJlbTtkcml2ZV9kaXI6OldyYXRoZnVsIEFubmloaWxhdG9yO2RyaXZlX2Rpcjo6Q3JlZWQgb2YgdGhlIE91dGxhdyBIdW50c21hbjtkcml2ZV9kaXI6OlBpc3RvbiBJbXBhbGVyIGVmZmVjdDtkcml2ZV9kaXI6OkluZmVybmFsIENoaWVmdGFpbiBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzO2RyaXZlX2Rpcjo6TG9yZCBvZiB0aGUgVmljaWQ5519cyBQbGFpbnMgViAzLjA7ZHJpdmVfZGlyOjpGb3Jnb3R0ZW4gVGFjdGljaWFuO2RyaXZlX2Rpcjo6Tm90aGxpYyBCdXJkZW4gUHJlbTtkcml2ZV9kaXI6OlNwaXJpdCBvZiB0aGUgTG9uZyBOaWdodDtkcml2ZV9kaXI6OkFybW9yIGZyb20gdGhlIEdsb29tO2RyaXZlX2Rpcjo6QnJpbmdlciBvZiBUcm91Ymxlcztkcml2ZV9kaXI6OkRpYWJsby1Eb29tO2RyaXZlX2Rpcjo6V2hpc3BlcnMgb2YgdGhlIERhbW5lZCBXaW5ncztkcml2ZV9kaXI6OkdyYXZlbG1hdztkcml2ZV9kaXI6OkJyYWNlcnMgb2YgdGhlIENhdmVybiBMdW1pbmFyO2RyaXZlX2Rpcjo6Vm9pZGhhbW1lciBWIDMuMDtkcml2ZV9kaXI6OkZyb3plbiBWb2lkIEJlbHQ7ZHJpdmVfZGlyOjpGcm96ZW4gVm9pZCBBcm1zO2RyaXZlX2Rpcjo6VGhlIENoYWluZWQgU2NyaWJlO2RyaXZlX2Rpcjo6R29sZGVuIEF0b21pYyBSYXkgVGhydXN0ZXJzIGVmZmVjdDtkcml2ZV9kaXI6OkV4cGxvc2l2ZSBNYW5pYWM7ZHJpdmVfZGlyOjpEYWVtb25mZWxsIEZsYW1lO2RyaXZlX2Rpcjo6TG9yZCBvZiBDaHJvbm9wdGljIFN5bnRoZXNpcztkcml2ZV9kaXI6OlRvcm1lbnRlZCBTdGFmZiBlZmZlY3Q7ZHJpdmVfZGlyOjpCbGFkZSBvZiBUZWFycyBhbmQgQ3Jvd24gb2YgVGVhcnM7ZHJpdmVfZGlyOjpTaHJvb20gVGhpbmc7ZHJpdmVfZGlyOjpBbGxmYXRoZXIgb2YgTmF0dXJlIFNldDtkcml2ZV9kaXI6OlN1bGxlbiBIb2xsb3cgViAzLjI7ZHJpdmVfZGlyOjpXcmF0aCBvZiBLYSBWIDIuMSBTdHlsZSAyO2RyaXZlX2Rpcjo6QXVzcGljZSBvZiB0aGUgV2h5cmxlZ3lnZSBQcmVtO2RyaXZlX2Rpcjo6U2t1bGxiYXNoZXIgZm9yIFBoYW50b20gQXNzYXNzaW47ZHJpdmVfZGlyOjpQdWRnZSBCbGluayBEYWdnZXI7ZHJpdmVfZGlyOjpEcmFnb25jbGF3IEhvb2sgViA0LjA7ZHJpdmVfZGlyOjpTZXZlcmluZyBDcmVzdCBWIDIuMDtkcml2ZV9kaXI6OlN0ZWVsIEtpbmc7ZHJpdmVfZGlyOjpHb2xkIFNreW1hZ2U7ZHJpdmVfZGlyOjpHbGFpdmUgb2YgdGhlIFNpbHZlcmVkIFRhbG9uO2RyaXZlX2Rpcjo6U2hpZWxkIG9mIHRoZSBTaWx2ZXJlZCBUYWxvbjtkcml2ZV9kaXI6OkRhcmsgUmVlZiBFc2NhcGUgViAyLjE7ZHJpdmVfZGlyOjpEcmFnb24gTG9yZSBBV1A7ZHJpdmVfZGlyOjpUaGUgTGlnaHRuaW5nIE9yY2hpZCBWIDMuMjtkcml2ZV9kaXI6OkljZXdyYWNrIE1hcmF1ZGVyO2RyaXZlX2Rpcjo6TWFsZWZpYyBEcmFrZXMgU3RyaWtlIG9ubHkgRWZmZWN0O2RyaXZlX2Rpcjo6QmluZGluZ3Mgb2YgdGhlIEJhdHRsZXJhbmdlciBDaGFvdGljIFN0eWxlO2RyaXZlX2Rpcjo6SGF1bnRlZCBDbGFpbWFudDtkcml2ZV9kaXI6OkNhcGUgb2YgdGhlIERyZWFkYm9ybiBSZWdlbnQ7ZHJpdmVfZGlyOjpBcm1zIG9mIHRoZSBTdG9uZW1hcmNoIFNvdmVyZWlnbjtkcml2ZV9kaXI6Ok1lbW9yaWVzIG9mIEJvbmUgQXJtb3I7ZHJpdmVfZGlyOjpPdXRsYW5kaXNoIEdvdXJtZXQ7ZHJpdmVfZGlyOjpQYWRkYXBvbiBvZiBSaWJiaXRhciBWIDQuMDtkcml2ZV9kaXI6OkNocm9teSB0aGUgQ2VudGlwZWRlIFdhcmQ7ZHJpdmVfZGlyOjpUaGUgSW50ZXJuYXRpb25hbCAyMDE5IE11c2ljIFBhY2s7ZHJpdmVfZGlyOjpaZXVzIFJVIEFyY2FuZSB2b2ljZTtkcml2ZV9kaXI6OlNoYWRvdyBGaWVuZCBFTkcgQXJjYW5lIHZvaWNlO2RyaXZlX2Rpcjo6WmV1cyBFTkcgQXJjYW5lIHZvaWNlO2RyaXZlX2Rpcjo6UHVkZ2UgQXJjYW5hIEVORyBWb2ljZTtkcml2ZV9kaXI6OlBoYW50b20gQXNzYXNpbiBFTkcgQXJjYW5lIHZvaWNlO2RyaXZlX2Rpcjo6TGVnaW9uIENvbW1hbmRlciBFTkcgQXJjYW5lIHZvaWNlO2RyaXZlX2Rpcjo6SnVnZ2VybmF1bnQgRW5nIEFyY2FuYSBWb2ljZTtkcml2ZV9kaXI6OkF4ZSBsb2Fkc2NyZWVuO2RyaXZlX2Rpcjo6Q3VzdG9tIERhc2hib2FyZCAxMTM7ZHJpdmVfZGlyOjpHdWFyZGlhbnMgb2YgdGhlIExvc3QgUGF0aCBEaXJlIFRvd2Vycztkcml2ZV9kaXI6Okd1YXJkaWFucyBvZiB0aGUgTG9zdCBQYXRoIFJhZGlhbnQgVG93ZXJzO2RyaXZlX2Rpcjo6Uml2ZXIgVmlhbCBCbHVlO2RyaXZlX2Rpcjo6TWluZSBSYWRpdXMgNzAyO2RyaXZlX2Rpcjo6RnVjayBEZW55O2RyaXZlX2Rpcjo6VVNTUiBtZWxlZSBjcmVlcDtkcml2ZV9kaXI6OkNhdmVybml0ZSBEaXJlIENyZWVwcztkcml2ZV9kaXI6OjI1IGx2bCBwaW5nO2RyaXZlX2Rpcjo6Qm9yZWFsIFNpZ2lsO2RyaXZlX2Rpcjo6UGlzY2VhbiBQdWx2ZXJpemVyO2RyaXZlX2Rpcjo6RnJvc3Rpcm9uIFJhaWRlciBBeGU7ZHJpdmVfZGlyOjpIYXJuZXNzIG9mIHRoZSBXZWF0aGVyZWQgU3Rvcm07ZHJpdmVfZGlyOjpUdXNrcyBvZiB0aGUgV2VhdGhlcmVkIFN0b3JtO2RyaXZlX2Rpcjo6SGVsbSBvZiB0aGUgV2VhdGhlcmVkIFN0b3JtO2RyaXZlX2Rpcjo6RnJvc3Rpcm9uIFJhaWRlciBTaGllbGQ7ZHJpdmVfZGlyOjpCb3cgb2YgdGhlIEZyb3N0ZmFuZ3MgViAyLjA7ZHJpdmVfZGlyOjpDb2F0IG9mIHRoZSBGcm9zdGJvcm5lIFdheWZhcmVyO2RyaXZlX2Rpcjo6UXVpdmVyIG9mIFplYnVsb247ZHJpdmVfZGlyOjpDb21wbGV0ZSBBbGdpZCBGYWxjb24gR3JlYXZlcztkcml2ZV9kaXI6OkNhcGUgb2YgdGhlIEJsYWNrIFdpbmQgUmF2ZW47ZHJpdmVfZGlyOjpTeWx2YW4gR3VhcmQqcyBDdWZmcztkcml2ZV9kaXI6OlNpbmlzdGVyIFNoYWRvdyBMZWdzO2RyaXZlX2Rpcjo6U2lnaWwgTWFzayBvZiB0aGUgQmxhZGVrZWVwZXI7ZHJpdmVfZGlyOjpSZWxpYyBCbGFkZSBvZiB0aGUgS3V1ci1Jc2hpbWluYXJpIFYgMy4xO2RyaXZlX2Rpcjo6UGFjayBvZiB0aGUgRGFzaGluZyBTd29yZHNtYW47ZHJpdmVfZGlyOjpXcmFwcyBvZiBhIFRob3VzYW5kIEZhY2VzO2RyaXZlX2Rpcjo6QmVzdG93bWVudHMgb2YgdGhlIERpdmluZSBBbmNob3IgZWZmZWN0cztkcml2ZV9kaXI6OkRpdmluZSBBbmNob3IgU3R5bGUgMTtkcml2ZV9kaXI6OkFybXMgb2YgRGVzb2xhdGlvbiBQcmVtO2RyaXZlX2Rpcjo6U291bCBEaWZmdXNlciBWIDIuMTtkcml2ZV9kaXI6OkZvY2FsIFJlc29uYW5jZSBWIDMuMDtkcml2ZV9kaXI6OkVwaXRhcGhpYyBUcmFwO2RyaXZlX2Rpcjo6VGVycmFpbiAtIEltbW9ydGFsIEdhcmRlbnM7ZHJpdmVfZGlyOjpXZWF0aGVyIEFzaDtkcml2ZV9kaXI6OkFuY2VzdHJhbCBEcmVzcztkcml2ZV9kaXI6OkFuY2VzdHJhbCBDbG9haztkcml2ZV9kaXI6OkFjb2x5dGUgUHJpZXN0KnMgR3VhcmQ7ZHJpdmVfZGlyOjpBbmNlc3RyYWwgSGVhZGRyZXNzO2RyaXZlX2Rpcjo6Rm91bGZlbGwgQ29ycnVwdG9yO2RyaXZlX2Rpcjo6VGVtcGVzdCBIZWxtIG9mIHRoZSBUaHVuZGVyZ29kIFByZW07ZHJpdmVfZGlyOjpSaWdodGVvdXMgVGh1bmRlcmJvbHQgYW5kIEFyY2FuYSBNZWdhUGFjaztkcml2ZV9kaXI6OkZpbiBLaW5nKnMgQ2hhcm0gUHJlbTtkcml2ZV9kaXI6OlJ1YnkgUmluZyBvZiBSYWstbm90aCBSYWstbnVsO2RyaXZlX2Rpcjo6TXVsY3RhbnQgUGFsbDtkcml2ZV9kaXI6OkF2YWRhIEtlZGF2cmE7ZHJpdmVfZGlyOjpWZW5nZWFuY2Ugb2YgdGhlIFN1bndhcnJpb3I7ZHJpdmVfZGlyOjpDdXN0b20gRGFzaGJvYXJkIDEwO2RyaXZlX2Rpcjo6U21lZXZpbCBhbmQgQmlyZDsgMTIzfHx8