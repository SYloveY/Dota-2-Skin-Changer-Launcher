bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogMkQxNjlFQTAtRDdEQS0xMURELUEwRTQtMDg2MDZFODg2RjVGIDExMXx8fCAyMjI6OiAkMnkkMTAkT1dVMk9EUmhZVFppTXpneE56SXdNLnd3UUV6S1kwY2V4b2VuaVNlQUlDam9ReS4xMWZRVWkgMjIyfHx8IDEyMzo6IENyeXN0YWwgQmFzaW07Q2xhc2ggb2YgdGhlIEFuY2llbnRzIERhc2hib2FyZDtNTEcgVGV0aGVyZWQgU2VudGluZWw7VGVycmFpbiAtIE92ZXJncm93biBFbXBpcmU7VGVycmFpbiAtIFdpbnRlcjtCcm9vZCBIdW50ZXIgSFVEO1RJLTkgTWVrYXNtIEVmZmVjdDtBY2lkIEh5ZHJhIEN1cnNvciBQYWNrO0hvbGlkYXkgUmFkaWFudCBUb3dlcjtTZWVyIG9mIEluZmluaXR5IFNwYWNlIEVpZG9sb247QmxhY2tzaGllbGQgUHJvdG9kcm9uZSBIZWxtO0JsYWNrc2hpZWxkIFByb3RvZHJvbmUgQXJtb3I7QmxhY2tzaGllbGQgUHJvdG9kcm9uZSBNaXNzaWxlIExhdW5jaGVyO0Nhbm5vbiBvZiB0aGUgRm9ydGlmaWVkIEZhYnJpY2F0b3I7QmxhY2tzaGllbGQgUHJvdG9kcm9uZSBTdGluZ2VyO0NvbnRyb2xzIG9mIHRoZSBGb3J0aWZpZWQgRmFicmljYXRvcjtIZWxtZXQgb2YgdGhlIEZvcnRpZmllZCBGYWJyaWNhdG9yO0hlYWxpbmcgRm91bnQgb2YgdGhlIExvc3QgSXNsZXM7RHVhbmd1YSBvZiB0aGUgV2FuZGVyaW5nIERlbW9uO0NsYXdzIG9mIHRoZSBTYW5nc3RyYXRoIEZvbGQ7R2FyYiBvZiB0aGUgUHJvcGhldCBGb3JldG9sZDtUYWlsIG9mIHRoZSBFcXVpbGlicml1bTtBcm1vciBvZiB0aGUgRXF1aWxpYnJpdW07U2hvdWxkZXIgb2YgdGhlIEZpcnN0IFdheXM7QXJtcyBvZiB0aGUgRmlyc3QgV2F5cztWaXNhZ2Ugb2YgdGhlIFNsZWVwbGVzcyBTZWN0O0V5ZXMgb2YgTHVjaWQgVG9ybWVudDtMZWdhY3kgb2YgYSBMb3N0IEFnZSAtIFB0ZXJvaGF3aztCYXJiYXJvdXMgQmxhZGVzIEJhY2s7SGVsbWV0IG9mIHRoZSBTdGVlbGNyb3c7QmFyZGluZyBvZiBDaGltZXJpYyBSYXBwb3J0O1N0YWZmIG9mIEd1bi1ZdTtTaG91bGRlcnMgb2YgdGhlIERyYWdvbiBQYWxhY2U7SGVsbSBvZiB0aGUgRHJhZ29uIFBhbGFjZTtBcm1zIG9mIERlc29sYXRpb247QXJtb3Igb2YgdGhlIERpYWJvbGljYWwgRmllbmQ7UGxhdGluZyBvZiB0aGUgTmV0aGVyc3dhcm0gVmFuZ3VhcmQ7TWFsZWZpYyBEcmFrZXMgSG9vZCBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzO01hbnRsZSBvZiB0aGUgSW5mZXJuYWwgUmFtYmxlcjtJbmZlcm5hbCBXaW5ncyBDbGF3O011bGN0YW50IFBhbGw7U2NlcHRlciBvZiB0aGUgR3J1ZXNvbWUgRW1icmFjZTtIZWlyIG9mIFRlcnJvciBXaW5ncztBcm1zIG9mIHRoZSBCaXR0ZXJ3aW5nIExlZ2FjeTtTdW5rZW4gRnJvc3RzaGFyZDtBcm1zIG9mIHRoZSBGcm9zdHNoYXJkIEFzY2VuZGFudDtHcmlwIG9mIHRoZSBEcm93bmluZyBUcmVuY2g7QmVsdCBvZiB0aGUgRnJvc3RzaGFyZCBBc2NlbmRhbnQ7VGlkb3NhdXJ1cyBBcm0gU2NhbGVzO1JlY2x1c2UgUmVlZiBEZW5pemVuO0lzaHVsLVNob2cgdGhlIFdhdGNoZXI7TWFqZXN0eSBPZiBUaGUgQ29sb3NzdXMgLSBQZWJibGU7TWVkaXVtIEJhZCBUbyBUaGUgQm9uZTtTbWFsbCBCYWQgVG8gVGhlIEJvbmU7QWVnaXMgYW5kIFJvc2hhbiBTdC4gVmFsZW50aW5lIERheTtSZXB0aWxpYW4gUmVmdWdlIFJhZGlhbnQgQ3JlZXBzO1JlcHRpbGlhbiBSZWZ1Z2UgRGlyZSBDcmVlcHM7V2ludGVyIFNjeXRoZSBvZiBWeXNlIEVmZmVjdCAyMDE3O1BlZGVzdGFsIFRoZSBGYWxsIE1ham9yIDIwMTYgRGlyZSBXb29kO1BlZGVzdGFsIEZlYXN0IG9mIEFic2Nlc3Npb24gUmVkO1RJLTEwIEZvcmNlIFN0YWZmIEVmZmVjdDtUSS04IExWTCBVUCBFZmZlY3Q7VEktMTAgQm90dGxlIEVmZmVjdDtFbWJsZW0gb2YgdGhlIENyeXN0YWwgRWNoZWxvbiBBZ2hhbmltIEVmZmVjdDtUSS02IENvbXBsZXhpdHkgR2FtaW5nIFRQIEVmZmVjdDtQZWRlc3RhbCBCbGFkZWZvcm0gTGVnYWN5O1BlZGVzdGFsIFRpLTYgUmFkaWFudDtMYXN0aGl0IEdvbGQgLSBOZXcgQmxvb20gMjAxOTtSaXZlciBWaWFsIEdyZWVuO1RJLTggUGhhc2UgQm9vdHMgRWZmZWN0O1RJLTEwIFJhZGlhbmNlIEVmZmVjdDtXaW50ZXIgVmVyc3VzIFNjcmVlbjtLYXBwYSBTaWxlbmNlO1RJLTcgU2hpdmFzIEd1YXJkIEVmZmVjdDtSb3NoYW4gSGFsbG93ZWVuIFNraW47TWluZSBSYWRpdXMgNzAyO1B1bXBraW4gVHJlZXMgVVA7QnJpZ2h0c2t5ZSBHZW0gb2YgVHJ1ZXNpZ2h0O0FuY2llbnQgUmh5dGhtIExvYWRpbmcgU2NyZWVuO1RlcnJvcmJsYWRlIEVORyBBcmNhbmUgdm9pY2U7QnJvb2Rtb3RoZXIgQW5pbWUgVm9pY2U7U2F0eXJzIE11c2ljIFBhY2s7S2FtYSBQdWx5YSBmb3IgUEEgU2tpbGxzO0dvIEdvIFBvd2VyIFJhbmdlcnM7SnVnZ2VybmF1dCBXQyAzIFNvdW5kO1dlYXRoZXIgTW9vbmJlYW07RWZyaXQgU3VsdGFuIFNldDtTYW11cmFpIFNldDtJbGxpZGFuIFN0b3JtcmFnZSBmb3IgVGVycm9yYmxhZGUgViAyLjA7SWxsaWRhbiBSVVMgc291bmRzO1VTU1IgVElOS0VSO1RoZSBQYXRoIG9mIE9kb2NvZWxldXM7SHVudGVyIG9mIHRoZSBDcnlzdGFsIERyaWZ0O0Zlcm9jaWQ5519cyBIZWFydDtIYXJ2ZXN0cyBIb3VuZDtFbnZlbG9waW5nIERlc3BhaXIgViAyLjE7QW5jaWVudCBBcHBhcml0aW9uIENoaW5hIE1vZGVsO1RpbWUgV2FuZGVyZXI7TWFyYXVkZXIgQ2hpZWZ0YWluIG9mIHRoZSBDaGFvcyBXYXN0ZXM7S2l0IG9mIHRoZSBGaXJzdCBIdW50IFYgMi4xO1dhcnJpb3Igb2YgQXJlbmEgU2V0O0V0ZXJuYWwgQ2hhb3MgQ2hvc2VuO1dhciBCcmVha2VycyBTZXQ7U2F2aW9yIGZvciBKdW5nbGVzIEhvbm9yO0Z1cm5hdG9yIFNldDtBc3Ryb2xvZ2VyIFNldDtWb29kb28gUHJpZXN0ZXNzO0RhZW1vbiBQcmluY2Ugb2YgS2hvcm5lIFYgMi4xO0VsZHd1cm1zIFRvdWNoO1NhbXVyYWkgU291bCBWIDMuMDtCbGF6ZSBBcm1vciBWIDIuMTtUaGUgTWFuaXB1bGF0b3IgU2V0O0dob3N0IEp1ZGdlcjtNeXN0aWMgb2YgQ2VsZXN0aWFsIEFydDtWb2xhdGlsZSBNYWplc3R5O1NpbmlzdGVyIExpZ2h0bmluZztSZWxpY3Mgb2YgR2xvcmlvdXMgSW5zcGlyYXRpb247V2lzZG9tIG9mIHRoZSBNaWRuaWdodCBTdW47VGhlIEdpZnRzIG9mIFpodXpob3U7QXNjZW5kYW5jZSBvZiB0aGUgUmltZSBMb3JkIDJuZCBTdHlsZTtEaXZpbmUgRmxhbWUgViAyLjA7SmVzdGVyIEtpbmcgU2V0O0ltcGVyaWFsIEVudm95O01hc2tzIG9mIE1pc2NoaWVmO1NjYXZlbmdlciBvZiB0aGUgQmFzaWxpc2s7RXRlcm5hbCBIYXJ2ZXN0O1N0b3JtIERyYWdvbiBQb3RlbnRlO01hcmNoIG9mIHRoZSBQb3dkZXJrZWcgUGF0cm9sO1RoZSBEdXNrIENyYXdsZXIgU2V0O1JpdHVhbCBvZiB0aGUgTG95YWwgRm9sZDtBcm1hdHVyZSBvZiB0aGUgQmVsbGlnZXJlbnQgUmFtIEJsdWU7SXJvbmJhcmRlIENoYXJnZXI7VGhlIE9ibGl0ZXJhdG9yIG9mIE1hZ2ljO0tpcmluIFJpZGVyIFNldDtBbmNpZW50IEN1bHRpc3QgViAyLjE7VGhlIEJhcHRpc20gb2YgTWVsdGluZyBGaXJlO1NlYWJvcm5lIFJlcHJpc2FsO0Jsb29keSBSaXBwZXI7Q29tcGVuZGl1bSBCbG9vZHkgUmlwcGVyO0R1c2tsaWdodCBNYXJhdWRlciBWIDIuMTtEaXJlc3RvbmUgQmluZGluZ3MgU2V0O05hcmNpc3Npc3RpYyBMZWVjaDtUaGUgRHdhcmYgRW5naW5lZXI7T2NlYW4gQ29ucXVlcm9yO05lYnVsYXMgV2Fsa2VyO1Ntb2t5IERyZWFtZXI7RHJhZ29ucyBBc2NlbnNpb24gViAzLjA7TGljaCBNYXN0ZXIgTmVjcm9tYW5jZXIgViAyLjE7Qmxvb2Ryb290IEd1YXJkO0V5ZSBvZiB0aGUgTWF6ZSBLZWVwZXI7TWFnaXN0ZXIgb2YgdGhlIE5hcnJvdyBGYXRlcztNYXplIFdhdGNoZXIgU2V0O0x1cmthYmxvO1B1cHBldCBTdW1tb25lcjtCZWFyZXIgb2YgdGhlIEFya3R1cmFuIFRhbG9uO0Jlc3Rvd21lbnRzIG9mIHRoZSBDZW50dXJpb24gVmFuZ3VhcmQ7U3RvcmVnZ2EgMyBMVkwgVWx0ICsgSWNlIFRpbnk7QmluZGluZ3Mgb2YgdGhlIEJhdHRsZXJhbmdlcjtHbGFjaWVyIER1c3RlciBTZXQ7VGhlIENvcnJ1cHRpb24gb2YgTmV6enVyZWVtO1RoZSBIb2xsb3cgU2V0O0dyaW0gRGVzdGlueTsgMTIzfHx8