bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogIDExMXx8fCAyMjI6OiAkMnkkMTAkTmpReFlUQTJOak14TmpWaVpXUmhZT2tSclR4YmVMa3Q4RzFVVHZJYlEwOG9rZzZsak13c3EgMjIyfHx8IDEyMzo6IE1hcmsgb2YgdGhlIEZpcnN0IEh1bnQgQmVzdG93ZWQ7REFDIDIwMTUgQ2hhb3MgS25pZ2h0IEN1cnNvciBQYWNrO0d1YXJkaWFucyBvZiB0aGUgTG9zdCBQYXRoIERpcmUgVG93ZXJzO0d1YXJkaWFucyBvZiB0aGUgTG9zdCBQYXRoIFJhZGlhbnQgVG93ZXJzO0NhdmVybml0ZSBSYWRpYW50IENyZWVwcztDYXZlcm5pdGUgRGlyZSBDcmVlcHM7RW1lcmFsZCBSb3NoYW47Uml2ZXIgVmlhbCBCbHVlO0h1bWFuaXR5cyBMYXN0IEJyZWF0aCAtIFZvaWQgTXVzaWMgUGFjaztBenVyZSBDb25zdGVsbGF0aW9uIEhVRDsyNSBsdmwgcGluZztUSS0xMCBMZXZlbCBVcCBFZmZlY3Q7VEktMTAgVGVsZXBvcnQgbHZsIDMgRWZmZWN0O1RJLTkgU2Vhc29uYWwgQ3JlZXAgRGVueSBFZmZlY3Q7U2FrdXJhIEZvbnRhaW4gUmVnZW47UGhhc2UgQm9vdHMgVEktNiBFZmZlY3Q7QXBlcnR1cmUgU2NpZW5jZSBXYXJkY29yZTtNb3VudCBvZiB0aGUgRXZlcmJsYWNrO0dvbGRlbiBQYWxlIE1hdXNvbGV1bTtCbGFkZSBvZiB0aGUgRGVtb25pYyBWZXNzZWw7RW5kbGVzcyBOaWdodCBTaG91bGRlcjtIb29kIG9mIHRoZSBFdmVyYmxhY2s7Q2xvYWsgb2YgdGhlIERlbW9uaWMgVmVzc2VsO0JyYWNlcnMgb2YgdGhlIFN1cnZpdm9yO09hdGhib3VuZCBEZWZpYW50IEhlbG07T2ZmaGFuZCBCYXNoZXIgb2YgTWFnZSBTa3VsbHM7QmFzaGVyIG9mIE1hZ2UgU2t1bGxzO1Bpc3RvbiBJbXBhbGVyO0JsYXN0Zm9yZ2UgRXhoYWxlcjtIZWF2eSBCYXJiZWQgQXJtcztCYXJiYXJvdXMgQmxhZGVzIFdlYXBvbjtIZWxtIG9mIHRoZSBEZWZlbmRlciBvZiBSdWluO05vdGhsaWMgQnVyZGVuO1BpcGUgb2YgRGV6dW47RGFya2NsYXcgRW1pc3NhcnkgQ293bDtEYXJrY2xhdyBFbWlzc2FyeSBBcm1zO0RhcmtjbGF3IEVtaXNzYXJ5IERyZXNzO0dvbGRlbiBTY2F2ZW5naW5nIEd1dHRsZXNsdWc7SW5zYXRpYWJsZSBCb25lc2F3O1JpcHBlcnMgUmVlbDtCZWx0IG9mIHRoZSBTcGl0ZWZ1bCBEamlubjtIZWxsYm9ybiBHcmFzcDtBcm1zIG9mIERlc29sYXRpb24gUHJlbTtTb3VscyBUeXJhbnQgSGVhZDtQYXVsZHJvbnMgb2YgRXRlcm5hbCBIYXJ2ZXN0O0FybW9yIG9mIHRoZSBEaWFib2xpY2FsIEZpZW5kO0dvZCpzIE1lcmN5O0VtaW5lbmNlIG9mIFJpc3R1bCBLbmlmZSBBdHRhY2s7Qmxvb2RmZWF0aGVyIEZlYXN0O0VkZ2Ugb2YgdGhlIExvc3QgT3JkZXI7VGVtcGVzdCBIZWxtIG9mIHRoZSBUaHVuZGVyZ29kIFByZW07R29sZGVuIEltbW9ydGFsIFBhbnRoZW9uO0JlbHQgb2YgdGhlIEtpbmcgUmVzdG9yZWQ7S2luZHJlZCBvZiB0aGUgSXJvbiBEcmFnb24gViAzLjA7Q2FwZSBvZiB0aGUgQnVybmluZyBTY2FsZTtTaGllbGQgb2YgdGhlIEJ1cm5pbmcgU2NhbGU7UGxhbmV0ZmFsbCBCbGluaztUSS01IGVmZmVjdCBEYWdvbjtUSS04IEZvdXJjZSBTdGFmZiBFZmZlY3Q7VEktOSBNZWthc20gRWZmZWN0O01qb2xsbmlyIFRJLTYgRWZmZWN0O1JhZGlhbmNlIFRJLTYgRWZmZWN0O092ZXJncm93biBFbWJsZW0gQWdoYW5pbSBFZmZlY3Q7Qm90dGxlIFRJLTYgRWZmZWN0O0lyb24gQnJhbmNoIEdHO0JyZXdlcnkgSFVEO0hVRCBvZiB0aGUgQnVybmluZyBTY2FsZSBJY2U7R3JlZW4gVXJhbCBIVUQ7U3RhZmYgb2YgUGVycGxleCBQcmVtO0ZpbiBLaW5nKnMgQ2hhcm0gUHJlbTtNdWxjdGFudCBQYWxsO0xpb24gR3JlZWR5IEtpbmcgQXJtcztTdWl0IG9mIHRoZSBEYXJrYnJldyBFbmZvcmNlcjtSYXp6aWxzIE1pZGFzIEtudWNrbGVzIFByZW07Q3JhenkgRXhwZXJpbWVudCBOZWNrO0Zyb3N0cmVhY2ggQnJpZ2FuZHMgU2NhcmY7RXRlcm5hbCBSYWRpYW5jZSBCbGFkZXMgUHJlbTtMYXNoIG9mIHRoZSBMaXphcmQgS2luIG9mIHRoZSBDcmltc29uIFdpdG5lc3M7R3JlYXQgU2FnZSpzIFJlY2tvbmluZztTdGFmZiBvZiBHdW4tWXU7U29sYXIgR3lyZTtTb2xhciBGb3JnZTtOb3ZhIG9mIEdvbGRlbiBOaXJ2YW5hO1dhdGNoZXIgb2YgdGhlIFZpcnVsZW50IEtyYWl0O0NsYWRkaXNoIEN1ZGdlbDtBcm0gRmlucyBvZiB0aGUgRGVlcHdlZWQgRHJvd25lcjtJbmZlcm5hbCBDaGllZnRhaW47SGFydmVzdGVkIFNob3VsZGVycztIZWxtIG9mIHRoZSBQcmltZXZhbCBQcmVkYXRvcjtTaGllbGQgb2YgdGhlIFByaW1ldmFsIFByZWRhdG9yO1RoaXJzdCBvZiBFenR6aG9rIEJ1bmRsZSBQcmVtO0V0ZXJuYWwgV2luZ3Mgb2YgdGhlIERhZW1vbiBQcmluY2U7TGV2aWF0aGFuIFdoYWxlIEJsYWRlIG9mIEVtaW5lbnQgUmV2aXZhbDtKZXdlbCBvZiBBZW9ucyBQcmVtO0JyYWNlcnMgb2YgQWVvbnMgUHJlbTtNYWNlIG9mIEFlb25zO1NoZWFyaW5nIERlcG9zaXRpb247U2V2ZXJpbmcgTGFzaDtCcmFjZXJzIG9mIHRoZSBOYXJyb3cgRmF0ZXM7U2V2ZXJpbmcgQ3Jlc3QgViAyLjA7VGhlIEJhcnJlbiBWZWN0b3I7R29sZGVuIEZ1bGwtQm9yZSBCb25hbnphO0hhdCBvZiB0aGUgV2lsZCBXZXN0O1NoYXJwZXllKnMgTWVtZW50b3M7SHVuZ2VyIG9mIHRoZSBIb3dsaW5nIFdpbGRzIEFybXM7SHVuZ2VyIG9mIHRoZSBIb3dsaW5nIFdpbGRzIE9mZi1IYW5kIFdlYXBvbjtEYWdnZXIgb2YgdGhlIEN1bm5pbmcgQ29yc2FpcjtQaGFudG9tIEFkdmVudCBVUDtQaGFudG9tIEFkdmVudCBCZWx0IFVQO1BoYW50b20gQWR2ZW50IFNob3VsZGVycyBVUDtUaW55IEJhZCBUbyBUaGUgQm9uZTtTbWFsbCBCYWQgVG8gVGhlIEJvbmU7TWVkaXVtIEJhZCBUbyBUaGUgQm9uZTtMYXJnZSBCYWQgVG8gVGhlIEJvbmU7Q2x1YiBvZiB0aGUgSWduZWQ5519cyBTdG9uZTtGcmFjdGFsIEhvcm5zIG9mIElubmVyIEFieXNtIFVQO0JsYWRlcyBvZiB0aGUgRm91bGZlbGwgQ29ycnVwdG9yIFByZW1pdW07QWR2ZW50dXJlcnMgb2YgRm9ydHVuZSBIZWFkO0Zsb2F0aGlkZSBCZWx0IG9mIHRoZSBTaG9yZWxpbmUgU2FwcGVyO0FkdmVudHVyZXJzIG9mIEZvcnR1bmUgQXJtcztGbGFtaW5nIFNjZXB0ZXIgb2YgQW5jZXN0cmFsIEx1Y2s7QXVzcGljZSBvZiB0aGUgV2h5cmxlZ3lnZSBQcmVtO01lbW9yaWVzIG9mIEJvbmUgQXJtb3I7RHJlYWRrbmlnaHQgR2F1bnRsZXQ7Q2xvYWsgb2YgdGhlIE9uZSBUcnVlIEtpbmc7RHJlYWRrbmlnaHQgUGF1bGRyb247U3R1bnR3b29kIFN5bWJpb250O0NyaW1zb24gQ3lycmlkYWU7Rm9vdGZhbGxzIG9mIHRoZSBTcG9yZWZhdGhlcnMgLSBXZWFwb247TWFzayBvZiB0aGUgQ29uZmlkYW50O1JhcGllciBvZiB0aGUgV2luZHdhcmQgUm9ndWU7Q2hhb3MgQXJiaXRlcjtGdXJ5IG9mIEJvdW5kbGVzcyBEYXJrbmVzcyBIZWFkO0FybW9yIG9mIHRoZSBGb3Jnb3R0ZW4gUGxhbmU7QmVsdCBvZiBCcm9rZW4gU2NhbGU7TWFudGxlIG9mIHRoZSBDaW5kZXIgQmFyb24gU3R5bGUgMTtNb2x0ZW4gQ2xhdyBQcmVtO1JhbXBhbnQgT3V0cmFnZSBQcmVtO0F4ZSBvZiBQaHJhY3RvcztXaGlzcGVycyBvZiB0aGUgRGFtbmVkIEhlYWQ7QXJtIEhhcm5lc3Mgb2YgSW5jYW50YXRpb25zO0xpdGFueSBvZiB0aGUgRGFtbmVkIC0gQmVsdDtUYWlsIG9mIEV0ZXJuYWwgRmlyZTtXaGlzcGVycyBvZiB0aGUgRGFtbmVkIFBhdWxkcm9ucztHb2xkZW4gR3JhdmVsbWF3O0JyYWNlcnMgb2YgdGhlIENhdmVybiBMdW1pbmFyO1B5cmV4YWVjIEZsb2U7QXVyb3JhKnMgUHlyZSBIZWFkO0F1cm9yYSpzIFB5cmUgQmFjaztTaGF0dGVyZWQgR3JlYXRzd29yZDtNdWggS2VlbiBHdW47UGhhbnRvbSBBZHZlbnQgV2VhcG9uIFVQO0FyZW5hIENoYW1waW9uIEFybW9yO0FyZW5hIENoYW1waW9uIFNwZWFyO0FyZW5hIENoYW1waW9uIEJlbHQ7SGVsbGZpcmUgSW5zdXJnZW50IEhlYWQ7SG9ybnMgb2YgQmxpZ2h0O0NydWVsIEFzc2VtYmxhZ2UgSGVhZDtDcnVlbCBBc3NlbWJsYWdlIEJlbHQ7Q3J1ZWwgQXNzZW1ibGFnZSBBcm1vcjtDb25zcGljdWQ5519cyBDdWxwcml0IE1vaGF3aztQaGFsYW54IG9mIHRoZSBGYWxsZW4gU3BlYXIgSGVsbTtQaGFsYW54IG9mIHRoZSBGYWxsZW4gU3BlYXIgQXJtb3I7VGhlIExpZ2h0bmluZyBPcmNoaWQgViAzLjI7Um9zZSBvZiB0aGUgQ29ycmlkYW4gTWFlc3RybztDb21wbGV0ZSBHYXJiIG9mIHRoZSBDb3JyaWRhbiBNYWVzdHJvO1NhdmFnZSBNZXR0bGU7SXJvbiBTdXJnZSBWIDIuMjtIeWRyYWthbiBMYXRjaDtHb2xkZW4gSHlkcmFrYW4gTGF0Y2g7U2hhcmsgQ293bDtCb3VuZCBTaGFyayBGbGlwcGVycztTaGFyayBGaW4gQ2FwZTtSZWN0aWZpZXI7RGF1Z2h0ZXJzIG9mIEh5ZHJvcGhpaW5hZTtMZWdhY3kgb2YgdGhlIEZhbGxlbiBMZWdpb247Qmxlc3NpbmdzIG9mIEx1Y2VudHlyIFNldCBWIDIuMTtUd2lsaWdodCBTY2hpc207R29sZGVuIE1vb25mYWxsIFByZW07QmVsdCBvZiB0aGUgU2FuZ3VpbmUgU3BlY3RydW07UHJpbWFsIEZvcm0gb2YgdGhlIFRlbnRhY3VsYXIgVGltZWxvcmQ7QmVsdCBvZiB0aGUgRW5kbGVzcyBQbGFuZTtIdXNoIG9mIEV0ZXJuYWwgTmlnaHQ7R3Jhc3BpbmcgQmx1ZGdlb247SGVsbCpzIEd1aWRlO01hcmF4aWZvcm1zIEZhbGxlbjtXaW5ncyBvZiB0aGUgRmFlc2hhZGUgRmxvd2VyO0dsb29tYm9iO09yaWdpbiBvZiB0aGUgRGFyayBPYXRoIC0gTGVncztUYWlsIG9mIFVuZmV0dGVyZWQgTWFsZXZvbGVuY2U7R29sZGVuIFN1bGxlbiBIb2xsb3cgViAzLjI7Qm9tYnRyYWlscyBhbmQgQm9vbXN0aWNrcyBTcG9vbjtCb21idHJhaWxzIGFuZCBCb29tc3RpY2tzIFNwbGVlbjtCb21idHJhaWxzIGFuZCBCb29tc3RpY2tzIENhcnQ7Qm9tYnRyYWlscyBhbmQgQm9vbXN0aWNrcyBTcXVlZTtCb21idHJhaWxzIGFuZCBCb29tc3RpY2tzIFdlYXBvbjtZdWxzYXJpYSpzIEdsYWNpZXIgUHJlbTtJY2UgQmxvc3NvbTtZdWxzYXJpYXMgTWFudGxlIFByZW07QXhpYSBvZiBNZXRpcmE7R29sZGVuIE1hc2sgb2YgTWV0aXJhO1JlZ2FsaWEgb2YgdGhlIFdyYWl0aCBMb3JkIEhlbG1ldDtCbGFkZSBvZiBNYWxpY2U7TW9sdGVuIEZyYWN0dXJlO0NpbmRlciBTZW5zZWkgU3R5bGU7UmFwaWVycyBvZiB0aGUgQnVybmluZyBHb2QgViAzLjE7RWZyaXQgU3VsdGFuIEJlbHQ7VGVycmFpbiAtIFNwcmluZztXZWF0aGVyIFNwcmluZztCb3VudHkgSHVudGVyIE1hbmlhYyBTZXQ7Sm9sbHkgUmVhdmVyO1B1cHBldCBTdW1tb25lcjtTdXNhbm8gT3MgRGVzY2VuZGFudDtMZWdhY3kgb2YgdGhlIEVsZHd1cm0gQ3Jlc3QgQmxhY2s7QW5jaWVudCBNYWd1cyBTdHlsZSAyO0NoYXJtZXIgb2YgRmlyZXNuYWtlO1RoZSBDaGFpbmVkIFNjcmliZTtNb2xva2F1IFN0YWxrZXI7UmV2aXZhbCBvZiB0aGUgSWNlIFdpdGNoO0ljZXBsYWluIFJhdmFnZXI7QnJ1bWFsIEJlcnNlcmtlcjtTZWFib3JuZSBSZXByaXNhbDtFeHBvbmVudCBvZiB0aGUgRW5kbGVzcyBTdGFycztXYXJyaW9yIG9mIHRoZSBSZWQgU2FuZCBWIDIuMDtNb25zdHJvdXMgUmVwcmlzYWw7RXhwbG9zaXZlIE1hbmlhYztCbGF6aW5nIENvc21vcztDcm93biBvZiBUaGUgTmlnaHR3b3JsZDtCb2dib3JuZTtUaGUgVGltZWtlZXBlciBTaWx2ZXI7Um9zZSBBbmQgVGhlIEJlYXN0O1RoZSBJcm9uIFBpb25lZXI7VGhlIEdyZXkgR2FsbGFudDtDcnkgb2YgdGhlIEJhdHRsZWhhd2s7UGx1bmRlciBvZiB0aGUgU2F2YWdlIE1vbmdlcjtMb3N0IFNlcmFwaCBTZXQ7TW9sdGVuIERlc3RydWN0b3I7TWVtb3JpZXMgb2YgdGhlIFZvdyBFdGVybmFsO0Rlc29sYXRlIENvbnF1ZXN0O0RlYXRoIEJsb3Nzb20gU2V0O0Nvc21pYyBXYW5kZXJlcjtWYW50YWdlIG9mIHRoZSBCcmVhY2ggV2FyZGVuO05pbWJsZSBFZGdlO0JpbmRpbmdzIG9mIHRoZSBCYXR0bGVyYW5nZXIgQ2hhb3RpYyBTdHlsZTtBcG9zdGxlIG9mIERlY2F5IFYgMi4xO1RoZSBGYWl0aCBvZiBBdmVuZ2VycztDdXJzZSBvZiB0aGUgV2ludGVyIFJvc2U7QmxhY2sgTmloaWxpdHk7IDEyM3x8fA==