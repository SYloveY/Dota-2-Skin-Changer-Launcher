limitHWID:: 1 000||| 111:: 4C4C4544-0059-4A10-8047-B9C04F344632 111||| 222:: $2y$10$MmY1Yjk3ZTI3MDFiY2U1ZewepREePN31hGKNo029a6kugU1ulp1Ca 222||| 123:: Razzils Midas Knuckles Prem;Eternal Radiance Blades Prem;Rampant Outrage Prem;Mask of the Bloodforge;Off-Hand Weapon of the Bloodforge;Weapon of the Bloodforge;Cape of the Bloodforge;Belt of the Bloodforge;Aghanims Basher Prem;Beast of the Crimson Ring Armor;Chaos Arbiter;Nothlic Burden Prem;Whispers of the Damned Head;Whispers of the Damned Wings;Manias Mask Prem;Bracers of the Cavern Luminar;Twin Bull Adornment;Beard of the Truebark Adherent;Nyx Assassins Dagon;Mask of the Confidant;Solar Gyre;Bloodfeather Wings Prem;Bloodfeather Feast;Hunger of the Howling Wilds Off-Hand Weapon;Smoke Bomb of Monstrous Reprisal Prem;Crown of Calaphas Tail;Crown of Calaphas Belt;Claw of the Umizar Crawler;Spikes of the Umizar Crawler;Shell of the Umizar Crawler;Hydrakan Latch;Iron Surge V 2.2;Savage Mettle;The Lightning Orchid V 3.0;Focal Resonance V 3.0;Majesty Of The Colossus - Pebble;Majesty Of The Colossus - Cobble;Majesty Of The Colossus - Monolith;Crimson Cyrridae;Fractal Horns of Inner Abysm UP;Cannon of the Occultists Pursuit;Arabian Riders;Manipulator of Warsituation;Saccharine Saboteur;Cinder Sensei;Swamp Shaman Set;Plunder of the Savage Monger;Bindings of the Battleranger Chaotic Style; 123|||