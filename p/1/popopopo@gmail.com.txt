bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogRDBCMUI5QTAtODlBQS0xMUUzLTlEQ0UtRUY0QUE1QTQxNDAwOzsgMTExfHx8IDIyMjo6ICQyeSQxMCRaVFl6TmpKak16RXdZV0prTXpJM01leXdTU1Bad1poenMzd09tWDZkUFBBWkFPMUx5R2p6QyAyMjJ8fHwgMTIzOjogQmVsbG93cyBvZiBDcmVhdGlvbjtUd2lzdGVkIE1hZWxzdHJvbSB3aXRoIFdvcmxkIENoYXNtIEFydGlmYWN0O0xvcmQgb2YgTHVtaW5hcmllcyBFaWRvbG9ucztBcmVuYSBDaGFtcGlvbiBBcm1vcjtDcmltc29uIFByb2dlbml0b3JzIEJhbmU7UGhhbnRvbSBBZHZlbnQgVVA7RGVzZXJ0IEJ1cm4gU2FkZGxlO0Rlc2VydCBCdXJuIE91dGZpdDtEZXNlcnQgQnVybiBDYXA7RGVzZXJ0IEJ1cm4gTW9ydHkgSW1tb3J0YWw7RGVzZXJ0IEJ1cm4gQ3Jvc3Nib3c7SGlkZGVuIFZlY3RvciAtIEhhdDtIaWRkZW4gVmVjdG9yIC0gQmxhZGU7SGlkZGVuIFZlY3RvciAtIEFybW9yO0hpZGRlbiBWZWN0b3IgLSBCZWx0O0hvb2sgb2YgdGhlIFNvcnJvd2Z1bCBQcmV5O0RlY2xhcmF0aW9uIG9mIHRoZSBEaXZpbmUgTGlnaHQgUmFkaWFudCBUb3dlcnM7RGVjbGFyYXRpb24gb2YgdGhlIERpdmluZSBTaGFkb3cgRGlyZSBUb3dlcnM7UmVwdGlsaWFuIFJlZnVnZSBSYWRpYW50IENyZWVwcztSZXB0aWxpYW4gUmVmdWdlIERpcmUgQ3JlZXBzO0hvb2R3aW5rIEdsZWlwbmlyO0hvb2R3aW5rIERyYWdvbiBDcm9zc2JvdztCcmFjZXJzIG9mIHRoZSBBcmRhbGFuIEludGVyZGljdG9yO0dvbGRlbiBGdWxsLUJvcmUgQm9uYW56YTtIZWxtIG9mIHRoZSBBcmRhbGFuIEludGVyZGljdG9yO1NuaXBlciBJbW1vcnRhbCBXZWFwb24gb2YgdGhlIEFyZGFsYW4gSW50ZXJkaWN0b3I7Q29sYXIgb2YgdGhlIEFyZGFsYW4gSW50ZXJkaWN0b3I7UGhhbnRvbSBBZHZlbnQgQmVsdCBVUDtQaGFudG9tIEFkdmVudCBTaG91bGRlcnMgVVA7UGhhbnRvbSBBZHZlbnQgV2VhcG9uIFVQO1RpZGVodW50ZXIgQmxpbmsgRGFnZ2VyO0hvcnJvciBmcm9tIHRoZSBEZWVwIE9mZi1IYW5kO0hvcnJvciBmcm9tIHRoZSBEZWVwIEFybXM7SG9ycm9yIGZyb20gdGhlIERlZXAgQmVsdDtHb2xkZW4gRmxvb2RtYXNrIGVmZmVjdDtBcXVlbWVyYWxkIEJsYWRlO0JsYWRlIG9mIHRoZSBCaXR0ZXJ3aW5nIExlZ2FjeTtJbW1vcnRhbCBJbnZva2VyIEtpZDtBeGUgZnVsbCBJbW1vcnRhbHMgTWVnYXBhY2s7TW9udW1lbnRzIG9mIHRoZSBOYXR1cmFsIERlbWl1cmdlO0VhcnRoc2hha2VyIE1lZ2FQYWNrIE5ldztXaW5kcmFuZ2VyIEFyY2FuYSBzdHlsZSAxIChCbHVlIEJpcmQpICsgRnVsbCBXUiBpbW1vcnRhbDtQdXBwZXQgUHVkZ2UgUGVyc29uYSAoeWQ5519IGNhbiBhZGQgSG9vaykgVVA7Q29ycmlkYW4gTWFlc3RybyBhbmQgVGhlIExpZ2h0bmluZyBPcmNoaWQgYW5kIEdvbGRlbiBNYW5kYXRlIG9mIHRoZSBTdG9ybWJvcm4gTWVnYVBhY2sgTkVXO05lb24gU3Bpcml0IC0gSmFkZSBTdHlsZSAyO0FBTWVnYVBhY2s7REsgUGVyc29uYSBEYXZpb247IDEyM3x8fA==