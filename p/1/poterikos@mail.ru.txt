limitHWID:: 1 000||| 111:: 83B3C7C0-1DDD-11B2-8000-C7C3B7E73C02 111||| 222:: $2y$10$NjQ3MGFkYmYwYjFhOWY0N.OaR/xLR23FcJKQSGcTeAejil4L1Xf0G 222||| 123:: Warding Guise;Wisp Give Diretide;Bandana of the Bone Ruin Bandits;Bone Ruin Excavator Pack;Armband of the Spelunker;Dosa Tail;Key to the Bone Ruins;Fire of the Exiled Ronin;Auspice of Iczoxtotec;Shield of the Primeval Predator;Talon of the Scarlet Raven - Off-Hand;Tribal Terror Dreadlocks;Talon of the Scarlet Raven;Avon of the Crescent Moon;Colors of the Powderkeg Patrol;Coat of the Powderkeg Patrol;Keg of the Powderkeg Patrol;Amberlight Raiment V 2.0;Ember Crane Set V 2.0;Alluring Mesmer;Eternal Harvest;Redmoon Assassins Secret Set;Blossoming Harmony V 2.0;Peacock Priest;Chess Knight Set;Majesty of the Forbidden Sands V 2.0;Compendium Bloody Ripper;Pudge Psychopath;Desolate Conquest;Black Orc Warboss V 2.0;Spoils from the Shifting Sorcerer V 2.0;Regalia of the Parasols Sting;Kindred of the Umizar Crawler;Radiant Protector Set V2.0;Apostle of Decay V 2.1;Lumberclaw;Royal Winterbloom;Hunter of Kings V 2.0;Warrior of Arena Set;The Wild Tamer;Komeiji Koishi 2 for Bane by Patchouli Knowledge;The Corruption of Nezzureem;Forbidden Knowledge;Golden Nirvana;Featherswing;Shooting Star;Ancestral Luck Set;The Dusk Crawler Set;Resentment of the Banished Princess;Garb of the Cruel Magician Set;Guardian of Metal;The Claddish Renegade;The Fiend Cleaver;Neptune for Mars by Patchouli Knowledge; 123|||