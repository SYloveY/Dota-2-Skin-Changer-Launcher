bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogMTNDNTcwODktQ0FCQS1GQzI0LTY1NUItNzgyNEFGNDA2MDJCIDExMXx8fCAyMjI6OiAkMnkkMTAkWWpFME1HVTVZVGN5TmpJMllXUmtPLmFpcHBDZjl4cnNqakxnUndaU3BLZzZpd2g0dzZ5SUsgMjIyfHx8IDEyMzo6IFNlcnJha3VyYTtTaW5pc3RlciBTaGFkb3cgTGVncztTaWdpbCBNYXNrIG9mIHRoZSBCbGFkZWtlZXBlcjtQZWx0IG9mIE9kb2NvZWxldXM7QnJhY2VycyBvZiB0aGUgVW55aWVsZGluZyBNYXNrO0FybW9yIG9mIHRoZSBGb3Jnb3R0ZW4gUGxhbmU7T2ZmaGFuZCBCYXNoZXIgb2YgTWFnZSBTa3VsbHM7R29sZGVuIEJhc2hlciBvZiBNYWdlIFNrdWxscztTaG91bGRlciBQbGF0ZSBvZiB0aGUgRmVydmVudCBDb25zY3JpcHQ7Q3Jvd24gb2YgTmV6enVyZWVtO0Zyb3plbiBWb2lkIFNob3VsZGVyO01hY2Ugb2YgQWVvbnM7SG9vZCBvZiB0aGUgQ3JlZXBpbmcgU2hhZG93O0dsZWFtaW5nIFNlYWw7U2hhd2wgb2YgdGhlIENyZWVwaW5nIFNoYWRvdztBcm1zIG9mIERlc29sYXRpb247QXJtb3Igb2YgdGhlIERpYWJvbGljYWwgRmllbmQ7SG9ybnMgb2YgdGhlIERpYWJvbGljYWwgRmllbmQ7RGFyayBBcnRpc3RyeSBDYXBlO0hvb2Qgb2YgdGhlIERpdmluZSBTb3Jyb3cgViAzLjE7TWFzayBvZiB0aGUgRGl2aW5lIFNvcnJvdztIZWF2ZW4tUGllcmNpbmcgUGF1bGRyb25zO05vcnRoZXJuIEJsaWdodCBBcm1zO0RhcmsgQXJ0aXN0cnkgQmVsdDtTaG9jayBvZiB0aGUgQW52aWw7U2Vpc21pYyBCZXJzZXJrZXIgSG9ybjtTZWlzbWljIEJlcnNlcmtlciBCcmFjZXJzO0dpcmRsZSBvZiBFcnVwdGluZyBXcmF0aDtDYXAgb2YgRXJ1cHRpbmcgV3JhdGg7R29sZGVuIEh5ZHJha2FuIExhdGNoO1N0YWZmIG9mIEd1bi1ZdTtCbG9vZHN0YWluZWQgQnJpdGNoZXM7SGVhZCBvZiB0aGUgT2RvYmVudXMgT25lO0hlYXZ5IFRlbmRlcml6ZXI7QXJtb3Igb2YgdGhlIEJsYWNrIEJpcmQ7RHJhZ29uY2xhdyBIb29rO1RoZSBMaWdodG5pbmcgT3JjaGlkO0FybW9yIG9mIHRoZSBEZW1vbiBUcmlja3N0ZXI7UmFwaWVyIG9mIHRoZSBCdXJuaW5nIEdvZCBPZmZoYW5kO1BhdWxkcm9ucyBvZiB0aGUgVm9sY2FuaWMgR3VhcmQ7UGhvZW5peCBIZWxtIG9mIFByb3NwZXJpdHk7Q2luZGVyIFNlbnNlaSBCZWx0O0FybWd1YXJkcyBvZiB0aGUgU21vbGRlcmluZyBTYWdlO1Nob3VsZGVyIG9mIEV0ZXJuYWwgUmVpZ247SGVsbSBvZiB0aGUgSGF1bnRlZCBMb3JkO0Nsb2FrIG9mIHRoZSBPbmUgVHJ1ZSBLaW5nO0RyZWFka25pZ2h0IEdhdW50bGV0O0FybW9yIG9mIHRoZSBIYXVudGVkIExvcmQ7UGVkZXN0YWwgQmxhZGVmb3JtIExlZ2FjeTtQZWRlc3RhbCBGZWFzdCBvZiBBYnNjZXNzaW9uIEdyZWVuO1RJLTYgQ29tcGxleGl0eSBHYW1pbmcgVFAgRWZmZWN0O1JhenppbHMgTWlkYXMgS251Y2tsZXMgUHJlbTtFdGVybmFsIFJhZGlhbmNlIEJsYWRlcyBQcmVtO0Zvcm1lZCBBbGxveSBHb2dnbGVzO0FybW9yIG9mIHRoZSBFcXVpbGlicml1bTtHYXJiIG9mIHRoZSBQcm9waGV0IEZvcmV0b2xkO1NwaXJlcyBvZiB0aGUgUHJvcGhldCBGb3JldG9sZDtUYWlsIG9mIHRoZSBFcXVpbGlicml1bTtCbG9vZCBDaGFzZXI7UmFtcGFudCBPdXRyYWdlIFByZW07R3VhcmQgb2YgdGhlIFJlZCBNaXN0O0JlbHQgb2YgdGhlIFdhcmJvc3M7R2FyYiBvZiB0aGUgU2FjY2hhcmluZSBTYWJvdGV1cjtXaW5ncyBvZiB0aGUgU2FjY2hhcmluZSBTYWJvdGV1cjtDb25maWRhbnQgb2YgdGhlIFNhY2NoYXJpbmUgU2Fib3RldXI7R2xvb21ib2I7QnJhY2VycyBvZiB0aGUgQ2F2ZXJuIEx1bWluYXI7VG9vbGJlbHQgb2YgdGhlIEVhcnRod3JpZ2h0O1RvdGVtIG9mIERlZXAgTWFnbWE7U2VlciBvZiBJbmZpbml0eSBTcGFjZSBFaWRvbG9uO1dpc3AgR2l2ZSBEaXJldGlkZTtCb25kcyBvZiBNYWRuZXNzIFNldCBTdHlsZSAyO0FyZW5hIENoYW1waW9uIEFybW9yO0FyZW5hIENoYW1waW9uIEJlbHQ7UGhhbnRvbSBDb25jb3JkO1BhdWxkcm9ucyBvZiBIYXJzaCBTb2pvdXJuO0JlbHQgb2YgdGhlIFJlZCBTYW5kcztBcm1sZXRzIG9mIFRlYXJkcm9wIEljZTtTd2luZSBIZWxtZXQ7U3dpbmUgUG93ZGVyIEJhcnJlbDtTd2luZSBWaXNvcjtNdW5pdGlvbnMgb2YgdGhlIFBvd2RlcmtlZyBQYXRyb2w7VGVtcGVzdCBIZWxtIG9mIHRoZSBUaHVuZGVyZ29kIFByZW07U2hvdWxkZXJzIG9mIHRoZSBJY2V3cmFjayBNYXJhdWRlcjtDb25zcGljdWQ5519cyBDdWxwcml0IE1vaGF3aztBcm1vciBvZiB0aGUgSW1wZXJpb3VzIENvbW1hbmQ7TWFqZXN0eSBPZiBUaGUgQ29sb3NzdXMgLSBQZWJibGU7QmxhY2tzaGllbGQgUHJvdG9kcm9uZSBIZWxtO0JsYWNrc2hpZWxkIFByb3RvZHJvbmUgQXJtb3I7QmxhY2tzaGllbGQgUHJvdG9kcm9uZSBNaXNzaWxlIExhdW5jaGVyO0hvbm9yZWQgU2VydmFudCBvZiB0aGUgRW1waXJlO0JsYXppbmcgQ29zbW9zO0tpbmRyZWQgb2YgdGhlIFVtaXphciBDcmF3bGVyO0NvcnJpZGFuIE1hZXN0cm8gViAyLjA7VGhlIEJhcHRpc20gb2YgTWVsdGluZyBGaXJlO0Zlcm9jaWQ5519cyBIZWFydDtFbmRsZXNzIE5pZ2h0O0hhcnZlc3RzIEhvdW5kO1dhcnJpb3Igb2YgQXJlbmEgU2V0O0NoYW9zIENob3NlbiBWIDMuMDtSb3NlIEFuZCBUaGUgQmVhc3Q7Tm9tYWQgb2YgdGhlIEJ1cm5pbmcgRGVjcmVlO1JveWFsIFdpbnRlcmJsb29tO09wdXMgb2YgdGhlIFZpemllciBFeGlsZSBWIDIuMTtCbGF6aW5nIE9ibGl2aW9uIFYgMy4wO1RoZSBKYWRlIEdlbmVyYWw7V2FyZGVuIG9mIHRoZSBXeXJtZm9yZ2UgU2hhcmQ7TWVjaGFsb2RvbiBJbnRlcmRpY3RvcjtXaXRjaCBIdW50ZXIgVGVtcGxhcjtEYXJrIEZvcmVzdCBQdW5pc2hlcjtDb252YWxlc2NpbmcgRW1wcmVzcztTdGVsbGFyIEphZGU7U2hvcmVsaW5lIFNhcHBlcjtUYWxlcyBvZiB0aGUgV2luZHdhcmQgUm9ndWU7QXJtcyBvZiBSaXNpbmcgRnVyeTtGbG93ZXJpbmcgU2hhZGUgViAyLjA7QmluZGluZ3Mgb2YgdGhlIEJhdHRsZXJhbmdlcjtXaW5ncyBvZiBDb2xvcmZ1bCBJY2VjcnlzdGFscztUaGUgRHVzayBDcmF3bGVyIFNldDtMdXJrYWJsbzsgMTIzfHx8