limitHWID:: 1 000||| 111:: 032E02B4-0499-05F7-8D06-900700080009 111||| 222:: $2y$10$OWM4YzM1MjgyZmQwMjIxM.cpCZ8BI60R1ysr8Bjs6W0AnVzx3OKqW 222||| 123:: Controlled Burn;Golden Rectifier;Iron Surge;Savage Mettle;Mantle of Ultorian Charger;Arms of Desolation;Shadow Fiend Arcana Demon Eater;Grand Abscession Hook Bundle;Dendi Doll;Insatiable Bonesaw Prem;Dapper Disguise Hat;Grand Abscession;Armor of Sacred Light;Fetters of Omniscience;Crown of Sacred Light;Crimson Progenitors Bane;Bracers of Ornate Cruelty;Belt of Ornate Cruelty;Horn of the Spiral Bore;Mulctant Pall of the Crimson Witness;Hell-Spar Anathema Obsidian Blight;Twisted Maelstrom with World Chasm Artifact;Geodesic Eidolon;Judgement of the Fallen;Bracers of the Cavern Luminar;Beast of the Crimson Ring Armor;Blastforge Exhaler of the Crimson Witness;Piston Impaler;Fists of Axe Unleashed;Golden Crucible of Rile;Shock of the Anvil Prem;Eyes of Ardenok;Planetfall;Beast of the Crimson Ring Weapon;Beast of the Crimson Ring Bracers;Mantle of the Cinder Baron Style 2;Belt of Axe Unleashed;Brackish Stalker Belt;Cavernite Radiant Creeps;Enigmatic Emblem of the Diretide - Green;Dragon Towers by Jet Shark V 2.0;Watcher Below;Terrain - Spring;Pyrion Flax Announcer;Kunkka and Tidehunter Mega-Kills;Molten Destructor;Tidehunter MegaPack;Spirit Breaker MegaPack;Queen of Pain Arcana MegaPack;Omniknight MegaPack;Arena Champion Set;Kunkka Immortals MegaPack;Cinder Sensei;AAMegaPack; 123|||