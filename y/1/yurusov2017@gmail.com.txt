limitHWID:: 1 000||| 111:: 0C80E8CE-BE2F-C0B7-E402-40B076A37DAC 111||| 222:: 4b61233a962afb203637ca65d1f576a0be2971fba1d98034a9efd107dc53c432af2e3725100c7a5867d7ce37e132898064d8fb03d1eb28cffe9c042d1e86b54f 222||| 123:: Terrain - Winter;Wyvern Hatchling;Aegis and Roshan St. Valentine Day;Question mark Deny;SF RU Arcane voice;Brood Hunter HUD;Rampant Outrage Prem;Axe of Phractos Prem;Full-Bore Bonanza;Tempest Helm of the Thundergod Prem;Medium Bad To The Bone;Arms of Desolation;Complete Helm of the Dark Moon Stalker;Reptilian Refuge Dire Creeps;Reptilian Refuge Radiant Creeps;River Vial Green;Weather Ash;Staff of Gun-Yu;Complete Garb of the Corridan Maestro;Complete Rose of the Corridan Maestro;Majesty Of The Colossus - Pebble;Cap of the Smoldering Sage;Blackshield Protodrone Missile Launcher;Blackshield Protodrone Armor;Blackshield Protodrone Helm;Blackshield Protodrone Stinger;Trials of the Blackguard Magus No effects;Grim Destiny;Bindings of the Battleranger;Corridan Maestro V 2.0;Blessing of the Crested Dawn V 2.1;Surgical Precision;Wandering Harlequins Regalia;Ancient Cultist V 2.1;March of the Powderkeg Patrol;Black Orc Warboss V 2.0;Shooting Star;Hunter of the Crystal Drift;Bearer of the Arkturan Talon;Cunning Corsair;Eternal Harvest;Dapper Disguise;Masks of Mischief;Fungal Lord Set;Visions of the Forsaken Flame;Ancient Magus Style 1; 123|||