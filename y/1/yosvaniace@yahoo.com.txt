bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogIDExMXx8fCAyMjI6OiAkMnkkMTAkTXpWbU5UWmlOMlExWlRFNVltUTJZT0g0SmhUUFRFdUpoa1FFRXhrUnRNTy5kL2haWFlkVWkgMjIyfHx8IDEyMzo6IERhcmsgQXJ0aXN0cnkgVGhyb3diYWNrO1RlbXBlc3QgUmV2ZWxhdGlvbjtTdWJtZXJnZWQgSGF6YXJkIFByb3BlbGxlcjtSb2xsZXJtYXdzdGVyO1N1Ym1lcmdlZCBIYXphcmQgTGF1bmNoZXI7U3VibWVyZ2VkIEhhemFyZCBIdWxsO0FyY2FuaWMgUmVzb25hbmNlIEJlYW07SGVsbSBvZiB0aGUgRGFyayBNb29uIFN0YWxrZXI7TWQ5519bnQgb2YgdGhlIFdpbmdlZCBTZW50aW5lbDtNb29uZmFsbCBQcmVtO0dvbGRlbiBUd2lsaWdodCBTY2hpc207QW50aG96b2FuIEFzc2F1bHQgLSBUaW55O0Zyb3N0bW9vdCBGcm9zdGl2dXMgVHJlZTtBcm1zIG9mIHRoZSBMdWNlbnQgQ2Fub3B5O0hhdWwgb2YgdGhlIEx1Y2VudCBDYW5vcHk7TGFzaCBvZiB0aGUgTGl6YXJkIEtpbjtXYXJkIG9mIHRoZSBMdWNlbnQgQ2Fub3B5O0NoYXJtIG9mIHRoZSBMdWNlbnQgQ2Fub3B5O0NyaW1zb24gQ2Vuc2VyIG9mIEdsaXNzIFVQO0NyaW1zb24gSGVhcnRzIG9mIE1pc3J1bGU7VGhlIFN1bmJyZWV6ZSBCaXJ0aHJpZ2h0O0hlbGwtU3BhciBBbmF0aGVtYTtNYW50bGUgb2YgdGhlIEluZmVybmFsIFJhbWJsZXI7SG9ybnMgb2YgdGhlIEJldHJheWVyO011bGN0YW50IFBhbGwgb2YgdGhlIENyaW1zb24gV2l0bmVzcztGaW4gS2luZ3MgQ2hhcm0gb2YgRW1pbmVudCBSZXZpdmFsIEV4Y2VwdGlvbmFsO0FyY2FuYSBDcnlzdGFsIE1haWRlbiBGcm9zdCBBdmFsYW5jaGU7Qm9ua2VycyBvZiBBd2FsZWI7QXByb24gb2YgdGhlIE91dGxhbmRpc2ggR291cm1ldDtNYXNxdWUgb2YgQXdhbGViO0Zvb3RmYWxscyBvZiB0aGUgU3BvcmVmYXRoZXJzIC0gU2hvdWxkZXI7Rm9vdGZhbGxzIG9mIHRoZSBTcG9yZWZhdGhlcnMgLSBEZWF0aCBXYXJkO0F3YWxlYnMgVHJ1bmRsZXdlZWQ7SWNlcGxhaW4gUmF2YWdlciBIb3JuO0JyYWNlciBvZiBDb250ZXN0ZWQgRmF0ZTtCZWx0IG9mIENvbnRlc3RlZCBGYXRlO0dvbGRlbiBJbmZlcm5hbCBDaGllZnRhaW47SGFybmVzcyBvZiBDb250ZXN0ZWQgRmF0ZTtUYWlsIG9mIHRoZSBQcm92ZW47QXhlIG9mIHRoZSBQcm92ZW47QmVhc3Qgb2YgdGhlIENyaW1zb24gUmluZyBCcmFjZXJzO0JlYXN0IG9mIHRoZSBDcmltc29uIFJpbmcgV2VhcG9uO0hlbG0gb2YgdGhlIFNpZWdlIEVuZ2luZTtBcm1vciBvZiB0aGUgU2llZ2UgRW5naW5lO0h1bGwgb2YgdGhlIFNpZWdlIEVuZ2luZTtHb2xkZW4gUmVjdGlmaWVyO0ZpbnMgb2YgdGhlIE1vbHRlbiBEZXN0cnVjdG9yO0NvbnRyb2xsZWQgQnVybjtKYWdnZWQgSG9ub3IgQnJhY2VyO0phZ2dlZCBIb25vciBCYW5uZXI7SnVnZ2VybmF1dCBBcmNhbmEgQmxhZGVmb3JtIExlZ2FjeTtKYWdnZWQgSG9ub3IgTGVncztKYWdnZWQgSG9ub3IgQmxhZGU7U2VycGVudGluZSBHdWFyZCBXYXJkO0NvZGljaWwgb2YgdGhlIFZlaWxlZCBPbmVzO0dvdGhpYyBXaGlzcGVyIEJlbHQ7QXJtb3Igb2YgdGhlIEZlYXJmdWwgQXJpYSBQcmVtO01hbmlmb2xkIFBhcmFkb3ggUEEgQXJjYW5hIFN0eWxlIDM7VGVycmFpbiAtIE92ZXJncm93biBFbXBpcmU7Uml2ZXIgVmlhbCBFbGVjdHJpZmllbGQ7V2VhdGhlciBSYWluO1Jvc2hhbiBmcm9tIERpYWJsbztCcmFjZXIgb2YgU2hhZG93cGFzcztTaGFkb3cgaW4gdGhlIERlZXAgQmFjaztTaGFkb3cgaW4gdGhlIERlZXAgSGVsbTtTaGFkb3cgaW4gdGhlIERlZXAgQXJtb3I7VGhlIEdvbGRlbiBCYXJiIG9mIFNrYWRpIFByZW07RGlyZSBOZW1lc3RpY2UgQ3JlZXBzO1JhZGlhbnQgTmVtZXN0aWNlIENyZWVwcztEZWNsYXJhdGlvbiBvZiB0aGUgRGl2aW5lIExpZ2h0IFJhZGlhbnQgVG93ZXJzO0RlY2xhcmF0aW9uIG9mIHRoZSBEaXZpbmUgU2hhZG93IERpcmUgVG93ZXJzO0NoaWNrZW4gSHV0IFdhcmQ7QWdoYW5pbXMgSW50ZXJkaW1lbnNpb25hbCBCYWJ5IFJvc2hhbjtHb2xkZW4gQWVnaXM7QWdoYW5pbSBEdW5nZW9uIFNjZXB0ZXIgRWZmZWN0O0xpZ2h0bmluZyBCbGluayBWIDIuMDtUSS05IEJvdHRsZSBFZmZlY3Q7Q29sb3JTdGF0cztBdWRpbyBDb3VudGRvd25zIFNwZWxscztHcmVlbiBEYWdvbjtTb3VsIERlbnk7VEktOSBFdWwgU2NlcHRlciBFZmZlY3Q7VEktOCBGb3VudGFpbiBSZWdlbiBsdmwgMyBFZmZlY3Q7SGV4IFlha3lvaztXaW5kcmFuZ2VyIEFyY2FuYSBzdHlsZSAyIChPcmFuZ2UgQmlyZCkgYW5kIEZ1bGwgV1IgaW1tb3J0YWw7QXJjIFdhcmRlbiBNZWdhUGFjaztTa3l3cmF0aCBNYWdlIE1lZ2FQYWNrIFRoYW5hdG9zO1JpZ2h0ZWQ5519cyBUaHVuZGVyYm9sdCBhbmQgQXJjYW5hIE1lZ2FQYWNrO0xpZmVzdGVhbGVyIE1lZ2FQYWNrO1NpbGVuY2VyIE1lZ2FQYWNrO0JsYWNrIFNhaWxzIENvbm5vbmVlcjtBcmN0aWMgU2hvY2sgVEEgViAzLjA7RGVhdGggTmVjcm9saWdodCBQcmVtaXVtIFN0eWxlIDE7TWVkdXNhIE1lZ2FQYWNrIE5FVztWaXBlciBNZWdhUGFjaztQdWduYSBJbW1vcnRhbHMgTWVnYVBhY2s7QXJjYW5hIE1lZ2FQYWNrIFNoYWRvdyBGaWVuZDtEZWZlbmRlciBvZiB0aGUgQnJ1bWFsIENyZXN0O0FsbHVyZSBvZiBNaXJhY2xlIEZydWl0O1NsYXJkYXIgTWVnYVBhY2sgc2V0O0F4ZSBmdWxsIEltbW9ydGFscyBNZWdhcGFjayBhbHQ7TGVnaW9uIENvbW1hbmRlciBNb2RNYWtlciBNZWdhUGFjaztESyBQZXJzb25hIERhdmlvbjtCcmlzdGxlYmFjayBNZWdhUGFjaztQdWRnZSBUSTEwIENvbGxlY3RvcnMgQ2FjaGUgTWVnYVBhY2s7QXV0aG9yaXR5IG9mIHRoZSBJbXBlcmlzaGFibGUgR3JhbmQgSGllcm9waGFudDtXcmFpdGggS2luZyBBcmNhbmEgTWVnYVBhY2s7QW50aU1hZ2UgUkVEIE1lZ2FQYWNrO1Vyc2EgSW1tb3J0YWxzIE1lZ2FQYWNrO0dlbGlkIFRvdWNoIFZhbGVlcmEgZm9yIFJpa2k7IDEyM3x8fA==