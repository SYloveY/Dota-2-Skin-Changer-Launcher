bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogIDExMXx8fCAyMjI6OiAkMnkkMTAkTXpWbU5UWmlOMlExWlRFNVltUTJZT0g0SmhUUFRFdUpoa1FFRXhrUnRNTy5kL2haWFlkVWkgMjIyfHx8IDEyMzo6IERhcmsgQXJ0aXN0cnkgVGhyb3diYWNrO1RlbXBlc3QgUmV2ZWxhdGlvbjtTdWJtZXJnZWQgSGF6YXJkIFByb3BlbGxlcjtSb2xsZXJtYXdzdGVyO1N1Ym1lcmdlZCBIYXphcmQgTGF1bmNoZXI7U3VibWVyZ2VkIEhhemFyZCBIdWxsO0FyY2FuaWMgUmVzb25hbmNlIEJlYW07SGVsbSBvZiB0aGUgRGFyayBNb29uIFN0YWxrZXI7TWQ5519bnQgb2YgdGhlIFdpbmdlZCBTZW50aW5lbDtNb29uZmFsbCBQcmVtO0dvbGRlbiBUd2lsaWdodCBTY2hpc207QW50aG96b2FuIEFzc2F1bHQgLSBUaW55O0Zyb3N0bW9vdCBGcm9zdGl2dXMgVHJlZTtBcm1zIG9mIHRoZSBMdWNlbnQgQ2Fub3B5O0hhdWwgb2YgdGhlIEx1Y2VudCBDYW5vcHk7TGFzaCBvZiB0aGUgTGl6YXJkIEtpbjtXYXJkIG9mIHRoZSBMdWNlbnQgQ2Fub3B5O0NoYXJtIG9mIHRoZSBMdWNlbnQgQ2Fub3B5O0NyaW1zb24gQ2Vuc2VyIG9mIEdsaXNzIFVQO0NyaW1zb24gSGVhcnRzIG9mIE1pc3J1bGU7VGhlIFN1bmJyZWV6ZSBCaXJ0aHJpZ2h0O0hlbGwtU3BhciBBbmF0aGVtYTtNYW50bGUgb2YgdGhlIEluZmVybmFsIFJhbWJsZXI7SG9ybnMgb2YgdGhlIEJldHJheWVyO011bGN0YW50IFBhbGwgb2YgdGhlIENyaW1zb24gV2l0bmVzcztGaW4gS2luZ3MgQ2hhcm0gb2YgRW1pbmVudCBSZXZpdmFsIEV4Y2VwdGlvbmFsO0FyY2FuYSBDcnlzdGFsIE1haWRlbiBGcm9zdCBBdmFsYW5jaGU7Qm9ua2VycyBvZiBBd2FsZWI7QXByb24gb2YgdGhlIE91dGxhbmRpc2ggR291cm1ldDtNYXNxdWUgb2YgQXdhbGViO0Zvb3RmYWxscyBvZiB0aGUgU3BvcmVmYXRoZXJzIC0gU2hvdWxkZXI7Rm9vdGZhbGxzIG9mIHRoZSBTcG9yZWZhdGhlcnMgLSBEZWF0aCBXYXJkO0F3YWxlYnMgVHJ1bmRsZXdlZWQ7SWNlcGxhaW4gUmF2YWdlciBIb3JuO0JyYWNlciBvZiBDb250ZXN0ZWQgRmF0ZTtCZWx0IG9mIENvbnRlc3RlZCBGYXRlO0dvbGRlbiBJbmZlcm5hbCBDaGllZnRhaW47SGFybmVzcyBvZiBDb250ZXN0ZWQgRmF0ZTtUYWlsIG9mIHRoZSBQcm92ZW47QXhlIG9mIHRoZSBQcm92ZW47QmVhc3Qgb2YgdGhlIENyaW1zb24gUmluZyBCcmFjZXJzO0JlYXN0IG9mIHRoZSBDcmltc29uIFJpbmcgV2VhcG9uO0hlbG0gb2YgdGhlIFNpZWdlIEVuZ2luZTtBcm1vciBvZiB0aGUgU2llZ2UgRW5naW5lO0h1bGwgb2YgdGhlIFNpZWdlIEVuZ2luZTtHb2xkZW4gUmVjdGlmaWVyO0ZpbnMgb2YgdGhlIE1vbHRlbiBEZXN0cnVjdG9yO0NvbnRyb2xsZWQgQnVybjtKYWdnZWQgSG9ub3IgQnJhY2VyO0phZ2dlZCBIb25vciBCYW5uZXI7SnVnZ2VybmF1dCBBcmNhbmEgQmxhZGVmb3JtIExlZ2FjeTtKYWdnZWQgSG9ub3IgTGVncztKYWdnZWQgSG9ub3IgQmxhZGU7U2VycGVudGluZSBHdWFyZCBXYXJkO0NvZGljaWwgb2YgdGhlIFZlaWxlZCBPbmVzO0dvdGhpYyBXaGlzcGVyIEJlbHQ7QXJtb3Igb2YgdGhlIEZlYXJmdWwgQXJpYSBQcmVtO01hbmlmb2xkIFBhcmFkb3ggUEEgQXJjYW5hIFN0eWxlIDM7V2luZHJhbmdlciBBcmNhbmEgc3R5bGUgMiAoT3JhbmdlIEJpcmQpIGFuZCBGdWxsIFdSIGltbW9ydGFsO0FyYyBXYXJkZW4gTWVnYVBhY2s7U2t5d3JhdGggTWFnZSBNZWdhUGFjayBUaGFuYXRvcztSaWdodGVvdXMgVGh1bmRlcmJvbHQgYW5kIEFyY2FuYSBNZWdhUGFjaztMaWZlc3RlYWxlciBNZWdhUGFjaztTaWxlbmNlciBNZWdhUGFjaztCbGFjayBTYWlscyBDb25ub25lZXI7QXJjdGljIFNob2NrIFRBIFYgMy4wO0RlYXRoIE5lY3JvbGlnaHQgUHJlbWl1bSBTdHlsZSAxO01lZHVzYSBNZWdhUGFjayBORVc7VmlwZXIgTWVnYVBhY2s7UHVnbmEgSW1tb3J0YWxzIE1lZ2FQYWNrO0FyY2FuYSBNZWdhUGFjayBTaGFkb3cgRmllbmQ7RGVmZW5kZXIgb2YgdGhlIEJydW1hbCBDcmVzdDtBbGx1cmUgb2YgTWlyYWNsZSBGcnVpdDtTbGFyZGFyIE1lZ2FQYWNrIHNldDtBeGUgZnVsbCBJbW1vcnRhbHMgTWVnYXBhY2sgYWx0O0xlZ2lvbiBDb21tYW5kZXIgTW9kTWFrZXIgTWVnYVBhY2s7REsgUGVyc29uYSBEYXZpb247QnJpc3RsZWJhY2sgTWVnYVBhY2s7UHVkZ2UgVEkxMCBDb2xsZWN0b3JzIENhY2hlIE1lZ2FQYWNrO0F1dGhvcml0eSBvZiB0aGUgSW1wZXJpc2hhYmxlIEdyYW5kIEhpZXJvcGhhbnQ7V3JhaXRoIEtpbmcgQXJjYW5hIE1lZ2FQYWNrO0FudGlNYWdlIFJFRCBNZWdhUGFjaztTbGFyayBNZWdhUGFjayBOZXc7VXJzYSBJbW1vcnRhbHMgTWVnYVBhY2s7VGFobGluIE9jY3VsdCBWYWxlZXJhIGZvciBSaWtpOyAxMjN8fHw=