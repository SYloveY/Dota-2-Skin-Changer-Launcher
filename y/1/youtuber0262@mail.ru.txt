bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogIDExMXx8fCAyMjI6OiAkMnkkMTAkWVdSaU9EUTFaR0poTUdNMU5HVmxPLkdtcTdrNjBxT0JIY1pBU0tnWjJ6d0ZicFZJZFd5R2kgMjIyfHx8IDEyMzo6IExhc3RoaXQgR29sZCAtIE5ldyBCbG9vbSAyMDE5O0FlZ2lzIGFuZCBSb3NoYW4gU3QuIFZhbGVudGluZSBEYXk7VEktMTAgQWdoYW5pbSBFZmZlY3Q7VEktMTAgQm90dGxlIEVmZmVjdDtCbGluayBEYWdnZXIgbHZsIDEgVEktNiBFZmZlY3Q7UmVwdGlsaWFuIFJlZnVnZSBSYWRpYW50IENyZWVwcztRdWVzdGlvbiBtYXJrIERlbnk7VEktOCBGb3VudGFpbiBsdmwgMSBFZmZlY3Q7SXJvbiBCcmFuY2ggR0c7UGVkZXN0YWwgQmxhZGVmb3JtIExlZ2FjeTtNTEcgVGV0aGVyZWQgU2VudGluZWw7UmVwdGlsaWFuIFJlZnVnZSBEaXJlIENyZWVwcztSb3NoYW4gSGFsbG93ZWVuIFNraW47UHVtcGtpbiBUcmVlcyBVUDtUZXJyYWluIC0gV2ludGVyO1JpdmVyIFZpYWwgU1RBTkRBUlQ7REFDIDIwMTUgQ2hhb3MgS25pZ2h0IEN1cnNvciBQYWNrO0hFWSBURUlUT0tVIEFubm9uY2VyIE1lZ2EtS2lsbDtHdWFyZGlhbnMgb2YgdGhlIExvc3QgUGF0aCBSYWRpYW50IFRvd2VycztHdWFyZGlhbnMgb2YgdGhlIExvc3QgUGF0aCBEaXJlIFRvd2VycztXZWF0aGVyIFNub3c7QXp1cmUgQ29uc3RlbGxhdGlvbiBIVUQ7Q29sb3JTdGF0czsyNSBsdmwgcGluZztUaGUgSW50ZXJuYXRpb25hbCAyMDE5IE11c2ljIFBhY2s7QnJvb2Rtb3RoZXIgQW5pbWUgVm9pY2U7Q3J5c3RhbCBNYWlkZW4gQW5pbWUgVm9pY2U7RGVhdGggUHJvcGhldCBBbmltZSBWb2ljZTtFbmNoYW50cmVzcyBBbmltZSBWb2ljZTtMaW5hIEFuaW1lIFZvaWNlO0Ryb3cgUmFuZ2VyIEFuaW1lIFZvaWNlO0x1bmEgQW5pbWUgVm9pY2U7TWVkdXNhIEFuaW1lIFZvaWNlO05hZ2EgU2lyZW4gQW5pbWUgVm9pY2U7UXVlZW4gb2YgUGFpbiBBbmltZSBWb2ljZTtXaW50ZXIgV3l2ZXJuIEFuaW1lIFZvaWNlO1dpbmRydW5uZXIgQW5pbWUgVm9pY2U7U3BlY3RyZSBBbmltZSBWb2ljZTtUZW1wbGFyIEFzc2Fzc2luIEFuaW1lIFZvaWNlO1ZlbmdlZnVsIFNwaXJpdCBBbmltZSBWb2ljZTtFbWluZW5jZSBvZiBSaXN0dWwgS25pZmUgQXR0YWNrO0Jsb29kZmVhdGhlciBXaW5ncyBQcmVtO0NvbG9zc2FsIENyeXN0YWwgQ2hvcnVzIGVmZmVjdDtEcmVhZCBvZiB0aGUgR2xlYW1pbmcgU2VhbCBTZXQ7VGhlIExpZ2h0bmluZyBPcmNoaWQgViAzLjA7VHdpbGlnaHQgU2NoaXNtO0lyb24gU3VyZ2UgViAyLjI7U2F2YWdlIE1ldHRsZTtEcm9kbyB0aGUgRHJ1ZmZpbiBhbmQgQmx1ZSBFZmZlY3Q7Rmxhc2hwb2ludCBQcm9zZWx5dGUgLSBIZWFkO0Nhbm5vbiBvZiB0aGUgT2NjdWx0aXN0cyBQdXJzdWl0O0dvbGRlbiBGdWxsLUJvcmUgQm9uYW56YTtHcmVhdCBTYWdlKnMgUmVja29uaW5nO01hbnRsZSBvZiB0aGUgQ2luZGVyIEJhcm9uIFN0eWxlIDE7Q3J1Y2libGUgb2YgUmlsZTtNb2x0ZW4gQ2xhdyBQcmVtO05vdGhsaWMgQnVyZGVuO0VkZ2Ugb2YgdGhlIExvc3QgT3JkZXI7VGhlIFdhcmQgb2YgT2RvY29lbGV1cztDYW5keSBDYXQgSGVhZDtDYW5keSBDYXQgQmFjaztHb2xkZW4gU2NhdmVuZ2luZyBHdXR0bGVzbHVnO1Bpc2NlYW4gUHVsdmVyaXplcjtGcm96ZW4gU2lnaWwgb2YgdGhlIEdsYWNpZXIgU2VhO1Jpc2UgS3VqaWthd2EgQW5ub3VuY2VyIChKYXApO0dsb3diYXQ7TWQ5519bnQgb2YgdGhlIEV2ZXJibGFjaztEYXVnaHRlcnMgb2YgSHlkcm9waGlpbmFlO0NyaW1zb24gQ3lycmlkYWU7RmFjZSBvZiBJbmVycmFudCBFbWluZW5jZTtBbnRlbm5hZSBvZiB0aGUgTG9vbWtlZXBlcjtNYWxlZmljIERyYWtlcyBTdHJpa2Ugb25seSBFZmZlY3Q7TWFsZWZpYyBEcmFrZXMgSG9vZCBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzO1N1bmtlbiBTbmFwcGVyIFdpbmdzO0F1cm9yYSpzIFB5cmUgSGVhZDtXaW5ncyBvZiB0aGUgQXJjdGljIFJlY2x1c2U7UmVnYWxpYSBvZiB0aGUgV3JhaXRoIExvcmQgU2V0O01lbW9yaWVzIG9mIHRoZSBWb3cgRXRlcm5hbDtCZXdpdGNoaW5nIEZsYXJlIFYgMi4wO0xpZ2h0YnJpbmdlciBTRjtBbnRpLU1hZ2UgVWx0aW1hdGUgUmVkIERyYWdvbjtNaXNnaXZpbmdzIG9mIHRoZSBFbWVyYWxkIEFnZTtCaXR0ZXJ3aW5nIExlZ2FjeTtDb3JyaWRhbiBNYWVzdHJvIFYgMi4wO0JsZXNzaW5nIG9mIHRoZSBDcmVzdGVkIFVtYnJhO0NvbmNlYWxlZCBSYXZlbjtHb2xkIFNreW1hZ2U7QmFyZGluZyBvZiB0aGUgTWFzdGVycyBQZXQ7QXJtYXR1cmUgb2YgdGhlIEJlbGxpZ2VyZW50IFJhbSBSZWQ7TG9zdCBSYW5nZXI7U2hlcm1hbiBNYWlkZW4gViA0LjE7RGVhdGggQmxvc3NvbSBTZXQ7QWxsdXJlIG9mIHRoZSBEZWVwO0V4cGxvc2l2ZSBNYW5pYWM7QmluZGluZ3Mgb2YgdGhlIEJhdHRsZXJhbmdlciBMaWdodCBTdHlsZTtTZWFzb25lZCBFeHBlZGl0aW9uYXJ5O1JlbWluaXNjZW5jZSBvZiBEcmVhbXM7TWFza3Mgb2YgTWlzY2hpZWY7RW1wZXJvciBPZiBUaGUgQ2xlcmd5O1dyYXRoZnVsIEFubmloaWxhdG9yO1NhY2NoYXJpbmUgU2Fib3RldXI7RGVsaWdodHMgb2YgUGV0YWx1bmEgUGF0aGZpbmRlcjtTdXNhbm8gT3MgRGVzY2VuZGFudDtUaGUgR2hhc3RseSBHb3VybWFuZDtCcmF3bGVyIG9mIHRoZSBHbGFjaWVyIFNlYSBWIDMuMDtTZXJtb24gb2YgdGhlIEZyb3plbiBBcG9zdGxlIFNldCBWIDIuMTtFbmRsZXNzIE5pZ2h0O0Nvc21pYyBXYW5kZXJlcjtOeWFydWtvIGZvciBMaW9uIGJ5IFBhdGNob3VsaSBLbm93bGVkZ2U7VGhlIER1c2sgQ3Jhd2xlciBTZXQ7IDEyM3x8fA==