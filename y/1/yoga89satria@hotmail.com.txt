bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogMUM5NzcyNUUtOUY1OS1CMDQ2LUEwQUMtM0VERTA2OUZFRUQ2IDExMXx8fCAyMjI6OiAkMnkkMTAkWVdFell6aGpOVGN5TmpVd09HSTRZT1JsWkFOZDRLdGRYaXFnUENlMmpvcUI4YXI4Nm9XUHEgMjIyfHx8IDEyMzo6IEJsYWRlIG9mIHRoZSBEZW1vbmljIFZlc3NlbCBQcmVtO0hvb2Qgb2YgdGhlIERlbW9uaWMgVmVzc2VsO0Nsb2FrIG9mIHRoZSBEZW1vbmljIFZlc3NlbDtQcmV5IG9mIHRoZSBEZW1vbmljIFZlc3NlbDtXYXJob3JzZSBvZiB0aGUgRGVtb25pYyBWZXNzZWw7QXhlIEp1bmdsZTtTbHVtYmVyaW5nIFRlcnJvcjtQcmltYWwgUGVhY2VtYWtlcjtQcmltYWwgUGFlYW47V2VhcG9uIG9mIHRoZSBCbG9vZGZvcmdlO01hc2sgb2YgdGhlIEJsb29kZm9yZ2U7T2ZmLUhhbmQgV2VhcG9uIG9mIHRoZSBCbG9vZGZvcmdlO0NhcGUgb2YgdGhlIEJsb29kZm9yZ2U7U2hvdWxkZXIgb2YgdGhlIEJsb29kZm9yZ2U7QnJhY2VyIG9mIHRoZSBCbG9vZGZvcmdlO0JlbHQgb2YgdGhlIEJsb29kZm9yZ2U7SGVhcnRsZXNzIEh1bnQgLSBIZWFkO0hlYXJ0bGVzcyBIdW50IC0gRm93bDtIZWFydGxlc3MgSHVudCAtIE9mZi1IYW5kO0h1bnRlcnMgSG9hcmQgb2YgdGhlIENyaW1zb24gV2l0bmVzcztIZWFydGxlc3MgSHVudCAtIEFybW9yO01hY2Ugb2YgdGhlIFdyYXRocnVubmVyO0JsYXN0Zm9yZ2UgRXhoYWxlciBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzO1Bpc3RvbiBJbXBhbGVyO1NoaWVsZCBvZiB0aGUgV3JhdGhydW5uZXI7QXJtbGV0IG9mIHRoZSBXcmF0aHJ1bm5lcjtJbmZlcm5hbCBDaGllZnRhaW47SGVsbSBvZiB0aGUgQnVybmluZyBOaWdodG1hcmU7UGF1bGRyb25zIG9mIHRoZSBCdXJuaW5nIE5pZ2h0bWFyZTtNb3VudCBvZiB0aGUgQnVybmluZyBOaWdodG1hcmU7SWNlIEJsb3Nzb207VGhlIFN1bmJyZWV6ZSBCaXJ0aHJpZ2h0O1N0YWZmIG9mIEZvcmJpZGRlbiBNZWRpY2luZTtCcmFjZXIgb2YgRm9yYmlkZGVuIE1lZGljaW5lO0RyZXNzIG9mIEZvcmJpZGRlbiBNZWRpY2luZTtOb3RobGljIEJ1cmRlbiBQcmVtO0Z1cnkgb2YgdGhlIFJpZ2h0ZWQ5519cyBTdG9ybSAtIEhlYWQ7RnVyeSBvZiB0aGUgUmlnaHRlb3VzIFN0b3JtIC0gU2hvdWxkZXI7RnVyeSBvZiB0aGUgUmlnaHRlb3VzIFN0b3JtIC0gQmFjaztGdXJ5IG9mIHRoZSBSaWdodGVvdXMgU3Rvcm0gLSBBcm1zO0Z1cnkgb2YgdGhlIFJpZ2h0ZWQ5519cyBTdG9ybSAtIEtpcmluO1doaXNwZXJzIG9mIHRoZSBEYW1uZWQgSGVhZDtXaGlzcGVycyBvZiB0aGUgRGFtbmVkIFBhdWxkcm9ucztXaGlzcGVycyBvZiB0aGUgRGFtbmVkIFdpbmdzO1doaXNwZXJzIG9mIHRoZSBEYW1uZWQgQmVsdDtXaGlzcGVycyBvZiB0aGUgRGFtbmVkIFRhaWw7RnJvc3QgQXZhbGFuY2hlIFByZW07QUFNZWdhUGFjaztBbnRpTWFnZSBGZW1hbGU7IDEyM3x8fA==