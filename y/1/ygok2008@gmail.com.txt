bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogMUUwMDVFNjAtMDA4Qy1CMzAwLUI2MTEtOTBFNkJBNjAyQUZEIDExMXx8fCAyMjI6OiAkMnkkMTAkWWpVeE5EZGpNRFU1WVdNeVl6SmpaT2Q2SUtKU3RYVTdpMmZLb3FaY0xpbUxTeUxuLlhobkMgMjIyfHx8IDEyMzo6IFNoYXR0ZXJibGFzdCBDcm93bjtIYXJ2ZXN0ZWQgU2hvdWxkZXJzO0JlYXN0IG9mIFZlcm1pbGlvbiBXaWxkcztEYXRhc3RhciBQcm9nZW5pdG9yIChBbHRlciBBcmNhbmEpO1B5cmV4YWVjIEZsb2U7S290bCBJbGx1bWluYXRlIERlZXI7Q3Vyc2Ugb2YgdGhlIE5ldyBTZWFzb24gViAyLjE7QmxhZGUgb2YgVGVhcnMgYW5kIENyb3duIG9mIFRlYXJzO0F1c3BpY2Ugb2YgdGhlIFdoeXJsZWd5Z2UgUHJlbTtIdXNoIG9mIEV0ZXJuYWwgTmlnaHQ7QmFyZGluZyBvZiB0aGUgU2llZ2UtRHJha2U7UGluZSBDb25lIE1lbGVlIE1lZ2EgQ3JlZXBzO1N1bmtlbiBFbWJsZW0gQWdoYW5pbSBFZmZlY3Q7Qm9vb29mdXMgd2l0aCBEYXJrIGVmZmVjdDtDaHJvbXkgdGhlIENlbnRpcGVkZSBXYXJkO0d1YXJkaWFucyBvZiB0aGUgTG9zdCBQYXRoIERpcmUgVG93ZXJzO0d1YXJkaWFucyBvZiB0aGUgTG9zdCBQYXRoIFJhZGlhbnQgVG93ZXJzO1Jvc2hhbiBIYWxsb3dlZW4gRHJhY3VsYSBTa2luO1dlYXRoZXIgU25vdztQdW1wa2luIFRyZWVzIFVQO1RlcnJhaW4gLSBXaW50ZXI7Uml2ZXIgVmlhbCBCbHVlO0FsbGlhbmNlIGxvYWRpbmcgc2NyZWVuO0dyZWVuIFVyYWwgSFVEO01hcmsgb2YgdGhlIE1pc3RyYWwgRmllbmQgViAyLjE7QmlnIFVuIFYgMy4wO0FudGltYWdlIFNoaW5vYmk7QW5jaWVudCBNZWNoYW5pc207T3Zlcmdyb3duO1RoZSBSb3dkeSBGaXJlYnJhbmQ7V3JhdGggb2YgdGhlIEJsb29kIENvdmVuYW50IFNldDtIdW50ZXJzIEdsb3J5O0JyZXcgSm91c3RpbmcgUGFuZGEgYW5kIERvbmtleSBLb25nO0xvc3QgUmFuZ2VyO1BhdHRlcm4gb2YgdGhlIFNpbGtlbiBRdWVlbjtJY2VwbGFpbiBSYXZhZ2VyO0dyeXBob24gUmlkZXIgU2V0O1RoZSBSYXQgS2luZztUaGUgRmFpdGggb2YgQXZlbmdlcnM7VGhlIElyb24gUGlvbmVlcjtCbHVlaGVhcnQgU292ZXJlaWduIFYgMi4wO0ltcGVyaWFsIFJlbGljcyBWIDIuMTtDdXJzZSBvZiB0aGUgV2ludGVyIFJvc2U7RGVsaWdodHMgb2YgUGV0YWx1bmEgUGF0aGZpbmRlcjtNaXN0cmVzcyBvZiB0aGUgTG9uZyBOaWdodDtUZW1wZXN0cyBXcmF0aDtCcmluZ2VyIG9mIFRyb3VibGVzO0RyYWdvbiBHdWFyZGlhbjtFbGR3dXJtcyBUb3VjaCBWIDMuMTtWYW5xdWlzaGluZyBEZW1vbnMgR2VuZXJhbCBWIDMuMTtCaW5kaW5ncyBvZiBEZWVwIE1hZ21hO0hhcm5lc3Mgb2YgdGhlIEZpc3N1cmVkIFNvdWw7RmlyZXMgb2YgdGhlIFZvbGNhbmljIEd1YXJkO0hlYWRsYW5kIEh1bnRyZXNzO0V4cG9uZW50IG9mIHRoZSBFbmRsZXNzIFN0YXJzO01pc2dpdmluZ3Mgb2YgdGhlIEVtZXJhbGQgQWdlO1RoZSBDaGFpbmVkIFNjcmliZTtHdW5ib2F0IEhlZ2Vtb24gViAzLjA7RXhwbG9zaXZlIE1hbmlhYztTdGVhbXBvd2VyZWQgTWFnaWMgU2V0O1NlcnBlbnRpbmUgR3VhcmQ7VGhlIENyaW1zb24gUGlyYXRlO1ZhbGt5cmllIE9mIFRoZSBSZW1haW5zO1NwaXJldGhvcm4gUmVnYWxpYSBWIDIuMDtJY2Vib3VuZCBLaW5nIFNldDtGaXJlZmxpZ2h0IFNjaW9uO1dhci1CdXJyb3cgUmF2YWdlcjtOb3J0aGVybiBCbGlnaHQ7RnVyeSBvZiBXYXIgR29kO0V5ZSBvZiB0aGUgQmVob2xkZXI7Vm9vZG9vIE1lZXBvO01vb25mbGFyZSBvZiBUaGUgTmlnaHRzaWx2ZXI7SGF2b2Mgb2YgRHJhZ29uIFBhbGFjZSBWIDIuMDtQcmlzbWF0aWMgR3JhY2U7RGVzZXJ0IFRyYXZlbGxlciBTZXQ7V3JhdGggb2YgS2EgViAyLjEgU3R5bGUgMjtCbGFjayBOaWhpbGl0eTtDdXJzZWQgWmVhbG90IEFuZCBEYWdvbjtUYWxlcyBvZiB0aGUgR3JleSBXYXN0ZXM7SGVhdmVubHkgTGlnaHQ7QXVzcGljaWQ5519cyBTZWFkd2VsbGVyO01hbmRhdGUgb2YgdGhlIE5hbWVsZXNzO1BpdGZhbGwgQ3J1c2FkZXI7VmFsa3lyaWVzIFNoYWRlO1ZlbmdlYW5jZSBvZiB0aGUgU3Vud2FycmlvcjtJcmUgb2YgTW9sdGVuIFJlYmlydGg7UmVtaW5pc2NlbmNlIG9mIERyZWFtcztKb2xseSBSZWF2ZXI7RGVtb25pYyBQdWduYSBWIDMuMDtMaW5lYWdlIFRoZSBBcmNoIFRlbXB0cmVzcztNYWdpc3RlciBvZiB0aGUgTmFycm93IEZhdGVzO0N1bm5pbmcgQ29yc2FpcjtNb25zdHJvdXMgUmVwcmlzYWw7UmFtYmxpbmcgRmF0ZWJlbmRlcjtTdGVlbCBLaW5nO0Nyb3duIG9mIFRoZSBOaWdodHdvcmxkO0ZhdGhvbWxlc3MgUmF2YWdlcjtEYW5jZXIgb2YgdGhlIFNwaXRlZnVsIEV5ZSBWIDMuMDtHb2xkIFNreW1hZ2U7VmFudGFnZSBvZiB0aGUgQnJlYWNoIFdhcmRlbjtEYXJrIFJlZWYgRXNjYXBlIFYgMi4xO0tlZW4gTWFjaGluZTtTb3VsIExpbGl0aDtCaXRlIG9mIHRoZSBTdXJnaW5nIFdpbmQ7Q29ycmlkYW4gTWFlc3RybyBWIDIuMDtBcm1hdHVyZSBvZiB0aGUgQmVsbGlnZXJlbnQgUmFtIFJlZDtQb3dkZXJzbGVkIFJvb2tlcnk7Rmx1dHRlcmluZyBBbWV0aHlzdDtGb3VsZmVsbCBDb3JydXB0b3I7VGlkZWh1bnRlciBLaWxsZXI7VHJlayBvZiB0aGUgVHJhaWxibGF6ZXI7VGlua2VyIFNjYXJlY3JvdyBTZXQ7VGlueSBNaXggViA0LjA7QmFyayBvZiB0aGUgQWdlbGVzcyBXaXRuZXNzIERpc3Rpbmd1aXNoZWQ7QmFycmllciBSb2d1ZTtTZWFibGlnaHQgUHJvY2Vzc2lvbjtQbHVuZGVyIG9mIHRoZSBTYXZhZ2UgTW9uZ2VyO0F0cm9jaXRpZXMgb2YgdGhlIEFieXNzYWwgU2NvdXJnZTtTY2FsZSBvZiB0aGUgUmF6b3J3eXJtIExpZ2h0O0ZsaWdodGxlc3MgRnVyeSBWIDIuMDtGZXJvY2lvdXMgVG94aWNhbnQ7VW5ibGlua2luZyBFdGVybml0eTtEcmVhZCBDb21wYWN0IFN0eWxlIDI7VGhlIER1c2sgQ3Jhd2xlciBTZXQ7QXJyYXkgb2YgVHJhbnF1aWxpdHk7V2luZ3Mgb2YgQ29sb3JmdWwgSWNlY3J5c3RhbHM7QmVhcmVyIG9mIHRoZSBBcmt0dXJhbiBUYWxvbjtSZWdhbGlhIG9mIHRoZSBXcmFpdGggTG9yZCBTZXQ7RW1wZXJvciBPZiBUaGUgQ2xlcmd5OyAxMjN8fHw=