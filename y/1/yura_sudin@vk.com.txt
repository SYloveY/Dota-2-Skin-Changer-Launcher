bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogMDNDMDAyMTgtMDQ0RC0wNTIzLUIwMDYtQjQwNzAwMDgwMDA5IDExMXx8fCAyMjI6OiAkMnkkMTAkTUdOa09EUmtPR1ZtT0RBMVl6Z3laT2wudzJZTXFJc3VvRGc3V3NST0V0ZEx2d2k1eGtSWUMgMjIyfHx8IDEyMzo6IEZpcmUgQXp1cmVtaXI7QmVhc3Qgb2YgdGhlIENyaW1zb24gUmluZyBCcmFjZXJzO0Jsb29keSBCYWJ5IEludm9rZXI7SG9ybnMgb2YgdGhlIEJldHJheWVyO0hlbGwtU3BhciBBbmF0aGVtYSBPYnNpZGlhbiBCbGlnaHQ7TXVsY3RhbnQgUGFsbCBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzO0ZpbiBLaW5ncyBDaGFybSBvZiBFbWluZW50IFJldml2YWwgRXhjZXB0aW9uYWw7R29kcyBNZXJjeSBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzO0ZvcnN3b3JuIExlZ2FjeSAtIFNwZWFyO0doaWxsaWVkIEd1bm1hbiBDYXBlO0JsYWNrc2FpbCBDYW5ub25lZXIgSGF0O0doaWxsaWVkIEd1bm1hbiBTaG91bGRlcnM7U25pcGVyIEltbW9ydGFsIFdlYXBvbiBvZiB0aGUgQXJkYWxhbiBJbnRlcmRpY3RvcjtUZW1wZXN0IFJldmVsYXRpb247VGVycmFpbiAtIFNhbmN0dW1zIG9mIHRoZSBEaXZpbmU7U2V4eSBXb21hbiBNZWdhLUtpbGw7RDJDTCBTZWFzb24gNSBIVUQ7Q2xlYXJjdXQgQ2F2YWxpZXIgQmFjaztTdHlsZSBvZiB0aGUgUmF1Y291cyBHYXRlY3Jhc2hlcjtHb2xkZW4gUmVjdGlmaWVyO0ZpbnMgb2YgdGhlIE1vbHRlbiBEZXN0cnVjdG9yO0NsZWFyY3V0IENhdmFsaWVyIFdlYXBvbjtQaW5lIENvbmUgTWVsZWUgTWVnYSBDcmVlcHM7UmVwdGlsaWFuIFJlZnVnZSBEaXJlIENyZWVwcztSZXB0aWxpYW4gUmVmdWdlIFJhZGlhbnQgQ3JlZXBzO0RlY2xhcmF0aW9uIG9mIHRoZSBEaXZpbmUgU2hhZG93IERpcmUgVG93ZXJzO0RlY2xhcmF0aW9uIG9mIHRoZSBEaXZpbmUgTGlnaHQgUmFkaWFudCBUb3dlcnM7V3JhdGggb2YgS2EgQ3Vyc29yIFBhY2s7RW1ibGVtIG9mIERpdmluaXR5IEFnaGFuaW0gRWZmZWN0O1BsYW5ldGZhbGwgRmlyZSBCbGluaztBeGUgZnVsbCBJbW1vcnRhbHMgTWVnYXBhY2sgYWx0O0JyaXN0bGViYWNrIE1lZ2FQYWNrO0VhcnRoc2hha2VyIE1lZ2FQYWNrIE5ldztBcmNhbmUgSW52ZXJ0ZXI7S3Vua2thIEltbW9ydGFscyBNZWdhUGFjaztNYXJzIFRJMTAgQ29sbGVjdG9ycyBDYWNoZSBNZWdhUGFjaztRdWVlbiBvZiBQYWluIEFyY2FuYSBNZWdhUGFjaztSdWJpY2sgQXJjYW5hIHdpdGggSW1tb3J0YWw7Q29ycmlkYW4gTWFlc3RybyBhbmQgVGhlIExpZ2h0bmluZyBPcmNoaWQgYW5kIEdvbGRlbiBNYW5kYXRlIG9mIHRoZSBTdG9ybWJvcm4gTWVnYVBhY2sgTkVXO1JpZ2h0ZWQ5519cyBUaHVuZGVyYm9sdCBhbmQgQXJjYW5hIE1lZ2FQYWNrO0xlZ2lvbiBDb21tYW5kZXIgTW9kTWFrZXIgTWVnYVBhY2s7IDEyM3x8fA==