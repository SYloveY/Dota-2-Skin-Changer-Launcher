bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogMDNDMDAyMTgtMDQ0RC0wNTIzLUIwMDYtQjQwNzAwMDgwMDA5IDExMXx8fCAyMjI6OiAkMnkkMTAkTUdOa09EUmtPR1ZtT0RBMVl6Z3laT2wudzJZTXFJc3VvRGc3V3NST0V0ZEx2d2k1eGtSWUMgMjIyfHx8IDEyMzo6IEZpcmUgQXp1cmVtaXI7QmVhc3Qgb2YgdGhlIENyaW1zb24gUmluZyBCcmFjZXJzO0Jsb29keSBCYWJ5IEludm9rZXI7SG9ybnMgb2YgdGhlIEJldHJheWVyO0hlbGwtU3BhciBBbmF0aGVtYSBPYnNpZGlhbiBCbGlnaHQ7TXVsY3RhbnQgUGFsbCBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzO0ZpbiBLaW5ncyBDaGFybSBvZiBFbWluZW50IFJldml2YWwgRXhjZXB0aW9uYWw7R29kcyBNZXJjeSBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzO0ZvcnN3b3JuIExlZ2FjeSAtIFNwZWFyO1J1YmljayBBcmNhbmEgd2l0aCBJbW1vcnRhbDtHaGlsbGllZCBHdW5tYW4gQ2FwZTtCbGFja3NhaWwgQ2Fubm9uZWVyIEhhdDtHaGlsbGllZCBHdW5tYW4gU2hvdWxkZXJzO1NuaXBlciBJbW1vcnRhbCBXZWFwb24gb2YgdGhlIEFyZGFsYW4gSW50ZXJkaWN0b3I7VGVtcGVzdCBSZXZlbGF0aW9uO1RlcnJhaW4gLSBTYW5jdHVtcyBvZiB0aGUgRGl2aW5lO1NleHkgV29tYW4gTWVnYS1LaWxsO0QyQ0wgU2Vhc29uIDUgSFVEO0NsZWFyY3V0IENhdmFsaWVyIEJhY2s7U3R5bGUgb2YgdGhlIFJhdWNvdXMgR2F0ZWNyYXNoZXI7R29sZGVuIFJlY3RpZmllcjtGaW5zIG9mIHRoZSBNb2x0ZW4gRGVzdHJ1Y3RvcjtDbGVhcmN1dCBDYXZhbGllciBXZWFwb247UGluZSBDb25lIE1lbGVlIE1lZ2EgQ3JlZXBzO1JlcHRpbGlhbiBSZWZ1Z2UgRGlyZSBDcmVlcHM7UmVwdGlsaWFuIFJlZnVnZSBSYWRpYW50IENyZWVwcztEZWNsYXJhdGlvbiBvZiB0aGUgRGl2aW5lIFNoYWRvdyBEaXJlIFRvd2VycztEZWNsYXJhdGlvbiBvZiB0aGUgRGl2aW5lIExpZ2h0IFJhZGlhbnQgVG93ZXJzO1dyYXRoIG9mIEthIEN1cnNvciBQYWNrO0VtYmxlbSBvZiBEaXZpbml0eSBBZ2hhbmltIEVmZmVjdDtQbGFuZXRmYWxsIEZpcmUgQmxpbms7QXhlIGZ1bGwgSW1tb3J0YWxzIE1lZ2FwYWNrIGFsdDtCcmlzdGxlYmFjayBNZWdhUGFjaztFYXJ0aHNoYWtlciBNZWdhUGFjayBOZXc7QXJjYW5lIEludmVydGVyO0t1bmtrYSBJbW1vcnRhbHMgTWVnYVBhY2s7TWFycyBUSTEwIENvbGxlY3RvcnMgQ2FjaGUgTWVnYVBhY2s7UXVlZW4gb2YgUGFpbiBBcmNhbmEgTWVnYVBhY2s7Q29ycmlkYW4gTWFlc3RybyBhbmQgVGhlIExpZ2h0bmluZyBPcmNoaWQgYW5kIEdvbGRlbiBNYW5kYXRlIG9mIHRoZSBTdG9ybWJvcm4gTWVnYVBhY2sgTkVXO1JpZ2h0ZWQ5519cyBUaHVuZGVyYm9sdCBhbmQgQXJjYW5hIE1lZ2FQYWNrO0xlZ2lvbiBDb21tYW5kZXIgTW9kTWFrZXIgTWVnYVBhY2s7IDEyM3x8fA==