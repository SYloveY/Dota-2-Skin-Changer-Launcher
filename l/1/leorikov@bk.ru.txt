bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogMDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtNENDQzZBQkMwM0REIDExMXx8fCAyMjI6OiAkMnkkMTAkTXpJMk16QTNPVFF6WXpKaE5EazROT2E2Nk5tblhGY0lTYzJVdk9vVEVGVFc2MWlpQ1B1U08gMjIyfHx8IDEyMzo6IFRlcnJhaW4gLSBTcHJpbmc7V2VhdGhlciBTcHJpbmc7SG9saWRheSBSYWRpYW50IFRvd2VyO0V5ZSBvZiBBdmVybnVzO0EgRGlyZSBHYXplO0FwZXJ0dXJlIFNjaWVuY2UgV2FyZGNvcmU7QWNpZCBIeWRyYSBDdXJzb3IgUGFjaztCYWJ5IFJvc2hhbiBQcmVtO0JyaWdodHNreWU7RW1ibGVtIG9mIHRoZSBDcnlzdGFsIEVjaGVsb24gQWdoYW5pbSBFZmZlY3Q7VEktMTAgQWdoYW5pbSBFZmZlY3Q7QmxpbmsgRGFnZ2VyIGx2bCAxIFRJLTYgRWZmZWN0O1RJLTEwIEJvdHRsZSBFZmZlY3Q7QWVnaXMgYW5kIFJvc2hhbiBTdC4gVmFsZW50aW5lIERheTtWaXNhZ2Ugb2YgdGhlIFNsZWVwbGVzcyBTZWN0O0Jlc3Rvd2VkIFNob3VsZGVycztUZXJyYWluIC0gVGhlIEtpbmdzIE5ldyBKb3VybmV5O1dlYXRoZXIgQXNoO01hbmlhcyBNYXNrIFByZW07R29sZGVuIEdyYXZlbG1hdztDaGFvcyBBcmJpdGVyO0JyYWNlcnMgb2YgQWVvbnMgUHJlbTtKZXdlbCBvZiBBZW9ucyBQcmVtO0dvbGRlbiBBdG9taWMgUmF5IFRocnVzdGVycyBQcmVtO0xlZ2FjeSBvZiB0aGUgRmFsbGVuIExlZ2lvbjtGaXJlIExvdHVzIEJlbHQ7TXVsY3RhbnQgUGFsbDtIZWxtIG9mIHRoZSBXaW5nZWQgU2VudGluZWw7R29sZGVuIE1vb25mYWxsIFByZW07VHdpbGlnaHQgU2NoaXNtO0Zvcm0gb2YgQW1icnkgViAyLjE7RGF1Z2h0ZXJzIG9mIEh5ZHJvcGhpaW5hZTtUd2luIFNlcnBlbnQgQm93IFYgMy4wO0NvbG9zc2FsIENyeXN0YWwgQ2hvcnVzIGVmZmVjdDtHb2xkZW4gTWFzayBvZiBNZXRpcmE7QXhpYSBvZiBNZXRpcmE7U3RhZmYgb2YgR3VuLVl1O0JsYWRlIG9mIFRlYXJzIGFuZCBDcm93biBvZiBUZWFycztGbG93ZXIgU3RhZmYgb2YgdGhlIFBlYWNlLUJyaW5nZXI7Q2FyYXBhY2Ugb2YgS2FrdG9zO0phdyBvZiBLYWt0b3M7Q2xhd3Mgb2YgS2FrdG9zO0F1c3BpY2Ugb2YgdGhlIFdoeXJsZWd5Z2UgUHJlbTtGbGlnaHQgb2YgdGhlIFVuZHlpbmcgTGlnaHQ7R29sZGVuIFNoYXJkcyBvZiBFeGlsZTtNYXNrIG9mIHRoZSBDb25maWRhbnQ7RGlmZnVzYWwgTGFuY2U7S2l0ZXN0YXIgU3BsZW5kb3IgQmVhaztEcmFnb25jbGF3IEhvb2s7U2NvcmNoaW5nIFRhbG9uO0VtaW5lbmNlIG9mIFJpc3R1bCBLbmlmZSBBdHRhY2s7R29sZGVuIFNldmVyaW5nIENyZXN0O1N0YWZmIG9mIFBlcnBsZXggUHJlbTtUaGUgQmFycmVuIFZlY3RvcjtTb3VscyBUeXJhbnQgSGVhZDtBcm1zIG9mIERlc29sYXRpb24gUHJlbTtIdXNoIG9mIEV0ZXJuYWwgTmlnaHQ7UGlrZSBvZiB0aGUgQnJlYWNoIFdhcmRlbjtUaGUgR29sZGVuIEJhcmIgb2YgU2thZGk7R2lsZGVkIEVkZ2UgViAyLjA7R29sZGVuIEZ1bGwtQm9yZSBCb25hbnphO011aCBLZWVuIEd1bjtQaGFudG9tIEFkdmVudCBVUDtQaGFudG9tIEFkdmVudCBCZWx0IFVQO1BoYW50b20gQWR2ZW50IFNob3VsZGVycyBVUDtQaGFudG9tIEFkdmVudCBXZWFwb24gVVA7U291bCBEaWZmdXNlciBWIDIuMTtJcm9uIFN1cmdlIFYgMi4yO1RodW5kZXJpbmcgRmxhaWw7VGhlIExpZ2h0bmluZyBPcmNoaWQgViAzLjA7Um9zZSBvZiB0aGUgQ29ycmlkYW4gTWFlc3RybztGb2NhbCBSZXNvbmFuY2UgViAzLjA7RnJhY3RhbCBIb3JucyBvZiBJbm5lciBBYnlzbSBVUDtSZWN0aWZpZXI7Q2x1YiBvZiB0aGUgSWduZWQ5519cyBTdG9uZTtNYWplc3R5IE9mIFRoZSBDb2xvc3N1cyAtIENvYmJsZTtUaGUgSWduZWQ5519cyBTdG9uZSBWIDQuMDtUaW55IFNjYXJsZXQgUXVhcnJ5O0JhcmRpbmcgb2YgdGhlIFNpZWdlLURyYWtlO0NyaW1zb24gQ3lycmlkYWU7U3lsdmFuIENhc2NhZGU7UmFpbm1ha2VyIFYgNC4wO1dyYWl0aCBLaW5nIENvcnJ1cHRlZCBBc2hicmluZ2VyO1RlbXBlc3QgSGVsbSBvZiB0aGUgVGh1bmRlcmdvZDtPdmVyZ3Jvd24gRW1ibGVtIEFnaGFuaW0gRWZmZWN0OzI1IGx2bCBwaW5nO0NvbG9yU3RhdHM7QmF0dGxlIFBhc3MgRWZmZWN0IEJsaW5rIERhZ2dlcjtCb3R0bGUgVEktNiBFZmZlY3Q7VEktNSBlZmZlY3QgRGFnb247VEktOSBTZWFzb25hbCBDcmVlcCBEZW55IEVmZmVjdDtCYXR0bGUgUGFzcyBFZmZlY3QgRXVsO0ZhbGwgQmF0dGxlIFBhc3MgMjAxNiBFZmZlY3QgRm9yY2VzdGFmZjtUSS04IEZvdXJjZSBTdGFmZiBFZmZlY3Q7RmFsbCBCYXR0bGUgUGFzcyAyMDE2IEVmZmVjdCBGb3VudGFpbiBSZWdlbjtUSS0xMCBMZXZlbCBVcCBFZmZlY3Q7VEktOCBTaGl2YXMgRWZmZWN0O01la2FuaXNtIFRJLTYgRWZmZWN0O01qb2xsbmlyIFRJLTYgRWZmZWN0O1BoYXNlIEJvb3RzIFRJLTYgRWZmZWN0O1JhZGlhbmNlIFRJLTYgRWZmZWN0O1RJLTEwIFRlbGVwb3J0IGx2bCAzIEVmZmVjdDtFdmlsIEljZS1Sb3NoYW47VGhlIEludGVybmF0aW9uYWwgMjAxOSBNdXNpYyBQYWNrO1Bpc3RvbiBJbXBhbGVyO0JsYXN0Zm9yZ2UgRXhoYWxlcjtSYXBpZXJzIG9mIHRoZSBCdXJuaW5nIEdvZCBWIDMuMTtWb2lkaGFtbWVyO0VuZGxlc3MgTmlnaHQ7VGltZSBXYW5kZXJlcjtUaGUgV2lsZCBUYW1lcjtTZXJtb24gb2YgdGhlIEZyb3plbiBBcG9zdGxlIFNldCBWIDIuMTtCb3VudHkgSHVudGVyIE1hbmlhYyBTZXQ7TG9zdCBSYW5nZXI7TWF6ZSBSb2FyIFNldDtTb3VsIG9mIFN0ZWFtO01pc3RyZXNzIG9mIHRoZSBMb25nIE5pZ2h0O0hlYXZlbmx5IFN3b3JkIERvb20gViAzLjA7QnJpbmdlciBvZiBUcm91YmxlcztBbnZpbCBvZiB0aGUgRWFydGh3cmlnaHQ7Q2luZGVyIFNlbnNlaTtCaWcgVW4gViAzLjA7U3RyeWd3eXIgQmxvb2RzZWVrZXI7UGF0dGVybiBvZiB0aGUgU2lsa2VuIFF1ZWVuO0dyeXBob24gUmlkZXIgU2V0O1Byb3ZpbmNlIG9mIHRoZSBIdW50IEV0ZXJuYWw7U2hlcm1hbiBNYWlkZW4gViA0LjE7U2FjY2hhcmluZSBTYWJvdGV1cjtBbmNlc3RyYWwgVHJhcHBpbmdzIFNldCBWIDMuMDtEcmFnb24gR3VhcmRpYW47TG9yZCBvZiBGbGFtZSBEcmFnb247U3RyZW5ndGggb2YgdGhlIERlbW9uIFN0b25lIFNldCBWIDMuMTtNaXNnaXZpbmdzIG9mIHRoZSBFbWVyYWxkIEFnZTtBbGxpZWQgQ29tbWFuZGVyIFNldDtGYXRlIE1lcmlkaWFuO1NlcnBlbnRpbmUgR3VhcmQ7RXhwbG9zaXZlIE1hbmlhYztCZXN0b3dtZW50cyBvZiB0aGUgRGl2aW5lIEFuY2hvciBlZmZlY3RzO1NpZWdlIG9mIHRoZSBBcmN0aWMgSGFsbDtMb3JkIG9mIENocm9ub3B0aWMgU3ludGhlc2lzO0NvbXBlbmRpdW0gQmxvb2R5IFJpcHBlcjtCZXdpdGNoaW5nIEZsYXJlIFYgMi4wO1dhci1CdXJyb3cgUmF2YWdlcjtCbGFjayBJY2UgU2NvdXJnZTtUcmFpbCBvZiB0aGUgR3JleSBHaG9zdDtFcnVwdGluZyBXcmF0aCBWIDIuMDtGdXJ5IG9mIFdhciBHb2Q7RXllIG9mIHRoZSBCZWhvbGRlcjtDcnlzdGFsIFNjYXZlbmdlcjtEYXJrZmFsbCBXYXJkZW47SGF2b2Mgb2YgRHJhZ29uIFBhbGFjZSBWIDIuMDtQcmlzbWF0aWMgR3JhY2U7VHJ1ZWJhcmsgQWRoZXJlbnQ7V3JhdGggb2YgS2EgViAyLjE7QmxhY2sgTmloaWxpdHk7VGFsZXMgb2YgdGhlIEdyZXkgV2FzdGVzO1RoZSBHcmV5IEdhbGxhbnQ7TWFuZGF0ZSBvZiB0aGUgTmFtZWxlc3M7UGl0ZmFsbCBDcnVzYWRlcjtWZW5nZWFuY2Ugb2YgdGhlIFN1bndhcnJpb3I7SXJlIG9mIE1vbHRlbiBSZWJpcnRoO0NoYWlucyBvZiB0aGUgQmxhY2sgRGVhdGggU3R5bGUgMTtEZW1vbmljIFB1Z25hIFYgMy4wO0V5ZSBvZiB0aGUgTWF6ZSBLZWVwZXI7TW9uc3Ryb3VzIFJlcHJpc2FsO0FuY2llbnQgTWFndXMgU3R5bGUgMjtSdWxlciBvZiB0aGUgRnJvc3RiaXRlIER1bmVzO0Nyb3duIG9mIFRoZSBOaWdodHdvcmxkO0ZhdGhvbWxlc3MgUmF2YWdlcjtDaGFybWVyIG9mIEZpcmVzbmFrZTtHb2xkIFNreW1hZ2U7QmVzdG93bWVudHMgb2YgdGhlIENlbnR1cmlvbiBWYW5ndWFyZDtEYXJrIFJlZWYgRXNjYXBlIFYgMi4xO0hpbnRlcmxhbmQgU3RhbGtlcjtBcm1vdXIgb2YgVGhlIElyb24gRHJha2tlbjtDb25jZWFsZWQgUmF2ZW47VHJlayBvZiB0aGUgVHJhaWxibGF6ZXI7VGlua2VyIFNjYXJlY3JvdyBTZXQ7UGx1bmRlciBvZiB0aGUgU2F2YWdlIE1vbmdlcjtFeWUgb2YgdGhlIFdlYXRoZXJlZCBTdG9ybTtBYnlzc2FsIEN1aXJhc3M7RGlyZ2Vzd29ybiBEeW5hc3R5O1RoZSBJcm9uIEJlYXJzIFNldDtCbGVzc2luZyBvZiB0aGUgQ3Jlc3RlZCBVbWJyYTtGZXJvY2lvdXMgVG94aWNhbnQ7QmluZGluZ3Mgb2YgdGhlIEJhdHRsZXJhbmdlciBDaGFvdGljIFN0eWxlO1BvbGFyIE5pZ2h0O1NrZWxldG9uIEtpbmcgUmV0dXJuIEZpbmFsIFYgMy4wO0FudGktTWFnZSBVbHRpbWF0ZSBSZWQgRHJhZ29uO1ZhbGt5cmllcyBTaGFkZTsgMTIzfHx8