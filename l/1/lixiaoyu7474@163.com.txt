limitHWID:: 1 000||| 111:: 2FC6CA80-D7DA-11DD-A5AB-40167E264485 111||| 222:: $2y$10$MTkyY2Q2MjZhN2QzYTYwZOearWR0SBAzYOloPmA5c4c2nOomqw6Ni 222||| 123:: Acolyte of the Lost Arts;Shadow Fiend Arcana Demon Eater;Royal Decree Whip Attack;Crown of the Royal Decree;Raiments of the Royal Decree;Golden Bloodfeather Feast;Sniper Immortal Weapon of the Ardalan Interdictor;Radiant Conqueror Back;Radiant Conqueror Head;Radiant Conqueror Shoulder;Spear of the Daemonfell Flame;Reflections Shade Color for TB;Master of the Searing Path Head;Master of the Searing Path Belt;Apogee of the Guardian Flame;Master of the Searing Path Arms;Tempest Helm of the Thundergod + Righteous Thunderbolt;Tempest Revelation;Manifold Paradox PA Arcana Style 3;Codicil of the Veiled Ones;Avowance of the Crimson Witness;Disciple of the Wyrmwrought Flame;Soul of the Slayer Prem;Golden Wyrmwrought Flare Prem;Touch of the Bewitching Flare;Arcana Crystal Maiden Frost Avalanche;Rapiers of the Burning God V 3.1;DK Persona Davion;AntiMage Female;Earthshaker MegaPack New;Custom MegaPack Sven True Vigil;Outworld Devouver MegaPack;Windranger Arcana style 2 (Orange Bird) and Full WR immortal;Monkey King Arcana MegaPack;Ursa Immortals MegaPack;Wraith King Arcana MegaPack;Viper MegaPack;Corridan Maestro and The Lightning Orchid and Golden Mandate of the Stormborn MegaPack NEW; 123|||