limitHWID:: 1 000||| 111::  111||| 222:: $2y$10$MjZlYmY1OWM1YmU0ZDEzNOURToGwVeqUf.Wk1KYu2.NugxteZFMHW 222||| 123:: TI-6 OG TP Effect;TI-9 Phase Boots Effect;Lightning Blink V 2.0;Radiant Nemestice Creeps;Winter Creeps V 3.0;Dire Nemestice Creeps;Declaration of the Divine Light Radiant Towers;Declaration of the Divine Shadow Dire Towers;Terrain - The Kings New Journey;Golden Origins of Faith Prem;Hair of the Survivor;Bracers and Shoulders of the Survivor;Belt of the Survivor;Blade of the Survivor;Blade of the Survivor Offhand;Axe Jungle;Planetfall;Golden Gravelmaw Prem;Master of the Searing Path Belt;Blade of the Wandering Flame;Off-Hand Blade of the Wandering Flame;Caerulean Star - Belt;Caerulean Star - Arms;Caerulean Star - Head;Flourishing Lodestar;Harborblossom;Virgas Arc;Crimson Bracers of Aeons Prem;Claszureme Incursion Belt;Faceless Madness;Jewel of Aeons;Mace of Aeons Prem;Bloody Baby Invoker;Benevolent Companion V 2.0;Fortunes Tout Prem;Juggernaut Arcana Red Bladeform Origins;Crimson Edge of the Lost Order;Tormented Crown;Tormented Staff of Eminent Revival;Glare of the Tyrant;Chains of Vile Convocation;Tome of Forbidden Knowledge;Crown of Vile Convocation;Golden Twilight Schism;Mount of the Winged Sentinel;Golden Moonfall Prem;Manifold Paradox PA Arcana Style 3;Codicil of the Veiled Ones;Avowance of the Veiled Ones;Concord Reversion UP;Concord Dominion;Phantom Concord Prem;Blossom of the Merry Wanderer;Crimson Edict of Shadows;Shadow Masquerade Prem;Shadow Fiend Arcana Demon Eater;Shadow in the Deep Armor;Fractal Horns of Inner Abysm UP;Blades of the Foulfell Corruptor Premium;Wings of the Foulfell Corruptor Premium;Golden Floodmask;Submerged Hazard Propeller;Arcanic Resonance Beam;Submerged Hazard Launcher;Ancient Inheritance - Shoulder;Ancient Inheritance - Belt;Ancient Inheritance - Neck;Ancient Inheritance - Back;Sword of the Colossus;Scale of Bitter Spoil Immortal UP;Bitter Lineage Immortal Axes;Hidden Vector - Armor;Hidden Vector - Belt;Hidden Vector - Hat;Hidden Vector - Blade;Windranger Arcana style 2;Clinkz MegaPack;Drow Ranger MegaPack;Kunkka Immortals MegaPack;Soup for Sluts Akamanah Arcana;Golden Dark Maw Inhibito and Golden Profane Union and Golden Dread Requisition Lifestealer Immortals Megapack;Ice Lina Premium;Medusa MegaPack NEW;Eye of the Beholder;Morphling Immortals MegaPack UP;Monkey King Arcana MegaPack;Outworld Devouver MegaPack;Baby Toy Pudge Persona;Queen of Pain Arcana MegaPack;Slark MegaPack New;Corridan Maestro and The Lightning Orchid and Golden Mandate of the Stormborn MegaPack NEW;Sven Immortals MegaPack UP;Arctic Shock TA V 3.0;Tidehunter MegaPack;D Octo Tinker;Ursa Immortals MegaPack;Viper MegaPack;Witch Doctor MegaPack;Wraith King Arcana MegaPack; 123|||