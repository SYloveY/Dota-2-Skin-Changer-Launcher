bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogNEM0QzQ1NDQtMDA1Ny00RDEwLTgwMzItQzZDMDRGNUE1OTMxOzsgMTExfHx8IDIyMjo6ICQyeSQxMCRZamxtWmpaaFlURmxZV1F4TUdVeVlPaVhSN1ZzbGtXQmUxcGRXVy82c1puWjBCWW1ZMC5TRyAyMjJ8fHwgMTIzOjogSGFpciBvZiB0aGUgU3Vydml2b3I7T2ZmLUhhbmQgV2VhcG9uIG9mIHRoZSBGb3Jnb3R0ZW4gUGxhbmU7R29sZGVuIEJhc2hlciBCbGFkZXMgViAyLjA7QnJhY2VycyBhbmQgU2hvdWxkZXJzIG9mIHRoZSBTdXJ2aXZvcjtPcmlnaW5zIG9mIEZhaXRoIFByZW07QmVsdCBvZiB0aGUgU3Vydml2b3I7U2hvdWxkZXJzIG9mIHRoZSBTdXJ2aXZvcjtNYWNlIG9mIEFlb25zIFByZW07RmFjZWxlc3MgTWFkbmVzcztKZXdlbCBvZiBBZW9ucyBQcmVtO0NyaW1zb24gQnJhY2VycyBvZiBBZW9ucyBQcmVtO0Fwb2dlZSBvZiB0aGUgR3VhcmRpYW4gRmxhbWU7SW1tb3J0YWwgSW52b2tlciBLaWQ7SnVnZ2VybmF1dCBBcmNhbmEgQmxhZGVmb3JtIExlZ2FjeTtDcmltc29uIEVkZ2Ugb2YgdGhlIExvc3QgT3JkZXI7TGVnaW9uIENvbW1hbmRlciBBcmNhbmEgVVA7TGVnYWN5IG9mIHRoZSBGYWxsZW4gTGVnaW9uIFN0eWxlIDE7QmxhZGUgb2YgVGVhcnMgYW5kIENyb3duIG9mIFRlYXJzO01hc2sgb2YgTWV0aXJhO1RzdWt1bW8gdGhlIE1vb24gQ2xvdWQ7UHJvZ2VuaXRvcnMgQmFuZTtGb3Jzd29ybiBMZWdhY3kgLSBBcm1vcjtBdG9taWMgUmF5IFRocnVzdGVycyBQcmVtO0NvbmNvcmQgUmV2ZXJzaW9uIFVQO0NvbmNvcmQgRG9taW5pb247UGhhbnRvbSBDb25jb3JkIFByZW07QnJhY2VycyBvZiB0aGUgU3Vud2FycmlvcjtCZWx0IG9mIHRoZSBTdW53YXJyaW9yO0Jsb3Nzb20gb2YgdGhlIE1lcnJ5IFdhbmRlcmVyO0xhcmdlIFRhc3NlbHMgb2YgdGhlIEJsYWNrIERlYXRoO0dyYW5kIEFic2Nlc3Npb24gSG9vayBCdW5kbGU7R3JhbmQgQWJzY2Vzc2lvbjtIdW5nZXIgb2YgdGhlIEhvd2xpbmcgV2lsZHMgSGVhZDtHb2xkZW4gU2hhZG93IE1hc3F1ZXJhZGUgUHJlbTtIdW5nZXIgb2YgdGhlIEhvd2xpbmcgV2lsZHMgV2VhcG9uO0hlbG0gb2YgdGhlIEFyZGFsYW4gSW50ZXJkaWN0b3I7UGFjayBvZiB0aGUgQXJkYWxhbiBJbnRlcmRpY3RvcjtTbmlwZXIgSW1tb3J0YWwgV2VhcG9uIG9mIHRoZSBBcmRhbGFuIEludGVyZGljdG9yO0Rlc2VydCBCdXJuIE1vcnR5IEltbW9ydGFsO0Rlc2VydCBCdXJuIENhcDtEZXNlcnQgQnVybiBDcm9zc2JvdztEZXNlcnQgQnVybiBTYWRkbGU7RGVzZXJ0IEJ1cm4gT3V0Zml0O1NoYWRvdyBpbiB0aGUgRGVlcCBBcm1vcjtTaGFkb3cgaW4gdGhlIERlZXAgSGVsbTtTaGFkb3cgaW4gdGhlIERlZXAgQmFjaztTaGFkb3cgaW4gdGhlIERlZXAgQnJhY2VycztHb2xkZW4gSHlkcmFrYW4gTGF0Y2g7UGhhbnRvbSBBZHZlbnQgV2VhcG9uIFVQO1BoYW50b20gQWR2ZW50IEJlbHQgVVA7UGhhbnRvbSBBZHZlbnQgVVA7UGhhbnRvbSBBZHZlbnQgU2hvdWxkZXJzIFVQO0FuY2llbnQgSW5oZXJpdGFuY2UgLSBTaG91bGRlcjtBbmNpZW50IEluaGVyaXRhbmNlIC0gQmVsdDtBbmNpZW50IEluaGVyaXRhbmNlIC0gTmVjaztBbmNpZW50IEluaGVyaXRhbmNlIC0gQmFjaztBbmNpZW50IEluaGVyaXRhbmNlIC0gV2VhcG9uO0NyZWF0b3JzIExpZ2h0IENvbG9yIGZvciBUQjtTY2FsZSBvZiBCaXR0ZXIgU3BvaWwgSW1tb3J0YWwgVVA7Qml0dGVyIExpbmVhZ2UgSW1tb3J0YWwgQXhlcztDb25zcGljdWQ5519cyBDdWxwcml0IEFybW9yO0NvbnNwaWN1b3VzIEN1bHByaXQgTW9oYXdrO0hpZGRlbiBWZWN0b3IgLSBBcm1vcjtIaWRkZW4gVmVjdG9yIC0gSGF0O0hpZGRlbiBWZWN0b3IgLSBCZWx0O0hpZGRlbiBWZWN0b3IgLSBCbGFkZTtXaW5kcmFuZ2VyIEFyY2FuYSBzdHlsZSAxO0Nyb3duIG9mIHRoZSBPbmUgVHJ1ZSBLaW5nO0VuaWdtYXRpYyBFbWJsZW0gb2YgdGhlIERpcmV0aWRlIC0gR3JlZW47QnJpc3RsZWJhY2sgTWVnYVBhY2s7Q2xpbmt6IE1lZ2FQYWNrO0RLIFBlcnNvbmEgRGF2aW9uO01vbmtleSBLaW5nIEFyY2FuYSBNZWdhUGFjaztNZWR1c2EgTWVnYVBhY2sgTkVXO0NvcnJpZGFuIE1hZXN0cm8gYW5kIFRoZSBMaWdodG5pbmcgT3JjaGlkIGFuZCBHb2xkZW4gTWFuZGF0ZSBvZiB0aGUgU3Rvcm1ib3JuIE1lZ2FQYWNrIE5FVztVcnNhIEltbW9ydGFscyBNZWdhUGFjazsgMTIzfHx8