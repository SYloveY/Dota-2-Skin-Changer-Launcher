bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogMzU0NTMwMzUtMzkzNC0zNTQzLTMzMzQtMzEzOUZGRkZGRkZGIDExMXx8fCAyMjI6OiAkMnkkMTAkWkdRMk5qZGpNRFEzTjJFMk1UZ3lZdUNNZVc4WGpHOWtWdmxwWHhqbzF4SGVVVjVmV2ltNXkgMjIyfHx8IDEyMzo6IFBlZGVzdGFsIEJsYWRlZm9ybSBMZWdhY3k7QmxhY2tlbmVkIEVkZ2Ugb2YgdGhlIEJsYWRla2VlcGVyO1ZhbGVudGluZSBXYXJkO1NlZXIgb2YgSW5maW5pdHkgU3BhY2UgRWlkb2xvbjtNdWxjdGFudCBQYWxsO0F2YWRhIEtlZGF2cmE7TWFjZSBvZiBBZW9ucztNYWxlZmljIERyYWtlcyBIb29kIG9mIHRoZSBDcmltc29uIFdpdG5lc3M7U3Vua2VuIFNuYXBwZXIgV2luZ3M7QXJtcyBvZiB0aGUgQml0dGVyd2luZyBMZWdhY3k7R29sZGVuIE5vdGhsaWMgQnVyZGVuIFByZW07U3RhZmYgb2YgR3VuLVl1O1RlbXBlc3QgSGVsbSBvZiB0aGUgVGh1bmRlcmdvZCBQcmVtO1JhbXBhbnQgT3V0cmFnZSBQcmVtO1JhenppbHMgTWlkYXMgS251Y2tsZXMgUHJlbTtFdGVybmFsIFJhZGlhbmNlIEJsYWRlcyBQcmVtO1JveWFsIFdpbnRlcmJsb29tIEJhY2s7RHJhZ29uZmlzaCBTY2VwdHJlO0Jsb29kZmVhdGhlciBXaW5ncztNYWNlIG9mIFZpbmNlcmU7U29sYXIgR3lyZTtTb2xhciBGb3JnZTtBIERpcmUgR2F6ZTtFeWUgb2YgQXZlcm51cztCYWJ5IFJvc2hhbiBQcmVtO0FybXMgb2YgdGhlIE9ueXggQ3J1Y2libGUgTG9hZGluZyBTY3JlZW47UGVkZXN0YWwgRmVhc3Qgb2YgQWJzY2Vzc2lvbiBSZWQ7Um9zaGFuIEhhbGxvd2VlbiBTa2luO01pbmUgUmFkaXVzIDcwMjtUSS0xMCBBZ2hhbmltIEVmZmVjdDtTZXZlcmluZyBMYXNoO1RoaXJzdCBvZiBFenR6aG9rIEJ1bmRsZSBQcmVtO0JvdyBvZiB0aGUgQmF0dGxlcmFuZ2VyO0hlbG0gb2YgdGhlIFNhdmFnZSBNb25nZXI7QmFyZGluZyBvZiB0aGUgU2F2YWdlIE1vbmdlcjtBcm1vciBvZiB0aGUgU2F2YWdlIE1vbmdlcjtGdWxsLUJvcmUgQm9uYW56YTtEcmFnb25zIEJyZWF0aDtHb2xkZW4gR3Jhc3BpbmcgQmx1ZGdlb247VGhlIExpZ2h0bmluZyBPcmNoaWQ7UmFwaWVyIG9mIHRoZSBCdXJuaW5nIEdvZCBPZmZoYW5kO0JyYWNlcnMgb2YgdGhlIENhdmVybiBMdW1pbmFyO0hlbG0gb2YgdGhlIERhcmsgQ29ucXVlcm9yO1dpbmdzIG9mIHRoZSBBcmN0aWMgUmVjbHVzZTtNYWplc3R5IE9mIFRoZSBDb2xvc3N1cyAtIFBlYmJsZTtCbGFja3NoaWVsZCBQcm90b2Ryb25lIE1pc3NpbGUgTGF1bmNoZXI7QmxhY2tzaGllbGQgUHJvdG9kcm9uZSBBcm1vcjtCbGFja3NoaWVsZCBQcm90b2Ryb25lIEhlbG07QmxhY2tzaGllbGQgUHJvdG9kcm9uZSBTdGluZ2VyO0xlYXNoZWQgUm9ja3NoYXJrO1N3YW1wIFRlcnJvciBCdW95O0lyb24gU3VyZ2U7R29sZGVuIEh5ZHJha2FuIExhdGNoO0hvb2tibGFkZSBvZiBTa2FkaTtUb29scyBvZiB0aGUgRmluYWwgVXR0ZXJhbmNlO1BoYW50b20gQ29uY29yZDtNb2xkZXJpbmcgTWFzayBvZiBLYTtTaHJvdWQgb2YgS2E7V2luZ3Mgb2YgS2E7U2hvY2sgb2YgdGhlIEFudmlsO0JhcmRpbmcgb2YgQ2hpbWVyaWMgUmFwcG9ydDtUaGUgR2FsYWN0aWMgSU87UmFpbm1ha2VyIE1LLlZJSTtBcmMgb2YgV2FybG9yZCBTa2Fyc25paztJbmZlcm5hbCBDaGllZnRhaW47TmlnaHQgVGVycm9ycyBNb3VudDtUaW55IEJhZCBUbyBUaGUgQm9uZTtTbWFsbCBCYWQgVG8gVGhlIEJvbmU7TWVkaXVtIEJhZCBUbyBUaGUgQm9uZTtCYWQgVG8gVGhlIEJvbmUgV2VhcG9uO0J1cm5pbmcgSmFja3M7Q2Fub3B5IG9mIHRoZSBBZ2FyaWMgRmxvdXJpc2g7Q291bnRlbmFuY2Ugb2YgdGhlIEFnYXJpYyBGbG91cmlzaDtTdHJpZGUgb2YgdGhlIEFnYXJpYyBGbG91cmlzaDtFbWJyYWNlIG9mIHRoZSBBZ2FyaWMgRmxvdXJpc2g7RGF1Z2h0ZXJzIG9mIEh5ZHJvcGhpaW5hZTtTdG9uZSBJbmZ1c2lvbiBQcmVtO0JvbmUgV2luZ3MgUHVkZ2U7Q29tcGxldGUgV2luZ3Mgb2YgdGhlIE1hbnRpY29yZTtTdXJseSBCb2dzdG9tcGVyIEZpc2hjbHViO0FNIEF6emlub3RzO1RoaXJzdCBvZiBFenR6aG9rIEJsYWRlO1RoaXJzdCBvZiBFenR6aG9rIC0gT2ZmLUhhbmQ7QmFyZGluZyBvZiB0aGUgQml0dGVyd2luZyBMZWdhY3k7QWxnaWQgTGVnYWN5O0NvbXBsZXRlIEFsZ2lkIExlZ2FjeTtNYXNrIG9mIE1hZG5lc3MgZm9yIFZvaWQgRG90YTJDaGFuZ2VyIEVkaXRpb247UmVkIFdpc3A7SGVhbGluZyBGb3VudCBvZiB0aGUgTG9zdCBJc2xlcztUZW1wZXN0IEhlbG0gb2YgdGhlIFRodW5kZXJnb2Q7Q29tcGVuZGl1bSBCbG9vZHkgUmlwcGVyO0FrYW1hbmFoIGZvciBMZWdpb24gQ29tbWFuZGVyIFYgMy4xO01lbW9yaWVzIG9mIHRoZSBWb3cgRXRlcm5hbDtGdW5nYWwgTG9yZCBTZXQ7VGltZSBXYW5kZXJlcjtXaXNkb20gb2YgdGhlIE1pZG5pZ2h0IFN1bjtIdW50ZXIgb2YgS2luZ3MgViAyLjA7TWFyY2ggb2YgdGhlIFBvd2RlcmtlZyBQYXRyb2w7TmFyY2lzc2lzdGljIExlZWNoO0tpdCBvZiB0aGUgRmlyc3QgSHVudCBWIDIuMTtCbGFjayBPcmMgV2FyYm9zcyBWIDIuMDtTdG9yZWdnYSAzIExWTCBVbHQgKyBJY2UgVGlueTtUaGUgRHVzayBDcmF3bGVyIFNldDtUaGUgSW5mZXJuYWwgTWFzdGVyO1NhaW50IFJhem9yO01hemUgV2F0Y2hlciBTZXQ7VGhlIFBhdGggb2YgT2RvY29lbGV1cztXYXJyaW9yIG9mIEFyZW5hIFNldDtCZWFyZXIgb2YgdGhlIEFya3R1cmFuIFRhbG9uO0ZlYXRoZXJzd2luZztPbWVucyBFbWJyYWNlO1NlYWJsaWdodCBQcm9jZXNzaW9uO0lsbGlkYW4gU3Rvcm1yYWdlIGZvciBUZXJyb3JibGFkZSBWIDIuMDtSaXR1YWwgb2YgdGhlIExveWFsIEZvbGQ7QmVzdG93bWVudHMgb2YgdGhlIENlbnR1cmlvbiBWYW5ndWFyZDtEZWF0aCBOZWNyb2xpZ2h0IFYgMy4yO0dvZGRlc3Mgb2YgdGhlIFVuZGVyd29ybGQ7U3Rvcm0gRHJhZ29uIFBvdGVudGU7Q3JpbXNvbiBCZWFzdCBWIDMuMDtJY2UgU2hha2VyO1RoZSBKYWRlIEdlbmVyYWw7TnVjbGVhciBDbG9ja3dlcms7VGlwc3kgQnJhd2xlcjtBdXJhbnRpYWNvIG1pbGl0aXM7Q2hhb3MgV29XIGd3cmQ7SHVudGVyIG9mIHRoZSBDcnlzdGFsIERyaWZ0O1VuZmV0dGVyZWQgTWFsZXZvbGVuY2U7UG9sYXIgTmlnaHQ7VW5ibGlua2luZyBFdGVybml0eTtDb3JydXB0aW9uIG9mIHRoZSBWaXJ1bGVudCBLcmFpdDtSaWZ0IENoYW1waW9uO0JhcnJpZXIgUm9ndWU7U3VuIEFzc2FzaW4gViAzLjA7R29sZGVuIFNsYXJrIFYgMi4wO0dhcmIgb2YgU2hhZGVzIFYgMi4wO0hhcnNoIFNvam91cm47VGFsZXMgb2YgdGhlIFdpbmR3YXJkIFJvZ3VlO0hvbHkgSW5xdWlzaXRvcjtBbGx1cmUgb2YgdGhlIERlZXA7U3RlbGxhciBKYWRlO01pZGFzIEtpbmcgZm9yIE1vbmtleSBLaW5nO01vb24gUmlmdCBWIDIuMTtDcnlzdGFsIFNjYXZlbmdlcjtJbXBlcmlhbCBFbnZveTtSaXNpbmcgR2xvcnkgViAyLjE7VGhlIElyb24gQ2xhdyB2IDIuMDtSaXRlcyBvZiBWaWxlIENvbnZvY2F0aW9uO0RhcmsgRm9yZXN0IFB1bmlzaGVyO1NlYWJvcm5lIFJlcHJpc2FsO0NvdmVuYW50IG9mIHRoZSBEZXB0aHM7RW1pbmVuY2Ugb2YgdGhlIFNvdXRoIFN0YXI7V2FyZGVuIG9mIHRoZSBXeXJtZm9yZ2UgU2hhcmQ7S2lyaW4gUmlkZXIgU2V0O01pc2NoaWVmIG9mIHRoZSBGYWUgRm9yYWdlcjtTYXZpb3IgZm9yIEp1bmdsZXMgSG9ub3I7TWFyYXVkZXIgQ2hpZWZ0YWluIG9mIHRoZSBDaGFvcyBXYXN0ZXM7QW5jaWVudCBBcHBhcml0aW9uIENoaW5hIE1vZGVsO1BpbGxhciBvZiB0aGUgRnJhY3R1cmVkIENpdGFkZWw7VW1icmFsIERlc2NlbnQ7RW1lcmFsZCBEcmFnb247Um9zZSBBbmQgVGhlIEJlYXN0O0FuY2VzdHJhbCBMdWNrIFNldDtIaWdoZXIgT2dyZSBNYWdpO01hbmRhdGUgb2YgdGhlIE5hbWVsZXNzO1NjYXZlbmdlciBvZiB0aGUgQmFzaWxpc2s7UmFkaWFudCBTcHk7U292ZXJlaWduIG9mIHRoZSBLcmF5IExlZ2lvbnMgMnN0IFN0eWxlO0Rlc2VydCBLaW5nO0Jhc3Rpb24gb2YgdGhlIExpb25zZ3VhcmQ7V2FyIEJyZWFrZXJzIFNldDtBc3Ryb2xvZ2VyIFNldDtXYWlsIG9mIHRoZSBXaW50ZXIgUmV2ZW5hbnQ7RmlyZXMgb2YgVmFzaHVuZG9sIG5vIGVmZmVjdCBWIDIuMTtUaGUgTWFuaXB1bGF0b3IgU2V0O1JoaW5vY2Vyb3MgT3JkZXI7SGVsbSBvZiB0aGUgRG9taW5hdG9yIGZvciBUcm9sbDtFbmRsZXNzIE5pZ2h0O0Rlc2VydCBCcm9vZG1vdGhlcjtDbGlua3ogQ2hpbmEgTW9kZWw7QWxnaWQgRmFsY29uO09yZGVyIG9mIHRoZSBXYW5kZXJpbmcgRmxhbWUgViAyLjE7U2FtYXJlZW4gU2FjcmlmaWNlO1JlbGljcyBvZiBHbG9yaWQ5519cyBJbnNwaXJhdGlvbjtCbG9vZHkgUmlwcGVyO0RhbWUgZGUgQ2FycmVhdTtCbGFkZWJyZWFrZXIgT3JkZXIgVmFsZWVyYSBmb3IgUmlraTtUb3hpYyBEZWF0aCBFYXRlcjtLaW5kcmVkIG9mIHRoZSBVbWl6YXIgQ3Jhd2xlcjtHcmltIERlc3Rpbnk7IDEyM3x8fA==