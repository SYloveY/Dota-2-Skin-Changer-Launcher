bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogMDMyRTAyQjQtMDQ5OS0wNTY1LUJEMDYtNjkwNzAwMDgwMDA5OzsgMTExfHx8IDIyMjo6ICQyeSQxMCROVEJsTkdabU5EWTFNVGN4TURjeFplY1dPbmI4RDlHRHgzLzdWUTlRM3dRMER2bzRsZXpkMiAyMjJ8fHwgMTIzOjogU2hhdHRlcmJsYXN0IENyb3duO0dvbGRlbiBPZmZoYW5kIEJhc2hlciBvZiBNYWdlIFNrdWxscztTaG91bGRlciBQbGF0ZSBvZiB0aGUgRmVydmVudCBDb25zY3JpcHQ7TW9sdGVuIENsYXcgUHJlbTtCcmFjZXJzIG9mIHRoZSBVbmJyb2tlbiBTdGFsbGlvbjtHb2xkZW4gSW5mZXJuYWwgQ2hpZWZ0YWluO0ljZXBsYWluIFJhdmFnZXIgVGFpbDtJY2UgQnVyc3QgQnJhY2VycztNYW5pYXMgTWFzayBQcmVtO0Jvb3RzIG9mIHRoZSBXaW5nZWQgQm9sdDtPYXRocyBvZiB0aGUgRHJhZ29uYm9ybiBRdWl2ZXI7QXJtZ3VhcmRzIG9mIHRoZSBTbW9sZGVyaW5nIFNhZ2U7UmFwaWVyIG9mIHRoZSBCdXJuaW5nIEdvZCBPZmZoYW5kO1JhcGllciBvZiB0aGUgQnVybmluZyBHb2Q7QnJhY2VycyBvZiB0aGUgQ2F2ZXJuIEx1bWluYXI7SmV3ZWwgb2YgQWVvbnM7Rmxhc2hwb2ludCBQcm9zZWx5dGUgLSBIZWFkO1JhaW5tYWtlciBNSy5WSUk7VGhlIFdhcmQgb2YgT2RvY29lbGV1cztQcm92b2NhdGlvbiBvZiBSdWluIE1hc2s7Q29tcGxldGUgSGVsbSBvZiB0aGUgRGFyayBNb29uIFN0YWxrZXI7TWQ5519bnQgb2YgdGhlIFdpbmdlZCBTZW50aW5lbDtHb2xkZW4gTW9vbmZhbGwgUHJlbTtBcm1vciBvZiB0aGUgV2luZ2VkIFNlbnRpbmVsO0NyZXNjZW50IEJvdyBBcnJvdyBvbmx5O0dvbGRlbiBNYXNrIG9mIE1ldGlyYTtBeGlhIG9mIE1ldGlyYTtCcmFjZXJzIG9mIHRoZSBXaW50ZXJtb29uO0F2b3dhbmNlIG9mIHRoZSBWZWlsZWQgT25lcztCdWNrbGVyIG9mIHRoZSBCcmFtYmxlIExvcmQ7QXJtbGV0cyBvZiBUZWFyZHJvcCBJY2U7QmVsdCBvZiB0aGUgQnJhbWJsZSBMb3JkO01hY2Ugb2YgVmluY2VyZSBBdGFjayBFZmZlY3Q7RGVzZXJ0IEJ1cm4gU2FkZGxlO0Rlc2VydCBCdXJuIE91dGZpdDtEZXNlcnQgQnVybiBDYXA7RGVzZXJ0IEJ1cm4gQ3Jvc3Nib3c7Q2hhc20gb2YgdGhlIEJyb2tlbiBDb2RlIEFybW9yO0ZyYWN0YWwgSG9ybnMgb2YgSW5uZXIgQWJ5c20gVVA7Q2hhc20gb2YgdGhlIEJyb2tlbiBDb2RlIEhlbG07U2lnaWwgb2YgdGhlIEJhcnJpZXIgUm9ndWU7Q29hdCBvZiBEaXN0aW5ndWlzaGVkIEV4cGVkaXRpb25hcnk7Uml2ZXIgVmlhbCBPaWw7R2FiZSBOZXdlbGwgTWVnYS1LaWxsO1RlcnJvcmJsYWRlIEVORyBBcmNhbmUgdm9pY2U7UGx1bmRlciBvZiB0aGUgU2F2YWdlIE1vbmdlcjsgMTIzfHx8