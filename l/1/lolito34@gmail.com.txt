bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogMDMyRTAyQjQtMDQ5OS0wNTY1LUJEMDYtNjkwNzAwMDgwMDA5OzsgMTExfHx8IDIyMjo6ICQyeSQxMCROVEJsTkdabU5EWTFNVGN4TURjeFplY1dPbmI4RDlHRHgzLzdWUTlRM3dRMER2bzRsZXpkMiAyMjJ8fHwgMTIzOjogU2hhdHRlcmJsYXN0IENyb3duO0Fwb2NhbHlwc2UgVW5ib3VuZCAtIFRhaWw7VGhlIEdvbGQgQmFzaGVyIEJsYWRlcyBmb3IgV2VpO0dvbGRlbiBPZmZoYW5kIEJhc2hlciBvZiBNYWdlIFNrdWxscztCcmFjZXJzIGFuZCBTaG91bGRlcnMgb2YgdGhlIFN1cnZpdm9yO1Nob3VsZGVyIFBsYXRlIG9mIHRoZSBGZXJ2ZW50IENvbnNjcmlwdDtJcmUgb2YgdGhlIEFuY2llbnQgR2FvbGVyIFNob3VsZGVyO0lyZSBvZiB0aGUgQW5jaWVudCBHYW9sZXIgQmFjaztJcmUgb2YgdGhlIEFuY2llbnQgR2FvbGVyIEFybXM7TW9sdGVuIENsYXcgUHJlbTtCZWx0IG9mIEF4ZSBVbmxlYXNoZWQ7R29sZGVuIENydWNpYmxlIG9mIFJpbGU7TWFudGxlIG9mIHRoZSBDaW5kZXIgQmFyb24gU3R5bGUgMjtGaXN0cyBvZiBBeGUgVW5sZWFzaGVkO0F4ZSBKdW5nbGU7QXBvY2FseXBzZSBVbmJvdW5kIC0gU2hvdWxkZXI7Q2hpZWZ0YWluIG9mIHRoZSBQcmltYWwgVHJpYmVzIEJlYXN0O0JyYWNlcnMgb2YgdGhlIFVuYnJva2VuIFN0YWxsaW9uO0ljZXBsYWluIFJhdmFnZXIgSG9ybjtCZWx0IG9mIENvbnRlc3RlZCBGYXRlO0dvbGRlbiBJbmZlcm5hbCBDaGllZnRhaW47SGFybmVzcyBvZiBDb250ZXN0ZWQgRmF0ZTtJY2VwbGFpbiBSYXZhZ2VyIFRhaWw7SW5mZXJuYWwgTWVuYWNlO1RhbG9ucyBvZiB0aGUgRW5kbGVzcyBTdG9ybSBIZWFkIEdyZWVuIFN0eWxlO1RhbG9ucyBvZiB0aGUgRW5kbGVzcyBTdG9ybSBNb3VudCBHcmVlbiBTdHlsZTtDaGFvcyBGdWxjcnVtO0VudHJvcGljIFNob3VsZGVycGFkcyBQcmVtO1RhbG9ucyBvZiB0aGUgRW5kbGVzcyBTdG9ybSBXZWFwb247RHJhZ29uIG9mIHRoZSBPdXRsYW5kIFJhdmFnZXI7Q3VpcmFzcyBvZiB0aGUgRWxkd3VybSBDcmVzdCBFeGVjdXRpb25lcjtTY29yY2hlZCBBbWJlciBTd29yZDtJY2UgQnVyc3QgQnJhY2VycztHb2xkZW4gU2lsZW50IFdha2U7TWFuaWFzIE1hc2sgUHJlbTtCb290cyBvZiB0aGUgV2luZ2VkIEJvbHQ7T2F0aHMgb2YgdGhlIERyYWdvbmJvcm4gUXVpdmVyO1Nob3VsZGVycyBvZiB0aGUgU2FjcmVkIEh1bnQ7Qm93IG9mIHRoZSBMb25lIFRyYXZlbGVyO0FybWd1YXJkcyBvZiB0aGUgU21vbGRlcmluZyBTYWdlO1R1bmljIG9mIHRoZSBXYW5kZXJpbmcgRmxhbWU7TWFzdGVyIG9mIHRoZSBTZWFyaW5nIFBhdGggSGVhZDtSYXBpZXIgb2YgdGhlIEJ1cm5pbmcgR29kIE9mZmhhbmQ7QXBvZ2VlIG9mIHRoZSBHdWFyZGlhbiBGbGFtZTtSYXBpZXIgb2YgdGhlIEJ1cm5pbmcgR29kO0JyYWNlcnMgb2YgdGhlIENhdmVybiBMdW1pbmFyO0JlbHQgb2YgVGVjdG9uaWMgSW1wbGljYXRpb25zO1BsYW5ldGZhbGw7SnVkZ2VtZW50IG9mIHRoZSBGYWxsZW47Q3JpbXNvbiBCcmFjZXJzIG9mIEFlb25zIFByZW07Q2xhc3p1cmVtZSBJbmN1cnNpb24gQmVsdDtDbGFzenVyZW1lIEluY3Vyc2lvbiBIZWFkO0pld2VsIG9mIEFlb25zO01hY2Ugb2YgQWVvbnMgUHJlbTtBcm1sZXQgb2YgTW9yZGlnZ2lhbiBEMkMgRWRpdGlvbjtGbGFzaHBvaW50IFByb3NlbHl0ZSAtIEhlYWQ7Rmxhc2hwb2ludCBQcm9zZWx5dGUgLSBPZmYtSGFuZDtGbGFzaHBvaW50IFByb3NlbHl0ZSAtIFNob3VsZGVyO0ZsYXNocG9pbnQgUHJvc2VseXRlIC0gV2VhcG9uO1Byb3BlbGxlcnMgb2YgdGhlIFZlc3BpZHVuIEh1bnRlci1LaWxsZXI7UmFpbm1ha2VyIE1LLlZJSTtIZWFkIG9mIHRoZSBWZXNwaWR1biBIdW50ZXItS2lsbGVyO0NvbmUgb2YgdGhlIFZlc3BpZHVuIEh1bnRlci1LaWxsZXI7UGF5bG9hZCBvZiB0aGUgVmVzcGlkdW4gSHVudGVyLUtpbGxlcjtBdG9taWMgUmF5IFRocnVzdGVycyBQcmVtO0Jsb29keSBCYWJ5IEludm9rZXI7VGhlIFdhcmQgb2YgT2RvY29lbGV1cztKYWdnZWQgSG9ub3IgQnJhY2VyO0phZ2dlZCBIb25vciBCYW5uZXI7UHJvdm9jYXRpb24gb2YgUnVpbiBNYXNrO0JlbHQgb2YgdGhlIEJsYWRlZm9ybSBBZXN0aGV0ZTtHZW5qaSBTd29yZCBQcmVtaXVtIEVkaXRpb24gQmxhY2tlbmVkIEVkZ2UgU3R5bGU7Q29tcGxldGUgSGVsbSBvZiB0aGUgRGFyayBNb29uIFN0YWxrZXI7TWQ5519bnQgb2YgdGhlIFdpbmdlZCBTZW50aW5lbDtHb2xkZW4gTW9vbmZhbGwgUHJlbTtBcm1vciBvZiB0aGUgV2luZ2VkIFNlbnRpbmVsO0dvbGRlbiBUd2lsaWdodCBTY2hpc207RXllcyBvZiBBcmRlbm9rO1Nob2NrIG9mIHRoZSBBbnZpbCBQcmVtO0NyZXNjZW50IEJvdyBBcnJvdyBvbmx5O0dvbGRlbiBNYXNrIG9mIE1ldGlyYTtBcnJvd3Mgb2YgdGhlIENvYXN0YWwgS2luZ2RvbTtBeGlhIG9mIE1ldGlyYTtOZWNrbGFjZXMgb2YgdGhlIENvYXN0YWwgS2luZ2RvbTtQdWxzYXIgUmVtbmFudCBQcmVtO0JyYWNlcnMgb2YgdGhlIFdpbnRlcm1vb247QmVsdCBvZiB0aGUgQ29hc3RhbCBLaW5nZG9tO0dvdGhpYyBXaGlzcGVyIENhcGU7R290aGljIFdoaXNwZXIgQmVsdDtDb2RpY2lsIG9mIHRoZSBWZWlsZWQgT25lcztBdm93YW5jZSBvZiB0aGUgVmVpbGVkIE9uZXM7TWFuaWZvbGQgUGFyYWRveCBQQSBBcmNhbmEgU3R5bGUgMztCdWNrbGVyIG9mIHRoZSBCcmFtYmxlIExvcmQ7QXJtbGV0cyBvZiBUZWFyZHJvcCBJY2U7QmVsdCBvZiB0aGUgQnJhbWJsZSBMb3JkO0NvbmNvcmQgUmV2ZXJzaW9uIFVQO0NvbmNvcmQgRG9taW5pb247UGhhbnRvbSBDb25jb3JkIFByZW07TWFjZSBvZiBWaW5jZXJlIEF0YWNrIEVmZmVjdDtEZXNlcnQgQnVybiBNb3J0eSBJbW1vcnRhbDtEZXNlcnQgQnVybiBTYWRkbGU7RGVzZXJ0IEJ1cm4gT3V0Zml0O0Rlc2VydCBCdXJuIENhcDtEZXNlcnQgQnVybiBDcm9zc2JvdztEZW1vbiBGb3JtIG9mIHRoZSBGb3VsZmVsbCBDb3JydXB0b3IgVVA7Q2hhc20gb2YgdGhlIEJyb2tlbiBDb2RlIEFybW9yO1NwYW4gb2YgU29ycm93O1JhaW5ib3cgQ29sb3IgZm9yIFRCO0ZyYWN0YWwgSG9ybnMgb2YgSW5uZXIgQWJ5c20gVVA7Q2hhc20gb2YgdGhlIEJyb2tlbiBDb2RlIEhlbG07U2N5dGhlcyBvZiBTb3Jyb3c7U2lnaWwgb2YgdGhlIEJhcnJpZXIgUm9ndWU7R29sZGVuIFBpc2NlYW4gUHVsdmVyaXplcjtXaGlza3kgdGhlIFN0b3V0IEFydGlmYWN0IFByZW07VHVza3Mgb2YgRGlzdGluZ3Vpc2hlZCBFeHBlZGl0aW9uYXJ5O0NvYXQgb2YgRGlzdGluZ3Vpc2hlZCBFeHBlZGl0aW9uYXJ5O0tuaWZlIG9mIERpc3Rpbmd1aXNoZWQgRXhwZWRpdGlvbmFyeTtIaWRkZW4gVmVjdG9yIC0gQmxhZGU7SGlkZGVuIFZlY3RvciAtIEhhdDtIaWRkZW4gVmVjdG9yIC0gQmVsdDtIaWRkZW4gVmVjdG9yIC0gQXJtb3I7QXJtb3Igb2YgR3JpbSBEZXN0aW55O0JsaXN0ZXJpbmcgU2hhZGUgZm9yIEFyY2FuYTtDbG9hayBvZiB0aGUgRGFyayBSZXNlcnZvaXI7Q3Jvd24gb2YgdGhlIE1hbGlnbmFudCBSdWxlO1dLIFNoaXZhZ3VhcmQgU2hvdWxkZXJzO0F4ZSBvZiBWaWxlIFJlbGlxdWFyeTtUZW1wZXN0IEhlbG0gb2YgdGhlIFRodW5kZXJnb2QgKyBSaWdodGVvdXMgVGh1bmRlcmJvbHQ7VGhlIEludGVybmF0aW9uYWwgMjAxOCBDdXJzb3IgUGFjaztXZWF0aGVyIFJhaW47Uml2ZXIgVmlhbCBPaWw7R2FiZSBOZXdlbGwgTWVnYS1LaWxsO1RlcnJvcmJsYWRlIEVORyBBcmNhbmUgdm9pY2U7V2luZHJhbmdlciBBcmNhbmEgc3R5bGUgMSAoQmx1ZSBCaXJkKSArIEZ1bGwgV1IgaW1tb3J0YWw7QWJhZGRvbiBSRUQgTWVnYVBhY2s7RGFya2JyZXcgRW5mb3JjZXIgYW5kIEV0ZXJuYWwgUmFkaWFuY2UgQmxhZGVzIGFuZCBNaWRhcyBLbnVja2xlcyBNZWdhUGFjaztBQU1lZ2FQYWNrO0FudGltYWdlIFdlaSBGZW1hbGUgKFlvdSBjYW4gYWRkIFdlYXBvbiBhbmQgSGVhZCk7QmVhc3RtYXN0ZXIgTWVnYVBhY2s7QnJpc3RsZWJhY2sgTWVnYVBhY2s7Q2xvY2t3ZXJrIE1lZ2FQYWNrO0RLIFBlcnNvbmEgRGF2aW9uO01vbnVtZW50cyBvZiB0aGUgTmF0dXJhbCBEZW1pdXJnZTtOaWdodHN0YWxrZXIgTWVnYVBhY2sgc2V0O0xlZ2lvbiBDb21tYW5kZXIgTW9kTWFrZXIgTWVnYVBhY2s7TWFycyBUSTEwIENvbGxlY3RvcnMgQ2FjaGUgTWVnYVBhY2s7UHVkZ2UgVEkxMCBDb2xsZWN0b3JzIENhY2hlIE1lZ2FQYWNrO1F1ZWVuIG9mIFBhaW4gQXJjYW5hIE1lZ2FQYWNrO1NsYXJrIE1lZ2FQYWNrIE5ldztQbHVuZGVyIG9mIHRoZSBTYXZhZ2UgTW9uZ2VyOyAxMjN8fHw=