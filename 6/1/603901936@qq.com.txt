bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogNjI4MUVBQTAtODZDQi0xMUVCLTgwRUMtMzhGM0FCMzBCRUUzIDExMXx8fCAyMjI6OiAkMnkkMTAkTnpGbE1XWTBNVEF6TVRZMk9UaG1aLjVOdUNMOVVidE1TYWFkLlhrUmh2ci8uaXNLbG1mUG0gMjIyfHx8IDEyMzo6IEFnaGFuaW1zIEludGVyZGltZW5zaW9uYWwgQmFieSBSb3NoYW47Q2hpY2tlbiBIdXQgV2FyZDtUaGVGYXRSYXQgV2FycmlvciBTb25ncyBNdXNpYyBQYWNrIE9mZmljaWFsO01hZ3VzIEFjY29yZDtEYXJrIEFydGlzdHJ5IENhcGUgUHJlbTtEYXJrIEFydGlzdHJ5IEhhaXIgMXN0IFN0eWxlO0hlYXZlbi1QaWVyY2luZyBQYXVsZHJvbnM7RGFyayBBcnRpc3RyeSBCZWx0IFByZW07Q292ZW5hbnQgb2YgdGhlIERlcHRocyBTcGlyaXQ7QXBvZ2VlIG9mIHRoZSBHdWFyZGlhbiBGbGFtZTtUdW5pYyBvZiB0aGUgV2FuZGVyaW5nIEZsYW1lO01hc3RlciBvZiB0aGUgU2VhcmluZyBQYXRoIEhlYWQ7T2ZmLUhhbmQgV2VhcG9uIG9mIHRoZSBGb3JzYWtlbiBGbGFtZTtXZWFwb24gb2YgdGhlIEZvcnNha2VuIEZsYW1lO0p1Z2dlcm5hdXQgQXJjYW5hIEJsYWRlZm9ybSBMZWdhY3k7R2VuamkgU3dvcmQgUHJlbWl1bSBFZGl0aW9uIFNlcnJha3VyYSBTdHlsZTtKYWdnZWQgSG9ub3IgQmFubmVyO0xpbmVhZ2Ugb2YgdGhlIFN0b3JtbG9yZHMgLSBBcm1zO0JlbHQgb2YgdGhlIEJsYWRlZm9ybSBBZXN0aGV0ZTtQYXVsZHJvbnMgb2YgRXRlcm5hbCBIYXJ2ZXN0IFByZW07U2hhZG93IEZpZW5kIEFyY2FuYSBEZW1vbiBFYXRlcjtBcm1zIG9mIERlc29sYXRpb24gUHJlbTtIb3JucyBvZiB0aGUgQmV0cmF5ZXI7SGVsbC1TcGFyIEFuYXRoZW1hIE9ic2lkaWFuIEJsaWdodDtNdWxjdGFudCBQYWxsIG9mIHRoZSBDcmltc29uIFdpdG5lc3M7RmluIEtpbmdzIENoYXJtIG9mIEVtaW5lbnQgUmV2aXZhbCBFeGNlcHRpb25hbDtXYXJnb2Qgb2YgdGhlIEJsYWRla2VlcGVyO0NvZGljaWwgb2YgdGhlIFZlaWxlZCBPbmVzO0F2b3dhbmNlIG9mIHRoZSBWZWlsZWQgT25lcztNYW5pZm9sZCBQYXJhZG94IFBBIEFyY2FuYSBTdHlsZSAzO0dvdGhpYyBXaGlzcGVyIENhcGU7R290aGljIFdoaXNwZXIgQmVsdDtQaGFudG9tIEFzY2Vuc2lvbjtUcmFuc3ZlcnNhbnQgU291bCBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzO1NvdWwgRGlmZnVzZXIgUHJlbTtQaGFudG9tIEFzY2Vuc2lvbiBCZWx0O1J1YmljayBBcmNhbmEgd2l0aCBJbW1vcnRhbDtIZWFkIG9mIHRoZSBJbXBvc3NpYmxlIFJlYWxtO01hY2Ugb2YgQWVvbnMgUHJlbTtKZXdlbCBvZiBBZW9ucztDcmltc29uIEJyYWNlcnMgb2YgQWVvbnMgUHJlbTtDbGFzenVyZW1lIEluY3Vyc2lvbiBCZWx0O0ZhY2VsZXNzIE1hZG5lc3M7Qmxpc3NmdWwgS25hdmUgQ29hdDtNYXNrIG9mIHRoZSBDb25maWRhbnQ7Qmxpc3NmdWwgS25hdmUgUmFwaWVyO0ZsdXR0ZXJpbmcgQW1ldGh5c3QgVHJhcCArIEljb247QXJtb3Igb2YgdGhlIExveWFsIEZvbGQ7SGVhZGRyZXNzIG9mIHRoZSBMb3lhbCBGb2xkO01hbnRsZSBvZiB0aGUgV2hpc3BlcmVkIEJvbmQ7Rm9jYWwgUmVzb25hbmNlIFYgMy4wO1NvdWwgb2YgdGhlIFNsYXllciBQcmVtO0dvbGRlbiBXeXJtd3JvdWdodCBGbGFyZSBQcmVtO0Rpc2NpcGxlIG9mIHRoZSBXeXJtd3JvdWdodCBGbGFtZTtHbG9yeSBvZiB0aGUgRWxkZXJmbGFtZSAtIE5lY2s7VG9ybWVudGVkIENyb3duO1Rvcm1lbnRlZCBTdGFmZiBvZiBFbWluZW50IFJldml2YWwgRXhjZXB0aW9uYWw7VGFpbCBvZiBDaHJvbm9wdGljIFN5bnRoZXNpcztHYXJiIG9mIHRoZSBTYWNjaGFyaW5lIFNhYm90ZXVyO1RoZSBEdXNrYmxvb20gVHJpY2tzdGVyIEJhY2s7VGhlIFN1bmJyZWV6ZSBCaXJ0aHJpZ2h0O0NyaW1zb24gSGVhcnRzIG9mIE1pc3J1bGU7VGhlIER1c2tibG9vbSBUcmlja3N0ZXIgT2ZmLUhhbmQ7SGVsbSBvZiB0aGUgRGFyayBNb29uIFN0YWxrZXI7TWQ5519bnQgb2YgdGhlIFdpbmdlZCBTZW50aW5lbDtHb2xkZW4gTW9vbmZhbGwgUHJlbTtHb2xkZW4gVHdpbGlnaHQgU2NoaXNtO1NpbGVudCBXYWtlIG9mIHRoZSBDcmltc29uIFdpdG5lc3M7QnJhY2VycyBvZiB0aGUgU2FjcmVkIEh1bnQ7RnJvc3RnbGFkZSBGYW1pbGlhciBIYXQ7TGVncGxhdGVzIG9mIHRoZSBCb3JlYWwgV2F0Y2g7UXVpdmVyIG9mIHRoZSBLaGEtUmVuIEZhaXRoZnVsO1Nob3VsZGVycyBvZiB0aGUgU2FjcmVkIEh1bnQ7TW9uYXJjaCBCb3cgUHJlbTtDcm93biBvZiB0aGUgUm95YWwgRGVjcmVlO1JhaW1lbnRzIG9mIHRoZSBFbWluZW5jZSBvZiBSaXN0dWw7RG90YUNpbmVtYSAtIFF1ZWVuIG9mIFBhaW4gU3BlbGxzO0dvbGRlbiBCbG9vZGZlYXRoZXIgRmVhc3Q7Um95YWwgRGVjcmVlIFdoaXAgQXR0YWNrO0hpZGRlbiBWZWN0b3IgLSBBcm1vcjtIaWRkZW4gVmVjdG9yIC0gQmVsdDtIaWRkZW4gVmVjdG9yIC0gSGF0O0hpZGRlbiBWZWN0b3IgLSBCbGFkZTtEb3RhIDIgQ2hhbmdlciBFZGl0aW9uIEh1bnRlcnMgSG9hcmQgb2YgdGhlIENyaW1zb24gV2l0bmVzcztUaW5lcyBvZiBUeWJhcmE7QXJtb3Igb2YgdGhlIFR3aW4gQmxhZGVzO0hlYXJ0bGVzcyBIdW50IC0gSGVhZDtNYXJrIG9mIHRoZSBGaXJzdCBIdW50IEhhcnZlc3RlZDtCZW5ldm9sZW50IENvbXBhbmlvbiBQcmVtO0RhcmtmYWxsIFdhcmRlbiBCcmFjZXJzO1NwaXJpdCBvZiB0aGUgU2FjcmVkIEdyb3ZlIC0gQmFjaztDcmVzY2VudCBCb3cgQXJyb3cgb25seTtHb2xkZW4gTWFzayBvZiBNZXRpcmE7QXJyb3dzIG9mIHRoZSBDb2FzdGFsIEtpbmdkb207TnVrdW1vO05lY2tsYWNlcyBvZiB0aGUgQ29hc3RhbCBLaW5nZG9tO1B1bHNhciBSZW1uYW50IFByZW07VEktMTAgQmxpbmsgbHZsIDIgRWZmZWN0O1RJLTggU2Vhc29uYWwgQ3JlZXAgRGVueSBFZmZlY3Q7VEktOSBUZWxlcG9ydCBsdmwgMyBFZmZlY3Q7Q29ycHNlIEhpdmUgb2YgR3JpbSBSZWZvcm1hdGlvbjtBcm1vciBvZiBHcmltIFJlZm9ybWF0aW9uO1BhbGUgQXVndXIgUHJlbTtIZWxtIG9mIEdyaW0gUmVmb3JtYXRpb247R29sZGVuIFBhbGUgTWF1c29sZXVtO0Jsb3Nzb20gb2YgdGhlIE1lcnJ5IFdhbmRlcmVyO0Nyb3duIG9mIHRoZSBBZ2VsZXNzIEZhZTtHdWlzZSBvZiB0aGUgTWFzdGVyIE5lY3JvbWFuY2VyO1BsYWd1ZSBCYXJvbiBIYXQ7U3VsbGVuIFJhbXBhcnQ7R29sZGVuIFN1bGxlbiBIb2xsb3cgUHJlbTtTdWxsZW4gSGFydmVzdDtTdWJtZXJnZWQgSGF6YXJkIFByb3BlbGxlcjtSb2xsZXJtYXdzdGVyIFByZW07U3VibWVyZ2VkIEhhemFyZCBMYXVuY2hlcjtTdWJtZXJnZWQgSGF6YXJkIEh1bGw7QXJjYW5pYyBSZXNvbmFuY2UgQmVhbTtGcm9zdG1vb3QgRnJvc3RpdnVzIFRyZWU7QXJtb3Igb2YgdGhlIEltcGVyaWQ5519cyBDb21tYW5kO0hlbG0gb2YgdGhlIFNhdmFnZSBNb25nZXI7U2hvdWxkZXJzIG9mIHRoZSBJY2V3cmFjayBNYXJhdWRlcjtCaXR0ZXIgTGluZWFnZSBJbW1vcnRhbCBBeGVzO0FiYWRkb24gUkVEIE1lZ2FQYWNrO0FudGlNYWdlIFJFRCBNZWdhUGFjaztMZWdpb24gQ29tbWFuZGVyIE1vZE1ha2VyIE1lZ2FQYWNrO1dpbmRyYW5nZXIgQXJjYW5hIHN0eWxlIDEgKEJsdWUgQmlyZCkgKyBGdWxsIFdSIGltbW9ydGFsO0RhcmticmV3IEVuZm9yY2VyIGFuZCBFdGVybmFsIFJhZGlhbmNlIEJsYWRlcyBhbmQgTWlkYXMgS251Y2tsZXMgTWVnYVBhY2s7TW9ua2V5IEtpbmcgQXJjYW5hIE1lZ2FQYWNrO0t1bmtrYSBJbW1vcnRhbHMgTWVnYVBhY2s7U2xhcmsgTWVnYVBhY2sgTmV3O091dHdvcmxkIERldm91dmVyIE1lZ2FQYWNrO1Vyc2EgSW1tb3J0YWxzIE1lZ2FQYWNrO0F4ZSBmdWxsIEltbW9ydGFscyBNZWdhcGFjayBhbHQ7RG9vbSBJbW1vcnRhbHMgTWVnYVBhY2s7RG90YTJDaGFuZ2VyIEhhbGxvd2VlbiBQdWRnZSBmcm9tIEJhZHdvcmtzaG9wZXI7U3Rvcm0gU3Bpcml0IE1lZ2FQYWNrO1dyYWl0aCBLaW5nIEFyY2FuYSBNZWdhUGFjaztJY2Vib3VuZCBGbG9yZXQ7T2dyZSBNYWdpIEltbW9ydGFscyBBcmNhbmEgTWVnYVBhY2s7R29sZGVuIERhcmsgTWF3IEluaGliaXRvIGFuZCBHb2xkZW4gUHJvZmFuZSBVbmlvbiBhbmQgR29sZGVuIERyZWFkIFJlcXVpc2l0aW9uIExpZmVzdGVhbGVyIEltbW9ydGFscyBNZWdhcGFjaztFYXJ0aHNoYWtlciBNZWdhUGFjayBOZXc7TWVkdXNhIE1lZ2FQYWNrIE5FVztOeXggQXNzYXNzaW4gTWVnYVBhY2s7IDEyM3x8fA==