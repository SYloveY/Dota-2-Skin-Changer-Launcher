bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogRjAyOTg5MkItNzkzQi01RDQ5LTg4QkYtMkM2MDBDRDNEQ0QyIDExMXx8fCAyMjI6OiAkMnkkMTAkT0RWaU1HUmhZalF3Wm1FeFpESTJaT0FIOXFOY2dXeEw2ZTdha1VKNjNJaUY5ejh2SWJmRFMgMjIyfHx8IDEyMzo6IFRvaWxldCBTaHJpbmU7Um9ja3NoZWxsIFNjb3V0O0hlcm9lcyBXaXRoaW4gTXVzaWMgUGFjayBWIDIuMTtFbmlnbWEgVmlsYXQgQmxhY2tIb2xlO0Z1cmlvbiBTaWxhIFplbWxpO05hZ2EgdWx0IFZpdGFzO1dEIHVsdCBEYWdlc3Rhbi1EYWdlc3RhbjtDdXN0b20gRGFzaGJvYXJkIDkxO1N0YWZmIG9mIFBlcnBsZXggUHJlbTtQbGFndWVyb2FkIEFwb3RoYWNhcnkgQmFjaztUZWNoaWVzIEFubm91bmNlcjtLZXJ2ZXJvcyB0aGUgSG91bmQgb2YgQ2hhb3M7VGlueSBCYWQgVG8gVGhlIEJvbmU7U21hbGwgQmFkIFRvIFRoZSBCb25lO0xhcmdlIEJhZCBUbyBUaGUgQm9uZTtNZWRpdW0gQmFkIFRvIFRoZSBCb25lO0Zyb3N0bW9vdCBUcmVlO1NoYW1ibGluZyBEcmF1ZztIZWxtIG9mIHRoZSBTaGFtYmxpbmcgRHJhdWc7QXJtb3Igb2YgdGhlIFNoYW1ibGluZyBEcmF1ZztCcmFjZXJzIG9mIERpcmdlc3dvcm4gRHluYXN0eTtQYXVsZHJvbiBvZiB0aGUgQ2hpc2VsZWQgR3VhcmQ7SGVsbSBvZiB0aGUgUmhpbm9jZXJvcyBPcmRlcjtTaGFkb3cgb2YgdGhlIEJ1cm5pbmcgU2NhbGU7RW1iZXJiYXJrIEFybXM7RW1iZXJiYXJrIEJlYXJkO0VtYmVyYmFyayBSb290cztFbWJlcmJhcmsgU2hvdWxkZXJzO1Zpc2FnZSBvZiB0aGUgU2xlZXBsZXNzIFNlY3Q7Q292ZXIgb2YgdGhlIFNsZWVwbGVzcyBTZWN0O0FuY2VzdHJhbCBIZWFkZHJlc3M7RGl2aW5hdGlvbnMgb2YgdGhlIE5vdGhsIEhhemUgU3Rhc2g7R29sZGVuIE5vdGhsaWMgQnVyZGVuO1NraXJ0IG9mIFBldGFsdW5hO0hhcnZlc3RlZCBTaG91bGRlcnM7R2xvd2JhdDtGaXJlc3RhcnRlciBHYXMgUHVtcDtIYXQgb2YgRW1waXJpYyBJbmNlbmRpYXJ5O0NhcGUgb2YgRW1waXJpYyBJbmNlbmRpYXJ5O01hc2sgb2YgdGhlIEJsb29kZm9yZ2U7VGhpcnN0IG9mIEV6dHpob2sgQnVuZGxlIFByZW07WXVsc2FyaWFzIE1hbnRsZSBQcmVtO0ljZSBCbG9zc29tO0NhcGUgb2YgdGhlIENyeXN0YWxsaW5lIENvbWV0O01hc2sgb2YgdGhlIEdhbHZhbml6ZWQgU3Bhcms7QW5ndWlsbGEgUHJlbTtQeXJleGFlYyBGbG9lO0JhcmRpbmcgb2YgQ2hpbWVyaWMgUmFwcG9ydDtXaGlzcGVycyBvZiB0aGUgRGFtbmVkIFdpbmdzO0hlbG0gb2YgdGhlIFdpbmdlZCBTZW50aW5lbDtNb3VudCBvZiB0aGUgUmFpZGZvcmdlZCBSaWRlcjtIZWxtIG9mIHRoZSBFbnRoYWxlZW4gRHJhZ29uO1RoZSBTY2FybGV0IEZsYXJlIE5lY2s7Um9iZSBvZiBTbW9sZGVyaW5nIEpvdXJuZXk7RW1weXJlYW47RXRlcm5hbCBKaWFuIG9mIEZvcnR1bmU7VGhlIExlZWNoIFF1ZWVuIEhlYWQ7RXRlcm5hbCBKaWFuIG9mIEhvcGU7Q3Jvd24gb2YgdGhlIE11cmlkIERpdmluZTtHb2xkZW4gU3VsbGVuIEhvbGxvdyBWIDMuMjtQYWRkYXBvbiBvZiBSaWJiaXRhciBWIDQuMDtCZWFrIG9mIHRoZSBTdG9ybWNyb3c7SGVsbSBvZiBHcmltIERlc3Rpbnk7RnVyeSBvZiB0aGUgRGFtbmVkIEJydXNoO1NpbGVuY2Ugb2YgdGhlIFN0YXJ3ZWF2ZXIgLSBBcm1vcjtFeWUgb2YgdGhlIEZhdGV3ZWF2ZXIgSG9vZDtUb2xsaW5nIFNoYWRvd3M7TWFuaWFzIE1hc2sgUHJlbTtLb1RMIC0gVGkgbmUgcHJvaWRlc2g7UW9QIFNjcmVhbSBmcm9tIFRSQVNIRVI7UGhhbnRvbSBBc3Nhc2luIEVORyBBcmNhbmUgdm9pY2U7WmV1cyBFTkcgQXJjYW5lIHZvaWNlO1Ntb2tlIFNub29wIERvZztXaW50ZXIgV3l2ZXJuIFVsdCAtIE5lIGJlaXRlIG1vZWdvIERydWdhO01hZ3VzIEFwZXg7QXJtcyBvZiBEZXNvbGF0aW9uO01hdGNoIFJlYWR5IC1TdGFydCB0aGUgZ2FtZSBhbHJlYWR5O0dvcG9QdWRnZTtBbmNpZW50IE1hZ3VzIFN0eWxlIDI7RW5kbGVzcyBOaWdodDtBcm1zIG9mIEJ1cm5pbmcgVHVybW9pbCBTZXQgViAzLjE7Q2ljYXRyaXggUmVnYWxpYSBXaGl0ZTtQb3dkZXJzbGVkIFJvb2tlcnk7VGltYmVydGhhdztGYXRlIE1lcmlkaWFuO0dyYXNwIG9mIHRoZSBSaXZlbiBFeGlsZTtSZWxpY3Mgb2YgdGhlIFN1bmRlcmVkIEtpbmc7R3VhcmRpYW4gb2YgdGhlIFNhcHBoaXJlIEZsYW1lO09yZGVyIG9mIHRoZSBXYW5kZXJpbmcgRmxhbWUgViAyLjE7S25pZ2h0IG9mIHRoZSBCdXJuaW5nIFNjYWxlIFYgMi4xO0hlYXZ5IEJhcmJlZCBBcm1vciBTZXQ7TWlzdHJlc3Mgb2YgdGhlIExvbmcgTmlnaHQ7TG9yZCBvZiBDaHJvbm9wdGljIFN5bnRoZXNpcztCbGFjayBOaWhpbGl0eTtDb3JydXB0aW9uIG9mIHRoZSBWaXJ1bGVudCBLcmFpdDtBc2NlbmRhbmNlIG9mIHRoZSBSaW1lIExvcmQgMXN0IFN0eWxlO1JpZ2h0ZWQ5519cyBUaHVuZGVyYm9sdCBhbmQgQXJjYW5hIE1lZ2FQYWNrO1RoZSBDaGFpbmVkIFNjcmliZTtJcmUgb2YgTW9sdGVuIFJlYmlydGg7Q2hpbGwgb2YgdGhlIEtlZXBlcnMgR2F6ZTtOYXJjaXNzaXN0aWMgTGVlY2g7UmVkcmFnZSBDcmF3bGVyO1BvbGFyIE5pZ2h0O0V0ZXJuYWwgSGFydmVzdDtNYXplIFdhdGNoZXIgU2V0OyAxMjN8fHw=