bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogNEM1OUExQTgtNUVCRC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAwIDExMXx8fCAyMjI6OiAkMnkkMTAkWVRFeVltSTBOVGMzT0dJMFpUWTVOdThza3hhbkQwQ3ZNY3NjeDIzQzZEYkouY1NNSTlaaGEgMjIyfHx8IDEyMzo6IE1hbmlmb2xkIFBhcmFkb3ggUEEgQXJjYW5hIFN0eWxlIDM7QXJjYW5hIENyeXN0YWwgTWFpZGVuIEZyb3N0IEF2YWxhbmNoZTtGYWl0aGZ1bCBGb2xsb3dlcnM7RG90YSAyIENoYW5nZXIgRWRpdGlvbiBIdW50ZXJzIEhvYXJkIG9mIHRoZSBDcmltc29uIFdpdG5lc3M7QWNvbHl0ZSBvZiB0aGUgTG9zdCBBcnRzIHdpdGggVGF1bnQgQXR0YWNrcztTb3VsIG9mIHRoZSBTbGF5ZXIgUHJlbTtIb29kd2luayBHbGVpcG5pcjtFZGljdCBvZiBTaGFkb3dzIFZhbGVlcmEgdG8gUmlraTtEZWNsYXJhdGlvbiBvZiB0aGUgRGl2aW5lIFNoYWRvdyBEaXJlIFRvd2VycztSaXZlciBWaWFsIEVsZWN0cmlmaWVsZDtEZWNsYXJhdGlvbiBvZiB0aGUgRGl2aW5lIExpZ2h0IFJhZGlhbnQgVG93ZXJzO1dlYXRoZXIgQmx1ZSBTa3kgZnJvbSBTb3VwIGZvciBTbHV0cztUZXJyYWluIC0gU2FuY3R1bXMgb2YgdGhlIERpdmluZTtEYXJrIE1vb24gQmFieSBSb3NoYW47UXVlZW4gb2YgUGFpbiBBcmNhbmEgTWVnYVBhY2s7QW50aW1hZ2UgV2VpIEZlbWFsZSAoWWQ5519IGNhbiBhZGQgV2VhcG9uIGFuZCBIZWFkKTtQdXBwZXQgUHVkZ2UgUGVyc29uYSAoeWQ5519IGNhbiBhZGQgSG9vaykgVVA7QWJhZGRvbiBSRUQgTWVnYVBhY2s7V2luZHJhbmdlciBBcmNhbmEgc3R5bGUgMSAoQmx1ZSBCaXJkKSArIEZ1bGwgV1IgaW1tb3J0YWw7QXhlIGZ1bGwgSW1tb3J0YWxzIE1lZ2FwYWNrIGFsdDtHaWFudCBIdW50ZXIgViAyLjE7VHJhcHBpbmcgb2YgdGhlIFNlY3JldCBNZWRpY2luZTtUZW1wdGF0aW9uIG9mIHRoZSBNb3RoYmluZGVyO0Rvb20gSW1tb3J0YWxzIE1lZ2FQYWNrO1BsYW5ldGZhbGwgYW5kIEp1ZGdlbWVudCBvZiB0aGUgRmFsbGVuIGFuZCBCcmFjZXJzIG9mIHRoZSBDYXZlcm4gTHVtaW5hciBBUkNBTkEgTWVnYVBhY2s7TGVnaW9uIENvbW1hbmRlciBNb2RNYWtlciBNZWdhUGFjaztFc3NlbmNlIE9mIFRoZSBEYXJrIE1vb247TWFuaWZvbGQgUGFyYWRveCBHb3RoaWMgSHVudGVyO1NwaXJpdCBCcmVha2VyIE1lZ2FQYWNrO1NlcmFwaCBDZWxlc3RpYWwgU2V0O0ZvcmV0ZWxsZXJzIE9hdGg7Q2xpbmt6IE1lZ2FQYWNrO05pZ2h0c3RhbGtlciBNZWdhUGFjayBzZXQ7R3J1ZXNvbWUgRW1icmFjZTtPZ3JlIE1hZ2kgSW1tb3J0YWxzIEFyY2FuYSBNZWdhUGFjaztCYWxhbmNlIG9mIHRoZSBCbGFkZWtlZXBlcjtVcnNhIEltbW9ydGFscyBNZWdhUGFjazsgMTIzfHx8