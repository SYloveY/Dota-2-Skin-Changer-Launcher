bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogIDExMXx8fCAyMjI6OiAkMnkkMTAkWVdKa09ESXhPRE13WWpoaU9HUTBZT2xiSVBjdmxaTVkuT09ERXhqeUEwbU1CTmJJSlk5Wm0gMjIyfHx8IDEyMzo6IE1hbGVmaWMgRHJha2VzIEhvb2Qgb2YgdGhlIENyaW1zb24gV2l0bmVzcztQbGF0aW5nIG9mIHRoZSBOZXRoZXJzd2FybSBWYW5ndWFyZDtTb2xhciBGb3JnZTtTb2xhciBHeXJlO1RlbXBlc3QgSGVsbSBvZiB0aGUgVGh1bmRlcmdvZCBQcmVtO0dvbGRlbiBJbW1vcnRhbCBQYW50aGVvbjtUaHVuZGVyZ29kKnMgQmFyZSBBcm1zO0FyYyBvZiB0aGUgU292ZXJlaWduIEJlbHQ7R3JlYXQgU2FnZSpzIFJlY2tvbmluZztBcm1vciBvZiB0aGUgRGVtb24gVHJpY2tzdGVyO1Nob3VsZGVycyBvZiB0aGUgRHJhZ29uIFBhbGFjZTtTdGFmZiBvZiBHdW4tWXU7RGFya2VzdCBEdW5nZW9uIEFubm91bmNlcjtEYXJrZXN0IER1bmdlb24gTWVnYS1raWxscztEcmVzcyBvZiB0aGUgQmV3aXRjaGluZyBGbGFyZTtRdWVlbiBvZiBNaXNydWxlIEFybXM7SGVhZHJlc3Mgb2YgdGhlIERpdmluZSBGbGFtZTtUaGUgU2NhcmxldCBGbGFyZSBOZWNrO1NwaXJlcyBvZiB0aGUgUHJvcGhldCBGb3JldG9sZDtUYWlsIG9mIHRoZSBFcXVpbGlicml1bTtHb2xkZW4gQmFzaGVyIG9mIE1hZ2UgU2t1bGxzO0xpbmVhZ2UgT2ZmaGFuZCBCbGFkZSBvZiBCcm9rZW4gU2NhbGU7U2hvdWxkZXIgUGxhdGUgb2YgdGhlIEZlcnZlbnQgQ29uc2NyaXB0O0dpZnQgb2YgdGhlIEF3YWtlbmVkO0xpbmVhZ2UgQmVsdCBvZiBCcm9rZW4gU2NhbGU7QnJhY2VycyBvZiB0aGUgU3Vydml2b3I7TGluZWFnZSBBcm1vciBvZiBCcm9rZW4gU2NhbGU7QXhlIEJsYWNrdGhvcm4gQXJtb3I7RXhlY3V0aW9uZXIqcyBUcm9waGllcztSYW1wYW50IE91dHJhZ2U7R3VhcmQgb2YgdGhlIFJlZCBNaXN0O0F4ZSBvZiBQaHJhY3RvcztUem9rYWxvdGxzIERyZWFkIEhlYWQ7VEk5IENhY2hlIEJhbmUgRW5kbGVzcyBOaWdodG1hcmUgU2hvdWxkZXI7TmlnaHQgVGVycm9ycyBCZWx0O1JvdWdoIFJpZGVyKnMgTXVnZ2luKiBNYXNrO0J1cm5pbmcgSXJvbjtTYWNyZWQgIGZpcmUgU2hvdWxkZXI7VGhpcnN0IG9mIEV6dHpob2sgQmxhZGU7VGhpcnN0IG9mIEV6dHpob2sgLSBPZmYtSGFuZDtMeWNvc2lkYWUqcyBCcm9vZDtFdGVybmFsIE1hY2hpbmUgSGVhZDtZdWxzYXJpYSpzIE1hbnRsZTtHb2xkZW4gUmFiaWQgV2F0Y2hjb2c7R2xvb21ib2I7Q29uZmlkYW50IG9mIHRoZSBTYWNjaGFyaW5lIFNhYm90ZXVyO0xpbmVhZ2UgTWFzayBvZiBQZXRhbHVuYTtEYXJrY2xhdyBFbWlzc2FyeSBEcmVzcztHb2xkZW4gTm90aGxpYyBCdXJkZW4gUHJlbTtQaXBlIG9mIERlenVuO0RpdmluYXRpb25zIG9mIHRoZSBOb3RobCBIYXplIEJyYWNlcnM7QmxhY2sgSWNlIENvbnN0ZWxsYXRpb24gLSBBcm1zO0JsYWNrIEljZSBDb25zdGVsbGF0aW9uIC0gQ2xvYWs7R2F6ZSBvZiB0aGUgWmVidWxvbiAtIHNldCBIZWFkO0JsYWNrIEljZSBDb25zdGVsbGF0aW9uIC0gTGVncztCbGFjayBJY2UgQ29uc3RlbGxhdGlvbiAtIFF1aXZlcjtQYXVsZHJvbnMgb2YgWmVidWxvbjtDb21wbGV0ZSBBbGdpZCBMZWdhY3k7TWFzayBvZiB0aGUgTW9udW1lbnQgb2YgUnVpbjtWaXNlIG9mIENyZWF0aW9uO1NoYXJkcyBvZiB0aGUgTW9udW1lbnQgb2YgUnVpbjtCcmFjZXJzIG9mIHRoZSBDYXZlcm4gTHVtaW5hcjtHYW1iaXRzIG9mIE5pc2hhaSBCZWx0O1RvdGVtIG9mIERlZXAgTWFnbWE7TWFjZSBvZiBBZW9ucztGcm96ZW4gVm9pZCBTaG91bGRlcjtWaXNhZ2Ugb2YgdGhlIEVtZXJhbGQgQWdlO1ZpcmlkdXMgTGVnZ2luZ3M7RnJvemVuIFZvaWQgQXJtcztTZWVyIG9mIEluZmluaXR5IFNwYWNlIEVpZG9sb247R29sZGVuIEF0b21pYyBSYXkgVGhydXN0ZXJzO1NpZ2lsIE1hc2sgb2YgdGhlIEJsYWRla2VlcGVyO1NlcnJha3VyYTtQYW50YWxvb25zIG9mIHRoZSBCbGFkZWtlZXBlcjtCYXR0bGUgQmFubmVyIG9mIHRoZSBNYXNrZWQ7UHJheWVyIEJlYWRzIG9mIHRoZSBCbGFkZWtlZXBlcjtWYWxlbnRpbmUgV2FyZDtCbGFkZUJpdGVyO1RoZSBDcm93KnMgTmVzdDtQZWcgTGVnIG9mIHRoZSBSZW5lZ2FkZTtFcm5lc3QgRG8gb2YgdGhlIFZveWFnZXI7R2VudWluZSBBZ2VkIFNwaXJpdCBvZiBUaWRlO0NsYWRkaXNoIFZveWFnZXIqcyBTZWNvbmQgQ2hhbmNlO0NvbXBsZXRlIEhlbG0gb2YgdGhlIERhcmsgTW9vbiBTdGFsa2VyO0xpbmVhZ2UgTWQ5519bnQgb2YgdGhlIFJhaWRmb3JnZWQgUmlkZXI7QXJtb3Igb2YgdGhlIFdpbmdlZCBTZW50aW5lbDtNdWxjdGFudCBQYWxsO0ZpbiBLaW5nKnMgQ2hhcm07R29kKnMgTWVyY3k7QXJlbmEgQ2hhbXBpb24gU3BlYXI7QXJlbmEgQ2hhbXBpb24gQXJtb3I7QXJlbmEgQ2hhbXBpb24gQmVsdDtTaG9jayBvZiB0aGUgQW52aWw7SG9ybiBvZiBMdW1pbm91cyBDcnlzdGFsO0hlbG0gb2YgUmlzaW5nIEdsb3J5O0hhcm5lc3Mgb2YgdGhlIEdhbGxvcGluZyBBdmVuZ2VyO1NlaXNtaWMgQmVyc2Vya2VyIEJyYWNlcnM7Qm93IG9mIHRoZSBCZWhvbGRlcjtEYXVnaHRlcnMgb2YgSHlkcm9waGlpbmFlO05pZ2h0c2lsdmVyIEdyeXBob247U2N5dGhlIG9mIEljZTtTdHJpa2Ugb2YgR2lsZGVkIFdvcnNoaXA7U292ZXJlaWduIG9mIHRoZSBNZW5hY2luZyBHdWlzZTtGbGlnaHQgb2YgdGhlIFVuZHlpbmcgTGlnaHQ7Q29tcGxldGUgR2F1bnRsZXRzIG9mIFNhY3JlZCBMaWdodDtIYWlyIG9mIHRoZSBHcmV5IEdhbGxhbnQ7UGF1bGRyb25zIG9mIHRoZSBHcmV5IEdhbGxhbnQ7UnVuZSBIYW1tZXI7TG9yZCBGb3ggQXJtb3I7TG9yZCBGb3ggSGVhZDtMb3JkIEZveCBXZWFwb247SGVsbCpzIEd1aWRlO0Fzc2Fzc2luYXRpb24gb2YgRGFyayBGZWF0aGVyIEhlYWQ7QXNzYXNzaW5hdGlvbiBvZiBEYXJrIEZlYXRoZXIgQmFjaztDb21wbGV0ZSBXaW5ncyBvZiB0aGUgRXRoZXJlYWwgTW9uYXJjaDtPcmIgb2YgUmVtaW5pc2NlbmNlO0N5Y2xlcyBvZiB0aGUgU2VyZW5lIFRhaWw7UGF1bGRyb24gUGVyY2g7RGVuZGkgRG9sbDtTY29yY2hpbmcgVGFsb247RG9vbXNkYXkgUmlwcGVyIFNob3VsZGVyO1RoZSBDcm93IEVhdGVyO0FybXMgb2YgdGhlIElyb24gSG9nO0FybXMgb2YgRGVzb2xhdGlvbjtIb3JucyBvZiBFdGVybmFsIEhhcnZlc3Q7UGF1bGRyb25zIG9mIEV0ZXJuYWwgSGFydmVzdDtCbG9vZGZlYXRoZXIgV2luZ3M7Q2hhaW4gb2YgRW5kdXJpbmcgVG9ybWVudDtCbGFkZSBvZiB0aGUgT2JzaWRpYW4gTmlnaHRtYXJlO1Byb25ncyBvZiBEZWxpZ2h0ZnVsIEFmZmxpY3Rpb247T3JkZXIgb2YgdGhlIFNpbHZlcmVkIFRhbG9uO0dvbGRlbiBIeWRyYWthbiBMYXRjaDtDbGF3IG9mIHRoZSBVbWl6YXIgQ3Jhd2xlcjtXYXZlY3V0dGVyO01hc2sgb2YgdGhlIFNjb3VuZHJlbDtTaGVsbCBvZiB0aGUgVW1pemFyIENyYXdsZXI7R3Jhc3BpbmcgQmx1ZGdlb247UGxhdGUgb2YgdGhlIENlbnR1cmlvbiBWYW5ndWFyZDtBcm1zIG9mIHRoZSBCcmVhY2ggV2FyZGVuO011aCBLZWVuIEd1bjtDb2xhciBvZiB0aGUgQXJkYWxhbiBJbnRlcmRpY3RvcjtIYXVudGVkIEh1bnRlciAtIEhlYWQ7RnVsbC1Cb3JlIEJvbmFuemE7QnJhY2VycyBvZiB0aGUgQXJkYWxhbiBJbnRlcmRpY3RvcjtTb3VsIERpZmZ1c2VyO0RpbWVuc2lvbmFsIFNlZXAgQmVsdDtTaGF0dGVyZWQgR3JlYXRzd29yZDtQYXVsZHJvbiBvZiB0aGUgU3Rvcm13cm91Z2h0IEFyYml0ZXI7TWFzayBvZiB0aGUgTm9ydGhlcm4gU2hvcmU7QXJtcyBvZiB0aGUgR3VhcmRpYW4gb2YgdGhlIFNhcHBoaXJlIEZsYW1lO0JlbHQgb2YgdGhlIEd1YXJkaWFuIG9mIHRoZSBTYXBwaGlyZSBGbGFtZTtDb21wbGV0ZSBHYXJiIG9mIHRoZSBDb3JyaWRhbiBNYWVzdHJvO0NvbXBsZXRlIFJvc2Ugb2YgdGhlIENvcnJpZGFuIE1hZXN0cm87VGhlIExpZ2h0bmluZyBPcmNoaWQ7Q2xhZGRpc2ggQ3VkZ2VsO1BpcmF0ZSBTbGF5ZXIqcyBCbGFjayBGbGFnO1RpZG9zYXVydXMgVGFpbDtUaWRvc2F1cnVzIEFybSBTY2FsZXM7Q29uc3BpY3VvdXMgQ3VscHJpdCBBcm1vcjtIZWxtIG9mIHRoZSBTYXZhZ2UgTW9uZ2VyO21vaGF3ayBzaG91bGRlcjtUd2luIEJsYWRlcyBvZiB0aGUgSW1wZXJpb3VzIENvbW1hbmQ7RXRlcm5hbCBJY2VicmVha2VyIC0gQXJtcztXaGlza3kgdGhlIFN0b3V0IEFydGlmYWN0O0NhcCBvZiB0aGUgR2xhY2llciBTZWE7VHVza3Mgb2YgdGhlIFdlYXRoZXJlZCBTdG9ybTtDb2F0IG9mIERpc3Rpbmd1aXNoZWQgRXhwZWRpdGlvbmFyeTtFdGVybmFsIEljZWJyZWFrZXIgLSBXZWFwb247TWFqZXN0eSBPZiBUaGUgQ29sb3NzdXMgLSBQZWJibGU7SGVsbWV0IG9mIHRoZSBGb3J0aWZpZWQgRmFicmljYXRvcjtCbGFja3NoaWVsZCBQcm90b2Ryb25lIExhc2VyO0JhbGxpc3RhIG9mIHRoZSBGb3J0aWZpZWQgRmFicmljYXRvcjtTaG91bGRlcnMgb2YgdGhlIEZvcnRpZmllZCBGYWJyaWNhdG9yO0NvbnRyb2xzIG9mIHRoZSBGb3J0aWZpZWQgRmFicmljYXRvcjtDb250ZXNzYSpzIENyZWVkIEhhdDtDb250ZXNzYSpzIENyZWVkIERyZXNzO1Zlc3RtZW50cyBvZiB0aGUgQWxhcnkgRGl2ZSBBcm1vcjtTY3JlZSphdWsqcyBUYWxvbjtTcGl0dGVycyBvZiB0aGUgVmlydWxlbnQgS3JhaXQ7U3BsYXR0ZXJpbmcgRm9yY2lwdWxlO1Zlbm9tYW5jZXIgU2xpbWUgSGVhZDtTcGluZXMgb2YgdGhlIFZpcnVsZW50IEtyYWl0O1Zlbm9tYW5jZXIgU2xpbWUgVGFpbDtNYW5kaWJsZXMgb2YgdGhlIFJpdmVuIEV4aWxlO0xlZ3Mgb2YgdGhlIFJpdmVuIEV4aWxlO0ZhY2Ugb2YgSW5lcnJhbnQgRW1pbmVuY2U7SGFuZHMgb2YgSW5lcnJhbnQgRW1pbmVuY2U7Q2FwZSBvZiB0aGUgUmlzaW5nIEdhbGU7Qm93IG9mIHRoZSBCYXR0bGVyYW5nZXI7U3R5bGUgb2YgdGhlIEJhdHRsZXJhbmdlcjtRdWl2ZXIgb2YgRmFsY29uc2lkZSBBcm1vcjtTb25nIG9mIHRoZSBCbHVlYmlyZCAtIFNob3VsZGVyO0JsYWRlIG9mIE1hbGljZTtEcmVhZGtuaWdodCBQYXVsZHJvbjtNZW1vcmllcyBvZiBCb25lIEhlbG07Q2FwZSBvZiB0aGUgRGVhZCBSZWJvcm47QXJtcyBvZiB0aGUgU3RvbmVtYXJjaCBTb3ZlcmVpZ247Q3VpcmFzcyBvZiB0aGUgU3RvbmVtYXJjaCBTb3ZlcmVpZ247VGltZSBXYW5kZXJlcjtBcmFiaWFuIFJpZGVycztDb250ZXN0ZWQgRmF0ZTtTYXZpb3IgZm9yIEp1bmdsZXMgSG9ub3I7Tm9tYWQgb2YgdGhlIEJ1cm5pbmcgRGVjcmVlO01hbmlwdWxhdG9yIG9mIFdhcnNpdHVhdGlvbjtLaXJpbiBSaWRlciBTZXQ7Qmxvb2R5IEJyaWRlO1RoZSBKYWRlIEdlbmVyYWw7RWZyaXQgU3VsdGFuIFNldDtNeXN0aWMgb2YgQ2VsZXN0aWFsIEFydDtUaGUgQmFwdGlzbSBvZiBNZWx0aW5nIEZpcmU7SG9ub3JlZCBTZXJ2YW50IG9mIHRoZSBFbXBpcmU7RGFyayBGb3Jlc3QgUHVuaXNoZXI7UmFnZSBvZiB0aGUgRGFyayBXb29kIHYgMi4wO0FzY2VuZGFuY2Ugb2YgdGhlIFJpbWUgTG9yZCAybmQgU3R5bGU7Q3J5c3RhbCBTY2F2ZW5nZXI7QWxsdXJlIG9mIHRoZSBEZWVwO1VuZmV0dGVyZWQgTWFsZXZvbGVuY2U7QXBvc3RsZSBvZiBEZWNheSBWIDIuMTtTaG9yZWxpbmUgU2FwcGVyO01hbmRhdGUgb2YgdGhlIE5hbWVsZXNzO0FybXkgT2YgVGhlIFZhc3QgU2VhO1Jlc2VhcmNoZXIgb2YgT2JsaXZpb24gTWFnaWM7U3R5Z2lhbiBNYXc7Q3VubmluZyBDb3JzYWlyO0FuY2llbnQgTWFndXMgU3R5bGUgMTtFeWUgb2YgdGhlIE1hemUgS2VlcGVyO1dhcnJpb3Igb2YgdGhlIFJlZCBTYW5kIFYgMi4wO1JpdHVhbCBvZiB0aGUgTG95YWwgRm9sZDtTYW11cmFpIFNldDtCYXJrIG9mIHRoZSBBZ2VsZXNzIFdpdG5lc3MgRGlzdGluZ3Vpc2hlZDtNb2x0ZW4gRGVzdHJ1Y3RvcjtSaWZ0IENoYW1waW9uO0Zlcm9jaWQ5519cyBIZWFydDtVbmJsaW5raW5nIEV0ZXJuaXR5O1RoZSBJbmZlcm5hbCBNYXN0ZXI7RmF0aGVyIE9mIFNwaXJpdHM7IDEyM3x8fA==