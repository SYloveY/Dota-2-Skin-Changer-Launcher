limitHWID:: 1 000||| 111:: 1559A1A8-7B6B-0000-0000-000000000000;; 111||| 222:: $2y$10$NDJlZTFhNDcyZTViYzk5OOCkg.lv8kq.bslkqsA5zL6KYXb4P2WG6 222||| 123:: Shock of the Anvil;Complete Wings of the Ethereal Monarch;Infernus;Heaven-Piercing Pauldrons;Dark Artistry Hair;Covenant of the Depths Belt;Dark Artistry Cape;Dark Artistry Bracers;Scythe of Ice V 2.0;Rapiers of the Burning God V 3.1;Rapier of the Burning God Offhand;Pauldrons of the Volcanic Guard;Cinder Sensei Belt;Cinder Sensei Bracer;Golden Shards of Exile;Conspicuous Culprit Mohawk;mohawk shoulder;Conspicuous Culprit Armor;Staff of Perplex Prem;Powdersled Rookery Squee;Pachyderm Powderwagon Weapon;Powdersled Rookery Spleen;Powdersled Rookery Spoon;Cart of the Powderkeg Patrol;Blackshield Protodrone Helm;Blackshield Protodrone Missile Launcher;Blackshield Protodrone Armor;Blackshield Protodrone Laser;Cruel Assemblage Head;Cruel Assemblage Belt;Cruel Assemblage Arms;Cruel Assemblage Armor;Severing Lash;Golden Hydrakan Latch;Pauldron of the Lizard King;Mask of the Scoundrel;Fins of the Lizard King;Bracers of the Abyssal Arms;Sword of the Witch Hunter Templar;Grand Hat of the Witch Hunter Templar;Grand Gloves of the Witch Hunter Templar;Belt of the Witch Hunter Templar;Grand Boots of the Witch Hunter Templar;Phantom Concord;Pauldrons of Harsh Sojourn;Belt of the Red Sands;Bindings of the Infinite Waves;Foulfell Corruptor;Ancient Magus Style 1;Witch Hunter Templar;Vengeance of the Sunwarrior; 123|||