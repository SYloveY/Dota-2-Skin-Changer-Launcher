bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogMTU1OUExQTgtN0I2Qi0wMDAwLTAwMDAtMDAwMDAwMDAwMDAwIDExMXx8fCAyMjI6OiAkMnkkMTAkTkRKbFpURmhORGN5WlRWaVl6azVPT0NrZy5sdjhrcS5ic2xrcXNBNXpMNktZWGI0UDJXRzYgMjIyfHx8IDEyMzo6IE1hZ3VzIEFjY29yZDtIZWF2ZW4tUGllcmNpbmcgUGF1bGRyb25zO0luZmVybnVzO0NvdmVuYW50IG9mIHRoZSBEZXB0aHMgQmVsdDtQYXVsZHJvbnMgb2YgRXRlcm5hbCBIYXJ2ZXN0IFByZW07U2hhZG93IEZpZW5kIEFyY2FuYSBEZW1vbiBFYXRlcjtTY3l0aGUgb2YgSWNlIFYgMi4wO0RyYWdvbmNsYXcgSG9vaztHb2xkZW4gU2NhdmVuZ2luZyBHdXR0bGVzbHVnO0dyYW5kIEFic2Nlc3Npb24gQ2hhaW47RGVuZGkgRG9sbDtJbnNhdGlhYmxlIEJvbmVzYXcgUHJlbTtTaG91bGRlciBCbG9jayBvZiBEZWxpY2FjaWVzIG9mIEJ1dGNoZXJ5O0RhcHBlciBEaXNndWlzZSBIYXQ7Qmxvb2QgU2hhcmQ7UGF1bGRyb24gb2YgdGhlIERyZWFkYm9ybiBSZWdlbnQ7Qmxpc3RlcmluZyBTaGFkZSBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzO0hlbG0gb2YgR3JpbSBEZXN0aW55O0N1aXJhc3Mgb2YgdGhlIFN0b25lbWFyY2ggU292ZXJlaWduO0NhcGUgb2YgdGhlIFN0b25lbWFyY2ggU292ZXJlaWduO0FybXMgb2YgRGVzb2xhdGlvbjtEYXJrIEFydGlzdHJ5IEhhaXI7RGFyayBBcnRpc3RyeSBDYXBlO0Jsb3Nzb20gb2YgdGhlIE1lcnJ5IFdhbmRlcmVyO0ZvY2FsIFJlc29uYW5jZSBWIDMuMDtBcm1vciBvZiB0aGUgRGVtb24gVHJpY2tzdGVyIFJlZDtHb2xkZW4gU3RhZmYgb2YgR3VuLVl1IFByZW07UGF1bGRyb25zIG9mIHRoZSBEZW1vbiBUcmlja3N0ZXI7QXN0cmFsIERyaWZ0O1NoYXJkcyBvZiBFeGlsZTtHb2xkZW4gQXRvbWljIFJheSBUaHJ1c3RlcnMgUHJlbTtHb2xkZW4gU3RhZmYgb2YgUGVycGxleCBQcmVtO0NydXggb2YgUGVycGxleDtIZWFkIG9mIHRoZSBJbXBvc3NpYmxlIFJlYWxtIEdyZWVuO0FuY2llbnQgSW5oZXJpdGFuY2UgLSBTaG91bGRlcjtBbmNpZW50IEluaGVyaXRhbmNlIC0gQmFjaztTd29yZCBvZiB0aGUgQ29sb3NzdXM7Q2FwZSBvZiB0aGUgSW1wb3NzaWJsZSBSZWFsbTtCcmFjZXJzIG9mIEFlb25zO0NsYXN6dXJlbWUgSW5jdXJzaW9uIEhlYWQ7TWFjZSBvZiBBZW9ucyBQcmVtO0pld2VsIG9mIEFlb25zO0NsYXN6dXJlbWUgSW5jdXJzaW9uIEJlbHQ7R3JlYXQgU2FnZXMgUmVja29uaW5nIFRpbWVsZXNzIFRhbGU7VGhpcnN0IG9mIEV6dHpob2sgQmxhZGU7VGhpcnN0IG9mIEV6dHpob2sgLSBPZmYtSGFuZDtNYXcgb2YgRXp0emhvaztGZWFzdCBvZiB0aGUgVW53aWxsaW5nIEJlbHQ7U2hvdWxkZXIgb2YgdGhlIEJsb29kZm9yZ2U7RmVhc3Qgb2YgdGhlIFVud2lsbGluZyBBcm1vcjtCcmFjZXIgb2YgdGhlIEJsb29kZm9yZ2U7R29sZGVuIEVkZ2Ugb2YgdGhlIExvc3QgT3JkZXI7SnVnZ2VybmF1dCBBcmNhbmEgUmVkIEJsYWRlZm9ybSBPcmlnaW5zO1Byb3ZvY2F0aW9uIG9mIFJ1aW4gUGF1bGRyb247QmVsdCBvZiB0aGUgQmxhZGVmb3JtIEFlc3RoZXRlO0JyYWNlcnMgb2YgdGhlIEJsYWRlZm9ybSBBZXN0aGV0ZTtHb2xkZW4gSHlkcmFrYW4gTGF0Y2g7U2hhZG93IGluIHRoZSBEZWVwIEFybW9yO1NlYSBSYWtlcyBCcmlkbGU7QnJhY2VycyBvZiB0aGUgQWJ5c3NhbCBBcm1zO1NoYWRvdyBpbiB0aGUgRGVlcCBCYWNrO0dvbGRlbiBUd2lsaWdodCBTY2hpc207QXJtb3Igb2YgdGhlIFJhaWRmb3JnZWQgUmlkZXI7TWQ5519bnQgb2YgdGhlIFdpbmdlZCBTZW50aW5lbDtIZWFkIG9mIHRoZSBSYWlkZm9yZ2VkIFJpZGVyO01hbmlmb2xkIFBhcmFkb3ggUEEgQXJjYW5hIFN0eWxlIDM7Q2FwZSBvZiB0aGUgTGlmdGVkIFZlaWw7QmVsdCBvZiB0aGUgTGlmdGVkIFZlaWw7QXZvd2FuY2Ugb2YgdGhlIFZlaWxlZCBPbmVzO0dvdGhpYyBXaGlzcGVyIE1hc2s7TGVncyBvZiBJbmVycmFudCBFbWluZW5jZTtHb2xkZW4gQ3lycmlkYWUgUHJlbTtDcmltc29uIFBpcXVlO1NraXR0ZXJpbmcgRGVzb2xhdGlvbiBQcmVtO1BoYW50b20gQ29uY29yZCBQcmVtO0NvbmNvcmQgRG9taW5pb247Q29uY29yZCBSZXZlcnNpb24gVVA7QmVsdCBvZiB0aGUgUmVkIFNhbmRzO0JyYWNlcnMgb2YgdGhlIFJlZCBTYW5kcztIaWRkZW4gVmVjdG9yIC0gQXJtb3I7SGlkZGVuIFZlY3RvciAtIEhhdDtIaWRkZW4gVmVjdG9yIC0gQmVsdDtIaWRkZW4gVmVjdG9yIC0gQmxhZGU7QW5jaWVudCBJbmhlcml0YW5jZSAtIE5lY2s7R29sZGVuIE1vb25mYWxsIFByZW07QnJhY2VyIG9mIHRoZSBTcGlyYWwgQm9yZTtCZWx0IG9mIHRoZSBTcGlyYWwgQm9yZTtFeWVzIG9mIEFyZGVub2s7SG9ybiBvZiB0aGUgU3BpcmFsIEJvcmU7U2hvY2sgb2YgdGhlIEFudmlsIFByZW07QW5jaWVudCBJbmhlcml0YW5jZSAtIEJlbHQ7QXJlbmEgQ2hhbXBpb24gQXJtb3I7R29kcyBNZXJjeSBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzO0NyaW1zb24gUHJvZ2VuaXRvcnMgQmFuZTtDaGFvcyBBcmJpdGVyO0VudHJvcGljIFNob3VsZGVycGFkcyBQcmVtO0dvbGRlbiBDaGFvcyBGdWxjcnVtO1ByaW1hbCBQYWVhbjtNYW5lIG9mIHRoZSBDcnlzdGFsIERyaWZ0O0JlbHQgb2YgdGhlIENyeXN0YWwgRHJpZnQ7RGlwcGVyIHRoZSBEZXN0cm95ZXI7U3dpZnQgQ2xhdyBhbmQgRmVyb2Npb3VzIEhlYXJ0O0FyY2FuZSBJbnZlcnRlcjtMb2FkZWQgUHJvc3BlY3RzOyAxMjN8fHw=