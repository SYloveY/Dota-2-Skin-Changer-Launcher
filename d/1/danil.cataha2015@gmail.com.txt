limitHWID:: 1 000||| 111::  111||| 222:: $2y$10$Njg0YjFhZjI1NGZiNTk0Nu7GrUjUojHhXpOyT9arLH0XimcFokmJa 222||| 123:: Crystal Basim;Acid Hydra Cursor Pack;Pedestal Bladeform Legacy;Blink Dagger lvl 1 TI-6 Effect;TI-6 Complexity Gaming TP Effect;Brood Hunter HUD;Terrain - Winter;Great Sage*s Reckoning;Tempest Helm of the Thundergod Prem;Arms of Desolation;Pauldrons of Eternal Harvest;Ward of the Phoenix;Weather Ash;Holiday Radiant Tower;Reptilian Refuge Radiant Creeps;Majesty Of The Colossus - Pebble;Tiny Banana;Armor of the Equilibrium;Brumal Berserker Shoulder;Seer of Infinity Space Eidolon;Arm of the Dragon*s Disciple;Staff of Gun-Yu;TI9 Cache Bane Endless Nightmare Head;Barding of Chimeric Rapport;Solar Gyre;Solar Forge;Bloodfeather Wings;Heirlooms of Aeol Drias;Helm of the Savage Monger;Twin Blades of the Imperious Command;Armor of the Imperious Command;Anger Divinity Weapon;Regalia of the Wraith Lord Sword;Barding of the Siege-Drake;Malefic Drakes Hood of the Crimson Witness;Blackshield Protodrone Missile Launcher;Blackshield Protodrone Laser;Belt of the Frostshard Ascendant;Sunken Frostshard;Shield of the Battlehawk;Tassets of the Chiseled Guard;Helmet of The Iron Drakken;Pauldron of the Stormwrought Arbiter;Shattered Greatsword;Armor of the Pitfall Crusader;Lord Fox Head;Blade of the Pitfall Crusader;Holy Spear of Images;Bracers of Bird*s Stone;Cape of the Truebark Adherent;Helm of Bird*s Stone;Beard of the Truebark Adherent;Druidic Ritual Crest;Scythe of Vyse;Hand of Hell*s Ambassador;Mulctant Pall;Avada Kedavra;Fin King*s Charm;Valentine Ward;Bracers of Odocoeleus;Battle Banner of the Masked;Sigil Mask of the Bladekeeper;Faulds of the Gwimyeon Warrior;Blackened Edge of the Bladekeeper;Sacred  fire Belt;Firestarter Gas Mask;Rough Rider*s Muggin* Mask;Bertha the Morde-bat;Journey Roshan;TI-8 LVL UP Effect;Pumpkin Trees UP;Warrior of Arena Set;Dragons Ascension V 3.0;Harvests Hound;The Corruption of Nezzureem;The Baptism of Melting Fire;Unfettered Malevolence;Eternal Harvest;Exact Marksman;Rose And The Beast;Bearer of the Arkturan Talon;Algid Falcon;Chess Knight Set;Raiments of the Sacrosanct;Magister of the Narrow Fates;March of the Powderkeg Patrol;Samurai Set;Chaos Chosen V 3.0;Covenant of the Depths;Divine Flame V 2.0;The Witch Hunter V 2.0;Bloody Bride;Imperial Envoy;Apostle of Decay V 2.1;Kit of the First Hunt V 2.1;Daemon Prince of Khorne V 2.1;Armaments of Leviathan Set;Compendium Bloody Ripper;Arsenal of the Demonic Vessel V 2.1;Time Wanderer;Marauder of the Chaos Wastes;Savior for Jungles Honor;Furnator Set;Astrologer Set;Efrit Sultan Set;Ghost Judger;Wisdom of the Midnight Sun;Akamanah for Legion Commander V 3.1;The Serakund Tyrant;Rage of the Dark Wood v 2.0;Hunter of Kings V 2.0;Crystal Scavenger;Allure of the Deep;Cicatrix Regalia Red;The Grey Gallant;Mandate of the Nameless;Compendium Bindings of the Trapper;The Arch Temptress;Cunning Corsair;Sovereign of the Kray Legions 2st Style;Bestowments of the Centurion Vanguard;Flowering Shade V 2.0;Storm Dragon Potente;Lumberclaw;Rift Champion;Cryogenic Embrace Set;Unblinking Eternity;The Infernal Master;Array of Tranquility;Relics of the Sundered King;Wings of Colorful Icecrystals;The Dusk Crawler Set;Dark Reclamation;Dirgesworn Dynasty;Barrier Rogue;Bark of the Ageless Witness Distinguished;Clandestine Trail;Bite of the Surging Wind;Kindred of the Umizar Crawler;Beacon of Cerulean Light 1 Style V 2.1;Favors of the Shamanic Light V 2.0;Stygian Maw;Narcissistic Leech;Alluring Mesmer;Harsh Sojourn;Auspicious Seadweller;Antipodean Allies;Stellar Jade;Crescent V 2.1;Azurite Warden V 2.1;Convalescing Empress;Armaments of the Night Grove V 2.1;Dark Forest Punisher;Flamed Falcon Patrol Set;Caerula Silva;Warden of the Wyrmforge Shard;The Jade General;Kirin Rider Set;Rite of the Acolyte Priest V 3.0;Whisperbloom Set;Cloak of the Fallen;Feast of the Gluttons Larder;Tipsy Brawler;Black Orc Warboss V 2.0;New Chieftain Style 1; 123|||