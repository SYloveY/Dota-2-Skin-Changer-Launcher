bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogIDExMXx8fCAyMjI6OiAkMnkkMTAkTVdWall6RTFORFF3WWpFME0yVTFZdWx2S2dHRE01NnM3b3R5dC9ScXFpRGQ5ZU1UUDVrbW0gMjIyfHx8IDEyMzo6IEF4ZSBBbm5vdW5jZXI7QnJpc3RsZWJhY2sgQW5ub3VuY2VyO0FudGlwb2RlIENvdXJpZXIgKEFuZ2VsIG9ubHkpO0FjaWQgSHlkcmEgQ3Vyc29yIFBhY2s7QWVnaXMgYW5kIFJvc2hhbiBTdC4gVmFsZW50aW5lIERheTtSaWRlciBvZiBBdmFyaWNlIENhcGU7VHJlbmNoa25pZ2h0IC0gQmFjaztWZXNwZXJ0aW5lIEd1YXJkIENsb2FrO01lcmNpbGVzcyBNaXN0cyAtIEJhY2s7Q2xvYWsgb2YgdGhlIFJlc2VudGZ1bCBTcGVjdHJlO0NvbXBlbmRpdW0gUmlkZXIgb2YgQXZhcmljZSBDYXBlO0RlYXRoIFNocm91ZCBvZiB0aGUgRnJvemVuIEFwb3N0bGU7Q2FwZSBvZiB0aGUgRXZlcmJsYWNrO0FybW9yIG9mIHRoZSBFcXVpbGlicml1bTtCcnVtYWwgQmVyc2Vya2VyIFNob3VsZGVyO0dhcmIgb2YgdGhlIFByb3BoZXQgRm9yZXRvbGQ7QXJjIFdhcmRlbiBNYWdpY2lhbiBBcm1zO0FybXMgb2YgRG9ybWFudCBPYmxpdmlvbjtBcm1zIG9mIHRoZSBGaXJzdCBXYXlzO0Nvc21pYyBXYW5kZXJlciAtIEFybXM7VGltZSB3YW5kZXJlciBBcmN3YXJkZW4gQXJtcztDb3NtaWMgV2FuZGVyZXIgLSBCYWNrO1JlcHRpbGlhbiBSZWZ1Z2UgRGlyZSBDcmVlcHM7UmVwdGlsaWFuIFJlZnVnZSBSYWRpYW50IENyZWVwcztQdW1wa2luIFRyZWVzIFVQO092ZXJncm93biBUZXJyb3IgU2hvdWxkZXI7SGVpciBvZiBUZXJyb3IgQ3Jvd247VmlzYWdlIG9mIHRoZSBTbGVlcGxlc3MgU2VjdDtFeWVzIG9mIEx1Y2lkIFRvcm1lbnQ7Rmlyc3QgTGlnaHQgQXJtb3I7Rmlyc3QgTGlnaHQgQXJtcztGaXJzdCBMaWdodCBIZWFkO1B5cmV4YWVjIEZsb2U7Rm9ybSBvZiBBbWJyeSBWIDIuMTtQaXN0b24gSW1wYWxlciBlZmZlY3Q7Tm92YSBvZiBHb2xkZW4gTmlydmFuYTtNYWNlIG9mIFZpbmNlcmUgQXRhY2sgRWZmZWN0O0Jsb29kZmVhdGhlciBXaW5ncyBQcmVtO0VtaW5lbmNlIG9mIFJpc3R1bCBLbmlmZSBBdHRhY2s7VGhlIEJhcnJlbiBWZWN0b3I7QXJtcyBvZiBEZXNvbGF0aW9uIFByZW07U291bHMgVHlyYW50IEhlYWQ7SHVzaCBvZiBFdGVybmFsIE5pZ2h0O092ZXJncm93biBFbWJsZW0gQWdoYW5pbSBFZmZlY3Q7VEktOCBCbGluayBsdmwgMSBFZmZlY3Q7Qm90dGxlIFRJLTYgRWZmZWN0O1BsYW5ldGZhbGwgQmxpbms7MjUgbHZsIHBpbmc7VEktNCBlZmZlY3QgRGFnb247VEktNyBGb3JjZSBTdGFmZiBFZmZlY3Q7UGVkZXN0YWwgQmxhZGVmb3JtIExlZ2FjeTtFcG9jaCBvZiB0aGUgQWJ5c20gU3BpZGVybGluZ3M7TWFyYXhpZm9ybXMgRmFsbGVuO0ZsYXNocG9pbnQgUHJvc2VseXRlIC0gSGVhZDtEYXRhc3RhciBQcm9nZW5pdG9yIChBbHRlciBBcmNhbmEpO0dhdW50bGV0IG9mIHRoZSBUcmVhY2hlcm91cyBEZW1vbjtNYW50bGUgb2YgSGVsbCpzIEFtYmFzc2Fkb3I7QmxhZGUgb2YgVGVhcnMgYW5kIENyb3duIG9mIFRlYXJzO0NhbGwgb2YgdGhlIERlbmRyb2Nocm9uO0F1c3BpY2Ugb2YgdGhlIFdoeXJsZWd5Z2UgUHJlbTtCcmFjZXJzIG9mIHRoZSBOYXJyb3cgRmF0ZXM7QXJtb3Igb2YgdGhlIE5hcnJvdyBGYXRlcztBcm0gRmlucyBvZiB0aGUgRGVlcHdlZWQgRHJvd25lcjtCcmFja2lzaCBTdGFsa2VyIEFybXM7TWFlbHJhd24qcyBhYnlzc2FsIEd1YXJkIEFybXM7VGlkb3NhdXJ1cyBBcm0gU2NhbGVzO01hZWxyYXduKnMgYWJ5c3NhbCBHdWFyZCBCZWx0O0xlYXNoZWQgUm9ja3NoYXJrO01hbGVmaWMgRHJha2VzIEhvb2Qgb2YgdGhlIENyaW1zb24gV2l0bmVzcztNYWxlZmljIERyYWtlcyBTdHJpa2Ugb25seSBFZmZlY3Q7U3Vua2VuIFNuYXBwZXIgV2luZ3M7RGltZW5zaW9uIFJpcHBlciBBcm1zO0NyZXN0IG9mIHRoZSBSaXZlbiBFeGlsZTtGYWNlIG9mIEluZXJyYW50IEVtaW5lbmNlO05vYmxlIFdpbmdzIG9mIEZyb3N0aGVhcnQ7UGVkZXN0YWwgUGxhbmV0ZmFsbCBDZWxlc3RpYWwgU3VtbW9ucztQZWRlc3RhbCBUaGUgRmFsbCBNYWpvciAyMDE2IFJhZGlhbnQ7VEktOSBNZWthc20gRWZmZWN0O01qb2xsbmlyIFRJLTYgRWZmZWN0O1BoYXNlIEJvb3RzIFRJLTYgRWZmZWN0O1JhZGlhbmNlIFRJLTYgRWZmZWN0O1JpdmVyIFZpYWwgQmx1ZTtHdWFyZGlhbnMgb2YgdGhlIExvc3QgUGF0aCBEaXJlIFRvd2VycztHdWFyZGlhbnMgb2YgdGhlIExvc3QgUGF0aCBSYWRpYW50IFRvd2VycztUSS05IFNlYXNvbmFsIENyZWVwIERlbnkgRWZmZWN0O0JhdHRsZSBQYXNzIEVmZmVjdCBFdWw7QmF0dGxlIFBhc3MgRWZmZWN0IEZvdW50YWluIFJlZ2VuO0xldmVsVXAgVEktNiBFZmZlY3Q7TWVrYW5pc20gVEktNiBFZmZlY3Q7TWluZSBSYWRpdXMgNzAyO0VtZXJhbGQgUm9zaGFuO1RJLTggU2hpdmFzIEVmZmVjdDtGYWxsIEJhdHRsZSBQYXNzIDIwMTYgRWZmZWN0IFRlbGVwb3J0O0JsdWUgTGlsIE5vdmE7VGVycmFpbiAtIERlc2VydDtDbG9ja3dlcmsgQW5ub3VuY2VyO01hcmsgb2YgdGhlIEZpcnN0IEh1bnQgQmVzdG93ZWQ7Qmxhc3Rmb3JnZSBFeGhhbGVyO01hbnRsZSBvZiB0aGUgQ2luZGVyIEJhcm9uIFN0eWxlIDE7Q3J1Y2libGUgb2YgUmlsZTtNb2x0ZW4gQ2xhdyBQcmVtO0FyY3RpYyBDbGlua3ogViAzLjA7SGVsbSBvZiB0aGUgUHJpbWV2YWwgUHJlZGF0b3I7Qmxvb2RzdG9uZSBCbGFkZSBQYWNrO05vdGhsaWMgQnVyZGVuO0Zyb3N0Z2xhZGUgRmFtaWxpYXIgSGF0O01hbmlhcyBNYXNrIFByZW07Qm93IG9mIHRoZSBGcm9zdGZhbmdzIFYgMi4wO0JyYWNlcnMgb2YgQWVvbnMgUHJlbTtKZXdlbCBvZiBBZW9ucyBQcmVtO0VkZ2Ugb2YgdGhlIExvc3QgT3JkZXI7U2hlYXJpbmcgRGVwb3NpdGlvbjtJcm9uIFN1cmdlIFYgMi4yO1NhdmFnZSBNZXR0bGU7VGh1bmRlcmluZyBGbGFpbDtNYWplc3R5IE9mIFRoZSBDb2xvc3N1cyAtIE1vbm9saXRoO1N3b3JkIG9mIHRoZSBDb2xvc3N1cyBQcmVtO0RyZWFkIG9mIHRoZSBHbGVhbWluZyBTZWFsIFNldDtWYWxreXJpZSpzIFNoYWRlIFdlYXBvbjtFbmRsZXNzIE5pZ2h0O0VudmVsb3BpbmcgRGVzcGFpciBWIDIuMTtEcm93bmVkIEhvcnNlbWFuIFYgMi4xO0Fyc2VuYWwgb2YgdGhlIERlbW9uaWMgVmVzc2VsIFYgMi4xO1dpY2tlZCBTcGFjZSBLbmlnaHQ7VGltZSBXYW5kZXJlcjtNYXJhdWRlciBvZiB0aGUgQ2hhb3MgV2FzdGVzO1dhcnJpb3Igb2YgQXJlbmEgU2V0O0NoYW9zIENob3NlbiBWIDMuMDtTYXZpb3IgZm9yIEp1bmdsZXMgSG9ub3I7Q2xvY2sgTWFzdGVyIFYgMy4wO1RoZSBCcmFzcyBGbHllcjtGb3Jnb3R0ZW4gVGFjdGljaWFuO0ZhdGFsIEJsb3Nzb20gViAzLjA7QnJpbmdlciBvZiBUcm91YmxlcztFbGR3dXJtcyBUb3VjaCBWIDMuMTtCaW5kaW5ncyBvZiBEZWVwIE1hZ21hO0NpbmRlciBTZW5zZWk7QWJ5c3NhbCBWb3J0ZXg7VGhlIENoYWluZWQgU2NyaWJlO0ZhdGUgTWVyaWRpYW47V2lzZG9tIG9mIHRoZSBNaWRuaWdodCBTdW47RGFlbW9uZmVsbCBGbGFtZTtCZXdpdGNoaW5nIEZsYXJlIFYgMi4wO1dhci1CdXJyb3cgUmF2YWdlcjtIdW50ZXIgb2YgS2luZ3MgViAyLjA7RnVyeSBvZiBXYXIgR29kO1Zvb2RvbyBNZWVwbztIYXZvYyBvZiBEcmFnb24gUGFsYWNlIFYgMi4wO1ByaXNtYXRpYyBHcmFjZTtXcmF0aCBvZiBLYSBWIDIuMSBTdHlsZSAyO0N1cnNlZCBaZWFsb3QgQW5kIERhZ29uO0xvc3QgUmFuZ2VyO1RoZSBHcmV5IEdhbGxhbnQ7TWFuZGF0ZSBvZiB0aGUgTmFtZWxlc3M7SXJlIG9mIE1vbHRlbiBSZWJpcnRoO1NjYXZlbmdlciBvZiB0aGUgQmFzaWxpc2s7TW9uc3Ryb3VzIFJlcHJpc2FsO1J1bGVyIG9mIHRoZSBGcm9zdGJpdGUgRHVuZXM7U292ZXJlaWduIG9mIHRoZSBLcmF5IExlZ2lvbnMgMnN0IFN0eWxlO0ZhdGhvbWxlc3MgUmF2YWdlcjtWYW50YWdlIG9mIHRoZSBCcmVhY2ggV2FyZGVuO1NvdWwgTGlsaXRoO0dlbmllIFNwaXJpdDtGdWxsIE1ldGFsIFRlY2hpZXM7Rm91bGZlbGwgQ29ycnVwdG9yO01vbHRlbiBEZXN0cnVjdG9yO1BsdW5kZXIgb2YgdGhlIFNhdmFnZSBNb25nZXI7QXRyb2NpdGllcyBvZiB0aGUgQWJ5c3NhbCBTY291cmdlO1Jvc2hhbiBIdW50ZXJzIFNldDtGZXJvY2lvdXMgVG94aWNhbnQ7Q2hpbGwgb2YgdGhlIEtlZXBlcnMgR2F6ZTtEcmVhZCBDb21wYWN0O1RoZSBJbmZlcm5hbCBNYXN0ZXI7QmluZGluZ3Mgb2YgdGhlIEJhdHRsZXJhbmdlciBMaWdodCBTdHlsZTtNb3JiaWZpYyBQcm92aXNpb247QmlnIFVuIFYgMy4wO0Jyb2tlbiBTY2FsZSBWIDIuMDtUaGUgUm93ZHkgRmlyZWJyYW5kO1RyaXVtcGggb2YgdGhlIEZvdXIgQ29ybmVycyBWIDIuMDtFcG9jaCBvZiB0aGUgQWJ5c207RXllcyBvZiB0aGUgUmlmdDtSb3NlIEFuZCBUaGUgQmVhc3Q7V3JhcHMgb2YgdGhlIFdpbnRlcmJyaW5nZXI7Q3Vyc2Ugb2YgdGhlIFdpbnRlciBSb3NlO0RlbGlnaHRzIG9mIFBldGFsdW5hIFBhdGhmaW5kZXI7VGVtcGVzdHMgV3JhdGg7Qml0dGVyd2luZyBMZWdhY3k7VmFucXVpc2hpbmcgRGVtb25zIEdlbmVyYWwgViAzLjE7SGFybmVzcyBvZiB0aGUgRmlzc3VyZWQgU291bDtIZWFkbGFuZCBIdW50cmVzcztQb3J0ZW50IFBheWxvYWQ7RXhwbG9zaXZlIE1hbmlhYztTdXNhbm8gT3MgRGVzY2VuZGFudDtCZXN0b3dtZW50cyBvZiB0aGUgRGl2aW5lIEFuY2hvciBlZmZlY3RzO0xvcmQgb2YgQ2hyb25vcHRpYyBTeW50aGVzaXM7Q29tcGVuZGl1bSBCbG9vZHkgUmlwcGVyO0R1c2tsaWdodCBNYXJhdWRlciBWIDIuMTtTZWlzbWljIEJlcnNlcmtlcjtFeWUgb2YgdGhlIEJlaG9sZGVyO0RhcmtmYWxsIFdhcmRlbjtBbGxmYXRoZXIgb2YgTmF0dXJlIFNldDtVbmZldHRlcmVkIE1hbGV2b2xlbmNlO1Nob3JlbGluZSBTYXBwZXI7QXVzcGljaWQ5519cyBTZWFkd2VsbGVyO0dyaW0gRGVzdGlueTtQaXRmYWxsIENydXNhZGVyO1ZlbmdlYW5jZSBvZiB0aGUgU3Vud2FycmlvcjtSZW1pbmlzY2VuY2Ugb2YgRHJlYW1zO0dvbGRlbiBOZXRoZXIgTG9yZHMgUmVnYWxpYSBTZXQgUHJlbTtNYXplIFdhdGNoZXIgU2V0O0FuY2llbnQgTWFndXMgU3R5bGUgMjtDcm93biBvZiBUaGUgTmlnaHR3b3JsZDtDaGFybWVyIG9mIEZpcmVzbmFrZTtHb2xkIFNreW1hZ2U7QmVhY29uIG9mIENlcnVsZWFuIExpZ2h0IDEgU3R5bGUgViAyLjE7Qmxlc3Npbmcgb2YgdGhlIENyZXN0ZWQgRGF3biBWIDIuMTtEYXJrIFJlZWYgRXNjYXBlIFYgMi4xO0tlZW4gTWFjaGluZTtFbGVtZW50YWwgSW1wZXJhdG9yIFYgMi4wO01lcmFudGggRHJhZ29vbjtTdG9ybXdyb3VnaHQgQXJiaXRlciBWIDIuMDtDb25jZWFsZWQgUmF2ZW47VGhlIFRpbWVrZWVwZXIgU2lsdmVyO1N1Ym1lcmdlZCBIYXphcmQ7QmFyayBvZiB0aGUgQWdlbGVzcyBXaXRuZXNzIERpc3Rpbmd1aXNoZWQ7RnJvc3QgQnJpZ2FkaWVyO1NlYWJsaWdodCBQcm9jZXNzaW9uO0JsZXNzaW5nIG9mIHRoZSBDcmVzdGVkIFVtYnJhO1RoZSBEdXNrIENyYXdsZXIgU2V0O0h1bnRlcnMgR2xvcnk7UmVkIE1pc3QgUmVhcGVyIFNldDtTdHJ5Z3d5ciBCbG9vZHNlZWtlcjtMYWR5IFN5bHZhbmFzIGZvciBEcm93IC0gVG9vbHMgb2YgdGhlIE1hc3RlciBUaGllZiBTZXQ7U3BhdGlhbCBSaWZ0ZXIgViAzLjA7QXNjZW5kYW5jZSBvZiB0aGUgUmltZSBMb3JkIDFzdCBTdHlsZTtQcm92aW5jZSBvZiB0aGUgSHVudCBFdGVybmFsOyAxMjN8fHw=