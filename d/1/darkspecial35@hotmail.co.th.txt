bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogMDMxQjAyMUMtMDQwRC0wNTlBLUQxMDYtN0EwNzAwMDgwMDA5OzsgMTExfHx8IDIyMjo6ICQyeSQxMCRNREV4TmpJd09EWmxOamxqTTJGbU1PN1hYdzM1ZWNuMlZ4WmxvV1hHdzRrblFKSTJDaUVHaSAyMjJ8fHwgMTIzOjogUml2ZXIgVmlhbCBFbGVjdHJpZmllbGQ7V2VhdGhlciBCbHVlIFNreSBmcm9tIFNvdXAgZm9yIFNsdXRzO0RlY2xhcmF0aW9uIG9mIHRoZSBEaXZpbmUgU2hhZG93IERpcmUgVG93ZXJzO0RlY2xhcmF0aW9uIG9mIHRoZSBEaXZpbmUgTGlnaHQgUmFkaWFudCBUb3dlcnM7Q2hpY2tlbiBIdXQgV2FyZDtUaGUgSW50ZXJuYXRpb25hbCAyMDE3IEN1cnNvciBQYWNrO0FnaGFuaW0gRHVuZ2VvbiBTY2VwdGVyIEVmZmVjdDsyNSBsdmwgcGluZztCbG9vZHkgQmFieSBJbnZva2VyO1RoZUZhdFJhdCBXYXJyaW9yIFNvbmdzIE11c2ljIFBhY2sgT2ZmaWNpYWw7Q2F2ZXJuaXRlIERpcmUgQ3JlZXBzO0NhdmVybml0ZSBSYWRpYW50IENyZWVwcztCbHVlU2t5IEl0ZW0gRWZmZXRzO0JsdWUgRGFnb247SXJvbiBCcmFuY2ggR0c7TWluZSBSYWRpdXMgNzAyO0dhYmUgTmV3ZWxsIFNob3BrZWVwZXI7RXRlcm5hbCBSYWRpYW5jZSBCbGFkZXMgUHJlbTtPcmlnaW5zIG9mIEZhaXRoIFByZW07QnJhY2VycyBhbmQgU2hvdWxkZXJzIG9mIHRoZSBTdXJ2aXZvcjtCZWx0IG9mIHRoZSBTdXJ2aXZvcjtIYWlyIG9mIHRoZSBTdXJ2aXZvcjtTaG91bGRlcnMgb2YgdGhlIFN1cnZpdm9yO0dvbGRlbiBCYXNoZXIgQmxhZGVzIFYgMi4wO0lyZSBvZiB0aGUgQW5jaWVudCBHYW9sZXIgQmFjaztJcmUgb2YgdGhlIEFuY2llbnQgR2FvbGVyIFNob3VsZGVyO0lyZSBvZiB0aGUgQW5jaWVudCBHYW9sZXIgQXJtcztNb2x0ZW4gQ2xhdyBQcmVtO0JlbHQgb2YgQXhlIFVubGVhc2hlZDtHb2xkZW4gQ3J1Y2libGUgb2YgUmlsZTtNYW50bGUgb2YgdGhlIENpbmRlciBCYXJvbiBTdHlsZSAyO0Zpc3RzIG9mIEF4ZSBVbmxlYXNoZWQ7VGluZXMgb2YgVHliYXJhO0RvdGEgMiBDaGFuZ2VyIEVkaXRpb24gSHVudGVycyBIb2FyZCBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzO0hlYXJ0bGVzcyBIdW50IC0gSGVhZDtNYXcgb2YgRXp0emhvaztUcmliYWwgVGVycm9yIENhcGU7VHJpYmFsIFRlcnJvciBCZWx0O1Nob3VsZGVyIG9mIHRoZSBCbG9vZGZvcmdlO1RoaXJzdCBvZiBFenR6aG9rIEJ1bmRsZSBQcmVtO1RoaXN0bGUgQ3Jhd2xlcjtBeGUgb2YgdGhlIFByb3ZlbjtHb2xkZW4gSW5mZXJuYWwgQ2hpZWZ0YWluO1RhbG9ucyBvZiB0aGUgRW5kbGVzcyBTdG9ybSBXZWFwb247R29sZGVuIENoYW9zIEZ1bGNydW07RGlhYm9saWMgQXNwZWN0O01pbmQgb2YgRW5kbGVzcyBEYXlzO0Zyb3N0IEF2YWxhbmNoZSBQcmVtO0dvbGRlbiBJY2UgQmxvc3NvbTtHb2xkZW4gQnJhY2VycyBvZiBGb3Jsb3JuIFByZWNpcGljZTtCb29rIG9mIHRoZSBWaXppZXIgRXhpbGUgUHJlbTtCZWx0IG9mIHRoZSBBcnRpZiBDb252ZXJ0O0hvb2Qgb2YgdGhlIFZpemllciBFeGlsZTtEcmFwZXMgb2YgdGhlIFZpemllciBFeGlsZTtDcmltc29uIEhlYXJ0cyBvZiBNaXNydWxlO1RoZSBTdW5icmVlemUgQmlydGhyaWdodDtEcmVzcyBvZiB0aGUgRmFlc2hhZGUgRmxvd2VyO0NyaW1zb24gR2F0ZXMgb2YgTm90aGw7Tm90aGxpYyBCdXJkZW4gb2YgdGhlIENyaW1zb24gV2l0bmVzcztEYXJrY2xhdyBFbWlzc2FyeSBTdGFmZjtSb2JlIG9mIHRoZSBXaW50ZXIgUmV2ZW5hbnQ7U2tpcnQgb2YgdGhlIFdpbnRlciBSZXZlbmFudDtQZWFjb2NrIFByaWVzdCBFeG9yY2lzbTtDcm93biBvZiB0aGUgQnJpZ2h0c2hyb3VkO0Z1cnkgb2YgdGhlIFJpZ2h0ZWQ5519cyBTdG9ybSAtIEtpcmluO1Jlc2lzdGl2ZSBQaW5mb2xkIFByZW07SGF0IG9mIHRoZSBTdG9ybWNoYXJnZSBEcmFnb29uO1dlYXBvbiBvZiB0aGUgRGVmZW5kZXIgb2YgUnVpbjtXcmF0aCBvZiB0aGUgRmFsbGVuIFdlYXBvbjtTY29yY2hpbmcgQW1iZXIgRHJhZ29vbiBGb3JtO0J1cm5pbmcgU2hpZWxkIG9mIHRoZSBPdXRsYW5kIFJhdmFnZXI7QWxnaWQgTGVnYWN5IFByZW07SmFkZSBSZWNrb25pbmcgUHJlbTtCZWx0IG9mIHRoZSBKYWRlIEVtaXNzYXJ5O0JlbGxvd3Mgb2YgQ3JlYXRpb247RmxvdXJpc2hpbmcgTG9kZXN0YXIgUHJlbTtWaXJnYXMgQXJjO0xvcmQgb2YgTHVtaW5hcmllcyBFaWRvbG9ucztDcmltc29uIEJyYWNlcnMgb2YgQWVvbnMgUHJlbTtDbGFzenVyZW1lIEluY3Vyc2lvbiBCZWx0O01hY2Ugb2YgQWVvbnMgUHJlbTtKZXdlbCBvZiBBZW9ucztIZXJhbGQgb2YgdGhlIEVtYmVyIEV5ZSAtIEJlbHQ7SGVyYWxkIG9mIHRoZSBFbWJlciBFeWUgLSBBcm1vcjtSZW1uYW50cyBvZiBBc2NlbnNpb247Rm9ydHVuZSBvZiB0aGUgRml2ZSBIb3VzZXM7QXRvbWljIFJheSBUaHJ1c3RlcnMgUHJlbTtIZWFkIG9mIHRoZSBWZXNwaWR1biBIdW50ZXItS2lsbGVyO0hvb2R3aW5rIERyYWdvbiBDcm9zc2JvdztIb29kd2luayBHbGVpcG5pcjtGbGFzaHBvaW50IFByb3NlbHl0ZSAtIE9mZi1IYW5kO0JlbmV2b2xlbnQgQ29tcGFuaW9uIFYgMi4wO0pha2lybyBJbW1vcnRhbCBXaW5ncztQcm9taW5lbmNlO1dpbmdzIG9mIERheWJyZWFrO1Rvcm1lbnRlZCBTdGFmZiBvZiBFbWluZW50IFJldml2YWwgRXhjZXB0aW9uYWw7R2xhcmUgb2YgdGhlIFR5cmFudDtUb21lIG9mIEZvcmJpZGRlbiBLbm93bGVkZ2U7QmVsdCBvZiBWaWxlIENvbnZvY2F0aW9uO0dsb3J5IG9mIHRoZSBFbGRlcmZsYW1lIC0gQXJtcztHbG9yeSBvZiB0aGUgRWxkZXJmbGFtZSAtIE5lY2s7U291bCBvZiB0aGUgU2xheWVyIFByZW07RmluIEtpbmdzIENoYXJtIG9mIEVtaW5lbnQgUmV2aXZhbCBFeGNlcHRpb25hbDtIZWxsLVNwYXIgQW5hdGhlbWEgT2JzaWRpYW4gQmxpZ2h0O0hvcm5zIG9mIHRoZSBCZXRyYXllcjtNdWxjdGFudCBQYWxsIG9mIHRoZSBDcmltc29uIFdpdG5lc3M7R29sZGVuIFR3aWxpZ2h0IFNjaGlzbTtNb29uZmFsbCBQcmVtO1NlaXNtaWMgQmVyc2Vya2VyIENsdWI7Q3JpbXNvbiBQcm9nZW5pdG9ycyBCYW5lO1J1YmljayBDdXJzZSAtIEdvZHMgUmVidWtlO0FyZW5hIENoYW1waW9uIFNoaWVsZDtDb2xvciBNZWVwbztQaXRtb3VzZSBGcmF0ZXJuaXR5IEdvZ2dsZXM7R3JlYXQgU2FnZXMgUmVja29uaW5nIFJ1bWJsZSBpbiB0aGUgRGVlcDtTdGFmZiBvZiB0aGUgRGVtb24gVHJpY2tzdGVyO1RoZSBPcmRlciBvZiBDeXByaW47QmxhZGVzIG9mIFByaXNtYXRpYyBHcmFjZTtNYW50bGUgb2YgdGhlIFRydWViYXJrIEFkaGVyZW50O01vbmFyY2ggb2YgdGhlIFNhcHBoaXJlIEdsZW47U2lnbnMgb2YgdGhlIEFsbGZhdGhlciAtIEhlYWQ7U2lnbnMgb2YgdGhlIEFsbGZhdGhlciAtIFdlYXBvbjtTaWducyBvZiB0aGUgQWxsZmF0aGVyIC0gQXJtcztGb3dsIE9tZW4gSGVhZDtTdWxsZW4gUmFtcGFydDtTdWxsZW4gSG9sbG93O1N1bGxlbiBIYXJ2ZXN0O0Zsb2NraGVhcnRzIEdhbWJsZSBNb2x0ZW4gRmlyZWxhcms7QXVzcGljZSBvZiB0aGUgV2h5cmxlZ3lnZSBFZ2cgU2NyYW1ibGVyO0dpbWxlayBEZWNhbnRlcjtGZXR0ZXJzIG9mIE9tbmlzY2llbmNlO0RyZXNzIG9mIHRoZSBIaWVyb3BoYW50O09yYiBvZiB0aGUgSGllcm9waGFudDtFeWUgb2YgdGhlIEZhdGV3ZWF2ZXIgSG9vZDtNYXNrIG9mIHRoZSBDb25maWRhbnQ7Qmxpc3NmdWwgS25hdmUgQ29hdDtUaGUgU29uZyBvZiBTd2lmdGd1YXJkIC0gQmxhZGU7Q2FwZSBvZiB0aGUgQ3JlZXBpbmcgU2hhZG93O0dvdGhpYyBXaGlzcGVyIEJlbHQ7Q29kaWNpbCBvZiB0aGUgVmVpbGVkIE9uZXM7QXZvd2FuY2Ugb2YgdGhlIFZlaWxlZCBPbmVzO01hbmlmb2xkIFBhcmFkb3ggUEEgQXJjYW5hIFN0eWxlIDM7SHVtYmxlIERyaWZ0ZXIgQnJhY2VycztIdW1ibGUgRHJpZnRlciBQYW50cztDb25jb3JkIFJldmVyc2lvbiBVUDtDb25jb3JkIERvbWluaW9uO1BoYW50b20gQ29uY29yZCBQcmVtO1R1cnF1b2lzZSBHaWFudCBHdWFyZCBTdG9uZTtCbG9zc29tIG9mIHRoZSBNZXJyeSBXYW5kZXJlcjtFc3NlbmNlIG9mIHRoZSBUcmlja3N0ZXIgQ3Jvd247Q2hhbGljZSBvZiBJeHl4YTtSb3lhbCBEZWNyZWUgV2hpcCBBdHRhY2s7Q3Jvd24gb2YgdGhlIFJveWFsIERlY3JlZTtIZWFkIG9mIHRoZSBGb3Jsb3JuIE1hemU7U2V2ZXJpbmcgTGFzaCBQcmVtO0FybW9yIG9mIHRoZSBGb3Jsb3JuIE1hemU7QmVsdCBvZiB0aGUgRm9ybG9ybiBNYXplO0JyYWNlcnMgb2YgdGhlIE5hcnJvdyBGYXRlcztHb2xkZW4gU2hhZG93IE1hc3F1ZXJhZGU7SHVuZ2VyIG9mIHRoZSBIb3dsaW5nIFdpbGRzIEFybXM7SHVuZ2VyIG9mIHRoZSBIb3dsaW5nIFdpbGRzIEhlYWQ7QmxhZGVicmVha2VyIEJydXNoO0h1bmdlciBvZiB0aGUgSG93bGluZyBXaWxkcyBPZmYtSGFuZCBXZWFwb247SHVuZ2VyIG9mIHRoZSBIb3dsaW5nIFdpbGRzIFdlYXBvbjtDb2F0IG9mIEZhbnRvY2NpbmlzIERpbGVtbWE7SGF0IG9mIEZhbnRvY2NpbmlzIERpbGVtbWE7Q3J1eCBvZiBQZXJwbGV4IEltbW9ydGFsIFN0eWxlO1RvcmNoIG9mIEZhbnRvY2NpbmlzIERpbGVtbWE7VGhlIEJhcnJlbiBDcm93biBQcmVtO1RhaWwgb2YgdGhlIFNjb3VyaW5nIER1bmVzO0Nyb3duIG9mIENhbGFwaGFzIEJhY2s7Q3Jvd24gb2YgQ2FsYXBoYXMgQXJtb3I7QXJtcyBvZiBEZXNvbGF0aW9uIFByZW07U2hhZG93IEZpZW5kIEFyY2FuYSBEZW1vbiBFYXRlcjtQYXVsZHJvbnMgb2YgRXRlcm5hbCBIYXJ2ZXN0IFByZW07U2hhZGUgb2YgdGhlIFNwaXRlZnVsIEV5ZTtBcm1zIG9mIHRoZSBMdWNlbnQgQ2Fub3B5O0hhdWwgb2YgdGhlIEx1Y2VudCBDYW5vcHk7V2FyZCBvZiB0aGUgTHVjZW50IENhbm9weTtDaGFybSBvZiB0aGUgTHVjZW50IENhbm9weTtBc3BlY3Qgb2YgT3NjaWxsYTtHbGFpdmUgb2YgT3NjaWxsYTtTbGFyZGFyIEltbW9ydGFsIEhlYWQgR29sZGVuIEZpbiBvZiB0aGUgRmlyc3QgU3BlYXI7Vm91bGdlIG9mIHRoZSBBbmRlc3RpYW4gU2VudGluZWw7Q3JpbXNvbiBGaXJzdCBvZiB0aGUgRmxvb2Q7RGVzZXJ0IEJ1cm4gTW9ydHkgSW1tb3J0YWw7RGVzZXJ0IEJ1cm4gU2FkZGxlO0Rlc2VydCBCdXJuIENyb3NzYm93O1NvdWwgRGlmZnVzZXIgUHJlbTtGbG93IG9mIHRoZSBGbG93ZXJpbmcgU2hhZGU7U3dpbmUgb2YgdGhlIFN1bmtlbiBHYWxsZXkgUHJlbTtUaGUgTGlnaHRuaW5nIE9yY2hpZCBvZiBFbWluZW50IFJldml2YWwgRXhjZXB0aW9uYWw7Rmx1dHRlcmluZyBBbWV0aHlzdCArIFB1cnBsZSBGb2NhbCBSZXNvbmFuY2UgRG90YTJDaGFuZ2VyIEVkaXRpb247TWFudGxlIG9mIHRoZSBXaGlzcGVyZWQgQm9uZDtIZWFkZHJlc3Mgb2YgdGhlIExveWFsIEZvbGQ7SG9ycm9yIGZyb20gdGhlIERlZXAgQXJtcztBcXVlbWVyYWxkIEJsYWRlO1JvbGxlcm1hd3N0ZXIgUHJlbTtTdWJtZXJnZWQgSGF6YXJkIFByb3BlbGxlcjtBcmNhbmljIFJlc29uYW5jZSBCZWFtO1N1Ym1lcmdlZCBIYXphcmQgTGF1bmNoZXI7U3VibWVyZ2VkIEhhemFyZCBIdWxsO0FuY2llbnQgSW5oZXJpdGFuY2UgLSBTaG91bGRlcjtBbmNpZW50IEluaGVyaXRhbmNlIC0gQmVsdDtBbmNpZW50IEluaGVyaXRhbmNlIC0gTmVjaztBbmNpZW50IEluaGVyaXRhbmNlIC0gQmFjaztGcm9zdG1vb3QgRnJvc3RpdnVzIFRyZWU7Qml0dGVyIExpbmVhZ2UgSW1tb3J0YWwgQXhlcztIYWlyIG9mIHRoZSBJbXBlcmlvdXMgQ29tbWFuZDtBcm1vciBvZiB0aGUgSW1wZXJpb3VzIENvbW1hbmQ7U2hvdWxkZXJzIG9mIHRoZSBJbXBlcmlvdXMgQ29tbWFuZDtHb2xkZW4gUGlzY2VhbiBQdWx2ZXJpemVyO0Zyb3N0IFRvdWNoZWQgQ2xlYXZlcjtFbWVyYWxkIENvbnF1ZXN0O1BhbGUgTWF1c29sZXVtO0hlbG0gb2YgR3JpbSBSZWZvcm1hdGlvbjtQYWxlIEF1Z3VyIFByZW07R2F1bnRsZXRzIG9mIEdyaW0gUmVmb3JtYXRpb247Q29hdCBvZiBGb3Jsb3JuIERlc2NlbnQ7Rmxlc2ggR29sZW0gb2YgRm9ybG9ybiBEZXNjZW50O0NyaW1zb24gTWQ5519cm5mdWwgUmV2ZXJpZTtIZWxtIG9mIEVjaG9lcztXcmF0aCBvZiBFY2hvZXM7Q3VsdCBvZiBBa3RvaztUYWlsIG9mIHRoZSBGZXJvY2lvdXMgVG94aWNhbnQ7Q29uc3RlbGxhdGlvbiBBcm1vcjtDb25zdGVsbGF0aW9uIFdlYXBvbjtTa2l0dGVyaW5nIERlc29sYXRpb24gUHJlbTtDcmltc29uIFBpcXVlIFByZW07Q3JpbXNvbiBDeXJyaWRhZTtFbWJlciBUaXBwZWQgU3RyaWRlcnM7RmFtaWxsYXIgb2YgVHJ1ZSBWaXNpb247QmVob2xkZW4gb2YgdGhlIEJhbmlzaGVkIE9uZXMgLSBHb2xlbTtMYW50ZXJuIG9mIHRoZSBJbmZlcm5hbCBNYXc7QmVob2xkZW4gb2YgdGhlIEJhbmlzaGVkIE9uZXMgLSBXZWFwb247SWNlZmxpZ2h0IEVkaWZpY2U7VGVtcGVzdCBIZWxtIG9mIHRoZSBUaHVuZGVyZ29kICsgUmlnaHRlb3VzIFRodW5kZXJib2x0O0RlbW9uIEZvcm0gb2YgdGhlIEZvdWxmZWxsIENvcnJ1cHRvciBVUDtTY3l0aGVzIG9mIFNvcnJvdztTcGFuIG9mIFNvcnJvdztGb3J0dW5lcyBUb3V0IFByZW07TGluZWFnZSBvZiB0aGUgU3Rvcm1sb3JkcyAtIEFybXM7TGluZWFnZSBvZiB0aGUgU3Rvcm1sb3JkcyAtIEJhY2s7SnVnZ2VybmF1dCBBcmNhbmEgQmxhZGVmb3JtIExlZ2FjeTtMaW5lYWdlIG9mIHRoZSBTdG9ybWxvcmRzIC0gTGVncztMaW5lYWdlIG9mIHRoZSBTdG9ybWxvcmRzIC0gV2VhcG9uO1NoYWRvdyBpbiB0aGUgRGVlcCBCcmFjZXJzO1NoYWRvdyBpbiB0aGUgRGVlcCBCYWNrO1NlYSBSYWtlcyBCcmlkbGU7U2hhZG93IGluIHRoZSBEZWVwIEFybW9yO0h5ZHJha2FuIExhdGNoO01vdW50IG9mIHRoZSBXaW5nZWQgU2VudGluZWw7SGVsbSBvZiB0aGUgRGFyayBNb29uIFN0YWxrZXI7UmF2ZW5vdXMgQWJ5c3MgLSBBcm1vcjtSYXZlbm91cyBBYnlzcyAtIEhlYWQ7UGVkZXN0YWwgRGlyZSBGcm9zdDtDcmVzdCBvZiB0aGUgRmxvd2VyaW5nIFNoYWRlO1B1cnBsZSBDb2xvciBmb3IgVEI7Q3JpbXNvbiBDZW5zZXIgb2YgR2xpc3MgVVA7Um9zaGFuIEdhcmRlbnM7TWlkbmlnaHQgVGVycm9yIEhVRDtIb25leSBIZWlzdCBCYWJ5IFJvc2hhbjtUcmFuc3ZlcnNhbnQgU291bCBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzIFByZW07RnJhY3RhbCBIb3JucyBvZiBJbm5lciBBYnlzbSBVUDtSYWltZW50cyBvZiB0aGUgUm95YWwgRGVjcmVlO1Njb3JjaGluZyBUYWxvbiBQcmVtO1RlcnJhaW4gLSBJbW1vcnRhbCBHYXJkZW5zO0dsb3J5IG9mIHRoZSBFbGRlcmZsYW1lIC0gQmVsdDtNYXNrIG9mIHRoZSBWb3cgRXRlcm5hbDtUYWlsIG9mIHRoZSBWb3cgRXRlcm5hbDtBcm1zIG9mIHRoZSBWb3cgRXRlcm5hbDtBcm1vciBvZiB0aGUgVm93IEV0ZXJuYWw7Qm93IG9mIHRoZSBWb3cgRXRlcm5hbDtUSS05IFRlbGVwb3J0IGx2bCAzIEVmZmVjdDtSaWNrIGFuZCBNb3J0eSBBbm5vdW5jZXI7UmljayBhbmQgTW9ydHkgTWVnYS1LaWxsO0NvbnRyb2xsZWQgQnVybjtSZWN0aWZpZXI7TGljaCBJbW1vcnRhbCBIZWFkIFBlcnZlcnNpb25zIG9mIHRoZSBCbG9vZHdob3JsO0NsYXN6dXJlbWUgSW5jdXJzaW9uIEhlYWQ7VEktNyBCb3R0bGUgRWZmZWN0O1RJLTkgUGhhc2UgQm9vdHMgRWZmZWN0O1RJLTggUmFkaWFuY2UgRWZmZWN0O0VtYmxlbSBvZiBEaXZpbml0eTtBYmFkZG9uIFJFRCBNZWdhUGFjaztEYXJrYnJldyBFbmZvcmNlciBhbmQgRXRlcm5hbCBSYWRpYW5jZSBCbGFkZXMgYW5kIE1pZGFzIEtudWNrbGVzIE1lZ2FQYWNrO0FBTWVnYVBhY2s7RmlyZXN0YXJ0ZXIgVjIuMDtCZWFzdG1hc3RlciBNZWdhUGFjaztCcmlzdGxlYmFjayBNZWdhUGFjaztFcG9jaCBvZiB0aGUgQWJ5c207QnVybmluZyBOaWdodG1hcmU7Q2xpbmt6IE1lZ2FQYWNrO0Nsb2Nrd2VyayBNZWdhUGFjaztEb29tIEltbW9ydGFscyBNZWdhUGFjaztTY29yY2hpbmcgQW1iZXIgRHJhZ29vbjtEcm93IFJhbmdlciBNZWdhUGFjaztFYXJ0aHNoYWtlciBNZWdhUGFjayBOZXc7TW9udW1lbnRzIG9mIHRoZSBOYXR1cmFsIERlbWl1cmdlO0VuaWdtYSBNZWdhUGFjaztIdXNrYXIgTWVnYVBhY2sgTkVXO0pha2lybyBNZWdhUGFjaztLdW5ra2EgSW1tb3J0YWxzIE1lZ2FQYWNrO0xlZ2lvbiBDb21tYW5kZXIgTW9kTWFrZXIgTWVnYVBhY2s7TGlmZXN0ZWFsZXIgTWVnYVBhY2s7TG9uZSBEcnVpZCBNZWdhUGFjaztMeWNhbiBLaXNpbGV2IE1vZE1ha2VyIE1lZ2FQYWNrO01hcnMgVEkxMCBDb2xsZWN0b3JzIENhY2hlIE1lZ2FQYWNrO01pcmFuYSBUSTEwIENvbGxlY3RvcnMgQ2FjaGUgTWVnYVBhY2s7TW9ycGhsaW5nIEltbW9ydGFscyBNZWdhUGFjayBVUDtOaWdodCBTdGFsa2VyIEltbW9ydGFsIGFuZCBSZWFwZXIgS2lzaWxldiBNb2RNYWtlciBNZWdhUGFjaztOeXggQXNzYXNzaW4gTWVnYVBhY2sgVVA7T21uaWtuaWdodCBNZWdhUGFjaztPdXR3b3JsZCBEZXZvdXZlciBNZWdhUGFjaztJY2UgUGhvZW5peCBQcmVtaXVtIEVkaXRpb247UHVwcGV0IFB1ZGdlIFBlcnNvbmEgKHlvdSBjYW4gYWRkIEhvb2spIFVQO1NpbGVuY2VyIFRJMTAgQ29sbGVjdG9ycyBDYWNoZSBNZWdhUGFjaztUaGFuYXRvcyBNZWdhUGFjayBVUDtTcGlyaXQgQnJlYWtlciBNZWdhUGFjaztTdmVuIEltbW9ydGFscyBNZWdhUGFjaztTdG9ybSBTcGlyaXQgTWVnYVBhY2s7VGlkZWh1bnRlciBNZWdhUGFjaztUcmVhbnQgUHJvdGVjdG9yIE1lZ2FQYWNrO0p1bmdsZSBFeHBsb3JlciBTZXQ7VXJzYSBJbW1vcnRhbHMgTWVnYVBhY2s7VmlwZXIgTWVnYVBhY2s7VmlzYWdlIE1lZ2FQYWNrO1dpbmRyYW5nZXIgQXJjYW5hIHN0eWxlIDEgKEJsdWUgQmlyZCkgKyBGdWxsIFdSIGltbW9ydGFsO1dpdGNoIERvY3RvciBNZWdhUGFjaztXcmFpdGggS2luZyBBcmNhbmEgTWVnYVBhY2s7Rm9nIFNwaXJpdCBWIDMuMDsgMTIzfHx8