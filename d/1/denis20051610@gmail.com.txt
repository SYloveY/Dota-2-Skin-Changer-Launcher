bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogRjA2OTUxNzYtM0RFMS02MjE5LTFEMjktM0M3QzNGQkY1OUZDIDExMXx8fCAyMjI6OiAkMnkkMTAkTWpGaE16TTRZakE0T0RnME5UVTBZdVJiaHZxTi9rWllmekJkWmxqY2Jpa2VjbzRqQWQ5MlMgMjIyfHx8IDEyMzo6IEVuZGxlc3MgTmlnaHQgU2hvdWxkZXI7TWFjZSBvZiB0aGUgQ2hvc2VuIFByZW07UmF6emlscyBNaWRhcyBLbnVja2xlcyBQcmVtO0V0ZXJuYWwgUmFkaWFuY2UgQmxhZGVzIFByZW07U2hhdHRlcmJsYXN0IENyb3duO0JyYWNlcnMgb2YgdGhlIFN1cnZpdm9yO0Fjb2x5dGUgb2YgVmVuZ2VhbmNlIEhvb2RlZCBNYXNrO1RoZSBCYXNoZXIgQmxhZGVzO1Nob3VsZGVycyBvZiB0aGUgV2l0Y2ggSHVudGVyO0FybXMgb2YgdGhlIEZpcnN0IFdheXM7R2FyYiBvZiB0aGUgRmlyc3QgV2F5cztOaWdodCBUZXJyb3JzIEJlbHQ7RmlyZXN0YXJ0ZXIgR2FzIE1hc2s7TmlnaHQgVGVycm9ycyBNb3VudDtHYXVudGxldHMgb2YgdGhlIFdlZXBpbmcgQmVhc3Q7Q2FwZSBvZiB0aGUgV2VlcGluZyBCZWFzdDtEcmFwZSBvZiB0aGUgV2VlcGluZyBCZWFzdDtIZWxtIG9mIHRoZSBQcmltZXZhbCBQcmVkYXRvcjtQYWRzIG9mIHRoZSBCbG9vZCBDb3ZlbmFudDtUaGlyc3Qgb2YgRXp0emhvayBCdW5kbGUgUHJlbTtNYXJrIG9mIHRoZSBGaXJzdCBIdW50IEJlc3Rvd2VkO0ZsYWlsIG9mIHRoZSBEcnVua2VuIENhc2s7SW5mZXJuYWwgQ2hpZWZ0YWluIG9mIHRoZSBDcmltc29uIFdpdG5lc3M7SGVsbSBvZiB0aGUgQnVybmluZyBOaWdodG1hcmU7TWQ5519bnQgb2YgdGhlIEJ1cm5pbmcgTmlnaHRtYXJlO1BhdWxkcm9ucyBvZiB0aGUgQnVybmluZyBOaWdodG1hcmU7Q2hhb3MgQXJiaXRlcjtHbG92ZXMgb2YgdGhlIEh1bnQgRXRlcm5hbDtXcmFwIG9mIHRoZSBVcnVzaGluIEh1bnRzbWFuO1Njb3JjaGVkIEZsZXRjaGVyIFBhdWxkcm9ucztWYWx2ZXMgb2YgdGhlIFByZXNzdXJlIFJlZ3VsYXRvcjtXYXJjb2cgTWV0YWwgTWFzaztOb3RobGljIEJ1cmRlbjtBcmMgb2YgV2FybG9yZCBTa2Fyc25paztNYXNrIG9mIHRoZSBHYWx2YW5pemVkIFNwYXJrO0d1aXJ1cztIYW1tZXIgb2YgdGhlIFN0b3JtbGFuZHM7TGl0YW55IG9mIHRoZSBEYW1uZWQgLSBCZWx0O0Nsb2FrIG9mIFZhc2h1bmRvbDtIZWxtIG9mIEltcGVuZGluZyBUcmFuc2dyZXNzaW9ucztMaXRhbnkgb2YgdGhlIERhbW5lZCAtIFRhaWw7RHJhZ29uYmxvb2QgUmF2YWdlcjtCcmFjZXJzIG9mIHRoZSBDYXZlcm4gTHVtaW5hcjtSYXBpZXJzIG9mIHRoZSBCdXJuaW5nIEdvZCBWIDMuMTtGbG91cmlzaGluZyBMb2Rlc3RhciBQcmVtO0JyYWNlcnMgb2YgQWVvbnMgUHJlbTtKZXdlbCBvZiBBZW9ucyBQcmVtO01hY2Ugb2YgQWVvbnM7RGFyayBBcnRpc3RyeSBDYXBlO1ZvbGF0aWxlIFB5cmU7RGF0YXN0YXIgUHJvZ2VuaXRvciAoQWx0ZXIgQXJjYW5hKTtFZGdlIG9mIHRoZSBMb3N0IE9yZGVyO0xlZ2FjeSBvZiB0aGUgRmFsbGVuIExlZ2lvbjtCbGFkZSBvZiBaaHV6aG91O1NoZWFyaW5nIERlcG9zaXRpb247Q29tcGxldGUgSGVsbSBvZiB0aGUgRGFyayBNb29uIFN0YWxrZXI7QXJlbmEgQ2hhbXBpb24gQXJtb3I7QXJlbmEgQ2hhbXBpb24gQmVsdDtHb2xkZW4gU2hhcmRzIG9mIEV4aWxlO1RoZSBTb25nIG9mIFN3aWZ0Z3VhcmQgLSBCbGFkZTtDYXByaWNpb3VzIEZhdGUgSGVhZDtCbGFkZSBvZiB0aGUgQmxvb2Ryb290IEd1YXJkO1BoYW50b20gQ29uY29yZDtOb3ZhIG9mIEdvbGRlbiBOaXJ2YW5hO1NvbGFyIEd5cmU7Q29tcGxldGUgV2luZ3Mgb2YgdGhlIEV0aGVyZWFsIE1vbmFyY2g7Qmxvb2RmZWF0aGVyIFdpbmdzIFByZW07Qmxvb2RmZWF0aGVyIEZlYXN0O0NvbmR1aXQgb2YgdGhlIExpZ2h0bmluZyBMb3JkO0JyYWNlcnMgb2YgdGhlIE92ZXJzZWVyO0dvbGRlbiBTZXZlcmluZyBDcmVzdDtDbGF3cyBvZiB0aGUgUmVkIFNhbmQgV2FycmlvcjtUaGUgQmFycmVuIFZlY3RvcjtBcm1zIG9mIERlc29sYXRpb24gUHJlbTtTb3VscyBUeXJhbnQgSGVhZDtIdXNoIG9mIEV0ZXJuYWwgTmlnaHQ7R29sZGVuIEVtcHlyZWFuO1NoYWRvdyBpbiB0aGUgRGVlcCBCcmFjZXJzO1NoYWRvdyBpbiB0aGUgRGVlcCBCYWNrO0JsYWNrc2FpbCBDYW5ub25lZXIgQXJtcztEcmFnb24gTG9yZSBBV1A7UGhhbnRvbSBBZHZlbnQgQmVsdCBVUDtQaGFudG9tIEFkdmVudCBVUDtQaGFudG9tIEFkdmVudCBTaG91bGRlcnMgVVA7UGhhbnRvbSBBZHZlbnQgV2VhcG9uIFVQO0lyb24gU3VyZ2UgViAyLjI7U2F2YWdlIE1ldHRsZTtUaGUgTGlnaHRuaW5nIE9yY2hpZDtNZXJhbnRoIERyYWdvb24gSGVsbTtCZWx0IG9mIHRoZSBTdG9ybXdyb3VnaHQgQXJiaXRlcjtIYWxsb3dlZCBGbGFtZSBQYXVsZHJvbnM7QnJhY2VycyBvZiB0aGUgU3Rvcm13cm91Z2h0IEFyYml0ZXI7RnVyaWQ5519cyBSdW5lO0ZvY2FsIFJlc29uYW5jZSBWIDMuMDtLZWVwZXIgb2YgT2JsaXZpb24gSGVhZDtUaGUgSWduZWQ5519cyBTdG9uZSBWIDQuMDtUaW55IElnbmVvdXMgU3RvbmU7U21hbGwgSWduZWQ5519cyBTdG9uZTtNZWRpdW0gSWduZWQ5519cyBTdG9uZTtDbHViIG9mIHRoZSBJZ25lb3VzIFN0b25lO0ZvbGlhZ2Ugb2YgRWxkcml0Y2ggR25hcmw7RW1iZXJiYXJrIFJvb3RzO0VtYmVyYmFyayBBcm1zO0VtYmVyYmFyayBCZWFyZDtDb25zcGljdWQ5519cyBDdWxwcml0IE1vaGF3aztDb25zcGljdWQ5519cyBDdWxwcml0IEFybW9yO21vaGF3ayBzaG91bGRlcjtXaGlza3kgdGhlIFN0b3V0IEFydGlmYWN0O0NsYXdzIG9mIHRoZSBTYW5nc3RyYXRoIEZvbGQ7TWFudGxlIG9mIHRoZSBTYW5nc3RyYXRoIEZvbGQ7QmFyZGluZyBvZiB0aGUgU2FuZ3N0cmF0aCBGb2xkO05hY3Jlb3VzIFN0YWcgSGVhZDtQbGF0aW5nIG9mIHRoZSBOZXRoZXJzd2FybSBWYW5ndWFyZDtIZWFkIG9mIHRoZSBXaW5nZWQgSGFydmVzdDtBcm1vciBvZiB0aGUgV2luZ2VkIEhhcnZlc3Q7VG9sbGluZyBTaGFkb3dzO0hhbmRzIG9mIEluZXJyYW50IEVtaW5lbmNlO0ZhY2Ugb2YgSW5lcnJhbnQgRW1pbmVuY2U7Q3JpbXNvbiBDeXJyaWRhZTtNYW5kaWJsZXMgb2YgdGhlIFJpdmVuIEV4aWxlO0xlZ3Mgb2YgSW5lcnJhbnQgRW1pbmVuY2U7Rm9vdGZhbGxzIG9mIHRoZSBTcG9yZWZhdGhlcnMgLSBIZWFkO0JlbHQgb2YgdGhlIEFya3R1cmFuIFRhbG9uO0Zvb3RmYWxscyBvZiB0aGUgU3BvcmVmYXRoZXJzIC0gU2hvdWxkZXI7UGFkZGFwb24gb2YgUmliYml0YXIgViA0LjA7RmlzaHkgRnJpbGxoYXdrO1NoZWxsIG9mIHRoZSBVbWl6YXIgQ3Jhd2xlcjtIb29rYmxhZGUgb2YgU2thZGk7VGhlIEJhcmIgb2YgU2thZGk7U3RhZmYgb2YgUGVycGxleCBQcmVtO0hvb2sgb2YgdGhlIE1hZCBIYXJ2ZXN0ZXI7TWFyayBvZiB0aGUgTWlzdHJhbCBGaWVuZCBWIDIuMTtUaW1lIFdhbmRlcmVyO0JvdW50eSBIdW50ZXIgTWFuaWFjIFNldDtUaGUgRHJ1bmtlbiBXYXJsb3JkIFNldDtDaGFvcyBDaG9zZW4gViAzLjA7VGhlIEZhaXRoIG9mIEF2ZW5nZXJzO1NvdWwgb2YgU3RlYW07Rm9yZ290dGVuIFRhY3RpY2lhbjtUZW1wZXN0cyBXcmF0aDtEYWVtb24gUHJpbmNlIG9mIEtob3JuZSBWIDIuMTtLbmlnaHQgb2YgdGhlIEJ1cm5pbmcgU2NhbGUgViAyLjE7VmlzaW9ucyBvZiB0aGUgRm9yc2FrZW4gRmxhbWU7RXhwb25lbnQgb2YgdGhlIEVuZGxlc3MgU3RhcnM7VGhlIEhvbGxvdyBTZXQ7VGhlIE1hbmlwdWxhdG9yIFNldDtHdW5ib2F0IEhlZ2Vtb24gViAzLjA7RXhwbG9zaXZlIE1hbmlhYztDb3ZlbmFudCBvZiB0aGUgRGVwdGhzO0Rlc29sYXRlIENvbnF1ZXN0O1N0YXJnYXplciBGaW5hbCBQcm9waGVjeTtHbGFkaWF0b3JzIFJldmVuZ2U7UmVzZWFyY2hlciBvZiBPYmxpdmlvbiBNYWdpYztTb3ZlcmVpZ24gb2YgdGhlIEtyYXkgTGVnaW9ucyAyc3QgU3R5bGU7Q3Jvd24gb2YgVGhlIE5pZ2h0d29ybGQ7RXRlcm5hbCBIYXJ2ZXN0O0Jhc3Rpb24gb2YgdGhlIExpb25zZ3VhcmQ7SGludGVybGFuZCBTdGFsa2VyO1Bvd2RlcnNsZWQgUm9va2VyeTtUaGUgVGltZWtlZXBlciBTaWx2ZXI7Rm91bGZlbGwgQ29ycnVwdG9yO0x1bWJlcmNsYXc7QmFyayBvZiB0aGUgQWdlbGVzcyBXaXRuZXNzIERpc3Rpbmd1aXNoZWQ7SWNld3JhY2sgTWFyYXVkZXI7RnJvc3QgQnJpZ2FkaWVyO1JpZnQgQ2hhbXBpb247RWNob2VzIG9mIHRoZSBFeXJpZSBWIDIuMDtGZXJvY2lvdXMgVG94aWNhbnQ7UHVwcGV0IFN1bW1vbmVyO0JpbmRpbmdzIG9mIHRoZSBCYXR0bGVyYW5nZXIgQ2hhb3RpYyBTdHlsZTtDaGlsbGluZyBGZWF0aGVyO1NjYXJsZXQgTG9yZHM7UmlnaHRlb3VzIFRodW5kZXJib2x0IGFuZCBBcmNhbmEgTWVnYVBhY2s7Vm9sYXRpbGUgQXBvdGhlY2FyeSBTZXQ7IDEyM3x8fA==