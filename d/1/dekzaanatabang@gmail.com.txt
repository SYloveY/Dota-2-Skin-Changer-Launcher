bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogM0I3NzRDNjgtOTlFOS02MzRDLUExQ0EtMDU0NEIxMkRGNDY4IDExMXx8fCAyMjI6OiAkMnkkMTAkT0RabU5qSTBZekkwT1RFNU9XRmxPLmlKMWppbXpsUHNNZ1ljZ2R0QmwzUnZFZ29vWTU3WmkgMjIyfHx8IDEyMzo6IEFwb2NhbHlwc2UgVW5ib3VuZCAtIFNob3VsZGVyO0Fwb2NhbHlwc2UgVW5ib3VuZCAtIFRhaWw7R29sZGVuIE9yaWdpbnMgb2YgRmFpdGggUHJlbTtXcmFpdGhiaW5kZXI7T3JpZ2luIG9mIHRoZSBVbm1ha2luZztTbHVtYmVyaW5nIFRlcnJvcjtQcmltYWwgUGVhY2VtYWtlciBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzO01hdyBvZiBFenR6aG9rO1RoaXJzdCBvZiBFenR6aG9rIEJ1bmRsZSBQcmVtO1RpbmVzIG9mIFR5YmFyYTtIZWFydGxlc3MgSHVudCAtIEZvd2w7RWxpeGlyIG9mIERyYWdvbnMgQnJlYXRoIFByZW07SGVsbWV0IG9mIHRoZSBMb2FkZWQgUHJvc3BlY3RzO0xhbnRlcm4gb2YgdGhlIExvYWRlZCBQcm9zcGVjdHM7TWFuaWZvbGQgUGFyYWRveCBQQSBBcmNhbmEgU3R5bGUgMztDb2RpY2lsIG9mIHRoZSBWZWlsZWQgT25lcztBdm93YW5jZSBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzO1N0YWZmIG9mIHRoZSBEZW1vbiBUcmlja3N0ZXI7R29sZGVuIEh5ZHJha2FuIExhdGNoO0dvbGRlbiBDaGFvcyBGdWxjcnVtO0NoYW9zIEZ1bGNydW07VGFsb25zIG9mIHRoZSBFbmRsZXNzIFN0b3JtIFdlYXBvbjtEQUMgMjAxNSBNaXJhbmEgQ3Vyc29yIFBhY2s7QWdoYW5pbXMgSW50ZXJkaW1lbnNpb25hbCBCYWJ5IFJvc2hhbjtFbmlnbWF0aWMgRW1ibGVtIG9mIHRoZSBEaXJldGlkZSAtIFJlZDtDcm93biBvZiB0aGUgT25lIFRydWUgS2luZztVbmJyb2tlbiBGZWFsdHk7UGhhbnRvbSBBc2NlbnNpb24gU2hvdWxkZXJzO0FyY2FuYSBDcnlzdGFsIE1haWRlbiBGcm9zdCBBdmFsYW5jaGU7V2hpdGUgU2VudHJ5O1JlYXBlcnMgV3JlYXRoO0dvbGRlbiBUd2lsaWdodCBTY2hpc207R29sZGVuIE1vb25mYWxsIFByZW07SW5mZXJuYWwgTWVuYWNlO0dvbGRlbiBJbmZlcm5hbCBDaGllZnRhaW47R29sZGVuIEJyYWNlcnMgb2YgRm9ybG9ybiBQcmVjaXBpY2U7SGFybmVzcyBvZiB0aGUgRm9yZ290dGVuIFRhY3RpY2lhbjtCb29rIG9mIHRoZSBWaXppZXIgRXhpbGUgUHJlbTtUZW1wZXN0IEhlbG0gb2YgdGhlIFRodW5kZXJnb2QgUHJlbTtUZW1wZXN0IFJldmVsYXRpb247U2tpdHRlcmluZyBEZXNvbGF0aW9uIFByZW07Q3JpbXNvbiBQaXF1ZSBQcmVtO0hpZGRlbiBWZWN0b3IgLSBBcm1vcjtIaWRkZW4gVmVjdG9yIC0gSGF0O0hpZGRlbiBWZWN0b3IgLSBCbGFkZTtIaWRkZW4gVmVjdG9yIC0gQmVsdDtHb2xkZW4gUGlzY2VhbiBQdWx2ZXJpemVyO0JpdHRlciBMaW5lYWdlIEltbW9ydGFsIEF4ZXM7U2NhbGUgb2YgQml0dGVyIFNwb2lsIEltbW9ydGFsIFVQO0FuY2llbnQgSW5oZXJpdGFuY2UgLSBTaG91bGRlcjtGcm9zdG1vb3QgRnJvc3RpdnVzIFRyZWU7U3VibWVyZ2VkIEhhemFyZCBQcm9wZWxsZXI7QXJjYW5pYyBSZXNvbmFuY2UgQmVhbTtHb2xkZW4gUmVjdGlmaWVyO1NwYW4gb2YgU29ycm93O1NjeXRoZXMgb2YgU29ycm93O0NoYXNtIG9mIHRoZSBCcm9rZW4gQ29kZSBIZWxtO1BhY2h5ZGVybSBQb3dkZXJ3YWdvbiBFbGVwaGFudDtQYWNoeWRlcm0gUG93ZGVyd2Fnb24gUmVtb3RlIE1pbmUgVVA7UGFjaHlkZXJtIFBvd2RlcndhZ29uIFNwb29uO1Bvd2RlcnNsZWQgUm9va2VyeSBDYW5ub247VmlnaWwgVHJpdW1waDtQaGFudG9tIEFkdmVudCBCZWx0IFVQO0Rlc2VydCBCdXJuIFNhZGRsZTtEZXNlcnQgQnVybiBPdXRmaXQ7RGVzZXJ0IEJ1cm4gQ2FwO0Rlc2VydCBCdXJuIE1vcnR5IEltbW9ydGFsO0Rlc2VydCBCdXJuIENyb3NzYm93O1RoZSBCYXJyZW4gQ3Jvd247U3RhZmYgb2YgdGhlIEltcG9zc2libGUgUmVhbG07UnViaWNrIEFyY2FuYSB3aXRoIEltbW9ydGFsO0NyaW1zb24gRWRpY3Qgb2YgU2hhZG93cztHb2xkZW4gU2hhZG93IE1hc3F1ZXJhZGUgUHJlbTtIdW5nZXIgb2YgdGhlIEhvd2xpbmcgV2lsZHMgV2VhcG9uO0dvbGRlbiBTZXZlcmluZyBDcmVzdCBQcmVtO1NldmVyaW5nIExhc2ggUHJlbTtTa2lydCBvZiB0aGUgR3VhcmRpYW4gQ29uc3RydWN0IEJlc3Rvd2VkO0NoZXN0cGxhdGUgb2YgdGhlIEd1YXJkaWFuIENvbnN0cnVjdCBCZXN0b3dlZDtCcmFjZXJzIG9mIHRoZSBHdWFyZGlhbiBDb25zdHJ1Y3QgQmVzdG93ZWQ7Qmxvc3NvbSBvZiB0aGUgTWVycnkgV2FuZGVyZXI7U3BhbiBvZiB0aGUgVGVtcGxlIG9mIHRoZSBGYWxsZW4gU3VuO1B5cmFtaWQgb2YgdGhlIFRlbXBsZSBvZiB0aGUgRmFsbGVuIFN1bjtDb25jb3JkIFJldmVyc2lvbiBVUDtDb25jb3JkIERvbWluaW9uO1BoYW50b20gQ29uY29yZCBQcmVtO01hc2sgb2YgdGhlIENvbmZpZGFudDtGbG9hdGhpZGUgQmFuZHMgb2YgdGhlIFNob3JlbGluZSBTYXBwZXI7U3VsbGVuIFJhbXBhcnQ7U3VsbGVuIEhvbGxvdztTdWxsZW4gSGFydmVzdDtNb25hcmNoIG9mIHRoZSBTYXBwaGlyZSBHbGVuO1NpZ25zIG9mIHRoZSBBbGxmYXRoZXIgLSBXZWFwb247Q3Jvd24gb2YgdGhlIENhcHRpdmUgUHJpbmNlc3M7VGhlIE9yZGVyIG9mIEN5cHJpbjtCbGFkZXMgb2YgUHJpc21hdGljIEdyYWNlO0NvbG9zc2FsIENyeXN0YWwgQ2hvcnVzIFByZW07QmxhZGUgb2YgdGhlIEZyYWN0dXJlZCBPcmRlcjtQcm9nZW5pdG9ycyBCYW5lO0dvZHMgTWVyY3kgb2YgdGhlIENyaW1zb24gV2l0bmVzcztTaG9jayBvZiB0aGUgQW52aWwgUHJlbTtIZWxsLVNwYXIgQW5hdGhlbWEgT2JzaWRpYW4gQmxpZ2h0O0hvcm5zIG9mIHRoZSBCZXRyYXllcjtGaW4gS2luZ3MgQ2hhcm0gb2YgRW1pbmVudCBSZXZpdmFsIEV4Y2VwdGlvbmFsO1RvbWUgb2YgRm9yYmlkZGVuIEtub3dsZWRnZTtMaWNoIEltbW9ydGFsIEhlYWQgUGVydmVyc2lvbnMgb2YgdGhlIEJsb29kd2hvcmw7Q29sbGFyIG9mIHRoZSBNYWQgTXV0aW5lZXI7VG9ybWVudGVkIFN0YWZmO1Rvcm1lbnRlZCBDcm93bjtMZWdpb24gQ29tbWFuZGVyIEFyY2FuYSBVUDtSYWRpYW50IENvbnF1ZXJvciBTaG91bGRlcjtSYWRpYW50IENvbnF1ZXJvciBIZWFkO0p1Z2dlcm5hdXQgQXJjYW5hIEJsYWRlZm9ybSBMZWdhY3k7SmFraXJvIEltbW9ydGFsIFdpbmdzO0JlbmV2b2xlbnQgQ29tcGFuaW9uIFYgMi4wO0ltbW9ydGFsIEludm9rZXIgS2lkO0hlcmFsZCBvZiB0aGUgRW1iZXIgRXllIC0gQXJtb3I7SGVyYWxkIG9mIHRoZSBFbWJlciBFeWUgLSBCZWx0O0hlcmFsZCBvZiB0aGUgRW1iZXIgRXllIC0gTWFzaztIZXJhbGQgb2YgdGhlIEVtYmVyIEV5ZSAtIEJydXNoO01hY2Ugb2YgQWVvbnMgUHJlbTtXb3JsZCBDaGFzbSBBcnRpZmFjdDtGbG91cmlzaGluZyBMb2Rlc3RhcjtTcGVhciBvZiB0aGUgU291dGggU3RhcjtCZWx0IG9mIHRoZSBTb3V0aCBTdGFyO1NvbmdzIG9mIFN0YXJmYWxsIEdsZW4gLSBCZWx0O0dsb3J5IG9mIHRoZSBTb3V0aCBTdGFyO1JhcGllcnMgb2YgdGhlIEJ1cm5pbmcgR29kIFYgMy4xO1BsYW5ldGZhbGw7R29sZGVuIFNpbGVudCBXYWtlO0Nyb3duIG9mIHRoZSBCcmlnaHRzaHJvdWQ7RHJlc3Mgb2YgdGhlIE1lcnF1ZWVuO0JlaG9sZGVuIG9mIHRoZSBCYW5pc2hlZCBPbmVzIC0gR29sZW07QXhlIGZ1bGwgSW1tb3J0YWxzIE1lZ2FwYWNrIGFsdDtBYmFkZG9uIFJFRCBNZWdhUGFjaztBQU1lZ2FQYWNrO0FudGlNYWdlIFJFRCBNZWdhUGFjaztBcmMgV2FyZGVuIE1lZ2FQYWNrO0V4cGxvZXJlciBNYWdpYyBKdW5nbGU7TWFzdGVyIERpbm9zYXVycyBUZWxlcGF0aHk7Qm91bnR5IEh1bnRlciBNYW5pYWMgU2V0O0JyaXN0bGViYWNrIE1lZ2FQYWNrO01vdGhlciBvZiBUaG91c2FuZHM7TW9ua2V5IEtpbmcgQXJjYW5hIE1lZ2FQYWNrO0FuY2llbnQgR3VhcmRpYW4gb2YgdGhlIEp1bmdsZSBSdWxlO1Jvc2UgQW5kIFRoZSBCZWFzdDtFeWUgT2YgUG93ZXIgU2V0O1Vyc2EgSW1tb3J0YWxzIE1lZ2FQYWNrO0NsaW5reiBNZWdhUGFjaztLbmlnaHQgT2YgVGhlIENsb2NrIFRvd2VyO0Ryb3cgUmFuZ2VyIE1lZ2FQYWNrO0Vzc2VuY2UgT2YgVGhlIERhcmsgTW9vbjtVbmJyb2tlbiBTdGFsbGlvbjtBc3Ryb2xvZ2VyIFNldDtUaGUgRHVza2Jsb29tIFRyaWNrc3RlcjtUcmFwcGluZyBvZiB0aGUgU2VjcmV0IE1lZGljaW5lO1JpZ2h0ZWQ5519cyBUaHVuZGVyYm9sdCBhbmQgQXJjYW5hIE1lZ2FQYWNrO0Zyb3N0aGVhcnQ7V2luZHJhbmdlciBBcmNhbmEgc3R5bGUgMSAoQmx1ZSBCaXJkKSArIEZ1bGwgV1IgaW1tb3J0YWw7RGV2aWwgUmlwcGVyO1BpdCBHdWFyZCBTZXQ7VmlwZXIgTWVnYVBhY2s7TWlsbGlwZWRlIFNldDtDYXJuaXZvcm91cyBQYXJhc2l0aXNtO0p1bmdsZSBFeHBsb3JlciBTZXQ7VHJlYW50IFByb3RlY3RvciBNZWdhUGFjaztNZWNoYSBIb3JuZXQgU2V0O1RpbWJlcnNhdyBNZWdhUGFjaztUaWRlaHVudGVyIE1lZ2FQYWNrO1JpdHVhbCBvZiB0aGUgTG95YWwgRm9sZDtDcnkgb2YgdGhlIEJhdHRsZWhhd2s7U3Rvcm0gU3Bpcml0IE1lZ2FQYWNrO1NwaXJpdCBCcmVha2VyIE1lZ2FQYWNrO1NsYXJkYXIgTWVnYVBhY2sgc2V0O1NpbGVuY2VyIE1lZ2FQYWNrO0NoYXJtZXIgb2YgRmlyZXNuYWtlO1NGIEFyY2FuYSBNZWdhcGFjaztMb3JkIG9mIHRoZSBTY291cmluZyBEdW5lcyBWIDIuMDtCYWJ5IFRveSBQdWRnZSBQZXJzb25hO1B1Z25hIE1lZ2FQYWNrO0Rpb25hZWEgTXVzY2lwdWxhO1RhbGVzIG9mIHRoZSBXaW5kd2FyZCBSb2d1ZTtPdXR3b3JsZCBEZXZvdXZlciBNZWdhUGFjaztBdXRob3JpdHkgb2YgdGhlIEltcGVyaXNoYWJsZSBHcmFuZCBIaWVyb3BoYW50O09tbmlrbmlnaHQgTWVnYVBhY2s7Tnl4IEFzc2Fzc2luIE1lZ2FQYWNrO09ncmUgTWFnaSBJbW1vcnRhbHMgQXJjYW5hIE1lZ2FQYWNrO05pZ2h0IFN0YWxrZXIgSW1tb3J0YWwgYW5kIFJlYXBlciBLaXNpbGV2IE1vZE1ha2VyIE1lZ2FQYWNrO0Fwb3N0bGUgb2YgRGVjYXkgViAyLjE7QWxsZmF0aGVyIG9mIE5hdHVyZSBTZXQ7TWlyYW5hIFRJMTAgQ29sbGVjdG9ycyBDYWNoZSBNZWdhUGFjaztNZWR1c2EgTWVnYVBhY2sgTkVXO01hcnMgVEkxMCBDb2xsZWN0b3JzIENhY2hlIE1lZ2FQYWNrO0VuZ3VsZmluZyBTcGlrZSBWIDIuMTtMeWNhbiBLaXNpbGV2IE1vZE1ha2VyIE1lZ2FQYWNrO0xvbmUgRHJ1aWQgTWVnYVBhY2s7V2FyLUJ1cnJvdyBSYXZhZ2VyO0dvbGRlbiBEYXJrIE1hdyBJbmhpYml0byBhbmQgR29sZGVuIFByb2ZhbmUgVW5pb24gYW5kIEdvbGRlbiBEcmVhZCBSZXF1aXNpdGlvbiBMaWZlc3RlYWxlciBJbW1vcnRhbHMgTWVnYXBhY2s7VGhlIEtpbmcgb2YgVGhpZXZlcztLdW5ra2EgSW1tb3J0YWxzIE1lZ2FQYWNrO0pha2lybyBNZWdhUGFjaztIdXNrYXIgTWVnYVBhY2s7QXJjYW5lIEludmVydGVyO1ByaW1vcmRpYWwgQ29uc2VydmF0b3I7RW5pZ21hIE1lZ2FQYWNrO0t1bmcgZnUgTWFzdGVyO01vbnVtZW50cyBvZiB0aGUgTmF0dXJhbCBEZW1pdXJnZTtUdXJxdW9pc2UgR2lhbnQgR3VhcmQ7Qml0dGVyd2luZyBMZWdhY3k7RG9vbSBJbW1vcnRhbHMgTWVnYVBhY2s7VGVtcGxlIERlZmVuZGVyOyAxMjN8fHw=