bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogIDExMXx8fCAyMjI6OiAkMnkkMTAkT1RkalpUbGlOelZoT1dZd1lqTXlPLi80L0JiVVUuNXZmei5IZUZieGZBb3RMV3FaY0tZdE8gMjIyfHx8IDEyMzo6IFNob3VsZGVycyBvZiB0aGUgU3Vydml2b3I7QXJtb3Igb2YgdGhlIEZvcmdvdHRlbiBQbGFuZTtCcmFjZXJzIG9mIHRoZSBTdXJ2aXZvcjtQcm9uZ3Mgb2YgRGVsaWdodGZ1bCBBZmZsaWN0aW9uO0Jsb29kZmVhdGhlciBXaW5ncztDaGFpbiBvZiBFbmR1cmluZyBUb3JtZW50O0NyaW1zb24gQWdvbnk7R2xvcnkgb2YgdGhlIEVsZGVyZmxhbWUgLSBIZWFkO1NsZWV2ZXMgb2YgdGhlIFdhcmhhd2sgVmVzdGltZW50cztDdWlyYXNzIG9mIHRoZSBTdG9uZW1hcmNoIFNvdmVyZWlnbjtBcm1zIG9mIHRoZSBTdG9uZW1hcmNoIFNvdmVyZWlnbjtDYXBlIG9mIHRoZSBTdG9uZW1hcmNoIFNvdmVyZWlnbjtDdXJzZSBvZiB0aGUgQ3JvdyBLaW5nIFNob3VsZGVycztCZWx0IG9mIHRoZSBGb3Jnb3R0ZW4gUGxhbmU7TWFjZSBvZiBBZW9ucztQYXVsZHJvbnMgb2YgdGhlIEVtZXJhbGQgQWdlO0JlbHQgb2YgdGhlIEVtZXJhbGQgQWdlO0JyYWNlcnMgb2YgdGhlIEVtZXJhbGQgQWdlO0d1aXNlIG9mIHRoZSBVbnlpZWxkaW5nIE1hc2s7VmFsZW50aW5lIFdhcmQ7TWFudGxlIG9mIHRoZSBFbnRoYWxlZW4gRHJhZ29uO0dvd24gb2YgdGhlIENoYXJyZWQgQmxvb2RsaW5lO0Nyb3duIG9mIHRoZSBFbWVyYWxkIFNlYTtXaGlwIG9mIHRoZSBFbWVyYWxkIFNlYTtCcmFjZWxldHMgb2YgdGhlIEVtZXJhbGQgU2VhO1BoYW50b20gQ29uY29yZDtOb2JsZSBXYXJyaW9yIFNob3VsZGVyO0JlbHQgb2YgVGVhcmRyb3AgSWNlO0JyYWNlcnMgb2YgdGhlIFJlZCBTYW5kcztDdXJzZSBvZiB0aGUgSGlnaGJvcm47SHVuZ2VyIG9mIHRoZSBIb3dsaW5nIFdpbGRzIFNob3VsZGVyO0JsYWRlYnJlYWtlciBCcnVzaDtNdWggS2VlbiBHdW47QmVhcmQgb2YgdGhlIEhpbnRlcmxhbmQgU3RhbGtlcjtGdWxsLUJvcmUgQm9uYW56YTtTb3VsIERpZmZ1c2VyO0JlbHQgb2YgRW5kdXJpbmcgU29saXR1ZGU7Q29uc3BpY3VvdXMgQ3VscHJpdCBNb2hhd2s7QXJtb3Igb2YgdGhlIFNhdmFnZSBNb25nZXI7QmFyZGluZyBvZiB0aGUgU2F2YWdlIE1vbmdlcjtNYWxlZmljIERyYWtlcyBIb29kIG9mIHRoZSBDcmltc29uIFdpdG5lc3M7QmxpbmsgRGFnZ2VyIGx2bCAxIFRJLTYgRWZmZWN0O0xpZXV0ZW5hbnQgU3F1YXdraW5zO01MRyBUZXRoZXJlZCBTZW50aW5lbDtUaGUgUGlyYXRlIENhcG4gQW5ub3VuY2VyO1RoZSBQaXJhdGUgQ2FwbiBNZWdhLUtpbGxzO0VsZGVyIEJhcmsgSFVEO0Rvb21zZGF5IFJpcHBlciBTaG91bGRlcjtTY29yY2hpbmcgVGFsb247RGF1Z2h0ZXJzIG9mIEh5ZHJvcGhpaW5hZTtTcGF1bGRlcnMgb2YgdGhlIEV4YWN0IE1hcmtzbWFuO0dsb3ZlcyBvZiB0aGUgV2lsZCBXZXN0O0dpZnQgb2YgdGhlIEF3YWtlbmVkO0JyYWNlcnMgb2YgdGhlIEJhdHRsZWZpZWxkO1dpbmdzIG9mIHRoZSBCYXR0bGVmaWVsZDtTdG9uZWhhbGwgUm95YWwgR3VhcmQgSGVsbWV0O1BhdWxkcm9ucyBvZiB0aGUgQmF0dGxlZmllbGQ7SGFsYmVyZCBvZiB0aGUgVmFsa3lyaWU7Q2hhaW5lZCBDaG9wcGVyO0hvcm5zIG9mIHRoZSBGcm96ZW4gQmxvb2Q7U2hhZG93c2hhcmQ7U2hhZG93c2hhcmQgLSBPZmYtSGFuZDtTYXBwaGlyZSBTYWJyZS1MeW54O1dyYWl0aCBLaW5nIENvcnJ1cHRlZCBBc2hicmluZ2VyO0Nyb3duIG9mIE1hbGljZTtSaXZlciBWaWFsIE5vbmU7QW5jaWVudCBDcm93bjtUYWlsIG9mIHRoZSBWaXJ1bGVudCBLcmFpdDtQbGF0ZXMgb2YgdGhlIE1vbG9rYXUgU3RhbGtlcjtIZWFkIG9mIHRoZSBNb2xva2F1IFN0YWxrZXI7TmFjcmVvdXMgU3RhZyBDbGF3cztMZWdzIG9mIHRoZSBGYWxsZW4gUHJpbmNlc3M7VGhpcnN0IG9mIEV6dHpob2sgLSBPZmYtSGFuZDtUaGlyc3Qgb2YgRXp0emhvayBCbGFkZTtTaG91bGRlcnMgb2YgdGhlIFNhY3JpZmljaWFsIFNlcnBlbnQ7R2FsbG93cyBVbmRlcnN0dWR5IEhvb2Q7QmVsdCBvZiB0aGUgU2NhcmxldCBSYXZlbjtDYXBlIG9mIHRoZSBXZWVwaW5nIEJlYXN0O0FybXMgb2YgdGhlIFNhY3JpZmljaWFsIFNlcnBlbnQ7T2ZmLWhhbmQgV2VhcG9uIG9mIHRoZSBWb2xjYW5pYyBHdWFyZDtTd29yZCBvZiB0aGUgVm9sY2FuaWMgR3VhcmQ7UGF1bGRyb25zIG9mIHRoZSBWb2xjYW5pYyBHdWFyZDtGbGFtaW5nIEhhaXIgb2YgQmxhemUgQXJtb3I7QmVsdCBvZiB0aGUgVm9sY2FuaWMgR3VhcmQ7QnJhY2VycyBvZiB0aGUgRm9yc2FrZW4gRmxhbWU7UHJvdm9jYXRpb24gb2YgUnVpbiBCZWx0O0Fyc2VuYWwgb2YgdGhlIEJsYWRla2VlcGVyO1ByYXllciBCZWFkcyBvZiB0aGUgQmxhZGVrZWVwZXI7QXJtb3Igb2YgRXRlcm5hbCBOaWdodDtNYXNrIG9mIEV0ZXJuYWwgTmlnaHQ7U2hpZWxkIG9mIEV0ZXJuYWwgTmlnaHQ7R2xhaXZlIG9mIEV0ZXJuYWwgTmlnaHQ7QmVsdCBvZiB0aGUgSGF6aGFkYWwgTWFnZWJyZWFrZXI7QXJtZ3VhcmRzIG9mIHRoZSBTaWxlbnQgRWRpY3Q7U21hbGwgVGFzc2VscyBvZiB0aGUgQmxhY2sgRGVhdGg7QmFsbC1uLUNoYWlucyBvZiB0aGUgQmxhY2sgRGVhdGg7UGF1bGRyb24gUGVyY2g7QXJtbGV0IG9mIHRoZSBCYXNpbGlzaztHb2xkZW4gSHlkcmFrYW4gTGF0Y2g7UGF1bGRyb24gb2YgdGhlIExpemFyZCBLaW5nO01hc2sgb2YgdGhlIFNjb3VuZHJlbDtGaW5zIG9mIHRoZSBMaXphcmQgS2luZztEZWVwIFdhcmRlbipzIFRvb3RoIEJyYWNlcjtBdGhlbmEgUEEgV2VhcG9uO0F0aGVuYSBQQSBTaG91bGRlcjtBdGhlbmEgUEEgSGVhZDtBdGhlbmEgUEEgQmVsdDtBdGhlbmEgUEEgQmFjaztHcmVhdGVyIFR3aW4gQmxhZGU7TWFyayBvZiB0aGUgRmlyc3QgSHVudDtIb2xkb3V0IG9mIHRoZSBPdXRsYXcgSHVudHNtYW47SG9vZCBvZiB0aGUgVHdpbiBCbGFkZXM7VG9vbHMgb2YgdGhlIE91dGxhdyBIdW50c21hbjtIZWFydGxlc3MgSHVudCAtIEFybW9yO0NsaW5reiBUaGUgRmFpdGggb2YgQXZlbmdlcnMgU2hvdWxkZXI7Q2xpbmt6IFRoZSBGYWl0aCBvZiBBdmVuZ2VycyBXZWFwb247Q2xpbmt6IFRoZSBGYWl0aCBvZiBBdmVuZ2VycyBIZWFkO0NsaW5reiBUaGUgRmFpdGggb2YgQXZlbmdlcnMgR2xvdmVzO0NsaW5reiBUaGUgRmFpdGggb2YgQXZlbmdlcnMgQmFjaztXYW5kZXJpbmcgUmFuZ2VyIFdlYXBvbjtXYW5kZXJpbmcgUmFuZ2VyIFNob3VsZGVyO1dhbmRlcmluZyBSYW5nZXIgTWlzYztXYW5kZXJpbmcgUmFuZ2VyIExlZ3M7V2FuZGVyaW5nIFJhbmdlciBIZWFkO1dhbmRlcmluZyBSYW5nZXIgQmFjaztXYW5kZXJpbmcgUmFuZ2VyIEFybXM7VGVycmFpbiAtIFNwcmluZztXcmF0aCBvZiB0aGUgSWxsdXN0cmlvdXMgU2FnZSBNb3VudDtXcmF0aCBvZiB0aGUgSWxsdXN0cmlvdXMgU2FnZSBXZWFwb247V3JhdGggb2YgdGhlIElsbHVzdHJpb3VzIFNhZ2UgU2hvdWxkZXI7V3JhdGggb2YgdGhlIElsbHVzdHJpb3VzIFNhZ2UgT2ZmLUhhbmQ7V3JhdGggb2YgdGhlIElsbHVzdHJpb3VzIFNhZ2UgSGVhZDtCYXNoZXIgb2YgTWFnZSBTa3VsbHM7T2ZmaGFuZCBCYXNoZXIgb2YgTWFnZSBTa3VsbHM7U3BhY2VGcm9nIEh1bnRlciBTaG91bGRlcjtSYXp6aWxzIE1pZGFzIEtudWNrbGVzIFByZW07RXRlcm5hbCBSYWRpYW5jZSBCbGFkZXMgUHJlbTtTcGFjZUZyb2cgSHVudGVyIE5lY2s7U3BhY2VGcm9nIEh1bnRlciBCYWNrO1NwYWNlRnJvZyBIdW50ZXIgQXJtb3I7TWFycyBGdXJ5IG9mIFdhciBHb2QgV2VhcG9uO0dvZCpzIE1lcmN5O01hcnMgRnVyeSBvZiBXYXIgR29kIExlZ3M7TWFycyBGdXJ5IG9mIFdhciBHb2QgQXJtb3I7R29sZGVuIEF0b21pYyBSYXkgVGhydXN0ZXJzO1ZpY2lvdXMgR3lyb3NwaGVyZSBPZmYtSGFuZDtWaWNpb3VzIEd5cm9zcGhlcmUgTWlzYztWaWNpb3VzIEd5cm9zcGhlcmUgSGVhZDtWaWNpb3VzIEd5cm9zcGhlcmUgQmFjaztPbmkgb2YgdGhlIFJlZCBNaXN0IFdlYXBvbjtCcmFjZXJzIG9mIHRoZSBTaGF0dGVyZWQgVmFuZ3VhcmQ7T25pIG9mIHRoZSBSZWQgTWlzdCBIZWFkO09uaSBvZiB0aGUgUmVkIE1pc3QgQmVsdDtPbmkgb2YgdGhlIFJlZCBNaXN0IEFybW9yO1Njb3VyZ2Ugb2YgdGhlIHNhY3JlZCBncm92ZSBXZWFwb247U2NvdXJnZSBvZiB0aGUgc2FjcmVkIGdyb3ZlIFNob3VsZGVyO1Njb3VyZ2Ugb2YgdGhlIHNhY3JlZCBncm92ZSBPZmYtSGFuZDtTY291cmdlIG9mIHRoZSBzYWNyZWQgZ3JvdmUgTWQ5519bnQ7U2NvdXJnZSBvZiB0aGUgc2FjcmVkIGdyb3ZlIEhlYWQ7UmVkcmFnZSBDcmF3bGVyIEJlbHQ7Q2xhd3Mgb2YgdGhlIENoYWluYnJlYWtlcjtTdGFmZiBvZiBHdW4tWXU7U2hvdWxkZXJzIG9mIHRoZSBSaXB0aWRlIFJhaWRlcjtDcm93biBvZiB0aGUgUmlwdGlkZSBSYWlkZXI7QXJtb3Igb2YgdGhlIFJpcHRpZGUgUmFpZGVyO1N0cmFwIG9mIEJsYWNrIE5paGlsaXR5O09yaWdpbiBvZiB0aGUgRGFyayBPYXRoIC0gVGFpbDtTcGFuIG9mIEJsYWNrIE5paGlsaXR5O1NpbHZlciBEcmFnb24gS2luZyBTaG91bGRlcjtTaWx2ZXIgRHJhZ29uIEtpbmcgV2VhcG9uO1NpbHZlciBEcmFnb24gS2luZyBPZmYtSGFuZDtTaWx2ZXIgRHJhZ29uIEtpbmcgSGVhZDtTaWx2ZXIgRHJhZ29uIEtpbmcgQmFjaztTaWx2ZXIgRHJhZ29uIEtpbmcgQXJtcztMaW1icyBvZiBFbnR3aW5lZCBGYXRlO1doaXNrZXJzIG9mIEVudHdpbmVkIEZhdGU7RW1iZXIgVGlwcGVkIENhcmFwYWNlO0VtYmVyIFRpcHBlZCBNYW5pcHVsYXRvcnM7U3ltYmlvdGljIERyZWFkd3lybSBCYWNrO0NvbnRlc3NhKnMgQ3JlZWQgU2hvdWxkZXJzO0NvbnRlc3NhKnMgQ3JlZWQgRHJlc3M7Q29udGVzc2EqcyBDcmVlZCBIYXQ7Q29udGVzc2EqcyBDcmVlZCBXZWFwb247V2VhcG9ucyBvZiB0aGUgU2F2YWdlIE1vbmdlcjtTaGF0dGVyZWQgR3JlYXRzd29yZDtQYXVsZHJvbnMgb2YgdGhlIE5vcnRoZXJuIFNob3JlO01hc2sgb2YgdGhlIE5vcnRoZXJuIFNob3JlO0ZhdWxkcyBvZiB0aGUgTm9ydGhlcm4gU2hvcmU7R2F1bnRsZXRzIG9mIHRoZSBOb3J0aGVybiBTaG9yZTtEaW1lbnNpb25hbCBTZWVwIFNob3VsZGVyO0RpbWVuc2lvbmFsIFNlZXAgSGVhZDtIZWFydCBvZiB0aGUgRW1lcmFsZCBTZWE7TmlnaHRzaWx2ZXIgTG9ja3M7RGFya2ZhbGwgV2FyZGVuIEJyYWNlcnM7VGVtcGxlIEdhbGEgLSBCYWNrO1RlbXBsZSBHYWxhIC0gTWlzYztUZW1wbGUgR2FsYSAtIFNob3VsZGVyO1NlcnJha3VyYTtEaW1lbnNpb25hbCBTZWVwIEJlbHQ7VGVtcGxlIEdhbGEgLSBXZWFwb247V2VhdGhlciBNb29uYmVhbTtCbGF6aW5nIE9ibGl2aW9uIFYgMy4wO01lY2hhbG9kb24gSW50ZXJkaWN0b3I7Q3JlZXBpbmcgU2hhZG93OyAxMjN8fHw=