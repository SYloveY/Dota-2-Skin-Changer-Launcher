bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogIDExMXx8fCAyMjI6OiAkMnkkMTAkT1RkalpUbGlOelZoT1dZd1lqTXlPLi80L0JiVVUuNXZmei5IZUZieGZBb3RMV3FaY0tZdE8gMjIyfHx8IDEyMzo6IFNob3VsZGVycyBvZiB0aGUgU3Vydml2b3I7QXJtb3Igb2YgdGhlIEZvcmdvdHRlbiBQbGFuZTtCcmFjZXJzIG9mIHRoZSBTdXJ2aXZvcjtQcm9uZ3Mgb2YgRGVsaWdodGZ1bCBBZmZsaWN0aW9uO0Jsb29kZmVhdGhlciBXaW5ncztDaGFpbiBvZiBFbmR1cmluZyBUb3JtZW50O0NyaW1zb24gQWdvbnk7R2xvcnkgb2YgdGhlIEVsZGVyZmxhbWUgLSBIZWFkO1NsZWV2ZXMgb2YgdGhlIFdhcmhhd2sgVmVzdGltZW50cztDdWlyYXNzIG9mIHRoZSBTdG9uZW1hcmNoIFNvdmVyZWlnbjtBcm1zIG9mIHRoZSBTdG9uZW1hcmNoIFNvdmVyZWlnbjtDYXBlIG9mIHRoZSBTdG9uZW1hcmNoIFNvdmVyZWlnbjtDdXJzZSBvZiB0aGUgQ3JvdyBLaW5nIFNob3VsZGVycztCZWx0IG9mIHRoZSBGb3Jnb3R0ZW4gUGxhbmU7TWFjZSBvZiBBZW9ucztQYXVsZHJvbnMgb2YgdGhlIEVtZXJhbGQgQWdlO0JlbHQgb2YgdGhlIEVtZXJhbGQgQWdlO0JyYWNlcnMgb2YgdGhlIEVtZXJhbGQgQWdlO0d1aXNlIG9mIHRoZSBVbnlpZWxkaW5nIE1hc2s7VmFsZW50aW5lIFdhcmQ7TWFudGxlIG9mIHRoZSBFbnRoYWxlZW4gRHJhZ29uO0dvd24gb2YgdGhlIENoYXJyZWQgQmxvb2RsaW5lO0Nyb3duIG9mIHRoZSBFbWVyYWxkIFNlYTtXaGlwIG9mIHRoZSBFbWVyYWxkIFNlYTtCcmFjZWxldHMgb2YgdGhlIEVtZXJhbGQgU2VhO1BoYW50b20gQ29uY29yZDtOb2JsZSBXYXJyaW9yIFNob3VsZGVyO0JlbHQgb2YgVGVhcmRyb3AgSWNlO0JyYWNlcnMgb2YgdGhlIFJlZCBTYW5kcztDdXJzZSBvZiB0aGUgSGlnaGJvcm47SHVuZ2VyIG9mIHRoZSBIb3dsaW5nIFdpbGRzIFNob3VsZGVyO0JsYWRlYnJlYWtlciBCcnVzaDtNdWggS2VlbiBHdW47QmVhcmQgb2YgdGhlIEhpbnRlcmxhbmQgU3RhbGtlcjtGdWxsLUJvcmUgQm9uYW56YTtTb3VsIERpZmZ1c2VyO0JlbHQgb2YgRW5kdXJpbmcgU29saXR1ZGU7Q29uc3BpY3VvdXMgQ3VscHJpdCBNb2hhd2s7QXJtb3Igb2YgdGhlIFNhdmFnZSBNb25nZXI7QmFyZGluZyBvZiB0aGUgU2F2YWdlIE1vbmdlcjtNYWxlZmljIERyYWtlcyBIb29kIG9mIHRoZSBDcmltc29uIFdpdG5lc3M7QmxpbmsgRGFnZ2VyIGx2bCAxIFRJLTYgRWZmZWN0O0xpZXV0ZW5hbnQgU3F1YXdraW5zO01MRyBUZXRoZXJlZCBTZW50aW5lbDtUaGUgUGlyYXRlIENhcG4gQW5ub3VuY2VyO1RoZSBQaXJhdGUgQ2FwbiBNZWdhLUtpbGxzO0VsZGVyIEJhcmsgSFVEO0Rvb21zZGF5IFJpcHBlciBTaG91bGRlcjtTY29yY2hpbmcgVGFsb247RGF1Z2h0ZXJzIG9mIEh5ZHJvcGhpaW5hZTtTcGF1bGRlcnMgb2YgdGhlIEV4YWN0IE1hcmtzbWFuO0dsb3ZlcyBvZiB0aGUgV2lsZCBXZXN0O0dpZnQgb2YgdGhlIEF3YWtlbmVkO0JyYWNlcnMgb2YgdGhlIEJhdHRsZWZpZWxkO1dpbmdzIG9mIHRoZSBCYXR0bGVmaWVsZDtTdG9uZWhhbGwgUm95YWwgR3VhcmQgSGVsbWV0O1BhdWxkcm9ucyBvZiB0aGUgQmF0dGxlZmllbGQ7SGFsYmVyZCBvZiB0aGUgVmFsa3lyaWU7Q2hhaW5lZCBDaG9wcGVyO0hvcm5zIG9mIHRoZSBGcm96ZW4gQmxvb2Q7U2hhZG93c2hhcmQ7U2hhZG93c2hhcmQgLSBPZmYtSGFuZDtTYXBwaGlyZSBTYWJyZS1MeW54O1N0YXJsaWdodCBCb3c7V3JhaXRoIEtpbmcgQ29ycnVwdGVkIEFzaGJyaW5nZXI7Q3Jvd24gb2YgTWFsaWNlO1JpdmVyIFZpYWwgTm9uZTtBbmNpZW50IENyb3duO1RhaWwgb2YgdGhlIFZpcnVsZW50IEtyYWl0O1BsYXRlcyBvZiB0aGUgTW9sb2thdSBTdGFsa2VyO0hlYWQgb2YgdGhlIE1vbG9rYXUgU3RhbGtlcjtOYWNyZWQ5519cyBTdGFnIENsYXdzO0xlZ3Mgb2YgdGhlIEZhbGxlbiBQcmluY2VzcztUaGlyc3Qgb2YgRXp0emhvayAtIE9mZi1IYW5kO1RoaXJzdCBvZiBFenR6aG9rIEJsYWRlO1Nob3VsZGVycyBvZiB0aGUgU2FjcmlmaWNpYWwgU2VycGVudDtHYWxsb3dzIFVuZGVyc3R1ZHkgSG9vZDtCZWx0IG9mIHRoZSBTY2FybGV0IFJhdmVuO0NhcGUgb2YgdGhlIFdlZXBpbmcgQmVhc3Q7QXJtcyBvZiB0aGUgU2FjcmlmaWNpYWwgU2VycGVudDtPZmYtaGFuZCBXZWFwb24gb2YgdGhlIFZvbGNhbmljIEd1YXJkO1N3b3JkIG9mIHRoZSBWb2xjYW5pYyBHdWFyZDtQYXVsZHJvbnMgb2YgdGhlIFZvbGNhbmljIEd1YXJkO0ZsYW1pbmcgSGFpciBvZiBCbGF6ZSBBcm1vcjtCZWx0IG9mIHRoZSBWb2xjYW5pYyBHdWFyZDtCcmFjZXJzIG9mIHRoZSBGb3JzYWtlbiBGbGFtZTtQcm92b2NhdGlvbiBvZiBSdWluIEJlbHQ7QXJzZW5hbCBvZiB0aGUgQmxhZGVrZWVwZXI7UHJheWVyIEJlYWRzIG9mIHRoZSBCbGFkZWtlZXBlcjtBcm1vciBvZiBFdGVybmFsIE5pZ2h0O01hc2sgb2YgRXRlcm5hbCBOaWdodDtTaGllbGQgb2YgRXRlcm5hbCBOaWdodDtHbGFpdmUgb2YgRXRlcm5hbCBOaWdodDtCZWx0IG9mIHRoZSBIYXpoYWRhbCBNYWdlYnJlYWtlcjtBcm1ndWFyZHMgb2YgdGhlIFNpbGVudCBFZGljdDtTbWFsbCBUYXNzZWxzIG9mIHRoZSBCbGFjayBEZWF0aDtCYWxsLW4tQ2hhaW5zIG9mIHRoZSBCbGFjayBEZWF0aDtQYXVsZHJvbiBQZXJjaDtBcm1sZXQgb2YgdGhlIEJhc2lsaXNrO0dvbGRlbiBIeWRyYWthbiBMYXRjaDtQYXVsZHJvbiBvZiB0aGUgTGl6YXJkIEtpbmc7TWFzayBvZiB0aGUgU2NvdW5kcmVsO0ZpbnMgb2YgdGhlIExpemFyZCBLaW5nO0RlZXAgV2FyZGVuKnMgVG9vdGggQnJhY2VyO0F0aGVuYSBQQSBXZWFwb247QXRoZW5hIFBBIFNob3VsZGVyO0F0aGVuYSBQQSBIZWFkO0F0aGVuYSBQQSBCZWx0O0F0aGVuYSBQQSBCYWNrO0dyZWF0ZXIgVHdpbiBCbGFkZTtNYXJrIG9mIHRoZSBGaXJzdCBIdW50O0hvbGRvdXQgb2YgdGhlIE91dGxhdyBIdW50c21hbjtIb29kIG9mIHRoZSBUd2luIEJsYWRlcztUb29scyBvZiB0aGUgT3V0bGF3IEh1bnRzbWFuO0hlYXJ0bGVzcyBIdW50IC0gQXJtb3I7Q2xpbmt6IFRoZSBGYWl0aCBvZiBBdmVuZ2VycyBTaG91bGRlcjtDbGlua3ogVGhlIEZhaXRoIG9mIEF2ZW5nZXJzIFdlYXBvbjtDbGlua3ogVGhlIEZhaXRoIG9mIEF2ZW5nZXJzIEhlYWQ7Q2xpbmt6IFRoZSBGYWl0aCBvZiBBdmVuZ2VycyBHbG92ZXM7Q2xpbmt6IFRoZSBGYWl0aCBvZiBBdmVuZ2VycyBCYWNrO1dhbmRlcmluZyBSYW5nZXIgV2VhcG9uO1dhbmRlcmluZyBSYW5nZXIgU2hvdWxkZXI7V2FuZGVyaW5nIFJhbmdlciBNaXNjO1dhbmRlcmluZyBSYW5nZXIgTGVncztXYW5kZXJpbmcgUmFuZ2VyIEhlYWQ7V2FuZGVyaW5nIFJhbmdlciBCYWNrO1dhbmRlcmluZyBSYW5nZXIgQXJtcztUZXJyYWluIC0gU3ByaW5nO1dyYXRoIG9mIHRoZSBJbGx1c3RyaWQ5519cyBTYWdlIE1vdW50O1dyYXRoIG9mIHRoZSBJbGx1c3RyaWQ5519cyBTYWdlIFdlYXBvbjtXcmF0aCBvZiB0aGUgSWxsdXN0cmlvdXMgU2FnZSBTaG91bGRlcjtXcmF0aCBvZiB0aGUgSWxsdXN0cmlvdXMgU2FnZSBPZmYtSGFuZDtXcmF0aCBvZiB0aGUgSWxsdXN0cmlvdXMgU2FnZSBIZWFkO0Jhc2hlciBvZiBNYWdlIFNrdWxscztPZmZoYW5kIEJhc2hlciBvZiBNYWdlIFNrdWxscztTcGFjZUZyb2cgSHVudGVyIFNob3VsZGVyO1JhenppbHMgTWlkYXMgS251Y2tsZXMgUHJlbTtFdGVybmFsIFJhZGlhbmNlIEJsYWRlcyBQcmVtO1NwYWNlRnJvZyBIdW50ZXIgTmVjaztTcGFjZUZyb2cgSHVudGVyIEJhY2s7U3BhY2VGcm9nIEh1bnRlciBBcm1vcjtNYXJzIEZ1cnkgb2YgV2FyIEdvZCBXZWFwb247R29kKnMgTWVyY3k7TWFycyBGdXJ5IG9mIFdhciBHb2QgTGVncztNYXJzIEZ1cnkgb2YgV2FyIEdvZCBBcm1vcjtHb2xkZW4gQXRvbWljIFJheSBUaHJ1c3RlcnM7VmljaWQ5519cyBHeXJvc3BoZXJlIE9mZi1IYW5kO1ZpY2lvdXMgR3lyb3NwaGVyZSBNaXNjO1ZpY2lvdXMgR3lyb3NwaGVyZSBIZWFkO1ZpY2lvdXMgR3lyb3NwaGVyZSBCYWNrO09uaSBvZiB0aGUgUmVkIE1pc3QgV2VhcG9uO0JyYWNlcnMgb2YgdGhlIFNoYXR0ZXJlZCBWYW5ndWFyZDtPbmkgb2YgdGhlIFJlZCBNaXN0IEhlYWQ7T25pIG9mIHRoZSBSZWQgTWlzdCBCZWx0O09uaSBvZiB0aGUgUmVkIE1pc3QgQXJtb3I7U2NvdXJnZSBvZiB0aGUgc2FjcmVkIGdyb3ZlIFdlYXBvbjtTY291cmdlIG9mIHRoZSBzYWNyZWQgZ3JvdmUgU2hvdWxkZXI7U2NvdXJnZSBvZiB0aGUgc2FjcmVkIGdyb3ZlIE9mZi1IYW5kO1Njb3VyZ2Ugb2YgdGhlIHNhY3JlZCBncm92ZSBNb3VudDtTY291cmdlIG9mIHRoZSBzYWNyZWQgZ3JvdmUgSGVhZDtSZWRyYWdlIENyYXdsZXIgQmVsdDtDbGF3cyBvZiB0aGUgQ2hhaW5icmVha2VyO1N0YWZmIG9mIEd1bi1ZdTtTaG91bGRlcnMgb2YgdGhlIFJpcHRpZGUgUmFpZGVyO0Nyb3duIG9mIHRoZSBSaXB0aWRlIFJhaWRlcjtBcm1vciBvZiB0aGUgUmlwdGlkZSBSYWlkZXI7U3RyYXAgb2YgQmxhY2sgTmloaWxpdHk7T3JpZ2luIG9mIHRoZSBEYXJrIE9hdGggLSBUYWlsO1NwYW4gb2YgQmxhY2sgTmloaWxpdHk7U2lsdmVyIERyYWdvbiBLaW5nIFNob3VsZGVyO1NpbHZlciBEcmFnb24gS2luZyBXZWFwb247U2lsdmVyIERyYWdvbiBLaW5nIE9mZi1IYW5kO1NpbHZlciBEcmFnb24gS2luZyBIZWFkO1NpbHZlciBEcmFnb24gS2luZyBCYWNrO1NpbHZlciBEcmFnb24gS2luZyBBcm1zO0xpbWJzIG9mIEVudHdpbmVkIEZhdGU7V2hpc2tlcnMgb2YgRW50d2luZWQgRmF0ZTtFbWJlciBUaXBwZWQgQ2FyYXBhY2U7RW1iZXIgVGlwcGVkIE1hbmlwdWxhdG9ycztTeW1iaW90aWMgRHJlYWR3eXJtIEJhY2s7Q29udGVzc2EqcyBDcmVlZCBTaG91bGRlcnM7Q29udGVzc2EqcyBDcmVlZCBEcmVzcztDb250ZXNzYSpzIENyZWVkIEhhdDtDb250ZXNzYSpzIENyZWVkIFdlYXBvbjtXZWFwb25zIG9mIHRoZSBTYXZhZ2UgTW9uZ2VyO1NoYXR0ZXJlZCBHcmVhdHN3b3JkO1BhdWxkcm9ucyBvZiB0aGUgTm9ydGhlcm4gU2hvcmU7TWFzayBvZiB0aGUgTm9ydGhlcm4gU2hvcmU7RmF1bGRzIG9mIHRoZSBOb3J0aGVybiBTaG9yZTtHYXVudGxldHMgb2YgdGhlIE5vcnRoZXJuIFNob3JlO0RpbWVuc2lvbmFsIFNlZXAgU2hvdWxkZXI7RGltZW5zaW9uYWwgU2VlcCBIZWFkO0JlbHQgb2YgdGhlIEV0ZXJuYWwgTGlnaHQ7SGVhcnQgb2YgdGhlIEVtZXJhbGQgU2VhO05pZ2h0c2lsdmVyIExvY2tzO0RhcmtmYWxsIFdhcmRlbiBCcmFjZXJzO1RlbXBsZSBHYWxhIC0gQmFjaztUZW1wbGUgR2FsYSAtIE1pc2M7VGVtcGxlIEdhbGEgLSBTaG91bGRlcjtUZW1wbGUgR2FsYSAtIFdlYXBvbjtTZXJyYWt1cmE7V2VhdGhlciBBc2g7QmxhemluZyBPYmxpdmlvbiBWIDMuMDtNZWNoYWxvZG9uIEludGVyZGljdG9yO0NyZWVwaW5nIFNoYWRvdzsgMTIzfHx8