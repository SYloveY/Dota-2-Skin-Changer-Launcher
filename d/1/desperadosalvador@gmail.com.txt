limitHWID:: 1 000||| 111::  111||| 222:: $2y$10$OTAyYWE5NzQ2MTExY2FhNuzmgllpR5tqvNPntBm1qR2/o.rc7H5X6 222||| 123:: God*s Mercy;Mars Fury of War God Armor;Arena Champion Belt;Forsworn Legacy - Legs;Mars Fury of War God Off-Hand;Arena Champion Shield;Arena Champion Spear;Mars Fury of War God Weapon;Mars Fury of War God Legs;Arena Champion Armor;Endless Night Head;Mask of the Primal Firewing;Night Terrors Mount;Sacred  fire Shoulder;Night Terrors Belt;Rough Rider*s Tools;Hat of Empiric Incendiary;Lycosidae*s Brood;Chaos Legion Helm;Arms of the Bitterwing Legacy;Darkness Wailing Back;Span of Black Nihility;Darkness Wailing Legs;NS Twilight manticore Legs;Frightful Revelries Legs;Origin of the Dark Oath - Legs;Strap of Black Nihility;Frightful Revelries Tail;Origin of the Dark Oath - Tail;TI9 Cache Huskar Darkclaw Berserker Head;Grand Belt of the Witch Hunter Templar;Majesty Of The Colossus - Pebble;Arms of Elasmyr;Deep Vault Guardian Spine;Golden Grasping Bludgeon;Maelrawn*s abyssal Guard Weapon;Maelrawn*s abyssal Guard Belt;Maelrawn*s abyssal Guard Arms;Helm of the Abyssal Scourge;Blade of the Abyssal Scourge;Armor of the Abyssal Scourge;Imperial Envoy;Arsenal of the Demonic Vessel V 2.1;Enveloping Despair V 2.1;Black Orc Warboss V 2.0;Undefeated General;The Red Conqueror Set;Saberhorns Armor Set;The Wild Tamer;Marauder Chieftain of the Chaos Wastes;Hunter of the Red Talon Set;Friend of the West;Custom of Karroch Set;Tipsy Brawler;Red Dragon;Icebrew Angler;Warrior of Arena Set;Heavy Barbed Armor Set;Charge of the Wrathrunner;Emerald Frenzy Set;Feast of the Gluttons Larder;Chaos Chosen V 3.0;Eternal Chaos Chosen;War Breakers Set;The Conquering Tyrant Set V 3.0;Arms of Burning Turmoil Set V 3.1;Champion of Discord V 3.1;Rose And The Beast;Chaos Legion Set V 3.1;Astrologer Set;Opus of the Vizier Exile V 2.1;Fires of Vashundol no effect V 2.1;Ravens Flame;Fire Dragon of Doom V 3.0;Pact of the Wurmblood V 3.0;The Blazing Superiority V 3.0;Neverdying Knight Set;Dragons Ascension V 3.0;Blazing Oblivion V 3.0;Might of the Galloping Avenger V 2.1;Rising Glory V 2.1;Azurite Warden V 2.1;Engulfing Spike V 2.1;Vindictive Protector V 2.1;War-Vestments of the Magnoceri V 2.1;Unfettered Malevolence;The Baptism of Melting Fire;Witch Hunter Templar;Armaments of Leviathan Set;Honored Servant of the Empire;Desolate Conquest;Hunter of Kings V 2.0;Curse of Ambry set;Memories of the Vow Eternal;Convalescing Empress;Serpent of the Emerald Sea V 3.0;Storegga 3 LVL Ult + Ice Tiny;Magister of the Narrow Fates;Elemental Imperator V 2.0;Elemental Realms V 2.0;Barding of the Soul Keeper;Steam Chopper; 123|||