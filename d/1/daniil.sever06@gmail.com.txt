bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogMDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMzA5QzIzMDVCRTY4IDExMXx8fCAyMjI6OiAkMnkkMTAkWW1WalpUWTVORFpqWlRSaFpqaGtPT2JLejZOeFpMZms5bmZPQ3JzRERNcWVSdXpjQ2xIVmUgMjIyfHx8IDEyMzo6IFNleHkgV29tYW4gTWVnYS1LaWxsO0hpZGRlbiBWZWN0b3IgLSBBcm1vcjtIaWRkZW4gVmVjdG9yIC0gQmVsdDtIaWRkZW4gVmVjdG9yIC0gSGF0O0hpZGRlbiBWZWN0b3IgLSBCbGFkZTtHb2xkZW4gSW5mZXJuYWwgQ2hpZWZ0YWluO0luZmVybmFsIE1lbmFjZTtUZW1wZXN0IEhlbG0gb2YgdGhlIFRodW5kZXJnb2QgKyBSaWdodGVvdXMgVGh1bmRlcmJvbHQ7RGlyZSBOZW1lc3RpY2UgQ3JlZXBzO1JhZGlhbnQgTmVtZXN0aWNlIENyZWVwcztEaXBwZXIgdGhlIERlc3Ryb3llcjtTd2lmdCBDbGF3IFByZW07VGhlIE9yZGVyIG9mIEN5cHJpbjtDcm93biBvZiB0aGUgTWFsaWduYW50IFJ1bGU7Qmxpc3RlcmluZyBTaGFkZSBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzO0NyaW1zb24gVW5icm9rZW4gRmVhbHR5O0Jhc2hlciBvZiBNYWdlIFNrdWxscztPZmZoYW5kIEJhc2hlciBvZiBNYWdlIFNrdWxscztXZWF0aGVyIEJsdWUgU2t5IGZyb20gU291cCBmb3IgU2x1dHM7VGVycmFpbiAtIEltbW9ydGFsIEdhcmRlbnM7R3VhcmRpYW5zIG9mIHRoZSBMb3N0IFBhdGggRGlyZSBUb3dlcnM7R3VhcmRpYW5zIG9mIHRoZSBMb3N0IFBhdGggUmFkaWFudCBUb3dlcnM7VjFsYXQgQW5ub3VuY2VyO0N1c3RvbSBEYXNoYm9hcmQgMTEwO0pld2VsIG9mIEFlb25zIFByZW07QnJhY2VycyBvZiBBZW9ucyBQcmVtO01hY2Ugb2YgQWVvbnMgUHJlbTtEaXNjaXBsZSBvZiB0aGUgV3lybXdyb3VnaHQgRmxhbWU7V3lybXdyb3VnaHQgRmxhcmU7QmxhZGVzIG9mIFByaXNtYXRpYyBHcmFjZTtTaGFkb3cgaW4gdGhlIERlZXAgSGVsbTtTaGFkb3cgaW4gdGhlIERlZXAgQXJtb3I7U2hhZG93IGluIHRoZSBEZWVwIEJhY2s7U2hhZG93IGluIHRoZSBEZWVwIEJyYWNlcnM7V2luZHJhbmdlciBBcmNhbmEgc3R5bGUgMSAoQmx1ZSBCaXJkKSArIEZ1bGwgV1IgaW1tb3J0YWw7SWNlcGxhaW4gUmF2YWdlcjtBaFB1Y2s7SnVuZ2xlIFNlY3JldHM7Q3VzdG9tIE1lZ2FQYWNrIFN2ZW4gVHJ1ZSBWaWdpbDtMZWdpb24gQ29tbWFuZGVyIE1vZE1ha2VyIE1lZ2FQYWNrO01pcmFuYSBUSTEwIENvbGxlY3RvcnMgQ2FjaGUgTWVnYVBhY2s7S2luIG9mIHRoZSBTYW5nc3RyYXRoIEZvbGQ7TmlnaHQgU3RhbGtlciBJbW1vcnRhbCBhbmQgUmVhcGVyIEtpc2lsZXYgTW9kTWFrZXIgTWVnYVBhY2s7TGlnaHQgb2YgRWxlYW5vciBTZXQ7QW50aW1hZ2UgV2VpIEZlbWFsZSAoWWQ5519IGNhbiBhZGQgV2VhcG9uIGFuZCBIZWFkKTtUaGUgQ29ycnVwdGlvbiBvZiBOZXp6dXJlZW07Q3VzdG9tIE1lZ2FQYWNrIERyb3cgUmFuZ2VyIFN5bHZhbmFzIENsYXNzaWM7IDEyM3x8fA==