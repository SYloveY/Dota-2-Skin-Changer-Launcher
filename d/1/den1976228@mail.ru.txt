bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogMDMyRTAyQjQtMDQ5OS0wNTFBLTcyMDYtMUUwNzAwMDgwMDA5IDExMXx8fCAyMjI6OiAzMWRkYzE2NmU1YzUxMzg5OTZmMTk1ZWFhNTFmN2I2YmRlODA3MjA5NDRhM2RjNTE5MmRiMTQyMjI1ZmI4MDZlMDU5ZWZmNWUxZjMzODBhZjgzNzIzYTQ2NGQyNDYzOGZhZDhhMWI5N2U0Yjc2NTQ5YTQ3NzFhYjZiOGJhOGY3YiAyMjJ8fHwgMTIzOjogQWdoYW5pbSBEdW5nZW9uIFNjZXB0ZXIgRWZmZWN0O1RoZSBTdW1taXQgMyBDdXJzb3IgUGFjaztEZWNsYXJhdGlvbiBvZiB0aGUgRGl2aW5lIExpZ2h0IFJhZGlhbnQgVG93ZXJzO0d1YXJkaWFucyBvZiB0aGUgTG9zdCBQYXRoIERpcmUgVG93ZXJzO1Jvc2hhbiBmcm9tIERpYWJsbztSZXB0aWxpYW4gUmVmdWdlIERpcmUgQ3JlZXBzO0NhdmVybml0ZSBSYWRpYW50IENyZWVwcztBZWdpcyBhbmQgUm9zaGFuIFN0LiBWYWxlbnRpbmUgRGF5O0xpZ2h0bmluZyBCbGluayBWIDIuMDtUSS04IEJvdHRsZSBFZmZlY3Q7Q29sb3JTdGF0cztXaGl0ZSBEYWdvbjtPdmVyZ3Jvd24gRW1ibGVtO1RJLTkgRm9yY2UgU3RhZmYgRWZmZWN0O1RJLTEwIExldmVsIFVwIEVmZmVjdDtUSS0xMCBNZWthc20gRWZmZWN0O1RJLTEwIFBoYXNlIEJvb3RzIEVmZmVjdDtUSS05IE9HIFRQIEVmZmVjdDtUSS0xMCBCb3R0bGUgRWZmZWN0O0VwaXRhcGhpYyBUcmFwO0ZsdXR0ZXJpbmcgQW1ldGh5c3QgKyBQdXJwbGUgRm9jYWwgUmVzb25hbmNlIERvdGEyQ2hhbmdlciBFZGl0aW9uO0RyYWdvbmNsYXcgSG9vaztQcm92b2NhdGlvbiBvZiBSdWluIEJyYWNlcnM7UHJvdm9jYXRpb24gb2YgUnVpbiBQYXVsZHJvbjtKdWdnZXJuYXV0IEFyY2FuYSBSZWQgQmxhZGVmb3JtIE9yaWdpbnM7UHJvdm9jYXRpb24gb2YgUnVpbiBCZWx0O1Byb3ZvY2F0aW9uIG9mIFJ1aW4gU3dvcmQ7Q2FwZSBvZiB0aGUgTGlmdGVkIFZlaWw7Q29kaWNpbCBvZiB0aGUgVmVpbGVkIE9uZXM7QXJtb3Igb2YgdGhlIExpZnRlZCBWZWlsO0JlbHQgb2YgdGhlIExpZnRlZCBWZWlsO01hbmlmb2xkIFBhcmFkb3ggUEEgQXJjYW5hIFN0eWxlIDM7V2VhdGhlciBSYWluO0JyYWNlcnMgb2YgdGhlIERlZmVuZGVyIG9mIFJ1aW47UmVzaXN0aXZlIFBpbmZvbGQgUHJlbTtNYXNrIG9mIHRoZSBHYWx2YW5pemVkIFNwYXJrO0JlYXN0IG9mIHRoZSBEZWZlbmRlciBvZiBSdWluO09yYiBvZiBEZWxpdmVyYW5jZTtQYXVsZHJvbnMgb2YgdGhlIEdhbHZhbml6ZWQgU3Bhcms7SGVsbC1TcGFyIEFuYXRoZW1hIE9ic2lkaWFuIEJsaWdodDtIb3JucyBvZiB0aGUgQmV0cmF5ZXI7TXVsY3RhbnQgUGFsbCBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzO0ZpbiBLaW5ncyBDaGFybSBvZiBFbWluZW50IFJldml2YWwgRXhjZXB0aW9uYWw7SmFraXJvIEltbW9ydGFsIFdpbmdzO0dpbmdlcmJyZWFkIEJhYnkgUm9zaGFuO0RhcmsgQXJ0aXN0cnkgVGhyb3diYWNrO1Nub3cgTWV0ZW9yO0RyZWFkIFJldHJpYnV0aW9uIC0gQnJhY2VycyBBbHQ7RHJlYWQgUmV0cmlidXRpb24gLSBDYXBlIEFsdDtEcmVhZCBSZXRyaWJ1dGlvbiAtIEhlYWR3ZWFyIEFsdDtEcmVhZCBSZXRyaWJ1dGlvbiAtIExlZyBBcm1vciBBbHQ7RHJlYWQgUmV0cmlidXRpb24gLSBRdWl2ZXIgQWx0O0RyZWFkIFJldHJpYnV0aW9uIC0gU2hvdWxkZXIgQXJtb3IgQWx0O0FyY2FuYSBEcmVhZCBSZXRyaWJ1dGlvbiBNYXN0ZXIgb2YgTWFkbmVzcztTb3VsIENvcnB1bGVuY2UgLSBTaG91bGRlcjtUb21vKmthbiBJbmNhcm5hdGUgQXJtb3I7VG9tbyprYW4gSW5jYXJuYXRlIEhvb2Q7VG9tbyprYW4gSW5jYXJuYXRlIFRhaWw7VG9tbyprYW4gSW5jYXJuYXRlIEFyYmFsZXN0O0NyaW1zb24gR2F0ZXMgb2YgTm90aGw7RGFya2NsYXcgRW1pc3NhcnkgQXJtcztEYXJrY2xhdyBFbWlzc2FyeSBEcmVzcztOb3RobGljIEJ1cmRlbiBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzIFByZW07RGFya2NsYXcgRW1pc3NhcnkgU3RhZmY7UHJvZGlneSBvZiBQcmVmZWN0dXJhIC0gSGVhZDtQcm9kaWd5IG9mIFByZWZlY3R1cmEgLSBTaG91bGRlcjtQcm9kaWd5IG9mIFByZWZlY3R1cmEgLSBXZWFwb247Rm9vdGZhbGxzIG9mIHRoZSBTcG9yZWZhdGhlcnMgLSBEZWF0aCBXYXJkO1Byb2RpZ3kgb2YgUHJlZmVjdHVyYSAtIEJlbHQ7Q29uc3RlbGxhdGlvbiBBcm1vcjtIaWRkZW4gVmVjdG9yIC0gQXJtb3I7SGlkZGVuIFZlY3RvciAtIEJlbHQ7SGlkZGVuIFZlY3RvciAtIEhhdDtIaWRkZW4gVmVjdG9yIC0gQmxhZGU7SW1tb3J0YWwgUGFudGhlb247QmVsdCBvZiB0aGUgS2luZyBSZXN0b3JlZDtUZW1wZXN0IEhlbG0gb2YgdGhlIFRodW5kZXJnb2QgUHJlbTtCcmFjZXJzIG9mIEFlb25zIFByZW07Q2xhc3p1cmVtZSBJbmN1cnNpb24gSGVhZDtKZXdlbCBvZiBBZW9ucyBQcmVtO01hY2Ugb2YgQWVvbnM7Q2xhc3p1cmVtZSBJbmN1cnNpb24gQmVsdDtNb25rZXkgS2luZyBBcmNhbmEgTWVnYVBhY2s7SWNlIExpbmEgUHJlbWl1bTtQdXBwZXQgUHVkZ2UgUGVyc29uYSAoeWQ5519IGNhbiBhZGQgSG9vaykgVVA7QWJhZGRvbiBSRUQgTWVnYVBhY2s7RGVmZW5kZXIgb2YgdGhlIEJydW1hbCBDcmVzdDtKYWtpcm8gTWVnYVBhY2s7TWFycyBUSTEwIENvbGxlY3RvcnMgQ2FjaGUgTWVnYVBhY2s7TW9ycGhsaW5nIEltbW9ydGFscyBNZWdhUGFjayBVUDtFbmlnbWEgTWVnYVBhY2s7QXJjYW5hIE1lZ2FQYWNrIFNoYWRvdyBGaWVuZDtXaW5kcmFuZ2VyIEFyY2FuYSBzdHlsZSAxIChCbHVlIEJpcmQpICsgRnVsbCBXUiBpbW1vcnRhbDtRdWVlbiBvZiBQYWluIEFyY2FuYSBNZWdhUGFjaztBbnRpTWFnZSBSRUQgTWVnYVBhY2s7VGlkZWh1bnRlciBNZWdhUGFjaztSb3lhbCBTcXVpcmU7IDEyM3x8fA==