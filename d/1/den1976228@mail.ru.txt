limitHWID:: 1 000||| 111:: 032E02B4-0499-051A-7206-1E0700080009 111||| 222:: 31ddc166e5c5138996f195eaa51f7b6bde80720944a3dc5192db142225fb806e059eff5e1f3380af83723a464d24638fad8a1b97e4b76549a4771ab6b8ba8f7b 222||| 123:: Aghanim Dungeon Scepter Effect;The Summit 3 Cursor Pack;Declaration of the Divine Light Radiant Towers;Guardians of the Lost Path Dire Towers;Roshan from Diablo;Reptilian Refuge Dire Creeps;Cavernite Radiant Creeps;Aegis and Roshan St. Valentine Day;Lightning Blink V 2.0;TI-8 Bottle Effect;ColorStats;White Dagon;Overgrown Emblem;TI-9 Force Staff Effect;TI-10 Level Up Effect;TI-10 Mekasm Effect;TI-10 Phase Boots Effect;TI-9 OG TP Effect;TI-10 Bottle Effect;Epitaphic Trap;Fluttering Amethyst + Purple Focal Resonance Dota2Changer Edition;Dragonclaw Hook;Provocation of Ruin Bracers;Provocation of Ruin Pauldron;Juggernaut Arcana Red Bladeform Origins;Provocation of Ruin Belt;Provocation of Ruin Sword;Cape of the Lifted Veil;Codicil of the Veiled Ones;Armor of the Lifted Veil;Belt of the Lifted Veil;Manifold Paradox PA Arcana Style 3;Weather Rain;Bracers of the Defender of Ruin;Resistive Pinfold Prem;Mask of the Galvanized Spark;Beast of the Defender of Ruin;Orb of Deliverance;Pauldrons of the Galvanized Spark;Hell-Spar Anathema Obsidian Blight;Horns of the Betrayer;Mulctant Pall of the Crimson Witness;Fin Kings Charm of Eminent Revival Exceptional;Jakiro Immortal Wings;Gingerbread Baby Roshan;Dark Artistry Throwback;Snow Meteor;Dread Retribution - Bracers Alt;Dread Retribution - Cape Alt;Dread Retribution - Headwear Alt;Dread Retribution - Leg Armor Alt;Dread Retribution - Quiver Alt;Dread Retribution - Shoulder Armor Alt;Arcana Dread Retribution Master of Madness;Soul Corpulence - Shoulder;Crimson Gates of Nothl;Darkclaw Emissary Arms;Darkclaw Emissary Dress;Nothlic Burden of the Crimson Witness Prem;Darkclaw Emissary Staff;Prodigy of Prefectura - Head;Prodigy of Prefectura - Shoulder;Prodigy of Prefectura - Weapon;Footfalls of the Sporefathers - Death Ward;Prodigy of Prefectura - Belt;Constellation Armor;Hidden Vector - Armor;Hidden Vector - Belt;Hidden Vector - Hat;Hidden Vector - Blade;Immortal Pantheon;Belt of the King Restored;Tempest Helm of the Thundergod Prem;Monkey King Arcana MegaPack;Ice Lina Premium;Puppet Pudge Persona (you can add Hook) UP;Abaddon RED MegaPack;Defender of the Brumal Crest;Jakiro MegaPack;Mars TI10 Collectors Cache MegaPack;Morphling Immortals MegaPack UP;Enigma MegaPack;Arcana MegaPack Shadow Fiend;Windranger Arcana style 1 (Blue Bird) + Full WR immortal;Queen of Pain Arcana MegaPack;AntiMage RED MegaPack;Tidehunter MegaPack;Royal Squire; 123|||