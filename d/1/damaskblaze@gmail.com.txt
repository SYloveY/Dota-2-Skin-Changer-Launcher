bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogMDNENDAyNzQtMDQzNS0wNUU0LTU3MDYtQTUwNzAwMDgwMDA5IDExMXx8fCAyMjI6OiAzMTUwYmZhYzVkZmM3ZDFkZGRiOGMxM2EyNmNkMzNmMGUyMjFjZjk5OTdmMDI2ZGRjN2JjMjM0Y2MxNjQ4MDIxMjNhNzIwZGMyNWRlNDI4YWY0NTQzOWJkNWNkNWQ2MzgxOTBiNDAzYTY0NjJkOGRjOTc0Mjg3YzI5MjI5MTUzOCAyMjJ8fHwgMTIzOjogZHJpdmVfZGlyOjpFdmVyYmxhY2s7ZHJpdmVfZGlyOjpEYXJrYnJldyBFbmZvcmNlciBhbmQgRXRlcm5hbCBSYWRpYW5jZSBCbGFkZXMgYW5kIE1pZGFzIEtudWNrbGVzIE1lZ2FQYWNrO2RyaXZlX2Rpcjo6QUFNZWdhUGFjaztkcml2ZV9kaXI6OkFwb2NhbHlwc2UgVW5ib3VuZCAtIFNob3VsZGVyO2RyaXZlX2Rpcjo6QW50aW1hZ2UgV2VpIEZlbWFsZSAoWWQ5519IGNhbiBhZGQgV2VhcG9uIGFuZCBIZWFkKTtkcml2ZV9kaXI6OkF4ZSBmdWxsIEltbW9ydGFscyBNZWdhcGFjaztkcml2ZV9kaXI6OkhhcnZlc3RzIEhvdW5kO2RyaXZlX2Rpcjo6VGhpcnN0IG9mIEV6dHpob2sgQnVuZGxlIFByZW07ZHJpdmVfZGlyOjpCb3VudHkgSHVudGVyIE1hbmlhYyBTZXQ7ZHJpdmVfZGlyOjpEb3RhIDIgQ2hhbmdlciBFZGl0aW9uIEh1bnRlcnMgSG9hcmQgb2YgdGhlIENyaW1zb24gV2l0bmVzcztkcml2ZV9kaXI6OlRpbmVzIG9mIFR5YmFyYTtkcml2ZV9kaXI6OkJyaXN0bGViYWNrIE1lZ2FQYWNrO2RyaXZlX2Rpcjo6R29sZGVuIEluZmVybmFsIENoaWVmdGFpbjtkcml2ZV9kaXI6OkF4ZSBvZiB0aGUgUHJvdmVuO2RyaXZlX2Rpcjo6R3J5cGhvbiBSaWRlciBTZXQ7ZHJpdmVfZGlyOjpDbGlua3ogTWVnYVBhY2s7ZHJpdmVfZGlyOjpDaGFyZ2Ugb2YgdGhlIFR1bmRyYSBXYXJkZW47ZHJpdmVfZGlyOjpHb2xkZW4gQnJhY2VycyBvZiBGb3Jsb3JuIFByZWNpcGljZTtkcml2ZV9kaXI6OkFsbHVyZSBvZiBNaXJhY2xlIEZydWl0O2RyaXZlX2Rpcjo6Q3JpbXNvbiBHYXRlcyBvZiBOb3RobDtkcml2ZV9kaXI6Ok5vdGhsaWMgQnVyZGVuIG9mIHRoZSBDcmltc29uIFdpdG5lc3MgUHJlbTtkcml2ZV9kaXI6OkRyZXNzIG9mIHRoZSBNZXJxdWVlbjtkcml2ZV9kaXI6OkNvdmVycyBvZiB0aGUgTWVycXVlZW47ZHJpdmVfZGlyOjpTbGVldmVzIG9mIHRoZSBNZXJxdWVlbjtkcml2ZV9kaXI6OlBlYWNvY2sgUHJpZXN0IEV4b3JjaXNtO2RyaXZlX2Rpcjo6Q3Jvd24gb2YgdGhlIEJyaWdodHNocm91ZDtkcml2ZV9kaXI6OkRvb20gSW1tb3J0YWxzIE1lZ2FQYWNrO2RyaXZlX2Rpcjo6REsgUGVyc29uYSBEYXZpb247ZHJpdmVfZGlyOjpTY29yY2hlZCBBbWJlciBTd29yZDtkcml2ZV9kaXI6OkRlYXRoIEJsb3Nzb20gU2V0O2RyaXZlX2Rpcjo6RnJvemVuIFZvaWQ7ZHJpdmVfZGlyOjpIdXNrYXIgTWVnYVBhY2s7ZHJpdmVfZGlyOjpIdXNrYXIgTWVnYVBhY2sgTkVXO2RyaXZlX2Rpcjo6SW1tb3J0YWwgSW52b2tlciBLaWQ7ZHJpdmVfZGlyOjpCZW5ldm9sZW50IENvbXBhbmlvbiBQcmVtO2RyaXZlX2Rpcjo6SmFraXJvIEltbW9ydGFsIFdpbmdzO2RyaXZlX2Rpcjo6SmFraXJvIEltbW9ydGFscyBIZWFkcztkcml2ZV9kaXI6OkphZ2dlZCBIb25vciBCcmFjZXI7ZHJpdmVfZGlyOjpQcm92b2NhdGlvbiBvZiBSdWluIFBhdWxkcm9uO2RyaXZlX2Rpcjo6SnVnZ2VybmF1dCBBcmNhbmEgUmVkIEJsYWRlZm9ybSBPcmlnaW5zO2RyaXZlX2Rpcjo6QmVsdCBvZiB0aGUgQmxhZGVmb3JtIEFlc3RoZXRlO2RyaXZlX2Rpcjo6Q3JpbXNvbiBFZGdlIG9mIHRoZSBMb3N0IE9yZGVyO2RyaXZlX2Rpcjo6TGVnaW9uIENvbW1hbmRlciBNb2RNYWtlciBNZWdhUGFjaztkcml2ZV9kaXI6OkdvbGRlbiBEYXJrIE1hdyBJbmhpYml0byBhbmQgR29sZGVuIFByb2ZhbmUgVW5pb24gYW5kIEdvbGRlbiBEcmVhZCBSZXF1aXNpdGlvbiBMaWZlc3RlYWxlciBJbW1vcnRhbHMgTWVnYXBhY2s7ZHJpdmVfZGlyOjpIZWxsLVNwYXIgQW5hdGhlbWEgT2JzaWRpYW4gQmxpZ2h0O2RyaXZlX2Rpcjo6TXVsY3RhbnQgUGFsbDtkcml2ZV9kaXI6OkNvbXBsZXRlIEhlbG0gb2YgdGhlIERhcmsgTW9vbiBTdGFsa2VyO2RyaXZlX2Rpcjo6TWQ5519bnQgb2YgdGhlIFdpbmdlZCBTZW50aW5lbDtkcml2ZV9kaXI6Ok1vb25mYWxsIFByZW07ZHJpdmVfZGlyOjpBcm1vciBvZiB0aGUgV2luZ2VkIFNlbnRpbmVsO2RyaXZlX2Rpcjo6VHdpbGlnaHQgU2NoaXNtO2RyaXZlX2Rpcjo6U2xhYiBvZiBFcnVwdGluZyBXcmF0aDtkcml2ZV9kaXI6Ok1hcnMgVEkxMCBDb2xsZWN0b3JzIENhY2hlIE1lZ2FQYWNrO2RyaXZlX2Rpcjo6TWlyYW5hIFRJMTAgQ29sbGVjdG9ycyBDYWNoZSBNZWdhUGFjaztkcml2ZV9kaXI6Ok1vcnBobGluZyBJbW1vcnRhbHMgTWVnYVBhY2sgVVA7ZHJpdmVfZGlyOjpOaWdodCBTdGFsa2VyIEltbW9ydGFsIGFuZCBSZWFwZXIgS2lzaWxldiBNb2RNYWtlciBNZWdhUGFjaztkcml2ZV9kaXI6Ok55eCBBc3Nhc3NpbiBNZWdhUGFjayBuZXc7ZHJpdmVfZGlyOjpPdXR3b3JsZCBEZXZvdXZlciBNZWdhUGFjaztkcml2ZV9kaXI6Ok1hbmlmb2xkIFBhcmFkb3ggR290aGljIEh1bnRlcjtkcml2ZV9kaXI6OkljZSBQaG9lbml4IFByZW1pdW0gRWRpdGlvbjtkcml2ZV9kaXI6OlF1ZWVuIG9mIFBhaW4gQXJjYW5hIE1lZ2FQYWNrO2RyaXZlX2Rpcjo6QW5jaWVudCBNYWd1cyBTdHlsZSAzO2RyaXZlX2Rpcjo6UGF1bGRyb25zIG9mIEV0ZXJuYWwgSGFydmVzdCBEMkMgRWRpdGlvbjtkcml2ZV9kaXI6OkFybXMgb2YgRGVzb2xhdGlvbiBQcmVtO2RyaXZlX2Rpcjo6U2lsZW5jZXIgVEkxMCBDb2xsZWN0b3JzIENhY2hlIE1lZ2FQYWNrO2RyaXZlX2Rpcjo6RW1weXJlYW4gUHJlbTtkcml2ZV9kaXI6OlNsYXJkYXIgTWVnYVBhY2sgc2V0O2RyaXZlX2Rpcjo6U2xhcmsgTWVnYVBhY2sgTmV3O2RyaXZlX2Rpcjo6U25pcGVyIEltbW9ydGFsIFdlYXBvbiBvZiB0aGUgQXJkYWxhbiBJbnRlcmRpY3Rvcjtkcml2ZV9kaXI6OlBhY2sgb2YgdGhlIEFyZGFsYW4gSW50ZXJkaWN0b3I7ZHJpdmVfZGlyOjpIZWxtIG9mIHRoZSBBcmRhbGFuIEludGVyZGljdG9yO2RyaXZlX2Rpcjo6QmxhY2tzYWlsIENhbm5vbmVlciBTaG91bGRlcjtkcml2ZV9kaXI6OlNwaXJpdCBCcmVha2VyIE1lZ2FQYWNrO2RyaXZlX2Rpcjo6Q29ycmlkYW4gTWFlc3RybyBhbmQgVGhlIExpZ2h0bmluZyBPcmNoaWQgYW5kIEdvbGRlbiBNYW5kYXRlIG9mIHRoZSBTdG9ybWJvcm4gTWVnYVBhY2sgTkVXO2RyaXZlX2Rpcjo6U3ZlbiBJbW1vcnRhbHMgTWVnYVBhY2sgVVA7ZHJpdmVfZGlyOjpTY3l0aGVzIG9mIFNvcnJvdztkcml2ZV9kaXI6OkZyYWN0YWwgSG9ybnMgb2YgSW5uZXIgQWJ5c20gVVA7ZHJpdmVfZGlyOjpSYWluYm93IENvbG9yIGZvciBUQjtkcml2ZV9kaXI6OlNwYW4gb2YgU29ycm93O2RyaXZlX2Rpcjo6UGx1bmRlciBvZiB0aGUgU2F2YWdlIE1vbmdlcjtkcml2ZV9kaXI6OkRlbW9uZm9yZ2VkIFNldDtkcml2ZV9kaXI6OlVyc2EgSW1tb3J0YWxzIE1lZ2FQYWNrO2RyaXZlX2Rpcjo6VmlzaW9uIG9mIHRoZSBTZXJhcGggU2Npb24gLSBMaWdodDtkcml2ZV9kaXI6OkNob21wZXIgU2V0O2RyaXZlX2Rpcjo6VmlwZXIgTWVnYVBhY2s7ZHJpdmVfZGlyOjpIaWRkZW4gVmVjdG9yIC0gQXJtb3I7ZHJpdmVfZGlyOjpIaWRkZW4gVmVjdG9yIC0gQmVsdDtkcml2ZV9kaXI6OkhpZGRlbiBWZWN0b3IgLSBIYXQ7ZHJpdmVfZGlyOjpIaWRkZW4gVmVjdG9yIC0gQmxhZGU7ZHJpdmVfZGlyOjpXaW5kcmFuZ2VyIEFyY2FuYSBzdHlsZSAyIChPcmFuZ2UgQmlyZCkgYW5kIEZ1bGwgV1IgaW1tb3J0YWw7ZHJpdmVfZGlyOjpEZWZlbmRlciBvZiB0aGUgQnJ1bWFsIENyZXN0O2RyaXZlX2Rpcjo6V3JhaXRoIEtpbmcgQXJjYW5hIE1lZ2FQYWNrO2RyaXZlX2Rpcjo6SG9uZXkgSGVpc3QgQmFieSBSb3NoYW47ZHJpdmVfZGlyOjpUZXJyYWluIC0gUmVlZnMgRWRnZTtkcml2ZV9kaXI6Ok9mZmhhbmQgQmFzaGVyIG9mIE1hZ2UgU2t1bGxzO2RyaXZlX2Rpcjo6QmxhZGUgb2YgdGhlIFN1cnZpdm9yO2RyaXZlX2Rpcjo6QnJvb2Rtb3RoZXIgQW5pbWUgVm9pY2U7ZHJpdmVfZGlyOjpEcm93IFJhbmdlciBBbmltZSBWb2ljZTtkcml2ZV9kaXI6OkNyeXN0YWwgTWFpZGVuIEFuaW1lIFZvaWNlO2RyaXZlX2Rpcjo6V2luZHJ1bm5lciBBbmltZSBWb2ljZTtkcml2ZV9kaXI6Okp1Z2dlcm5hdW50IEVuZyBBcmNhbmEgVm9pY2U7ZHJpdmVfZGlyOjpMZWdpb24gQ29tbWFuZGVyIEVORyBBcmNhbmUgdm9pY2U7ZHJpdmVfZGlyOjpQaGFudG9tIEFzc2FzaW4gRU5HIEFyY2FuZSB2b2ljZTtkcml2ZV9kaXI6OlRlcnJvcmJsYWRlIEVORyBBcmNhbmUgdm9pY2U7ZHJpdmVfZGlyOjpKSiBMaW5zIFRpbWVrZWVwZXIgTXVzaWMgUGFjayBWIDIuMTsgMTIzfHx8