bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogIDExMXx8fCAyMjI6OiAkMnkkMTAkTURSaE1UTTFOemcyWkRkaE0yWmxZT0tNRVhBa0JXazYwN21UWTVjZFNLbUFtNmNPYURqVG0gMjIyfHx8IDEyMzo6IEFyY2FuZSBEcmFwaW5ncztCcmFjZXJzIG9mIENhZGVuemEgTWFnaWMgTWFzdGVyO1NsZWV2ZXMgb2YgdGhlIEJsYWNrZ3VhcmQgTWFndXM7U2VtcGl0ZXJuYWwgUmV2ZWxhdGlvbnMgQXJtcztCZWx0IG9mIEdsb3Jpb3VzIEluc3BpcmF0aW9uO0JlbHQgb2YgRmF0ZSBNZXJpZGlhbjtDb3ZlbmFudCBvZiB0aGUgRGVwdGhzIEJlbHQ7RHJhcGluZ3Mgb2YgUXVhcyBQcmVjb3I7V3JhcHMgb2YgdGhlIEVhc3Rlcm4gUmFuZ2U7VmVzdG1lbnRzIG9mIHRoZSBCbGFja2d1YXJkIE1hZ3VzO0NhcGUgb2YgdGhlIEVhc3Rlcm4gUmFuZ2U7RGFyayBBcnRpc3RyeSBIYWlyO01hc2sgb2YgdGhlIERpdmluZSBTb3Jyb3c7Q292ZW5hbnQgb2YgdGhlIERlcHRocyBSb2JlcztJY2Vmb3JnZWQgU2hvdWxkZXJzO1BhdWxkcm9ucyBvZiBHbG9yaWQ5519cyBJbnNwaXJhdGlvbjtQYWRzIG9mIHRoZSBFYXN0ZXJuIFJhbmdlO1Nob3VsZGVycyBvZiBRdWFzIFByZWNvcjtTZW1waXRlcm5hbCBSZXZlbGF0aW9ucyBHdWFyZDtBcm1zIG9mIHRoZSBJcm9uIEhvZztEaXJlY291cnQgSmVzdGVyIEFybXM7RG9vbXNkYXkgUmlwcGVyIEJhY2s7UmF6b3JzIG9mIHRoZSBJcm9uIEhvZztSb3BlIG9mIHRoZSBNYWQgSGFydmVzdGVyO0JhbGwtbi1DaGFpbnMgb2YgdGhlIEJsYWNrIERlYXRoO1NwaW5lIG9mIHRoZSBCYXNpbGlzaztDb21wZW5kaXVtIEdvbGQgSmF3IG9mIHRoZSBUcmFwcGVyO0Jyb2lsZXIqcyBDbGVhdmVyO0dsYWRpYXRvcipzIFJldmVuZ2UgQXhlO1RoZSBUYWlsIEJhc2g7SmFkZSBUYWxvbjtTY29yY2hpbmcgVGFsb247QXJtcyBvZiBEZXNvbGF0aW9uO1NvdWwgQ29ycHVsZW5jZSAtIFNob3VsZGVyO1NvdWwgQ29ycHVsZW5jZSAtIEhlYWQ7QXJtb3Igb2YgdGhlIERpYWJvbGljYWwgRmllbmQ7QWNpZCBIeWRyYSBDdXJzb3IgUGFjaztXYXRjaGVyIEJlbG93O0hvbGlkYXkgUmFkaWFudCBUb3dlcjtXZWF0aGVyIEFzaDtXZWF0aGVyIE1vb25iZWFtO1dlYXRoZXIgU3ByaW5nO1RlcnJhaW4gLSBTcHJpbmc7Uml2ZXIgVmlhbCBCb2lsaW5nO0NhYmFsaXN0IG9mIERhcmsgTWFnaWMgU2V0O1JlbGljcyBvZiBHbG9yaWQ5519cyBJbnNwaXJhdGlvbjtDYWRlbnphIE1hZ2ljIE1hc3RlcjtUcmlhbHMgb2YgdGhlIEJsYWNrZ3VhcmQgTWFndXMgTm8gZWZmZWN0cztDb21wZW5kaXVtIEJpbmRpbmdzIG9mIHRoZSBUcmFwcGVyO1NjYXZlbmdlciBvZiB0aGUgQmFzaWxpc2s7RXRlcm5hbCBIYXJ2ZXN0O1RveGljIERlYXRoIEVhdGVyO01hcmNoIG9mIHRoZSBQb3dkZXJrZWcgUGF0cm9sOyAxMjN8fHw=