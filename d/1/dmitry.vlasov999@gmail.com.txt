limitHWID:: 1 000||| 111:: BB3B545D-400B-EA11-8102-0068EBD9230F 111||| 222:: $2y$10$NzE3YWMwZDYzZWJlNmQwN.YzPCO3DDaXVoOPiOb1yWB3tZPjH6uzq 222||| 123:: Baby Roshan Prem;Terrain - Immortal Gardens;Guardians of the Lost Path Dire Towers;Guardians of the Lost Path Radiant Towers;Shatterblast Crown;Mantle of the Cinder Baron Style 1;Crucible of Rile;Molten Claw Prem;Piston Impaler;Datastar Progenitor (Alter Arcana);Blade of Tears and Crown of Tears;Iron Surge V 2.2;Savage Mettle;Sword of the Colossus Prem;Malefic Drakes Strike only Effect;Chromy the Centipede Ward;Roshan Halloween Angel Skin;Pink Color for TB;Auspice of the Whyrlegyge Prem;Kotl Illuminate Deer;Bestowments of the Centurion Vanguard;Surgical Precision;Covenant of the Depths;Blueheart Sovereign V 2.0;Bitterwing Legacy;Algid Falcon V 3.1;Explosive Maniac;Daemonfell Flame;Nyaruko for Lion by Patchouli Knowledge;Truebark Adherent;Shimmer of the Anointed;Toll of the Fearful Aria;Vengeance of the Sunwarrior;The Ghastly Gourmand;Lightbringer SF;Charmer of Firesnake;Vantage of the Breach Warden;Hinterland Stalker;Armature of the Belligerent Ram Red;Genie Spirit;Fluttering Amethyst;Plunder of the Savage Monger;Roshan Hunters Set;Ferocious Toxicant;Morbific Provision;Susano Os Descendant;Forgotten Renegade; 123|||