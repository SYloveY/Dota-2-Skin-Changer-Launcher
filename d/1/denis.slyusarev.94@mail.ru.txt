bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogMDNBQTAyRkMtMDQxNC0wNThDLTBGMDYtNkYwNzAwMDgwMDA5IDExMXx8fCAyMjI6OiAkMnkkMTAkTm1aak5tVXpaakkxTlRFNU5tTXhNZXZva0Z3L2M4dXdhOWdqbWR0VGhSeC5oTUMybGN6REsgMjIyfHx8IDEyMzo6IGRyaXZlX2Rpcjo6QXZvd2FuY2Ugb2YgdGhlIFZlaWxlZCBPbmVzO2RyaXZlX2Rpcjo6SnVnZ2VybmF1dCBBcmNhbmEgQmxhZGVmb3JtIExlZ2FjeTtkcml2ZV9kaXI6OldyYWl0aCBLaW5nIEFyY2FuYSBNZWdhUGFjaztkcml2ZV9kaXI6Ok1vbmtleSBLaW5nIEFyY2FuYSBNZWdhUGFjaztkcml2ZV9kaXI6OkNvZGljaWwgb2YgdGhlIFZlaWxlZCBPbmVzO2RyaXZlX2Rpcjo6QXhlIGZ1bGwgSW1tb3J0YWxzIE1lZ2FwYWNrIGFsdDtkcml2ZV9kaXI6OkRyb3cgUmFuZ2VyIE1lZ2FQYWNrO2RyaXZlX2Rpcjo6RWFydGhzaGFrZXIgTWVnYVBhY2sgTmV3O2RyaXZlX2Rpcjo6TGVnaW9uIENvbW1hbmRlciBNb2RNYWtlciBNZWdhUGFjaztkcml2ZV9kaXI6OlF1ZWVuIG9mIFBhaW4gQXJjYW5hIE1lZ2FQYWNrO2RyaXZlX2Rpcjo6VXJzYSBJbW1vcnRhbHMgTWVnYVBhY2s7ZHJpdmVfZGlyOjpPZ3JlIE1hZ2kgSW1tb3J0YWxzIEFyY2FuYSBNZWdhUGFjaztkcml2ZV9kaXI6OlJpdmVyIFZpYWwgUG90aW9uO2RyaXZlX2Rpcjo6V2VhdGhlciBCbHVlIFNreSBmcm9tIFNvdXAgZm9yIFNsdXRzO2RyaXZlX2Rpcjo6R29sZGVuIERyZWFkIFJlcXVpc2l0aW9uO2RyaXZlX2Rpcjo6R29sZGVuIFByb2ZhbmUgVW5pb24gQ2xvc2U7ZHJpdmVfZGlyOjpCaXR0ZXIgTGluZWFnZSBJbW1vcnRhbCBBeGVzO2RyaXZlX2Rpcjo6U3Rvcm0gU3Bpcml0IE1lZ2FQYWNrO2RyaXZlX2Rpcjo6TWlyYW5hIE1lZ2FQYWNrO2RyaXZlX2Rpcjo6RnJvemVuIFZvaWQ7ZHJpdmVfZGlyOjpDcmltc29uIFBpcXVlO2RyaXZlX2Rpcjo6U2tpdHRlcmluZyBEZXNvbGF0aW9uIFByZW07ZHJpdmVfZGlyOjpHb2xkZW4gQ3lycmlkYWUgUHJlbTtkcml2ZV9kaXI6OlRlbXBlc3QgSGVsbSBvZiB0aGUgVGh1bmRlcmdvZCArIFJpZ2h0ZWQ5519cyBUaHVuZGVyYm9sdDtkcml2ZV9kaXI6OlRpbmVzIG9mIFR5YmFyYTtkcml2ZV9kaXI6Okh1bnRlcnMgSG9hcmQ7ZHJpdmVfZGlyOjpDbGlua3ogTWVnYVBhY2s7ZHJpdmVfZGlyOjpTaWxlbmNlciBNZWdhUGFjaztkcml2ZV9kaXI6OkFiYWRkb24gUkVEIE1lZ2FQYWNrO2RyaXZlX2Rpcjo6QXJjYW5hIENyeXN0YWwgTWFpZGVuIEZyb3N0IEF2YWxhbmNoZTtkcml2ZV9kaXI6OkJyb29kbW90aGVyIE1lZ2FQYWNrO2RyaXZlX2Rpcjo6TWFuaWZvbGQgUGFyYWRveCBQQSBBcmNhbmEgU3R5bGUgMztkcml2ZV9kaXI6OkNyaW1zb24gRWRnZSBvZiB0aGUgTG9zdCBPcmRlcjtkcml2ZV9kaXI6Okh1c2thciBNZWdhUGFjayBORVc7ZHJpdmVfZGlyOjpNb25hcmNoIG9mIHRoZSBTYXBwaGlyZSBHbGVuO2RyaXZlX2Rpcjo6U3VmZmVyd29vZCBTYXBsaW5nO2RyaXZlX2Rpcjo6VGhlIFN1bW1pdCAzIEN1cnNvciBQYWNrO2RyaXZlX2Rpcjo6VEktNyBOZXdiZWUgVFAgZWZmZWN0O2RyaXZlX2Rpcjo6SW5mZXJuYWwgTWVuYWNlO2RyaXZlX2Rpcjo6R29sZGVuIEluZmVybmFsIENoaWVmdGFpbjtkcml2ZV9kaXI6OlBhdWxkcm9ucyBvZiBFdGVybmFsIEhhcnZlc3QgUHJlbTtkcml2ZV9kaXI6OlRlcnJhaW4gLSBSZWVmcyBFZGdlO2RyaXZlX2Rpcjo6TXVoIEtlZW4gR3VuO2RyaXZlX2Rpcjo6RnVsbC1Cb3JlIEJvbmFuemE7ZHJpdmVfZGlyOjpUb3AgSGF0IG9mIHRoZSBPY2N1bHRpc3RzIFB1cnN1aXQ7ZHJpdmVfZGlyOjpTaGFkb3cgaW4gdGhlIERlZXAgSGVsbTtkcml2ZV9kaXI6OlNoYWRvdyBpbiB0aGUgRGVlcCBBcm1vcjtkcml2ZV9kaXI6OkdpbGRlZCBFZGdlIERvdGEgMiBDaGFuZ2VyIEVkaXRpb247ZHJpdmVfZGlyOjpXaW5kcmFuZ2VyIEFyY2FuYSBzdHlsZSAyO2RyaXZlX2Rpcjo6V2luZHJhbmdlciBCbHVlIEltbW9ydGFsIEJpcmQgVVA7ZHJpdmVfZGlyOjpEcmFnb25jbGF3IEhvb2s7ZHJpdmVfZGlyOjpEb3RhQ2luZW1hIERhcmsgSFVEO2RyaXZlX2Rpcjo6RGFya1JlZCBJbW1vcnRhbHMgQmFieSBJbnZva2VyO2RyaXZlX2Rpcjo6Q3Vyc2VkIFZlbm9saW5nO2RyaXZlX2Rpcjo6TmlnaHQgU3RhbGtlciBJbW1vcnRhbCBhbmQgUmVhcGVyIEtpc2lsZXYgTW9kTWFrZXIgTWVnYVBhY2s7ZHJpdmVfZGlyOjpBbnRpTWFnZSBGZW1hbGU7ZHJpdmVfZGlyOjpHcmFuZCBBYnNjZXNzaW9uIEhvb2sgQnVuZGxlO2RyaXZlX2Rpcjo6UGxhZ3VlIEhhdGNoZXQgb2YgdGhlIE51cmdsZSBDaGFtcGlvbjtkcml2ZV9kaXI6OkRpcmVjb3VydCBKZXN0ZXIgQ2FwO2RyaXZlX2Rpcjo6R3JhbmQgQWJzY2Vzc2lvbiBDaGFpbjtkcml2ZV9kaXI6OlNoYWRvdyBGaWVuZCBBcmNhbmEgRGVtb24gRWF0ZXI7ZHJpdmVfZGlyOjpIb3JucyBvZiBFdGVybmFsIEhhcnZlc3QgUHJlbTtkcml2ZV9kaXI6OkdvbGRlbiBBcm1zIG9mIERlc29sYXRpb24gUHJlbTtkcml2ZV9kaXI6OlBoYW50b20gQXNjZW5zaW9uIFNob3VsZGVyczsgMTIzfHx8