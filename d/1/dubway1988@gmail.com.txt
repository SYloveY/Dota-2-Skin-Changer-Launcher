limitHWID:: 1 000||| 111:: 00000000-0000-0000-0000-4CCC6AB50AFB 111||| 222:: 3838e7330cae5170023f75b40a65c57287cd73098809025306fab4b5f01897606d29a4e27ff5a8b1f1fdfb68f9a72719357d5958a5e0be6b8d15e7e526d6b7f7 222||| 123:: Arena Champion Armor;Arena Champion Belt;Arena Champion Shield;Mantle of the Cinder Baron Style 1;Molten Claw Prem;Crucible of Rile;Golden Grasping Bludgeon;Mantle of the Andestian Sentinel;Blades of the Foulfell Corruptor Premium;Tolling Shadows;Magus Apex;The Lightning Orchid of Eminent Revival;Axe of Phractos Prem;Blessings of Lucentyr Set V 2.1;Golden Sullen Hollow V 3.2;Grand Abscession Hook Bundle;Staff of Gun-Yu;Armor of the Demon Trickster;Razzils Midas Knuckles Prem;Arms of Desolation Prem;Souls Tyrant Head;Armor of the Diabolical Fiend;Belt of the Blood Moon;Hush of Eternal Night;Kantusa the Script Sword V 3.1;Ritual of the Loyal Fold;Bringer of Troubles;Knight of the Burning Scale V 2.1;Steam Chopper;Erupting Wrath V 2.0;Manipulator of Warsituation;Samurai Set;Apostle of Decay V 2.1;Chill of the Keepers Gaze;Sinister Lightning;Corridan Maestro V 2.0;Antimage Shinobi;Vengeance of the Sunwarrior;Memories of the Vow Eternal;Cinder Sensei;Jolly Reaver;Explosive Maniac;Swooping Elder;Formed Alloy Set;Ferocious Heart;Arms of Rising Fury;Black Nihility;Hunter of Kings V 2.0;Marauder Chieftain of the Chaos Wastes;Chaos Chosen V 3.0;Misgivings of the Emerald Age;Thousand Faces Set;Vestments of the Alary Dive;The Jade General; 123|||