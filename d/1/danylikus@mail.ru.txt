limitHWID:: 1 000||| 111:: 6859A1A8-ED82-0000-0000-000000000000;; 111||| 222:: $2y$10$OTA0NDY3NDQwYzU5MTRmMOwN6ie41iKvVmG4GcdXEOG.0s0tiO2JK 222||| 123:: Reptilian Refuge Dire Creeps;Arena Champion Shield;Arena Champion Armor;Arena Champion Belt;Reptilian Refuge Radiant Creeps;Weather Moonbeam;Armor of the Abyssal Scourge;Helm of the Abyssal Scourge;Blade of the Abyssal Scourge;Chaos Legion Helm;Hellstrider;Armlet of Discord;Entropic Shoulderpads;Belt of the Witch Hunter Templar;Grand Gloves of the Witch Hunter Templar;Hat of the Witch Hunter Templar;Grand Boots of the Witch Hunter Templar;Pauldrons of the Witch Hunter Templar;Club of Pagus;Bracer and Band of Ancestral Luck;Cape of the Grey Wastes;Belt of the Grey Wastes;Heads of the Grey Wastes;Mantle of the Spiteful Eye;Red Sands Marauder - Belt;Eki Bukaw Wand - Off-Hand;Eki Bukaw Wand;Shell of the Umizar Crawler;Hood of the Abyssal Arms;Golden Hydrakan Latch;Fins of the Lizard King;Flail of the Elemental Realms;Heavy Belt of the World Runner;Iron Surge;Pauldrons of Fury;Tail of the Surging Wind;Cap of the Glacier Sea;Rudder of the Glacier Sea;Hook of the Glacier Sea;Tusks of the Glacier Sea;Coat of the Glacier Sea;Anchor of the Glacier Sea;Terrain - Overgrown Empire;Watcher Below;Ruler of the Frostbite Dunes;Ancient Magus Style 1;Shadows of Ravensmane;Memories of the Vow Eternal;Endless Night;Haunted Lord V 3.0; 123|||