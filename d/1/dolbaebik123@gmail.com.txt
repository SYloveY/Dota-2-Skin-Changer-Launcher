bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogIDExMXx8fCAyMjI6OiAkMnkkMTAkTnpWaFpUWTFZMlpoTldJek5ETmhaT25jQkVPaFhDTmZoMDhMMVNNa21NTHNzQ2pQRTBRMFMgMjIyfHx8IDEyMzo6IE9yaWdpbiBvZiB0aGUgVW5tYWtpbmc7U2x1bWJlcmluZyBUZXJyb3I7TWF3IG9mIEV6dHpob2s7U2hvdWxkZXIgb2YgdGhlIEJsb29kZm9yZ2U7VGhpcnN0IG9mIEV6dHpob2sgQnVuZGxlIFByZW07VHJpYmFsIFRlcnJvciBCZWx0O0RvdGEgMiBDaGFuZ2VyIEVkaXRpb24gSHVudGVycyBIb2FyZCBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzO1RpbmVzIG9mIFR5YmFyYTtIb29kIG9mIHRoZSBUd2luIEJsYWRlcztXcmFpdGhiaW5kZXI7SXJlIG9mIHRoZSBBbmNpZW50IEdhb2xlciBBcm1zO0VsaXhpciBvZiBEcmFnb25zIEJyZWF0aCBQcmVtO0dvbGRlbiBDaGFvcyBGdWxjcnVtO0FyY2FuYSBDcnlzdGFsIE1haWRlbiBGcm9zdCBBdmFsYW5jaGU7R29sZGVuIEJyYWNlcnMgb2YgRm9ybG9ybiBQcmVjaXBpY2U7Qm9vayBvZiB0aGUgVml6aWVyIEV4aWxlIFByZW07SGFybmVzcyBvZiB0aGUgRm9yZ290dGVuIFRhY3RpY2lhbjtDcmltc29uIEhlYXJ0cyBvZiBNaXNydWxlO1RoZSBTdW5icmVlemUgQmlydGhyaWdodDtEcmVzcyBvZiB0aGUgRmFlc2hhZGUgRmxvd2VyO0NyaW1zb24gR2F0ZXMgb2YgTm90aGw7Tm90aGxpYyBCdXJkZW4gb2YgdGhlIENyaW1zb24gV2l0bmVzcyBQcmVtO0RhcmtjbGF3IEVtaXNzYXJ5IFN0YWZmO0RyZXNzIG9mIHRoZSBNZXJxdWVlbjtSb2JlIG9mIHRoZSBXaW50ZXIgUmV2ZW5hbnQ7Q3Jvd24gb2YgdGhlIFdpbnRlciBSZXZlbmFudDtSZXNpc3RpdmUgUGluZm9sZCBQcmVtO1NjYWJiYXJkcyBvZiB0aGUgU3Rvcm1jaGFyZ2UgRHJhZ29vbjtXaGlzcGVycyBvZiB0aGUgRGFtbmVkIFdpbmdzO1NvdWwgU2hyZWRkZXI7QXJjYW5hIERyZWFkIFJldHJpYnV0aW9uIE1hc3RlciBvZiBNYWRuZXNzO0RyZWFkIFJldHJpYnV0aW9uIE1hc3RlciBvZiBNYW5pYXMgTWFzaztSYXBpZXJzIG9mIHRoZSBCdXJuaW5nIEdvZCBWIDMuMTtWaXJnYXMgQXJjO0dsb3J5IG9mIHRoZSBTb3V0aCBTdGFyO0Zsb3VyaXNoaW5nIExvZGVzdGFyO1NvbmdzIG9mIFN0YXJmYWxsIEdsZW4gLSBCZWx0O01hY2Ugb2YgQWVvbnMgUHJlbTtKZXdlbCBvZiBBZW9ucyBQcmVtO0ZhY2VsZXNzIE1hZG5lc3M7Q3JpbXNvbiBCcmFjZXJzIG9mIEFlb25zIFByZW07SGVyYWxkIG9mIHRoZSBFbWJlciBFeWUgLSBBcm1vcjtGb3J0dW5lIG9mIHRoZSBGaXZlIEhvdXNlcztSZW1uYW50cyBvZiBBc2NlbnNpb247R29sZGVuIEF0b21pYyBSYXkgVGhydXN0ZXJzIFByZW07VG9tbyprYW4gSW5jYXJuYXRlIEFybW9yO1RvbW8qa2FuIEluY2FybmF0ZSBIb29kO1RvbW8qa2FuIEluY2FybmF0ZSBBcmJhbGVzdDtUb21vKmthbiBJbmNhcm5hdGUgVGFpbDtEYXJrIEFydGlzdHJ5IFRocm93YmFjaztCZW5ldm9sZW50IENvbXBhbmlvbiBQcmVtO0p1Z2dlcm5hdXQgQXJjYW5hIFJlZCBCbGFkZWZvcm0gT3JpZ2lucztDcmltc29uIEVkZ2Ugb2YgdGhlIExvc3QgT3JkZXI7Rm9ydHVuZXMgVG91dCBQcmVtO0phZ2dlZCBIb25vciBCYW5uZXI7SmFnZ2VkIEhvbm9yIEJyYWNlcjtIZWxsLVNwYXIgQW5hdGhlbWEgT2JzaWRpYW4gQmxpZ2h0O0ZpbiBLaW5ncyBDaGFybSBvZiBFbWluZW50IFJldml2YWwgRXhjZXB0aW9uYWw7TXVsY3RhbnQgUGFsbCBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzO0hvcm5zIG9mIHRoZSBCZXRyYXllcjtHb2xkZW4gVHdpbGlnaHQgU2NoaXNtO1Nob2NrIG9mIHRoZSBBbnZpbCBQcmVtO0dvZHMgTWVyY3kgb2YgdGhlIENyaW1zb24gV2l0bmVzcztDb2xvciBNZWVwbztDcmVzY2VudCBCb3c7R29sZGVuIE1hc2sgb2YgTWV0aXJhO0F4aWEgb2YgTWV0aXJhO1RoZSBCZWxsIG9mIE1lcmFudGhpYTtUaGUgT3JkZXIgb2YgQ3lwcmluO0JsYWRlcyBvZiBQcmlzbWF0aWMgR3JhY2U7U3VmZmVyd29vZCBTYXBsaW5nO0V0aWVubmUqcyBSZXZlbmdlO0xhbmNlIG9mIHRoZSBTdW53YXJyaW9yO0NvbmNvcmQgUmV2ZXJzaW9uIFVQO1NvbGFyIEZvcmdlIFByZW07UHlyYW1pZCBvZiB0aGUgVGVtcGxlIG9mIHRoZSBGYWxsZW4gU3VuO0Jsb3Nzb20gb2YgdGhlIE1lcnJ5IFdhbmRlcmVyO01lcnJ5IFdhbmRlcmVyKnMgQnJ1c2g7Q3Jvd24gb2YgdGhlIEFnZWxlc3MgRmFlO0ZlYXN0IG9mIEFic2Nlc3Npb247Um95YWwgRGVjcmVlIFdoaXAgQXR0YWNrO01hbnRsZSBvZiBHcmltIEZhY2FkZTtBcmNhbmEgU0YgRGVtb24gRWF0aGVyO1BhdWxkcm9ucyBvZiBFdGVybmFsIEhhcnZlc3QgUHJlbTtBcm1zIG9mIERlc29sYXRpb24gUHJlbTtDcmltc29uIENlbnNlciBvZiBHbGlzcyBVUDtMYXNoIG9mIHRoZSBMaXphcmQgS2luO1J1bmUgRm9yZ2VkIEJyYWNlcnM7UnVuZSBGb3JnZWQgQmVsdDtTZWNyZXRzIG9mIHRoZSBDZWxlc3RpYWwgSGVhZDtEZXNlcnQgQnVybiBTYWRkbGU7RGVzZXJ0IEJ1cm4gT3V0Zml0O0Rlc2VydCBCdXJuIENhcDtEZXNlcnQgQnVybiBNb3J0eSBJbW1vcnRhbDtEZXNlcnQgQnVybiBDcm9zc2JvdztIZWxtIG9mIHRoZSBBcmRhbGFuIEludGVyZGljdG9yO1NuaXBlciBJbW1vcnRhbCBXZWFwb24gb2YgdGhlIEFyZGFsYW4gSW50ZXJkaWN0b3I7UGFjayBvZiB0aGUgQXJkYWxhbiBJbnRlcmRpY3RvcjtQaGFudG9tIEFzY2Vuc2lvbjtIZWFkZHJlc3Mgb2YgdGhlIExveWFsIEZvbGQ7TWFudGxlIG9mIHRoZSBXaGlzcGVyZWQgQm9uZDtBcm1vciBvZiB0aGUgTG95YWwgRm9sZDtGb2NhbCBSZXNvbmFuY2UgViAzLjA7UmVmbGVjdGlvbnMgU2hhZGUgQ29sb3IgZm9yIFRCO1JvbGxlcm1hd3N0ZXI7QXJjYW5pYyBSZXNvbmFuY2UgQmVhbTtSb2xsZXJtYXdzdGVyIGFuZCBNZWNoYSBCb290cyBvZiBUcmF2ZWwgTWsgSUlJO01hamVzdHkgT2YgVGhlIENvbG9zc3VzIC0gQ29iYmxlO01hamVzdHkgT2YgVGhlIENvbG9zc3VzIC0gTW9ub2xpdGg7U3dvcmQgb2YgdGhlIENvbG9zc3VzIFByZW07VGhlIElnbmVvdXMgU3RvbmUgViA0LjA7U21hbGwgSWduZWQ5519cyBTdG9uZTtCaXR0ZXIgTGluZWFnZSBJbW1vcnRhbCBBeGVzO1NjYWxlIG9mIEJpdHRlciBTcG9pbCBJbW1vcnRhbCBVUDtHb2xkZW4gUGlzY2VhbiBQdWx2ZXJpemVyO0hpZGRlbiBWZWN0b3IgLSBCZWx0O0hpZGRlbiBWZWN0b3IgLSBCbGFkZTtIaWRkZW4gVmVjdG9yIC0gQXJtb3I7SGlkZGVuIFZlY3RvciAtIEhhdDtCZWhvbGRlbiBvZiB0aGUgQmFuaXNoZWQgT25lcyAtIEdvbGVtO0NyaW1zb24gUGlxdWUgUHJlbTtTa2l0dGVyaW5nIERlc29sYXRpb24gUHJlbTtHb2xkZW4gQ3lycmlkYWUgUHJlbTtCbGlzdGVyaW5nIFNoYWRlO0ltbW9ydGFsIFBhbnRoZW9uO1RlbXBlc3QgUmV2ZWxhdGlvbjtBYmFkZG9uIFJFRCBNZWdhUGFjaztEYXJrYnJldyBFbmZvcmNlciBhbmQgRXRlcm5hbCBSYWRpYW5jZSBCbGFkZXMgYW5kIE1pZGFzIEtudWNrbGVzIE1lZ2FQYWNrO1NoYXR0ZXJibGFzdCBTZXQ7QW50aU1hZ2UgUkVEIE1lZ2FQYWNrO0FyYyBXYXJkZW4gTWVnYVBhY2s7QXhlIGZ1bGwgSW1tb3J0YWxzIE1lZ2FwYWNrIGFsdDtMb2FkZWQgUHJvc3BlY3RzO0JyaXN0bGViYWNrIE1lZ2FQYWNrO0Jyb29kbW90aGVyIE1lZ2FQYWNrO1dyYXRoIG9mIHRoZSBDZWxlc3RpYWwgU2VudGluZWw7Q2xpbmt6IE1lZ2FQYWNrO0Nsb2Nrd2VyayBNZWdhUGFjaztQZXJjZXB0aW9uIG9mIHRoZSBGaXJzdCBMaWdodDtCaW5kaW5ncyBvZiB0aGUgR2FsdmFuaXplZCBTcGFyaztEb29tIEltbW9ydGFscyBNZWdhUGFjaztTaWx2ZXJ3dXJtIFNhY3JpZmljZTtTdHJlbmd0aCBvZiB0aGUgRGVtb24gU3RvbmUgU2V0IFYgMy4xO0VhcnRoc2hha2VyIE1lZ2FQYWNrIE5ldztNb251bWVudHMgb2YgdGhlIE5hdHVyYWwgRGVtaXVyZ2U7Q2luZGVyIFNlbnNlaTtFbmlnbWEgTWVnYVBhY2s7VGhlIENoYWluZWQgU2NyaWJlIEltbW9ydGFsO1NreS1IaWdoIFdhcnNoaXAgU3R5bGUgMSBWIDMuMDtKYWtpcm8gTWVnYVBhY2s7S3Vua2thIEltbW9ydGFscyBNZWdhUGFjaztMZWdpb24gQ29tbWFuZGVyIE1vZE1ha2VyIE1lZ2FQYWNrO0dvbGRlbiBEYXJrIE1hdyBJbmhpYml0byBhbmQgR29sZGVuIFByb2ZhbmUgVW5pb24gYW5kIEdvbGRlbiBEcmVhZCBSZXF1aXNpdGlvbiBMaWZlc3RlYWxlciBJbW1vcnRhbHMgTWVnYXBhY2s7SWNlIExpbmEgUHJlbWl1bTtMb25lIERydWlkIE1lZ2FQYWNrO0xpbmVhZ2UgUmVkZW1wdGlvbiBvZiB0aGUgUmFpZGZvcmdlZCBSaWRlcjtMeWNhbiBLaXNpbGV2IE1vZE1ha2VyIE1lZ2FQYWNrO0ZvcmdvdHRlbiBGYXRlO01lZHVzYSBNZWdhUGFjayBORVc7TW9ua2V5IEtpbmcgQXJjYW5hIE1lZ2FQYWNrO01vcnBobGluZyBJbW1vcnRhbHMgTWVnYVBhY2sgVVA7RGVhdGggTmVjcm9saWdodCBQcmVtaXVtIFN0eWxlIDE7TmlnaHQgU3RhbGtlciBJbW1vcnRhbCBhbmQgUmVhcGVyIEtpc2lsZXYgTW9kTWFrZXIgTWVnYVBhY2s7Tnl4IEFzc2Fzc2luIE1lZ2FQYWNrO09ncmUgTWFnaSBJbW1vcnRhbHMgQXJjYW5hIE1lZ2FQYWNrO09tbmlrbmlnaHQgTWVnYVBhY2s7QXV0aG9yaXR5IG9mIHRoZSBJbXBlcmlzaGFibGUgR3JhbmQgSGllcm9waGFudDtPdXR3b3JsZCBEZXZvdXZlciBNZWdhUGFjaztGcm96ZW4gRmFsY2hpb25haXJlO0JhbmUgb2YgdGhlIERlYXRoc3RhbGtlcnM7U2NhbGVzIG9mIHRoZSBTaGFkb3cgV2Fsa2VyO1B1Z25hIEltbW9ydGFscyBNZWdhUGFjaztUZXN0IG9mIHRoZSBCYXNpbGlzayBMb3JkO0dlbGlkIFRvdWNoIFZhbGVlcmEgZm9yIFJpa2k7UnViaWNrIEFyY2FuYSB3aXRoIEltbW9ydGFsO0xvcmQgb2YgdGhlIFNjb3VyaW5nIER1bmVzIFYgMi4wO0NvcnJ1cHRlZCBTaHJpbmUgR2FybWVudHM7U2lsZW5jZXIgTWVnYVBhY2s7R29sZCBTa3ltYWdlO1NsYXJkYXIgTWVnYVBhY2sgc2V0O1NsYXJrIE1lZ2FQYWNrIE5ldztTcGlyaXQgQnJlYWtlciBNZWdhUGFjaztDb3JyaWRhbiBNYWVzdHJvIGFuZCBUaGUgTGlnaHRuaW5nIE9yY2hpZCBhbmQgR29sZGVuIE1hbmRhdGUgb2YgdGhlIFN0b3JtYm9ybiBNZWdhUGFjayBORVc7U3ZlbiBJbW1vcnRhbHMgTWVnYVBhY2sgVVA7VGlkZWh1bnRlciBNZWdhUGFjaztUaW1iZXJzYXcgTWVnYVBhY2s7VHJlYW50IFByb3RlY3RvciBNZWdhUGFjaztKdW5nbGUgRXhwbG9yZXIgU2V0O1Vyc2EgSW1tb3J0YWxzIE1lZ2FQYWNrO1JlYmlydGggVmVuZ2VmdWwgU3Bpcml0O0Nob21wZXIgU2V0O1ZpcGVyIE1lZ2FQYWNrO1Zpc2FnZSBNZWdhUGFjaztUcmliYWwgV2FybG9jayBTZXQ7V2luZHJhbmdlciBBcmNhbmEgc3R5bGUgMiArIFdSIGltbW9ydGFsO0RlZmVuZGVyIG9mIHRoZSBCcnVtYWwgQ3Jlc3Q7V2l0Y2ggRG9jdG9yIE1lZ2FQYWNrO1dyYWl0aCBLaW5nIEFyY2FuYSBNZWdhUGFjaztSaWdodGVvdXMgVGh1bmRlcmJvbHQgYW5kIEFyY2FuYSBNZWdhUGFjazsgMTIzfHx8