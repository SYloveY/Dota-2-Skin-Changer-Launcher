limitHWID:: 1 000||| 111::  111||| 222:: $2y$10$YjFjZjIyN2Y1MjZjZmIyZ.39BbheN6k5wJwn0kTNXCHkfSGSItgcO 222||| 123:: Golden Hydrakan Latch;Mask of Odocoeleus;Blackened Edge of the Bladekeeper;Mace of Aeons;Frozen Void Shoulder;Augur of Oblivion - Head;Frozen Void Arms;Oaths of the Dragonborn Head;Claws of the Transmuted Armaments;Bow of the Beholder;Convalescing Empress Head;Daughters of Hydrophiinae;Fowl Omen Beard;Aghs BP Crown of the Murid Divine;Aghs BP Robe of the Murid Divine;Aghs BP Staff of the Murid Divine;Belt of the Gleaming Seal;Ornaments of the Gleaming Seal;Helm of the Lifted Veil;Assassination of Dark Feather Back;Tiny Bad To The Bone;Small Bad To The Bone;Medium Bad To The Bone;Bad To The Bone Weapon;Arms of Desolation;Horns of Eternal Harvest;Pauldrons of Eternal Harvest;Adventurers of Fortune Weapon;Adventurers of Fortune Head;Dragonclaw Hook;MLG Tethered Sentinel;Wyvern Hatchling;Maelrawn*s abyssal Guard Arms;Tidosaurus Tail;Leashed Rockshark;Claddish Cudgel;Arm of the Exact Marksman;Full-Bore Bonanza;Ghillied Gunman Nest Cap;Deep sea overlord Shoulder;Muh Keen Gun;Claws of the Sangstrath Fold;Mane of the Ferocious Heart;Barding of the Sangstrath Fold;Lucky Alpine Stalker*s Hat;Arms of the Bitterwing Legacy;Silver Dragon King Head;Silver Dragon King Off-Hand;Silver Dragon King Shoulder;The Gilded Maw Weapon;Memories of the Vow Eternal;Ritual of the Loyal Fold;Trail of the Sanguine Spectrum;Adornings of the Quas Precor Set; 123|||