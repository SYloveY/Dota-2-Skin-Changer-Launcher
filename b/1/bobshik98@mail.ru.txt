bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogIDExMXx8fCAyMjI6OiBiYzM5MGFmODE0OTI5YThjY2ZkZjJjN2EwNGNiZDQxYWUyMTNhY2VjMWZmOGNmY2Y5YTUxNjNlYTQzZjkxMjMwZDE4OTY5NTJjYTY1ZmFhMDYxMmIwMTQ0YmUxNmQ3YmEwNGYwZDUwMTk0NTM4MTM5Nzc1MWY3ZTcwMWQwOGI1ZCAyMjJ8fHwgMTIzOjogVGVtcGVzdCBIZWxtIG9mIHRoZSBUaHVuZGVyZ29kIFByZW07SnVnZ2VybmF1dCBBbm5vdW5jZXI7SnVnZ2VybmF1dCBNZWdhLUtpbGw7TXVsY3RhbnQgUGFsbDtUSS04IEZvdW50YWluIGx2bCAxIEVmZmVjdDtUSS04IExWTCBVUCBFZmZlY3Q7VEktOCBNZWthbnNtIEVmZmVjdDtUSS04IFBoYXNlIEJvb3RzIEVmZmVjdDtUSS04IFRQIGx2bCAxIEVmZmVjdDtBeGUgb2YgUGhyYWN0b3MgUHJlbTtSYW1wYW50IE91dHJhZ2UgUHJlbTtNaWdodCBvZiB0aGUgVGh1bmRlciBSYW07VGluZSBvZiB0aGUgQmVoZW1vdGggViAzLjA7Qm9uZHMgb2YgTWFkbmVzcyBTZXQgU3R5bGUgMTtTdGFmZiBvZiBHdW4tWXU7SGVpcmxvb21zIG9mIEFlb2wgRHJpYXM7U2hhbWJsaW5nIERyYXVnO0Zvcm0gb2YgdGhlIEZlcnZpZCBNb25hcmNoO0Nyb3duIG9mIHRoZSBBcmN0aWMgUmVjbHVzZTtKdWdnZXJuYXVudCBFbmcgQXJjYW5hIFZvaWNlO1BoYW50b20gQXNzYXNpbiBFTkcgQXJjYW5lIHZvaWNlO1B1ZGdlIEFyY2FuYSBFTkcgVm9pY2U7U2hhZG93IEZpZW5kIEVORyBBcmNhbmUgdm9pY2U7WmV1cyBFTkcgQXJjYW5lIHZvaWNlO1dlYXRoZXIgU3ByaW5nO0VsZW1lbnRhbCBGdXJ5IE11c2ljIFBhY2s7Q3VzdG9tIERhc2hib2FyZCAxNDA7TWVtb3JpZXMgb2YgdGhlIFZvdyBFdGVybmFsO1doaXNwZXJpbmcgRGVhZCBTZXQ7Vm9sYXRpbGUgTWFqZXN0eTtBa2FtYW5haCBmb3IgTGVnaW9uIENvbW1hbmRlciBWIDMuMTtQdWRnZSBQc3ljaG9wYXRoO0xhZHkgU3lsdmFuYXMgZm9yIERyb3cgUmFuZ2VyIFYgMy4wO0FuY2llbnQgQXJ0ZWZhY3Q7VmFsZWVyYSBSdXNzaWFuIFZvaWNlO0JsYWNrIE9yYyBXYXJib3NzIFYgMi4wO0N1c3RvbSBvZiBLYXJyb2NoIFNldDtUaGUgR2FsbG93cyBVbmRlcnN0dWR5IFNldDtLaXQgb2YgdGhlIEZpcnN0IEh1bnQgViAyLjE7VGlwc3kgQnJhd2xlcjtFbWVyYWxkIEZyZW56eSBTZXQ7RmVhc3Qgb2YgdGhlIEdsdXR0b25zIExhcmRlcjtDb250ZXN0ZWQgRmF0ZTtDaGFtcGlvbiBvZiBEaXNjb3JkIFYgMy4xO1NhdmlvciBmb3IgSnVuZ2xlcyBIb25vcjtDbG9hayBvZiB0aGUgRmFsbGVuO0FydGlzYW4gb2YgSGF2b2MgViAzLjA7T3B1cyBvZiB0aGUgVml6aWVyIEV4aWxlIFYgMi4xO01pc2NoaWVmIG9mIHRoZSBGYWUgRm9yYWdlcjtQZWFjb2NrIFByaWVzdDtGaXJlcyBvZiBWYXNodW5kb2wgbm8gZWZmZWN0IFYgMi4xO1RoZSBKYWRlIEdlbmVyYWw7VmlzaW9ucyBvZiB0aGUgRm9yc2FrZW4gRmxhbWU7RW1pbmVuY2Ugb2YgdGhlIFNvdXRoIFN0YXI7VGhlIENvcnJ1cHRpb24gb2YgTmV6enVyZWVtO1NreS1IaWdoIFdhcnNoaXAgc3R5bGUgMjtUaGUgQmFwdGlzbSBvZiBNZWx0aW5nIEZpcmU7VGhlIFBhdGggb2YgT2RvY29lbGV1cztXaXNkb20gb2YgdGhlIE1pZG5pZ2h0IFN1bjtXaXRjaCBIdW50ZXIgVGVtcGxhcjtBc2NlbmRhbmNlIG9mIHRoZSBSaW1lIExvcmQgMm5kIFN0eWxlO0RpdmluZSBGbGFtZSBWIDIuMDtSYWdlIG9mIHRoZSBEYXJrIFdvb2QgdiAyLjA7QXp1cmUgQ29uc3RlbGxhdGlvbiBWIDIuMTtUcmFpbCBvZiB0aGUgR3JleSBHaG9zdDtNaWdodCBvZiB0aGUgR2FsbG9waW5nIEF2ZW5nZXIgViAyLjE7Q3J5c3RhbCBTY2F2ZW5nZXI7Q3Jlc2NlbnQgViAyLjE7UmlwdGlkZSBSYWlkZXIgViAyLjA7U3RlbGxhciBKYWRlO0FsbHVyZSBvZiB0aGUgRGVlcDtUaGUgRHJlYWQgUHJvcGhldDtBcG9zdGxlIG9mIERlY2F5IFYgMi4xO1VuZmV0dGVyZWQgTWFsZXZvbGVuY2U7QXJtb3Igb2YgdGhlIFN0YWx3YXJ0IFNvdWw7QXVndXJ5IFByb3BoZXQ7UGl0ZmFsbCBDcnVzYWRlcjtDcmVlcGluZyBTaGFkb3c7SGFyc2ggU29qb3VybjtHb2xkZW4gTmlydmFuYTtFc3NlbmNlIG9mIHRoZSBUcmlja3N0ZXI7UmVnYWxpYSBvZiB0aGUgUGFyYXNvbHMgU3Rpbmc7TWFnaXN0ZXIgb2YgdGhlIE5hcnJvdyBGYXRlcztTb3ZlcmVpZ24gb2YgdGhlIEtyYXkgTGVnaW9ucyAyc3QgU3R5bGU7RmF2b3JzIG9mIHRoZSBTaGFtYW5pYyBMaWdodCBWIDIuMDtCYXN0aW9uIG9mIHRoZSBMaW9uc2d1YXJkO0Jlc3Rvd21lbnRzIG9mIHRoZSBDZW50dXJpb24gVmFuZ3VhcmQ7U2hvb3RpbmcgU3RhcjtGbG93ZXJpbmcgU2hhZGUgViAyLjA7RWxlbWVudGFsIEltcGVyYXRvciBWIDIuMDtDb3JyaWRhbiBNYWVzdHJvIFYgMi4wO0N5Y2xvcGVhbiBNYXJhdWRlcjtCYXJrIG9mIHRoZSBBZ2VsZXNzIFdpdG5lc3MgRGlzdGluZ3Vpc2hlZDtCYXJyaWVyIFJvZ3VlO0Zlcm9jaWQ5519cyBIZWFydDtSZXNlbnRtZW50IG9mIHRoZSBCYW5pc2hlZCBQcmluY2VzcztDb3JydXB0aW9uIG9mIHRoZSBWaXJ1bGVudCBLcmFpdDtCYXJkaW5nIG9mIHRoZSBTb3VsIEtlZXBlcjtUaGUgRHVzayBDcmF3bGVyIFNldDtBcnJheSBvZiBUcmFucXVpbGl0eTtCZWFyZXIgb2YgdGhlIEFya3R1cmFuIFRhbG9uO0FzcGVjdCBvZiB0aGUgWWVhciBCZWFzdDsgMTIzfHx8