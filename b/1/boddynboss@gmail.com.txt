limitHWID:: 1 000||| 111:: 03000200-0400-0500-0006-000700080009;; 111||| 222:: $2y$10$ZWVkMzFlNGJmNWVhYjExZOGDn3yVWNsbUAdgJMIJBGx.ZKtLUgABi 222||| 123:: Lina Announcer;Lina Mega-Kills;Frozen Formation;Armor of the Equilibrium;Tail of the Equilibrium;Hood of Lucid Torment;Bestowed Shoulders;Big Bad Bandana;Firestarter Gas Pump;Flame Bat;Winter Wisp;Barding of Chimeric Rapport;Bonds of Madness Set Style 1;Mulctant Pall;Belt of the Grey Wastes;Heads of the Grey Wastes;Hazhadal Magebreaker;Tidosaurus Arm Scales;Belt of the Frostshard Ascendant;Tidosaurus Tail;Leashed Rockshark;Head of the Icewrack Marauder;Armor of the Savage Monger;Shoulders of the Icewrack Marauder;Armor of the Shambling Draug;Shambling Draug;Barding of the Siege-Drake;Terrain - Winter;Rider of Avarice V 2.1;Caustic Steel Set;The Wild Tamer;Harvests Hound;Kit of the First Hunt V 2.1;Icebrew Angler;Charge of the Wrathrunner;Feast of the Gluttons Larder;Battle Dress of the Proven no effects;Savior for Jungles Honor;Cloak of the Fallen;Clock Master V 3.0;Royal Winterbloom;Insights of the Sapphire Shroud;Rite of the Acolyte Priest V 3.0;Peacock Priest;Rider of the Storm Set;Fires of Vashundol no effect V 2.1;The Jade General;Warden of the Wyrmforge Shard;Blaze Armor V 2.1;Amberlight Raiment V 2.0;The Corruption of Nezzureem;Dwarf Gyrocopter;Reckless Vigor V 2.1;The Path of Odocoeleus;Forgotten Renegade;The Claddish Renegade;Forbidden Knowledge;Divine Flame V 2.0;Rage of the Dark Wood v 2.0;Redemption of the Raidforged Rider;Hunter of Kings V 2.0;Might of the Galloping Avenger V 2.1;Serpent of the Emerald Sea V 3.0;Crystal Scavenger;Darkfall Warden no effects V 2.1;Riptide Raider V 2.0;Stellar Jade;Light of Eleanor Set;Fungal Lord Set;Lich Master Necromancer V 2.1;Unfettered Malevolence;Cicatrix Regalia White;Armor of the Stalwart Soul;Herald of Measureless Ruin V 2.1;Pitfall Crusader;Golden Nirvana;Essence of the Trickster;Iron Hog;Narcissistic Leech;Raiments of Twilight Shade;Cunning Corsair;Garb of the Cruel Magician Set;Ruler of the Frostbite Dunes;Stygian Maw;Eternal Harvest;The True Crow V 2.0;Beacon of Cerulean Light 1 Style V 2.1;Bestowments of the Centurion Vanguard;Kindred of the Umizar Crawler;Shooting Star;Spectral Conservator V 2.0;Ironbarde Charger;Raikage Warrior V 2.0;Clandestine Trail;Timberthaw;USSR TINKER;Eldritch Gnarl;Barrier Rogue;Omens Embrace;Corruption of the Virulent Krait;Barding of the Soul Keeper;The Dusk Crawler Set;Bindings of the Battleranger;Bearer of the Arkturan Talon;Black Orc Warboss V 2.0;Volatile Majesty;Blazing Oblivion V 3.0;Bloodroot Guard;Magister of the Narrow Fates; 123|||