bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogIDExMXx8fCAyMjI6OiAkMnkkMTAkWW1Sa1ltTmlabVkwWlRGa1lqSXdOLkwxMlZOd1dBb1hWRDd4N204L052bXVrd3ZQay5aNm0gMjIyfHx8IDEyMzo6IFNraXJ0IG9mIHRoZSBNYWdlIFNsYXllcjtNYXNrIG9mIHRoZSBGb3Jnb3R0ZW4gUGxhbmU7U2hvdWxkZXJzIG9mIHRoZSBTdXJ2aXZvcjtDaW5kZXIgU2Vuc2VpIEJyYWNlcjtNYXNrIG9mIHRoZSBEaXZpbmUgU29ycm93O0luZmVybnVzO0JyYWNlcnMgb2YgdGhlIFNhY3JlZCBIdW50O0Z1cnN0b2xlIG9mIHRoZSBTaGFkb3djYXQ7QW5jaWVudCBDYWdlO0pld2VsIG9mIEFlb25zO0dlb2Rlc2ljIEVpZG9sb247QnJhY2VycyBvZiBEZXNvbGF0ZSBDb25xdWVzdDtIZWxtIG9mIERlc29sYXRlIENvbnF1ZXN0O01hbnRsZSBvZiBEZXNvbGF0ZSBDb25xdWVzdDtGbGFzaHBvaW50IFByb3NlbHl0ZSAtIEhlYWQ7QmxhZGUgb2YgUmVja2xlc3MgVmlnb3I7Q29tcGxldGUgSGVsbSBvZiB0aGUgRGFyayBNb29uIFN0YWxrZXI7TWQ5519bnQgb2YgdGhlIFdpbmdlZCBTZW50aW5lbDtHb2xkZW4gTW9vbmZhbGwgUHJlbTtVbWJyYSBSaWRlciBTaG91bGRlcnM7Rm9yc3dvcm4gTGVnYWN5IC0gTGVncztDYXBlIG9mIHRoZSBDcmVlcGluZyBTaGFkb3c7Q2FwcmljaWQ5519cyBGYXRlIEhlYWQ7QnJhY2VycyBvZiB0aGUgU3Vud2FycmlvcjtHaXJkbGUgb2YgdGhlIEluZmluaXRlIFdhdmVzO1N1cmdpY2FsIFByZWNpc2lvbiBQYWlua2lsbGVyO1N1cmdpY2FsIFByZWNpc2lvbiBUb29scztTdXJnaWNhbCBQcmVjaXNpb24gUHVzdHVsZXM7R3JhbmQgQWJzY2Vzc2lvbiBIb29rIEJ1bmRsZTtWaXJ0dWQ5519cyBSb2FyIFBhZHM7VmlydHVvdXMgUm9hciBIYWlyO0FybXMgb2YgRGVzb2xhdGlvbiBQcmVtO1NoYWRvdyBpbiB0aGUgRGVlcCBBcm1vcjtTaGFkb3cgaW4gdGhlIERlZXAgRGFnZ2VyO0NhcGUgb2YgdGhlIERlYWQgUmVib3JuO1Nob3VsZGVyIG9mIHRoZSBEZWFkIFJlYm9ybjtSb2xsZXJtYXdzdGVyIGFuZCBNZWNoYSBCb290cyBvZiBUcmF2ZWwgTWsgSUlJO0hpZGUgb2YgdGhlIENyeXN0YWwgRHJpZnQ7QmVsdCBvZiB0aGUgQ3J5c3RhbCBEcmlmdDtFc3NlbmNlIG9mIHRoZSBUcmlja3N0ZXIgQ3Jvd247V2FyIEhlbG0gb2YgdGhlIEJhbGVmdWwgUmVpZ247UGF1bGRyb25zIG9mIHRoZSBCdXJuaW5nIE5pZ2h0bWFyZTtQYWNrIG9mIHRoZSBBcmRhbGFuIEludGVyZGljdG9yO0NvbGFyIG9mIHRoZSBBcmRhbGFuIEludGVyZGljdG9yO0hlYXZlbi1QaWVyY2luZyBQYXVsZHJvbnM7Q292ZW5hbnQgb2YgdGhlIERlcHRocyBCZWx0O0FybW9yIG9mIHRoZSBTdG9ybSBEcmFnb24gUG90ZW50ZTtGcmFjdGFsIEhvcm5zIG9mIElubmVyIEFieXNtIFVQO1RoZSBKYWRlIEdlbmVyYWw7QXNjZW5kYW5jZSBvZiB0aGUgUmltZSBMb3JkIDFzdCBTdHlsZTsgMTIzfHx8