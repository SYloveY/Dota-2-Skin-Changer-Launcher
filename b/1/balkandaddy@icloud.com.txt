bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogNEZEMzcxMjAtRDdEQS0xMURELUJCNTEtMkM0RDU0RDg1OEJCIDExMXx8fCAyMjI6OiAkMnkkMTAkWkRVeVlqSTNaV0l6T0dFMlpESXpZZXNTVlplaWtpcVVDUTRxVTBBOUN4YzhxaGxuTDJrZUsgMjIyfHx8IDEyMzo6IFRlcnJhaW4gLSBJbW1vcnRhbCBHYXJkZW5zO1RpbmUgb2YgdGhlIEJlaGVtb3RoIEN1cnNvciBQYWNrOzI1IGx2bCBwaW5nO0VtaW5lbmNlIG9mIFJpc3R1bCBEZW55IDI7VEktNyBTZWNyZXQgVFAgRWZmZWN0O1RJLTEwIFJhZGlhbmNlIEVmZmVjdDtSaXZlciBWaWFsIFBvdGlvbjtQaGFudG9tIEFkdmVudCBVUDtQaGFudG9tIEFkdmVudCBTaG91bGRlcnMgVVA7UGhhbnRvbSBBZHZlbnQgQmVsdCBVUDtQaGFudG9tIEFkdmVudCBXZWFwb24gVVA7S25pZ2h0IFN0YXR1ZTtDcnlzdGFsIE1haWRlbiBBbmltZSBWb2ljZTtMaW5hIEFuaW1lIFZvaWNlO05hZ2EgU2lyZW4gQW5pbWUgVm9pY2U7VGhlIEludGVybmF0aW9uYWwgMjAyMCBNdXNpYyBQYWNrO0p1Z2dlcm5hdXQgV0MgMyBTb3VuZDtSdWJpY2sgV0MgMyBTb3VuZDtUaW5rZXIgV0MgMyBTb3VuZDtPcmFjbGUgV0MgMyBTb3VuZDtLdW5ra2EgV0MgMyBTb3VuZDtDaGFvcyBLbmlnaHQgV0MgMyBTb3VuZDtUZWNoaWVzIFdDIDMgU291bmQ7QXJtb3Igb2YgdGhlIERlZXA7THVyZSBvZiB0aGUgR2xpbW1lcmd1YXJkIEhlYWQ7VGhlIE9yZGVyIG9mIEN5cHJpbjtUaGUgTGVlY2ggUXVlZW4gV2VhcG9uO09mZmhhbmQgQ3V0bGFzcyBvZiB0aGUgQ29uc3VtaW5nIFRpZGVzO1N1bGxlbiBSYW1wYXJ0O0hvb2R3aW5rIEdsZWlwbmlyO0hvb2R3aW5rIERyYWdvbiBDcm9zc2JvdztIZWxtIG9mIHRoZSBEYXJrIE1vb24gU3RhbGtlcjtUd2lsaWdodCBTY2hpc207U291bCBEaWZmdXNlciBQcmVtO1RlcnJhaW4gLSBTYW5jdHVtcyBvZiB0aGUgRGl2aW5lO01pZG5pZ2h0IFRlcnJvciBIVUQ7R29sZGVuIEFlZ2lzO0hvbmV5IEhlaXN0IEJhYnkgUm9zaGFuO0Zpc3RzIG9mIEF4ZSBVbmxlYXNoZWQ7QXhlIEp1bmdsZTtQbGFuZXRmYWxsIFN0dW4gRWZmZWN0O092ZXJncm93biBFbWJsZW07Q3Jlc2NlbnQgQm93IEFycm93IG9ubHk7TWFzayBvZiBNZXRpcmE7Rm9vdGZhbGxzIG9mIHRoZSBTcG9yZWZhdGhlcnMgLSBIZWFkO0Zvb3RmYWxscyBvZiB0aGUgU3BvcmVmYXRoZXJzIC0gQmVsdDtGb290ZmFsbHMgb2YgdGhlIFNwb3JlZmF0aGVycyAtIFNob3VsZGVyO0Zvb3RmYWxscyBvZiB0aGUgU3BvcmVmYXRoZXJzIC0gRGVhdGggV2FyZDtHdWFyZGlhbnMgb2YgdGhlIExvc3QgUGF0aCBEaXJlIFRvd2VycztHdWFyZGlhbnMgb2YgdGhlIExvc3QgUGF0aCBSYWRpYW50IFRvd2VycztIZWxsLVNwYXIgQW5hdGhlbWEgT2JzaWRpYW4gQmxpZ2h0O01hbnRsZSBvZiB0aGUgSW5mZXJuYWwgUmFtYmxlcjtCbGFkZSBvZiBGbGlnaHRsZXNzIEZ1cnk7RGlyZSBOZW1lc3RpY2UgQ3JlZXBzO1JhZGlhbnQgTmVtZXN0aWNlIENyZWVwcztEYXJrIEFydGlzdHJ5IFRocm93YmFjaztEcmVhZCBSZXRyaWJ1dGlvbjtQdXBwZXQgUHVkZ2UgUGVyc29uYSAoeWQ5519IGNhbiBhZGQgSG9vaykgVVA7TGl0dGxlIFdpdGNoIFNldDtUcmFwcGluZyBvZiB0aGUgU2VjcmV0IE1lZGljaW5lO0Zyb3plbiBWb2lkO0Jlc3Rvd21lbnRzIG9mIHRoZSBDZW50dXJpb24gVmFuZ3VhcmQ7RHJhZ29ucyBBc2NlbnNpb24gViAzLjA7TW9ycGhsaW5nIEltbW9ydGFscyBNZWdhUGFjayBVUDtDdXN0b20gTWVnYVBhY2sgV3JhaXRoIEtpbmcgVGhlIE9uZSBUcnVlIEtpbmcgQnVuZGxlIChTdHlsZSAxIENoaW5lc2UpO1Vyc2EgSW1tb3J0YWxzIE1lZ2FQYWNrO0dob3N0IEp1ZGdlcjtCbGFkZWZvcm0gTGVnYWN5IFByb3ZvY2F0aW9uIG9mIFJ1aW47Um95YWwgV2ludGVyYmxvb207Rm93bCBQbGFndWUgU2V0O09sZCBNb2RlbCBTaGFkb3cgRmllbmQ7V2luZHJhbmdlciBBcmNhbmEgc3R5bGUgMSArIFdSIGltbW9ydGFsO1RoZSBCcmluZWJyZWQgQ2F2YWxpZXI7QW50aS1NYWdlIFJlYm9ybiBEb3RhMkNoYW5nZXI7U2thZGkgTWVkdXNhIFYgMi4wO1dpbmRyYW5nZXIgQXJjYW5hIHN0eWxlIDEgKEJsdWUgQmlyZCkgKyBGdWxsIFdSIGltbW9ydGFsO0Vzc2VuY2UgT2YgVGhlIERhcmsgTW9vbjtNaXJhbmEgVEkxMCBDb2xsZWN0b3JzIENhY2hlIE1lZ2FQYWNrO0JyaXN0bGViYWNrIE1lZ2FQYWNrO1NoYXR0ZXJibGFzdCBDb3JlIFNoYXR0ZXJibGFzdCBDcm93biBBcG9jYWx5cHNlIFVuYm91bmQ7QXN0cm9sb2dlciBTZXQ7VGh1bmRlciBHcmlmZmluO0RlZmVuZGVyIG9mIHRoZSBCcnVtYWwgQ3Jlc3Q7U292ZXJlaWduIG9mIHRoZSBLcmF5IExlZ2lvbnMgMnN0IFN0eWxlO1NpbGVuY2VyIE1lZ2FQYWNrO1Zpc2lvbiBvZiB0aGUgU2VyYXBoIFNjaW9uIC0gUm95YWw7Q2hhcm1lciBvZiBGaXJlc25ha2U7T2dyZSBNYWdpIEltbW9ydGFscyBBcmNhbmEgTWVnYVBhY2s7UHVnbmEgSW1tb3J0YWxzIE1lZ2FQYWNrO0ljZWJvdW5kIEZsb3JldDtBbmNpZW50IE1hZ3VzIFN0eWxlIDM7Q2hsb2Ugdm9uIEVpbnpiZXJuIGZvciBFYXJ0aCBTcGlyaXQgYnkgUGF0Y2hvdWxpIEtub3dsZWRnZTsgMTIzfHx8