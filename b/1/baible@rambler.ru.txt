limitHWID:: 1 000||| 111::  111||| 222:: $2y$10$OWQzMWQ4YTE5NmVhZTMzZOV2uOQlLVuMIPD9fxq.mfHy/UG8Q1T5e 222||| 123:: Chirpy;Pine Cone Melee Mega Creeps;Terrain - The Kings New Journey;River Vial Blue;Weather Snow;Guardians of the Lost Path Dire Towers;Guardians of the Lost Path Radiant Towers;Harvested Shoulders;First Light Armor;First Light Arms;First Light Head;First Light Weapon;Bitterwing Legacy Dragon Form;Datastar Progenitor (Alter Arcana);Pyrexaec Floe;Fin King*s Charm Prem;Form of the Great Calamity V 2.1;Blade of Tears and Crown of Tears;Shroom Thing;Blissful Knave Coat;Blissful Knave Hat;Blissful Knave Rapier;Eminence of Ristul Knife Attack;Serpent Ward of Tang-Ki;Hush of Eternal Night;Phantom Advent UP;Epitaphic Trap;Barding of the Siege-Drake;Mark of the Mistral Fiend V 2.1;Big Un V 3.0;Brumal Berserker;Broken Scale V 2.0;Cosmic Wanderer;Overgrown;The Rowdy Firebrand;Harvests Hound;Hunters Glory;Wyrmbrew Connoisseur;Lost Ranger;Pattern of the Silken Queen;Iceplain Ravager;Eyes of the Rift;Barren Survivor V 2.0;Lineage Province of the Hunt Eternal;The Brass Flyer;Blueheart Sovereign V 2.0;Forgotten Tactician;The Duskbloom Trickster;Delights of Petaluna Pathfinder;Fatal Blossom V 3.0;Lightning Harbinger;Bringer of Troubles;Dragon Guardian;Eldwurms Touch V 3.1;Bedrock Serenity V 3.1;Bindings of Deep Magma;Harness of the Fissured Soul;Fires of the Volcanic Guard;First Night of the Summer Child;Exponent of the Endless Stars;Misgivings of the Emerald Age;Tengu Guardian Set;Allied Commander Set;Explosive Maniac;Steampowered Magic Set;Susano Os Descendant;The Crimson Pirate;Valkyrie Of The Remains;Lord of Chronoptic Synthesis;Ascendance of the Rime Lord 1st Style;Fireflight Scion;War-Burrow Ravager;Black Ice Scourge;Erupting Wrath V 2.0;Fury of War God;Eye of the Beholder;Voodoo Meepo;Pride of the Wintermoon;Havoc of Dragon Palace V 2.0;Prismatic Grace;Allfather of Nature Set;Wrath of Ka V 2.1;Unfettered Malevolence;Cursed Zealot;Tales of the Grey Wastes;Thunderwraths Calling Set;Auspicious Seadweller;Mandate of the Nameless;Toll of the Fearful Aria;Vengeance of the Sunwarrior;Ire of Molten Rebirth;Reminiscence of Dreams;Chains of the Black Death Style 1;Researcher of Oblivion Magic;Magister of the Narrow Fates;Junktown Avenger;Ancient Magus Style 2;Sovereign of the Kray Legions 1st Style;Crown of The Nightworld;Fathomless Ravager;Charmer of Firesnake;Gold Skymage;Vantage of the Breach Warden;Dark Reef Escape V 2.1;Keen Machine;Barding of the Masters Pet;Genie Spirit;Armature of the Belligerent Ram Red;Powdersled Rookery;Concealed Raven;Foulfell Corruptor;Lurkablo;Trek of the Trailblazer;Submerged Hazard;Tiny Mix V 4.0;Bogborne;Plunder of the Savage Monger;Brawler of the Glacier Sea V 3.0;Abyssal Cuirass;Fallen Rule;Roshan Hunters Set;Blessing of the Crested Umbra;Ferocious Toxicant;Unblinking Eternity;The Infernal Master;The Dusk Crawler Set;Bindings of the Battleranger Chaotic Style;Chilling Feather;Bearer of the Arkturan Talon;Regalia of the Wraith Lord Set;Arc of the Sovereign; 123|||