bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogIDExMXx8fCAyMjI6OiAkMnkkMTAkT1dRek1XUTRZVEU1Tm1WaFpUTXpaT1YydU9RbExWdU1JUEQ5ZnhxLm1mSHkvVUc4UTFUNWUgMjIyfHx8IDEyMzo6IE92ZXJncm93biBFbWJsZW0gQWdoYW5pbSBFZmZlY3Q7UGxhbmV0ZmFsbCBCbGluaztUSS04IEJvdHRsZSBFZmZlY3Q7Q2F2ZXJuaXRlIERpcmUgQ3JlZXBzO0NhdmVybml0ZSBSYWRpYW50IENyZWVwcztUSS01IGVmZmVjdCBEYWdvbjtUSS05IFNlYXNvbmFsIENyZWVwIERlbnkgRWZmZWN0O1RJLTggRXVsIEVmZmVjdDtCYXR0bGUgUGFzcyBFZmZlY3QgRm9yY2UgU3RhZmY7VEktOCBGb3VudGFpbiBsdmwgMiBFZmZlY3Q7UGVkZXN0YWwgVGktNiBSYWRpYW50IExWTCAyO0lyb24gQnJhbmNoIENocmlzdG1hcyBUcmVlO1RJLTEwIExldmVsIFVwIEVmZmVjdDtNZWthbmlzbSBUSS02IEVmZmVjdDtNam9sbG5pciBUSS02IEVmZmVjdDtQaGFzZSBCb290cyBUSS02IEVmZmVjdDtSYWRpYW5jZSBUSS02IEVmZmVjdDtSZWVmIFJvc2hhbjtUSS04IFNoaXZhcyBFZmZlY3Q7VEktMTAgVGVsZXBvcnQgbHZsIDMgRWZmZWN0O0d1YXJkaWFucyBvZiB0aGUgTG9zdCBQYXRoIERpcmUgVG93ZXJzO0d1YXJkaWFucyBvZiB0aGUgTG9zdCBQYXRoIFJhZGlhbnQgVG93ZXJzO0N1cnNlZCBWZW5vbGluZztFY2hvIHRoZSBMb2NhdG9yO1RJOSBDYWNoZSBCYW5lIEVuZGxlc3MgTmlnaHRtYXJlIEhlYWQ7SGFydmVzdGVkIFNob3VsZGVycztTdG91dGhlYXJ0IEdyb3dsZXIgT3dsO1N0b3V0aGVhcnQgR3Jvd2xlciBCb2FyO1RoaXN0bGUgQ3Jhd2xlcjtGaXJzdCBMaWdodCBBcm1vcjtGaXJzdCBMaWdodCBBcm1zO0ZpcnN0IExpZ2h0IEhlYWQ7V2lnaHRzIGZyb20gdGhlIEdsb29tO0JpdHRlcndpbmcgTGVnYWN5IERyYWdvbiBGb3JtO1dhcnJpb3JzIG9mIHRoZSBEZW1vbiBTdG9uZSBWIDMuMTtTZXJ2YW50cyBvZiBFbmRsZXNzIFN0YXJzO0NvdmVuYW50IG9mIHRoZSBEZXB0aHMgU3Bpcml0O0RhdGFzdGFyIFByb2dlbml0b3IgKEFsdGVyIEFyY2FuYSk7UHlyZXhhZWMgRmxvZTtCYXJkaW5nIG9mIENoaW1lcmljIFJhcHBvcnQ7VGhlIFdhcmQgb2YgT2RvY29lbGV1cztLb3RsIElsbHVtaW5hdGUgUmFtO0ZpbiBLaW5nKnMgQ2hhcm0gUHJlbTtMaW9uIEdyZWVkeSBLaW5nIEFybXM7TWFudGxlIG9mIHRoZSBJbmZlcm5hbCBSYW1ibGVyO0F2YWRhIEtlZGF2cmE7QmxhZGUgb2YgVGVhcnMgYW5kIENyb3duIG9mIFRlYXJzO1Nocm9vbSBUaGluZztOb3ZhIG9mIEdvbGRlbiBOaXJ2YW5hO0RvdGFDaW5lbWEgLSBRdWVlbiBvZiBQYWluIFNwZWxscztFbWluZW5jZSBvZiBSaXN0dWwgS25pZmUgQXR0YWNrO1NlcnBlbnQgV2FyZCBvZiBUYW5nLUtpO0h1c2ggb2YgRXRlcm5hbCBOaWdodDtQaGFudG9tIEFkdmVudCBCZWx0IFVQO1BoYW50b20gQWR2ZW50IFVQO1BoYW50b20gQWR2ZW50IFNob3VsZGVycyBVUDtQaGFudG9tIEFkdmVudCBXZWFwb24gVVA7Rmx1dHRlcmluZyBBbWV0aHlzdCBUcmFwICsgSWNvbjtNYWVscmF3bipzIGFieXNzYWwgR3VhcmQgQmVsdDtNYWVscmF3bipzIGFieXNzYWwgR3VhcmQgQXJtcztQaXJhdGUgU2xheWVyKnMgQmxhY2sgRmxhZztDbGFkZGlzaCBDdWRnZWw7U2NhcmxldCBRdWFycnkgViA0LjA7U2NhcmxldCBPYWs7U21hbGwgU2NhcmxldCBRdWFycnk7TWVkaXVtIFNjYXJsZXQgUXVhcnJ5O0xhcmdlIFNjYXJsZXQgUXVhcnJ5O0dvbGRlbiBQYWxlIE1hdXNvbGV1bTtXYXRjaGVyIG9mIHRoZSBWaXJ1bGVudCBLcmFpdDtNYWxlZmljIERyYWtlcyBTdHJpa2Ugb25seSBFZmZlY3Q7UGxhdGluZyBvZiB0aGUgTmV0aGVyc3dhcm0gVmFuZ3VhcmQ7TWFsZWZpYyBEcmFrZXMgSG9vZCBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzO0ZhbWlsaWFycyBvZiB0aGUgS2VlcGVycyBHYXplO1JpdmVyIFZpYWwgQmx1ZTtDYW5keSBDYXQgQXJtcztDYW5keSBDYXQgQmFjaztDYW5keSBDYXQgQmVsdDtQdWRnZSBibG9vZCBhZnRlciBob29rO0NhbmR5IENhdCBIZWFkO0NhbmR5IENhdCBPZmYtSGFuZDtDYW5keSBDYXQgU2hvdWxkZXI7Q2FuZHkgQ2F0IFdlYXBvbjtUZXJyYWluIC0gSW1tb3J0YWwgR2FyZGVucztNYXJrIG9mIHRoZSBNaXN0cmFsIEZpZW5kIFYgMi4xO0JpZyBVbiBWIDMuMDtCcnVtYWwgQmVyc2Vya2VyO01hZ2UgQWJvbGlzaGVyIFYgMi4wO0Nvc21pYyBXYW5kZXJlcjtTaGFja2xlcyBvZiB0aGUgRW5kdXJpbmcgQ29uc2NyaXB0O1RoZSBSb3dkeSBGaXJlYnJhbmQ7TWFyYXVkZXIgQ2hpZWZ0YWluIG9mIHRoZSBDaGFvcyBXYXN0ZXM7SGFydmVzdHMgSG91bmQ7Qm91bnR5IEh1bnRlciBNYW5pYWMgU2V0O1d5cm1icmV3IENvbm5vaXNzZXVyO0xvc3QgUmFuZ2VyO1BhdHRlcm4gb2YgdGhlIFNpbGtlbiBRdWVlbjtJY2VwbGFpbiBSYXZhZ2VyO0dyeXBob24gUmlkZXIgU2V0O0JhcnJlbiBTdXJ2aXZvciBWIDIuMDtMaW5lYWdlIFByb3ZpbmNlIG9mIHRoZSBIdW50IEV0ZXJuYWw7U291bCBvZiBTdGVhbTtCbHVlaGVhcnQgU292ZXJlaWduIFYgMi4wO0ZvcmdvdHRlbiBUYWN0aWNpYW47VGhlIER1c2tibG9vbSBUcmlja3N0ZXI7RGVsaWdodHMgb2YgUGV0YWx1bmEgUGF0aGZpbmRlcjtGYXRhbCBCbG9zc29tIFYgMy4wO0xpZ2h0bmluZyBIYXJiaW5nZXI7RHJhZ29uIEd1YXJkaWFuO0VsZHd1cm1zIFRvdWNoIFYgMy4xO1ZhbnF1aXNoaW5nIERlbW9ucyBHZW5lcmFsIFYgMy4xO0FudmlsIG9mIHRoZSBFYXJ0aHdyaWdodDtIYXJuZXNzIG9mIHRoZSBGaXNzdXJlZCBTb3VsO0ZpcmVzIG9mIHRoZSBWb2xjYW5pYyBHdWFyZDtUaGUgU2hlZXAgU2V0O0V4cG9uZW50IG9mIHRoZSBFbmRsZXNzIFN0YXJzO01pc2dpdmluZ3Mgb2YgdGhlIEVtZXJhbGQgQWdlO1RoZSBDaGFpbmVkIFNjcmliZTtBbGxpZWQgQ29tbWFuZGVyIFNldDtFeHBsb3NpdmUgTWFuaWFjO1N0ZWFtcG93ZXJlZCBNYWdpYyBTZXQ7U3VzYW5vIE9zIERlc2NlbmRhbnQ7Rm9yZ290dGVuIFJlbmVnYWRlO1NlYWJvcm5lIFJlcHJpc2FsO1RoZSBHaWZ0cyBvZiBaaHV6aG91O1NwaXJldGhvcm4gUmVnYWxpYSBWIDIuMDtSZXZpdmFsIG9mIHRoZSBJY2UgV2l0Y2g7Qmxvb2R5IFJpcHBlcjtGaXJlZmxpZ2h0IFNjaW9uO1dhci1CdXJyb3cgUmF2YWdlcjtBenVyZSBDb25zdGVsbGF0aW9uIFYgMi4xO1RyYWlsIG9mIHRoZSBHcmV5IEdob3N0O0VydXB0aW5nIFdyYXRoIFYgMi4wO0Z1cnkgb2YgV2FyIEdvZDtFeWUgb2YgdGhlIEJlaG9sZGVyO1Zvb2RvbyBNZWVwbztNb29uZmxhcmUgb2YgVGhlIE5pZ2h0c2lsdmVyO0hhdm9jIG9mIERyYWdvbiBQYWxhY2UgViAyLjA7UHJpc21hdGljIEdyYWNlO0FsbGZhdGhlciBvZiBOYXR1cmUgU2V0O1dyYXRoIG9mIEthIFYgMi4xIFN0eWxlIDI7VW5mZXR0ZXJlZCBNYWxldm9sZW5jZTtDdXJzZWQgWmVhbG90O1RhbGVzIG9mIHRoZSBHcmV5IFdhc3RlcztUaHVuZGVyd3JhdGhzIENhbGxpbmcgU2V0O0F1c3BpY2lvdXMgU2VhZHdlbGxlcjtNYW5kYXRlIG9mIHRoZSBOYW1lbGVzcztUYWxlcyBvZiB0aGUgV2luZHdhcmQgUm9ndWU7VmVuZ2VhbmNlIG9mIHRoZSBTdW53YXJyaW9yO0lyZSBvZiBNb2x0ZW4gUmViaXJ0aDtSZW1pbmlzY2VuY2Ugb2YgRHJlYW1zO05hcmNpc3Npc3RpYyBMZWVjaDtNYWdpc3RlciBvZiB0aGUgTmFycm93IEZhdGVzO0p1bmt0b3duIEF2ZW5nZXI7QW5jaWVudCBNYWd1cyBTdHlsZSAyO1NvdmVyZWlnbiBvZiB0aGUgS3JheSBMZWdpb25zIDJzdCBTdHlsZTtDcm93biBvZiBUaGUgTmlnaHR3b3JsZDtGYXRob21sZXNzIFJhdmFnZXI7RGFuY2VyIG9mIHRoZSBTcGl0ZWZ1bCBFeWUgViAzLjA7QmVhY29uIG9mIENlcnVsZWFuIExpZ2h0IDIgU3R5bGUgViAyLjE7VmFudGFnZSBvZiB0aGUgQnJlYWNoIFdhcmRlbjtEYXJrIFJlZWYgRXNjYXBlIFYgMi4xO0hpbnRlcmxhbmQgU3RhbGtlcjtCYXJkaW5nIG9mIHRoZSBNYXN0ZXJzIFBldDtHZW5pZSBTcGlyaXQ7QXJtYXR1cmUgb2YgdGhlIEJlbGxpZ2VyZW50IFJhbSBSZWQ7UG93ZGVyc2xlZCBSb29rZXJ5O1NhbXVyYWkgU2V0O1RyZWsgb2YgdGhlIFRyYWlsYmxhemVyO1RpbmtlciBTY2FyZWNyb3cgU2V0O0JvZ2Jvcm5lO1BsdW5kZXIgb2YgdGhlIFNhdmFnZSBNb25nZXI7QnJhd2xlciBvZiB0aGUgR2xhY2llciBTZWEgViAzLjA7QXRyb2NpdGllcyBvZiB0aGUgQWJ5c3NhbCBTY291cmdlO0ZhbGxlbiBSdWxlO1NjYWxlIG9mIHRoZSBSYXpvcnd5cm0gQ2hhb3M7TG9zdCBTZXJhcGggU2V0O0Zlcm9jaWQ5519cyBUb3hpY2FudDtCYXJkaW5nIG9mIHRoZSBTb3VsIEtlZXBlcjtUaGUgSW5mZXJuYWwgTWFzdGVyO1RoZSBEdXNrIENyYXdsZXIgU2V0O0FycmF5IG9mIFRyYW5xdWlsaXR5O1dpbmdzIG9mIENvbG9yZnVsIEljZWNyeXN0YWxzO01vcmJpZmljIFByb3Zpc2lvbjtHcmltIERlc3Rpbnk7QXJjIG9mIHRoZSBTb3ZlcmVpZ247QnJpbmdlciBvZiBUcm91YmxlcztGbHV0dGVyaW5nIEFtZXRoeXN0O1RvbGwgb2YgdGhlIEZlYXJmdWwgQXJpYTsgMTIzfHx8