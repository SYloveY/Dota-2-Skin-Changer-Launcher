limitHWID:: 1 000||| 111::  111||| 222:: $2y$10$OWQzMWQ4YTE5NmVhZTMzZOV2uOQlLVuMIPD9fxq.mfHy/UG8Q1T5e 222||| 123:: Overgrown Emblem Aghanim Effect;Planetfall Blink;TI-8 Bottle Effect;Cavernite Dire Creeps;Cavernite Radiant Creeps;TI-5 effect Dagon;TI-9 Seasonal Creep Deny Effect;TI-8 Eul Effect;Battle Pass Effect Force Staff;TI-8 Fountain lvl 2 Effect;Pedestal Ti-6 Radiant LVL 2;Iron Branch Christmas Tree;TI-10 Level Up Effect;Mekanism TI-6 Effect;Mjollnir TI-6 Effect;Phase Boots TI-6 Effect;Radiance TI-6 Effect;Reef Roshan;TI-8 Shivas Effect;TI-10 Teleport lvl 3 Effect;Guardians of the Lost Path Dire Towers;Guardians of the Lost Path Radiant Towers;TI9 Cache Bane Endless Nightmare Head;Harvested Shoulders;Stoutheart Growler Owl;Stoutheart Growler Boar;Thistle Crawler;First Light Armor;First Light Arms;First Light Head;Wights from the Gloom;Bitterwing Legacy Dragon Form;Warriors of the Demon Stone V 3.1;Servants of Endless Stars;Covenant of the Depths Spirit;Datastar Progenitor (Alter Arcana);Pyrexaec Floe;Barding of Chimeric Rapport;The Ward of Odocoeleus;Kotl Illuminate Ram;Fin King*s Charm Prem;Lion Greedy King Arms;Mantle of the Infernal Rambler;Avada Kedavra;Blade of Tears and Crown of Tears;Shroom Thing;Nova of Golden Nirvana;DotaCinema - Queen of Pain Spells;Eminence of Ristul Knife Attack;Serpent Ward of Tang-Ki;Hush of Eternal Night;Phantom Advent Belt UP;Phantom Advent UP;Phantom Advent Shoulders UP;Phantom Advent Weapon UP;Fluttering Amethyst Trap + Icon;Maelrawn*s abyssal Guard Belt;Maelrawn*s abyssal Guard Arms;Pirate Slayer*s Black Flag;Claddish Cudgel;Scarlet Quarry V 4.0;Scarlet Oak;Small Scarlet Quarry;Medium Scarlet Quarry;Large Scarlet Quarry;Golden Pale Mausoleum;Watcher of the Virulent Krait;Malefic Drakes Strike only Effect;Plating of the Netherswarm Vanguard;Malefic Drakes Hood of the Crimson Witness;Familiars of the Keepers Gaze;River Vial Blue;Candy Cat Arms;Candy Cat Back;Candy Cat Belt;Pudge blood after hook;Candy Cat Head;Candy Cat Off-Hand;Candy Cat Shoulder;Candy Cat Weapon;Terrain - Immortal Gardens;Bionic Birdie;Chromy the Centipede Ward;Mark of the Mistral Fiend V 2.1;Big Un V 3.0;Brumal Berserker;Mage Abolisher V 2.0;Cosmic Wanderer;Shackles of the Enduring Conscript;The Rowdy Firebrand;Marauder Chieftain of the Chaos Wastes;Harvests Hound;Bounty Hunter Maniac Set;Wyrmbrew Connoisseur;Lost Ranger;Pattern of the Silken Queen;Iceplain Ravager;Gryphon Rider Set;Barren Survivor V 2.0;Lineage Province of the Hunt Eternal;Soul of Steam;Blueheart Sovereign V 2.0;Forgotten Tactician;The Duskbloom Trickster;Delights of Petaluna Pathfinder;Fatal Blossom V 3.0;Lightning Harbinger;Dragon Guardian;Eldwurms Touch V 3.1;Vanquishing Demons General V 3.1;Anvil of the Earthwright;Harness of the Fissured Soul;Fires of the Volcanic Guard;The Sheep Set;Exponent of the Endless Stars;Misgivings of the Emerald Age;The Chained Scribe;Allied Commander Set;Explosive Maniac;Steampowered Magic Set;Susano Os Descendant;Forgotten Renegade;Seaborne Reprisal;The Gifts of Zhuzhou;Spirethorn Regalia V 2.0;Revival of the Ice Witch;Bloody Ripper;Fireflight Scion;War-Burrow Ravager;Azure Constellation V 2.1;Trail of the Grey Ghost;Erupting Wrath V 2.0;Fury of War God;Eye of the Beholder;Voodoo Meepo;Moonflare of The Nightsilver;Havoc of Dragon Palace V 2.0;Prismatic Grace;Allfather of Nature Set;Wrath of Ka V 2.1 Style 2;Unfettered Malevolence;Cursed Zealot;Tales of the Grey Wastes;Thunderwraths Calling Set;Auspicious Seadweller;Mandate of the Nameless;Tales of the Windward Rogue;Vengeance of the Sunwarrior;Ire of Molten Rebirth;Reminiscence of Dreams;Narcissistic Leech;Magister of the Narrow Fates;Junktown Avenger;Ancient Magus Style 2;Sovereign of the Kray Legions 2st Style;Crown of The Nightworld;Fathomless Ravager;Dancer of the Spiteful Eye V 3.0;Beacon of Cerulean Light 2 Style V 2.1;Vantage of the Breach Warden;Dark Reef Escape V 2.1;Barding of the Masters Pet;Genie Spirit;Armature of the Belligerent Ram Red;Powdersled Rookery;Samurai Set;Trek of the Trailblazer;Tinker Scarecrow Set;Bogborne;Plunder of the Savage Monger;Brawler of the Glacier Sea V 3.0;Atrocities of the Abyssal Scourge;Fallen Rule;Lost Seraph Set;Ferocious Toxicant;Barding of the Soul Keeper;The Infernal Master;The Dusk Crawler Set;Array of Tranquility;Wings of Colorful Icecrystals;Morbific Provision;Grim Destiny;Arc of the Sovereign;Bringer of Troubles;Fluttering Amethyst;Keen Machine;Toll of the Fearful Aria;Roshan Hunters Set; 123|||