bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogIDExMXx8fCAyMjI6OiAkMnkkMTAkT1RWa01XWXlNR1l6WkRNMk5EVTBOZUZKSWhqSlF5bUtpeWU5eGVkaHA4YzIxaXR6blNwVlcgMjIyfHx8IDEyMzo6IEZvY2FsIFJlc29uYW5jZSBWIDMuMDtNYWNlIG9mIFZpbmNlcmUgQXRhY2sgRWZmZWN0O0hpZGRlbiBWZWN0b3IgLSBCbGFkZTtIaWRkZW4gVmVjdG9yIC0gSGF0O0hpZGRlbiBWZWN0b3IgLSBCZWx0O0hpZGRlbiBWZWN0b3IgLSBBcm1vcjtEYXJrIEFydGlzdHJ5IFRocm93YmFjaztXYXRlcmxvZ2dlZCBLdW5ra2EgU2hvZXM7VG9ybWVudGVkIFN0YWZmIG9mIEVtaW5lbnQgUmV2aXZhbCBFeGNlcHRpb25hbDtUb3JtZW50ZWQgQ3Jvd247UnViaWNrIEN1cnNlIC0gR29kcyBSZWJ1a2U7R29kcyBNZXJjeSBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzO0p1Z2dlcm5hdXQgQXJjYW5hIEJsYWRlZm9ybSBMZWdhY3k7RmFjZWxlc3MgTWFkbmVzcztDbGFzenVyZW1lIEluY3Vyc2lvbiBTaG91bGRlcjtDbGFzenVyZW1lIEluY3Vyc2lvbiBXZWFwb247Q3JpbXNvbiBCcmFjZXJzIG9mIEFlb25zIFByZW07Q2xhc3p1cmVtZSBJbmN1cnNpb24gQmVsdDtHb2xkZW4gVHdpbGlnaHQgU2NoaXNtO01vb25mYWxsIFByZW07U2hvY2sgb2YgdGhlIEFudmlsIFByZW07QXBvZ2VlIG9mIHRoZSBHdWFyZGlhbiBGbGFtZTtSYXBpZXJzIG9mIHRoZSBCdXJuaW5nIEdvZCBWIDMuMTtNYXN0ZXIgb2YgdGhlIFNlYXJpbmcgUGF0aCBCZWx0O0dvbGRlbiBTaGFyZHMgb2YgRXhpbGUgUHJlbTtFYXJ0aCBHcmVlbiBDb2xvciBmb3IgVEI7RGVtb24gRm9ybSBvZiB0aGUgRm91bGZlbGwgQ29ycnVwdG9yIFVQO1dvcmxkIENoYXNtIEFydGlmYWN0O0xvcmQgb2YgTHVtaW5hcmllcyBFaWRvbG9ucztCaXR0ZXIgTGluZWFnZSBJbW1vcnRhbCBBeGVzO1NuaXBlciBJbW1vcnRhbCBXZWFwb24gb2YgdGhlIEFyZGFsYW4gSW50ZXJkaWN0b3I7UGFjayBvZiB0aGUgQXJkYWxhbiBJbnRlcmRpY3RvcjtIZWxtIG9mIHRoZSBBcmRhbGFuIEludGVyZGljdG9yO1BhdWxkcm9ucyBvZiB0aGUgU2lsdmVyIEZveDtIZWxsLVNwYXIgQW5hdGhlbWEgT2JzaWRpYW4gQmxpZ2h0O011bGN0YW50IFBhbGwgb2YgdGhlIENyaW1zb24gV2l0bmVzcztGaW4gS2luZ3MgQ2hhcm0gb2YgRW1pbmVudCBSZXZpdmFsO0Zsb2NraGVhcnRzIEdhbWJsZSBNb2x0ZW4gRmlyZWxhcms7SGF0IG9mIHRoZSBXaW5kd2FyZCBSb2d1ZTtDb2F0IG9mIHRoZSBXaW5kd2FyZCBSb2d1ZTtUZW1wZXN0IFJldmVsYXRpb247Q2FwZSBvZiB0aGUgRnJhY3R1cmVkIEVudm95O0lyZSBvZiB0aGUgQW5jaWVudCBHYW9sZXIgU2hvdWxkZXI7QnJhY2VycyBvZiB0aGUgRnJhY3R1cmVkIEVudm95O0h1bmdlciBvZiB0aGUgSG93bGluZyBXaWxkcyBXZWFwb247SHVuZ2VyIG9mIHRoZSBIb3dsaW5nIFdpbGRzIEhlYWQ7R29sZGVuIFNoYWRvdyBNYXNxdWVyYWRlIFByZW07UGhhbnRvbSBBc2NlbnNpb24gU2hvdWxkZXJzO01hbmlhcyBNYXNrIFByZW07R29sZGVuIFNpbGVudCBXYWtlO0hlcmFsZCBvZiB0aGUgRW1iZXIgRXllIC0gTWFzaztGb3J0dW5lIG9mIHRoZSBGaXZlIEhvdXNlcztIZXJhbGQgb2YgdGhlIEVtYmVyIEV5ZSAtIEJlbHQ7SGVyYWxkIG9mIHRoZSBFbWJlciBFeWUgLSBBcm1vcjtFbWJsZW0gb2YgdGhlIENyeXN0YWwgRWNoZWxvbjtUaGVGYXRSYXQgV2FycmlvciBTb25ncyBNdXNpYyBQYWNrIE9mZmljaWFsO1JpY2sgYW5kIE1vcnR5IEFubm91bmNlcjtUZXJyYWluIC0gQXV0dW1uO1dlYXRoZXIgQXVyb3JhO0F2b3dhbmNlIG9mIHRoZSBDcmltc29uIFdpdG5lc3M7TWFuaWZvbGQgUGFyYWRveCBQQSBBcmNhbmEgU3R5bGUgMztDb2RpY2lsIG9mIHRoZSBWZWlsZWQgT25lcztHb3RoaWMgV2hpc3BlciBCZWx0O0dvdGhpYyBXaGlzcGVyIENhcGU7RW1pbmVuY2Ugb2YgUmlzdHVsIFdoaXAgQXR0YWNrO0FyYyBvZiBNYW50YTtIYWlyIG9mIHRoZSBTdXJ2aXZvcjtRdWVlbiBvZiBQYWluIEFyY2FuYSBNZWdhUGFjaztLdW5ra2EgSW1tb3J0YWxzIE1lZ2FQYWNrO01vbmtleSBLaW5nIEFyY2FuYSBNZWdhUGFjaztESyBQZXJzb25hIERhdmlvbjtBcmN0aWMgU2hvY2sgVEEgViAzLjA7TGVnaW9uIENvbW1hbmRlciBNb2RNYWtlciBNZWdhUGFjaztEb29tIEltbW9ydGFscyBNZWdhUGFjaztFbmlnbWEgTWVnYVBhY2s7V2luZHJhbmdlciBBcmNhbmEgc3R5bGUgMiAoT3JhbmdlIEJpcmQpIGFuZCBGdWxsIFdSIGltbW9ydGFsO1dyYWl0aCBLaW5nIEFyY2FuYSBNZWdhUGFjaztHb2xkZW4gRGFyayBNYXcgSW5oaWJpdG8gYW5kIEdvbGRlbiBQcm9mYW5lIFVuaW9uIGFuZCBHb2xkZW4gRHJlYWQgUmVxdWlzaXRpb24gTGlmZXN0ZWFsZXIgSW1tb3J0YWxzIE1lZ2FwYWNrO1JlbWluaXNjZW5jZSBvZiBEcmVhbXM7U2xhcmsgTWVnYVBhY2sgTmV3O1N2ZW4gSW1tb3J0YWxzIE1lZ2FQYWNrIFVQO0JlYXJpbmcgb2YgdGhlIEtpbmcgUmVzdG9yZWQ7UmlnaHRlb3VzIFRodW5kZXJib2x0IGFuZCBBcmNhbmEgTWVnYVBhY2s7U2VjcmV0cyBvZiB0aGUgTWVycXVlZW4gV0lUSCBPVVQgRUZGRUNUUztJY2UgTGluYSBQcmVtaXVtO1B1ZGdlIFRJMTAgQ29sbGVjdG9ycyBDYWNoZSBNZWdhUGFjaztQbGFuZXRmYWxsIGFuZCBKdWRnZW1lbnQgb2YgdGhlIEZhbGxlbiBhbmQgQnJhY2VycyBvZiB0aGUgQ2F2ZXJuIEx1bWluYXIgQVJDQU5BIE1lZ2FQYWNrO1Vyc2EgSW1tb3J0YWxzIE1lZ2FQYWNrO01pcmFuYSBUSTEwIENvbGxlY3RvcnMgQ2FjaGUgTWVnYVBhY2s7QW50aW1hZ2UgV2VpIEZlbWFsZSAoWWQ5519IGNhbiBhZGQgV2VhcG9uIGFuZCBIZWFkKTsgMTIzfHx8