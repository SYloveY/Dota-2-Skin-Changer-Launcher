bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogIDExMXx8fCAyMjI6OiBlMDFmYzllZjFhMjg1YTMyNjY4MjM3NzUwN2QyMTQzY2JhNDA1MzY4Y2E4NzVlZDFkNWI0ZTk4NDhhZjRhM2ZkMDE5NTdkNmI4MDc0NjQ3MGJiYTRhMzllNDFlZTU0ZGQxMmZhNDA2MWJlODgwY2Q2ODFlNzQ2OGE1ZTZhOGZmOCAyMjJ8fHwgMTIzOjogRGVmZW5zZSBHcmlkIEFubm91bmNlcjtGYWxsb3V0IDQgTWVnYS1LaWxsO1dlYXRoZXIgTW9vbmJlYW07VGVtcGVzdCBIZWxtIG9mIHRoZSBUaHVuZGVyZ29kIFByZW07T25pYmkgU3R5bGUgMTtSYXp6aWxzIE1pZGFzIEtudWNrbGVzIFByZW07RXRlcm5hbCBSYWRpYW5jZSBCbGFkZXMgUHJlbTtUaGUgQmFzaGVyIEJsYWRlcztNYW50bGUgb2YgdGhlIENpbmRlciBCYXJvbiBTdHlsZSAxO0hhcnZlc3RlZCBTaG91bGRlcnM7U3RvdXRoZWFydCBHcm93bGVyIE93bDtTdG91dGhlYXJ0IEdyb3dsZXIgQm9hcjtIdW50ZXJzIEhvYXJkO1dyYXBzIG9mIHRoZSBTZWFzb25lZCBWZXRlcmFuIFYgMi4xO01hcmsgb2YgdGhlIEZpcnN0IEh1bnQgQmVzdG93ZWQ7Qmxhc3Rmb3JnZSBFeGhhbGVyO0Jlc3Rvd2VkIFNob3VsZGVycztZdWxzYXJpYSpzIEdsYWNpZXIgUHJlbTtZdWxzYXJpYXMgTWFudGxlIFByZW07Tm90aGxpYyBCdXJkZW4gb2YgdGhlIENyaW1zb24gV2l0bmVzcyBQcmVtO0RhcmtjbGF3IEVtaXNzYXJ5IERyZXNzO0RhcmtjbGF3IEVtaXNzYXJ5IENsb2FrO0RhcmtjbGF3IEVtaXNzYXJ5IEFybXM7RGFya2NsYXcgRW1pc3NhcnkgQ293bDtSYXBpZXJzIG9mIHRoZSBCdXJuaW5nIEdvZCBWIDMuMTtFaWRvbG9ucyBvZiBBYnlzc2FsIFZvcnRleDtWb2xhdGlsZSBQeXJlO01hZ3VzIEFwZXg7RGF0YXN0YXIgUHJvZ2VuaXRvciAoQWx0ZXIgQXJjYW5hKTtLb3RsIElsbHVtaW5hdGUgRGVlcjtUb3JtZW50ZWQgU3RhZmY7VG9ybWVudGVkIFN0YWZmIGVmZmVjdDtTdG9uZSBJbmZ1c2lvbiBQcmVtO011bGN0YW50IFBhbGw7Qm9yZWFsaXMgYW5kIFB1cHBleSwgR3VhcmRpYW5zIG9mIEFtYnJ5IFYgMi4xO0NvbG9zc2FsIENyeXN0YWwgQ2hvcnVzIGVmZmVjdDtDcmVzY2VudCBCb3cgQXJyb3cgb25seTtDaGlsZHJlbiBvZiBWZXJvZGljaWE7QWxsdXZpb24gUHJvcGhlY3kgViAyLjA7TGFtYiB0byB0aGUgU2xhdWdodGVyO0ZpZXJ5IFdhcmQgb2YgRWtpIEJ1a2F3O0dvbGRlbiBHcmFzcGluZyBCbHVkZ2VvbiBlZmZlY3Q7VGhlIEJhcmIgb2YgU2thZGk7RnVsbC1Cb3JlIEJvbmFuemE7U2F2YWdlIE1ldHRsZTtJcm9uIFN1cmdlIFYgMi4yO1RoZSBMaWdodG5pbmcgT3JjaGlkIFYgMy4yO0ZvY2FsIFJlc29uYW5jZSBWIDMuMDtSb2xsZXJtYXdzdGVyIGFuZCBNZWNoYSBCb290cyBvZiBUcmF2ZWwgTWsgSUlJO1NjYXJsZXQgUXVhcnJ5IFYgNC4wO0JvcmVhbCBTaWdpbDtXYXRjaGVyIG9mIHRoZSBWaXJ1bGVudCBLcmFpdDtNYWxlZmljIERyYWtlcyBTdHJpa2Ugb25seSBFZmZlY3Q7Q3JpbXNvbiBDeXJyaWRhZTtSYWlubWFrZXIgViA0LjA7U3lsdmFuIENhc2NhZGUgUHJlbTtXaW5ncyBvZiB0aGUgQXJjdGljIFJlY2x1c2U7Q3Jvd24gb2YgdGhlIEFyY3RpYyBSZWNsdXNlO1BhdWxkcm9ucyBvZiB0aGUgV2FydG9ybiBIZWF2ZW5zO0JlbHQgb2YgdGhlIFdhcnRvcm4gSGVhdmVucztCcmFjZXJzIG9mIHRoZSBXYXJ0b3JuIEhlYXZlbnM7SFVEIG9mIHRoZSBCdXJuaW5nIFNjYWxlIEljZTtNYXNrIG9mIE1hZG5lc3MgZm9yIFZvaWQgRG90YTJDaGFuZ2VyIEVkaXRpb247UmVsZW50bGVzcyBXYXJicmluZ2VyIExvYWRpbmcgU2NyZWVuO1Rvcm1lbnRlZCBTdGFmZjtHbGFpdmVzIG9mIHRoZSBXaW5nZWQgU2VudGluZWw7SGVsbSBvZiB0aGUgRGFyayBNb29uIFN0YWxrZXI7TWQ5519bnQgb2YgdGhlIFdpbmdlZCBTZW50aW5lbDtNb29uZmFsbCBQcmVtO0xpbmVhZ2UgQXJtb3Igb2YgdGhlIFJhaWRmb3JnZWQgUmlkZXI7QXJtbGV0cyBvZiBUZWFyZHJvcCBJY2U7Q29uY29yZCBSZXZlcnNpb24gVVA7Q29uY29yZCBEb21pbmlvbjtQaGFudG9tIENvbmNvcmQgUHJlbTtCZWx0IG9mIFRlYXJkcm9wIEljZTtTdWxsZW4gUmFtcGFydDtTdWxsZW4gSG9sbG93IFByZW07U3VsbGVuIEhhcnZlc3Q7Q3Jvd24gb2YgdGhlIE11cmlkIERpdmluZTtBZ2hzIEJQIEJlYXJkIG9mIHRoZSBNdXJpZCBEaXZpbmU7RmxpZ2h0IG9mIEVwaXBoYW55O1NreXdhcnJpb3JzIENvdW50ZW5hbmNlO0VtcHlyZWFuIFByZW07UnVuZSBGb3JnZWQgQnJhY2VycztSdW5lIEZvcmdlZCBCZWx0O1J1bmUgRm9yZ2VkIFNob3VsZGVycztKaW4gYW5kIFlpbiBGb3ggU3Bpcml0cyBPbmx5IFdoaXRlO1RlcnJhaW4gLSBTYW5jdHVtcyBvZiB0aGUgRGl2aW5lO1JpdmVyIFZpYWwgRWxlY3RyaWZpZWxkO0FzdHJhbCBEcmlmdDtBcnNlbmFsIG9mIHRoZSBEZW1vbmljIFZlc3NlbCBWIDIuMTtGb3JtZWQgQWxsb3kgU2V0O01hZ2UgQWJvbGlzaGVyIFYgMi4wO1dyYXRoZnVsIEFubmloaWxhdG9yO1RoZSBSb3dkeSBGaXJlYnJhbmQ7SHVudGVyIG9mIHRoZSBSZWQgVGFsb24gU2V0O0h1bnQgb2YgdGhlIFdlZXBpbmcgQmVhc3Q7VHJpdW1waCBvZiB0aGUgRm91ciBDb3JuZXJzIFYgMi4wO0hlYXZ5IEJhcmJlZCBBcm1vciBTZXQ7UGF0dGVybiBvZiB0aGUgU2lsa2VuIFF1ZWVuO0NoYW9zIENob3NlbiBWIDMuMDtCYXJyZW4gU3Vydml2b3IgViAyLjA7VGhlIEtlZW4gQ29tbWFuZGVyO1JlZ2FsaWEgb2YgdGhlIENyeXN0YWxsaW5lIFF1ZWVuIFNldDtNZW50b3Igb2YgdGhlIEFydGlmIENvbnZlcnQgViAyLjE7R2lmdHMgZnJvbSB0aGUgR2xvb20gU2V0IFYgMy4wO1RlbXBlc3RzIFdyYXRoO0ZpcmVzIG9mIFZhc2h1bmRvbCBubyBlZmZlY3QgViAyLjE7S25pZ2h0IG9mIHRoZSBCdXJuaW5nIFNjYWxlIFYgMi4xO0JpbmRpbmdzIG9mIERlZXAgTWFnbWE7T3JkZXIgb2YgdGhlIFdhbmRlcmluZyBGbGFtZSBWIDIuMTtBc3BlY3RzIG9mIFN1bW1lciBWIDIuMDtHdW5ib2F0IEhlZ2Vtb24gViAzLjA7Q292ZW5hbnQgb2YgdGhlIERlcHRocztGb3Jnb3R0ZW4gUmVuZWdhZGU7V2l0Y2ggSHVudGVyIFRlbXBsYXI7R2FyYiBvZiB0aGUgRnJvc3QgTG9yZDtDb21wZW5kaXVtIEJsb29keSBSaXBwZXI7V2FyLUJ1cnJvdyBSYXZhZ2VyO0h1bnRlciBvZiBLaW5ncyBWIDIuMDtNaWdodCBvZiB0aGUgR2FsbG9waW5nIEF2ZW5nZXIgViAyLjE7VGhlIEZyYWN0dXJlZCBPcmRlciBWIDMuMDtEYXJrZmFsbCBXYXJkZW47UmlwdGlkZSBSYWlkZXIgViAyLjA7RGlyZXN0b25lIEJpbmRpbmdzIFNldDtMaWdodCBvZiBFbGVhbm9yIFNldDtUcnVlYmFyayBBZGhlcmVudDtCbGFjayBOaWhpbGl0eTtBbnRpcG9kZWFuIEFsbGllcztBcm1vciBvZiB0aGUgU3RhbHdhcnQgU291bDtIZXJhbGQgb2YgTWVhc3VyZWxlc3MgUnVpbiBWIDIuMTtQaXRmYWxsIENydXNhZGVyO0dvbGRlbiBOaXJ2YW5hO1JlbWluaXNjZW5jZSBvZiBEcmVhbXM7Q2hhaW5zIG9mIHRoZSBCbGFjayBEZWF0aCBTdHlsZSAyO01hemUgV2F0Y2hlciBTZXQ7R2lmdGVkIEplc3RlcjtJcm9uY2xhZCBNb2xkIFYgMi4wO1N0eWdpYW4gTWF3O0RhbmNlciBvZiB0aGUgU3BpdGVmdWwgRXllIFYgMy4wO1RoZSBTZWEgRHJhZ29ucyBTZXQ7RGFyayBSZWVmIEVzY2FwZSBWIDIuMTtUaGUgRHdhcmYgRW5naW5lZXI7UGlsbGFyIG9mIHRoZSBGcmFjdHVyZWQgQ2l0YWRlbDtDcnkgb2YgdGhlIEJhdHRsZWhhd2s7UHJpbWVyIG9mIHRoZSBTYXBwZXJzIEd1aWxlO01vbHRlbiBEZXN0cnVjdG9yO0Jhcmsgb2YgdGhlIEFnZWxlc3MgV2l0bmVzcztCcmF3bGVyIG9mIHRoZSBHbGFjaWVyIFNlYSBWIDMuMDtBdHJvY2l0aWVzIG9mIHRoZSBBYnlzc2FsIFNjb3VyZ2U7U2VhYmxpZ2h0IFByb2Nlc3Npb247RmVyb2Npb3VzIEhlYXJ0O0Zlcm9jaWQ5519cyBUb3hpY2FudDtEcmVhZCBDb21wYWN0O0ZlYXRoZXJzd2luZztCZWFyZXIgb2YgdGhlIEFya3R1cmFuIFRhbG9uO0hhdW50ZWQgTG9yZCBWIDMuMDtUaGUgVGltZWtlZXBlciBHb2xkZW47TGFkeSBTeWx2YW5hcyBmb3IgRHJvdyAtIFNwaWtlcyBvZiBGcm9zdCBTZXQ7QWthbWFuYWggZm9yIExlZ2lvbiBDb21tYW5kZXIgViAzLjE7U3BhY2UgU3BlY3RyZSBWMy4wO1NhbXVyYWkgb2YgV2luZCBWIDMuMDtTdGFuZGFydCBWYWxlZXJhIGZvciBSaWtpO1ZlbmdlZnVsIFNwaXJpdCBSZWJpcnRoIFYgMy4wO0RlbW9uaWMgUHVnbmEgViAzLjA7Q2hhbXBpb24gb2YgRGlzY29yZCBWIDMuMTtSZWNrbGVzcyBWaWdvciBWIDIuMTtTaWxlbmNlciBUSTEwIENvbGxlY3RvcnMgQ2FjaGUgTWVnYVBhY2s7U2hhdHRlcmJsYXN0IFNldDtKYWtpcm8gTWVnYVBhY2s7TWVkdXNhIE1lZ2FQYWNrIE5FVztUaHVuZGVyIEdyaWZmaW47TWFuaWZvbGQgUGFyYWRveCBHb3RoaWMgSHVudGVyO1JpZ2h0ZWQ5519cyBUaHVuZGVyYm9sdCBhbmQgQXJjYW5hIE1lZ2FQYWNrO0RlZmVuZGVyIG9mIHRoZSBCcnVtYWwgQ3Jlc3Q7UXVlZW4gb2YgUGFpbiBBcmNhbmEgTWVnYVBhY2s7IDEyM3x8fA==