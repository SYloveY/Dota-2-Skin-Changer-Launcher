limitHWID:: 1 000||| 111::  111||| 222:: $2y$10$NzIyNjFmOGZhNzUxYTY3Yu5QJs.GmVyHKh8ortF1yPzKx0oBrbhWq 222||| 123:: Razzils Midas Knuckles Prem;Eternal Radiance Blades Prem;Armor of the Equilibrium;Tail of the Equilibrium;Shroud of the Awakened;Bracers of the Survivor;Belt of the Forgotten Plane;Shoulders of the Survivor;Red Mist Reaper*s Shawl;Belt of the Enduring Conscript;Red Mist Reaper*s Mask;Red Mist Reaper*s Tattoos;Axe of the Red Conqueror;Tzokalotls Dread Head;Overgrown Terror Shoulder;Night Terrors Belt;Rough Rider*s Muggin* Mask;Rough Rider*s Slipshod Slicker;Thirst of Eztzhok Bundle Prem;Barbarous Blades Back;Barbarous Blades Mask;Barbarous Blades Neck;Barbarous Blades Weapon;Lycosidae*s Brood;Crown of the Glutton*s Larder;Arcane Infestation Legs;Barding of the Chaos Chosen;Bracers of the Chaos Chosen;Belt of the Chaos Chosen;Eternal Helm of the Chaos Chosen;Armor of the Chaos Chosen;Eternal Tail of the Chaos Chosen;Eternal Axe of the Chaos Chosen;Arms of the Kha-Ren Faithful;Cape of the Frostborne Wayfarer;Hood of the Master Thief;Boots of the Frostborne Wayfarer;Quiver of the Frostborne Wayfarer;Coat of the Frostborne Wayfarer;Bow of the Shadowcat;Serpent of the Jade Emissary;Worldforger*s Spires;Hood of the Shattered Targe;Shoulder of the Shattered Targe;Arms  of the Shattered Targe;Flaming Hair of Blaze Armor;Armguards of the Smoldering Sage;Belt of the Forsaken Flame;Shoulders of the Rekindled Ashes;Imperial Flame Swords Pack V 2.1;Frozen Void Arms;Frozen Void Belt;Frozen Void Shoulder;Visage of the Emerald Age;Voidhammer;Bracers of the Unyielding Mask;Valentine Ward;Battle Banner of the Masked;Burden of the Exiled Ronin;Pantaloons of the Bladekeeper;Serrakura;Bracers of Zhuzhou;Helm of Zhuzhou;Mantle of Desolate Conquest;Lance of Desolate Conquest;Tails of the Scorching Princess;Bracers of Smoldering Journey;The Scarlet Flare Neck;Mantle of the Infernal Rambler;Gauntlet of the Treacherous Demon;Scepter of the Gruesome Embrace;Complete Helm of the Dark Moon Stalker;Shield of the Night Grove;Armor of the Raidforged Rider;Complete Glaive of the Dark Moon Stalker;Arena Champion Armor;Arena Champion Belt;Armor of the Emerald Sea;Bracelets of the Emerald Sea;Crown of the Emerald Sea;Bow of the Serpent V 3.0;Whip of the Emerald Sea;Key to the Bone Ruins;Kindred of the Cursed Raiments;Bandana of the Bone Ruin Bandits;The Family Values Back;Armguards of the Fractured Order;Divine Grace;Great Sage*s Reckoning;Staff of Gun-Yu;Ironwood Arms of the Fungal Lord;Desert Bloom - Back;Desert Bloom - Head;Desert Bloom - Neck;The Song of Swiftguard - Helm;The Song of Swiftguard - Finery;The Song of Swiftguard - Blade;Cape of the Lifted Veil;Belt of the Lifted Veil;Helm of the Lifted Veil;Armor of the Lifted Veil;Blade of the Lifted Veil;Bloodfeather Wings;Shade of Anguish;Armor of the Arch Temptress;Crimson Agony;Cuffs of the Cunning Corsair;Tahlin Occult Hood;Dagger of the Frozen Blood Off-Hand;Shoulder Pads of the Cunning Corsair;Smoke Bomb of Monstrous Reprisal Prem;Dagger of the Frozen Blood;Arms of Desolation;Hazhadal Magebreaker;Bracers of the Abyssal Arms;Back of the Abyssal Arms;Mask of the Scoundrel;Shoulder of the Abyssal Arms;Hydrakan Latch;Gown of the Charred Bloodline;Armlets of Teardrop Ice;Belt of the Bramble Lord;Spaulder of the Bramble Lord;Complete Wings of the Ethereal Monarch;Solar Gyre;Crown of Golden Nirvana;Iron Surge;Beast of the Outer Plane Weapon;The Lightning Orchid;Auxiliary of the Sapper*s Guile;Implements of the Sapper*s Guile;Skip of the Sapper*s Guile;Sack of the Sapper*s Guile;Helm of the Sapper*s Guile;Style of the Clandestine Trail;Epitaphic Bonds Shoulders;Epitaphic Bonds Armor;Tiny Bad To The Bone;Claws of the Sangstrath Fold;Mantle of the Sangstrath Fold;Barding of the Sangstrath Fold;Helm of the Ferocious Heart;Hair of the Fallen Princess;Feathered Wings of the Fallen Princess;Legs of the Fallen Princess;Scree*auk*s Talon;Appendages of the Molokau Stalker;Head of the Molokau Stalker;Plates of the Molokau Stalker;Tail of the Molokau Stalker;Splattering Forcipule;Ishul-Shog the Watcher;Arms of the Dread Compact;Robes of the Dread Compact;Demonomicon;Cowl of the Dread Compact;Warlock*s Summoning Scroll;Mantle of the Dread Compact;Featherswing Cape;Longbow of the Roving Pathfinder;Tiara of Falconside Armor;Mantle of the Roving Pathfinder;Quiver of the Roving Pathfinder;Belt o* Wicked Badness;Mask of Twilight*s Rest;Spider Shoulders of Purple Nightmare;Armor of the Sundered King;Bracers of the Dead Reborn;Regalia of the Wraith Lord Cape;Regalia of the Wraith Lord Helmet;Memories of Bone Pauldron;Blood Shard;Tempest Helm of the Thundergod Prem;Stonehall Royal Guard Banners;Armor of the Dragon Palace;Shoulders of the Dragon Palace;Armguards of the Dwarf Engineer;Cape of the Longbeard Dwarf Engineer;Hat of The Howling Wolf;Spaulder of the Dwarf Engineer;Hare Hunt Rifle;Small Bad To The Bone;Medium Bad To The Bone;Rachel the Morde-bat;Gauntlets of the Nightwatch;God*s Mercy;Dragonclaw Hook;Blade of the Fervent Conscript Honored;Endless Night;New Chieftain Style 1;Time Wanderer;Harvests Hound;Little Witch Set;Kirin Rider Set;Blazing Oblivion V 3.0;The Jade General;The Manipulator Set;Swooping Elder;Witch Hunter Templar;Dark Forest Punisher;Ascendance of the Rime Lord 2nd Style;Hunter of Kings V 2.0;Spirit of The Sacred Glove;Allure of the Deep;Apostle of Decay V 2.1;Unfettered Malevolence;Emerald Mechanism;Mandate of the Nameless;Magister of the Narrow Fates;Warrior of the Red Sand V 2.0;Eternal Harvest;Bastion of the Lionsguard;Sentinels Shell;Essence of the Trickster;The True Crow V 2.0;Elemental Imperator V 2.0;Corridan Maestro V 2.0;USSR TINKER;Dirgesworn Dynasty;Chilling Feather;Bark of the Ageless Witness Distinguished;Ember Tipped Carapace Set;Reckless Vigor V 2.1;Dapper Disguise;Armour of The Iron Drakken;Trials of the Blackguard Magus No effects; 123|||