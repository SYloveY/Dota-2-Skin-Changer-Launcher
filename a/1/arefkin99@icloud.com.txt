bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogQjZEMjVDNjUtMkQ1RS02QTQyLUIwMDUtREMzMzI5RTAxNzcwIDExMXx8fCAyMjI6OiA0YmIyZTg2Y2UzY2NjMjk3MWQ0YTRiMDdjZjAyNGUyZDg5NzYyMzVhMWY1ZTg5NmI2OTFjNTkwNTRmNjNmMGZlZWZhMTQwNDFiNzg3YWFiMjZkN2M1OGYyNDYzYzRmNDZlOTZhMGI3NjVhMTU0ODJjM2E1N2I0MzA1NGE4MGRkMCAyMjJ8fHwgMTIzOjogUHVtcGtpbiBUcmVlcyBVUDtKdWdnZXJuYXV0IEFyY2FuYSBCbGFkZWZvcm0gTGVnYWN5O1NvdWwgb2YgdGhlIFNsYXllciBQcmVtO01hbmlmb2xkIFBhcmFkb3ggUEEgQXJjYW5hIFN0eWxlIDM7Q29kaWNpbCBvZiB0aGUgVmVpbGVkIE9uZXM7QXZvd2FuY2Ugb2YgdGhlIFZlaWxlZCBPbmVzO1RlbXBlc3QgSGVsbSBvZiB0aGUgVGh1bmRlcmdvZCArIFJpZ2h0ZWQ5519cyBUaHVuZGVyYm9sdDtGcm9zdCBBdmFsYW5jaGUgUHJlbTtMZWdpb24gQ29tbWFuZGVyIEFyY2FuYSBVUDtGaXJlIExvdHVzIEJlbHQgUHJlbTtEaXNjaXBsZSBvZiB0aGUgV3lybXdyb3VnaHQgRmxhbWU7VHdpc3RlZCBNYWVsc3Ryb20gd2l0aCBXb3JsZCBDaGFzbSBBcnRpZmFjdDtXYXRlcmxvZ2dlZCBLdW5ra2EgU2hvZXM7UHJpemUgb2YgdGhlIFNhbHR3b3JuIE1hcmluZXIgR2hvc3RseTtMZXZpYXRoYW4gV2hhbGUgQmxhZGUgb2YgRW1pbmVudCBSZXZpdmFsIEV4Y2VwdGlvbmFsO1BsYW5ldGZhbGw7R29sZGVuIFN1bGxlbiBIb2xsb3cgUHJlbTtQbGFndWUgQmFyb24gSGF0O1N1bGxlbiBIYXJ2ZXN0O0RhcmsgQXJ0aXN0cnkgVGhyb3diYWNrO1N1Ym1lcmdlZCBIYXphcmQgUHJvcGVsbGVyO1N1Ym1lcmdlZCBIYXphcmQgTGF1bmNoZXI7Um9sbGVybWF3c3RlciBQcmVtO0FyY2FuaWMgUmVzb25hbmNlIEJlYW07U3VibWVyZ2VkIEhhemFyZCBIdWxsO1RlcnJhaW4gLSBUaGUgS2luZ3MgTmV3IEpvdXJuZXk7QmVuZXZvbGVudCBDb21wYW5pb24gViAyLjA7UGluayBDb2xvciBmb3IgVEI7Q2hhc20gb2YgdGhlIEJyb2tlbiBDb2RlIEhlbG07U2N5dGhlcyBvZiBTb3Jyb3c7U3BhbiBvZiBTb3Jyb3c7Qmx1ZSBEYWdvbjtNaW5lIFJhZGl1cyA3MDI7VGVycmFpbiAtIFNhbmN0dW1zIG9mIHRoZSBEaXZpbmU7TW9ua2V5IEtpbmcgQXJjYW5hIE1lZ2FQYWNrO09ncmUgTWFnaSBJbW1vcnRhbHMgQXJjYW5hIE1lZ2FQYWNrO1RyYXBwaW5nIG9mIHRoZSBTZWNyZXQgTWVkaWNpbmU7QXhlIGZ1bGwgSW1tb3J0YWxzIE1lZ2FwYWNrIGFsdDtFc3NlbmNlIE9mIFRoZSBEYXJrIE1vb247U2xhcmsgTWVnYVBhY2sgTmV3O0JhYnkgVG95IFB1ZGdlIFBlcnNvbmE7RW1wZXJvciBvZiB0aGUgU3VuO0hhdW50ZWQgQ2xhaXJ2b3lhbmNlO1NGIEFyY2FuYSBNZWdhcGFjazsgMTIzfHx8