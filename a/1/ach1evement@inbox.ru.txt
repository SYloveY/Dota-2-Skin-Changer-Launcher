bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogQzRDMjg1NzAtRDRFQS0wMDAwLTAwMDAtMDAwMDAwMDAwMDAwIDExMXx8fCAyMjI6OiAkMnkkMTAkTnpjMU5qZGlPVGt4T1dVM1lUTTRaLnVMTXBLcmRDVkpMcjQ0NkV5aTZiRllrSXB3cGlISHkgMjIyfHx8IDEyMzo6IEZ1cnkgb2YgdGhlIFJpZ2h0ZWQ5519cyBTdG9ybSAtIEhlYWQ7SGFtbWVyIG9mIHRoZSBTa3lnb2RzO0JsYWRlIG9mIFRlYXJzIGFuZCBDcm93biBvZiBUZWFycztTaGFkZSBvZiBBbmd1aXNoO0Jsb29kZmVhdGhlciBGZWFzdDtNYWNlIG9mIFZpbmNlcmUgQXRhY2sgRWZmZWN0O0RvdGFDaW5lbWEgLSBRdWVlbiBvZiBQYWluIFNwZWxscztSYWlubWFrZXIgViA0LjA7UXVpdmVyIG9mIEZhbGNvbnNpZGUgQXJtb3I7QmxpbmsgRGFnZ2VyIGx2bCAyIFRJLTYgRWZmZWN0O0JvdHRsZSBUSS02IEVmZmVjdDtDb2xvclN0YXRzO1BpbmUgQ29uZSBNZWxlZSBNZWdhIENyZWVwcztFdWxzIFNjZXB0ZXIgVEktNiBFZmZlY3Q7Rm9yY2UgU3RhZmYgVEktNiBFZmZlY3Q7TGV2ZWxVcCBUSS02IEVmZmVjdDtNam9sbG5pciBUSS02IEVmZmVjdDtSYWRpYW5jZSBUSS02IEVmZmVjdDtQaGFzZSBCb290cyBUSS02IEVmZmVjdDtNZWthbmlzbSBUSS02IEVmZmVjdDtFbWVyYWxkIFJvc2hhbjtUSS02IExHRCBUUCBFZmZlY3Q7QWVnaXMgYW5kIFJvc2hhbiBTdC4gVmFsZW50aW5lIERheTtQZWRlc3RhbCBUaS02IFJhZGlhbnQ7T25pYmkgU3R5bGUgOTtBcGVydHVyZSBTY2llbmNlIFdhcmRjb3JlO0dMYURPUyBBbm5vdW5jZXI7R0xhRE9TIE1lZ2EtS2lsbDtDcnlzdGFsIE1haWRlbiBBbmltZSBWb2ljZTtEcm93IFJhbmdlciBBbmltZSBWb2ljZTtEZWF0aCBQcm9waGV0IEFuaW1lIFZvaWNlO0VuY2hhbnRyZXNzIEFuaW1lIFZvaWNlO0xpbmEgQW5pbWUgVm9pY2U7THVuYSBBbmltZSBWb2ljZTtNZWR1c2EgQW5pbWUgVm9pY2U7TmFnYSBTaXJlbiBBbmltZSBWb2ljZTtQaGFudG9tIEFzc2Fzc2luIEFuaW1lIFZvaWNlO1F1ZWVuIG9mIFBhaW4gQW5pbWUgVm9pY2U7UHVjayBBbmltZSBWb2ljZTtUZW1wbGFyIEFzc2Fzc2luIEFuaW1lIFZvaWNlO1dpbmRydW5uZXIgQW5pbWUgVm9pY2U7VmVuZ2VmdWwgU3Bpcml0IEFuaW1lIFZvaWNlO1dpbnRlciBXeXZlcm4gQW5pbWUgVm9pY2U7U2hhZG93IEZpZW5kIEVORyBBcmNhbmUgdm9pY2U7TWF0dCBMYW5nZSBBYnN0cmFjdGlvbiBNdXNpYyBQYWNrIFYgMi4xO1JlYXAgdGhlIFdoaXJsd2luZDtIVUQgb2YgdGhlIEJ1cm5pbmcgU2NhbGUgSWNlO1N5bHZhbiBDYXNjYWRlIFByZW07VGlhcmEgb2YgRmFsY29uc2lkZSBBcm1vcjtBcm1vciBvZiB0aGUgUmlzaW5nIEdhbGU7Um9zaGFuIEhhbGxvd2VlbiBBbmdlbCBTa2luO01hZ3VzIEFwZXg7Tm9ydGhlcm4gQmxpZ2h0IEFybXM7VmVzdG1lbnRzIG9mIFZvbGF0aWxlIE1hamVzdHk7RW1pbmVuY2Ugb2YgUmlzdHVsIEtuaWZlIEF0dGFjaztXZWF0aGVyIE1vb25iZWFtO0RhcmsgQXJ0aXN0cnkgQ2FwZTtTZW1waXRlcm5hbCBSZXZlbGF0aW9ucyBIYXQ7Q292ZW5hbnQgb2YgdGhlIERlcHRocyBTcGlyaXQ7VmVzdG1lbnRzIG9mIHRoZSBCbGFja2d1YXJkIE1hZ3VzO0hlYXZlbi1QaWVyY2luZyBQYXVsZHJvbnM7QXJtb3Igb2YgdGhlIEZlYXJmdWwgQXJpYTtDYXBlIG9mIHRoZSBMaWZ0ZWQgVmVpbDtHaXJkbGUgb2YgdGhlIERhcmsgV3JhaXRoO0hlbG0gb2YgdGhlIEJsb29kcm9vdCBHdWFyZDtUaGUgV2FyZCBvZiBPZG9jb2VsZXVzO0dpZnRzIG9mIHRoZSBWYW5pc2hlZCBJc2xlIEhlYWQ7QnJhY2VycyBvZiB0aGUgU3Vydml2b3I7QWNvbHl0ZSBvZiBWZW5nZWFuY2UgSG9vZGVkIE1hc2s7SGF0Y2hldCBvZiB0aGUgU2hpZnRpbmcgU29yY2VyZXIgQmxhZGVzO0dvbGRlbiBPZmZoYW5kIEJhc2hlciBvZiBNYWdlIFNrdWxscztTb3VsIERpZmZ1c2VyIFYgMi4xO1BoYW50b20gQWR2ZW50IFNob3VsZGVycyBVUDtQaGFudG9tIEFkdmVudCBVUDtQaGFudG9tIEFkdmVudCBCZWx0IFVQO0hlbG0gb2YgdGhlIFdpbmdlZCBTZW50aW5lbDtNb3VudCBvZiB0aGUgUmFpZGZvcmdlZCBSaWRlcjtEdXNrbGlnaHQgU3RhcjtBcm1vciBvZiB0aGUgV2luZ2VkIFNlbnRpbmVsO1BpbmsgQ29sb3IgZm9yIFRCO1dpbmdzIG9mIEV0ZXJuYWwgUHVyZ2F0b3J5O0Zyb3N0Z2xhZGUgRmFtaWxpYXIgSGF0O0JvdyBvZiB0aGUgRnJvc3RmYW5ncyBWIDIuMDtTdGVhbWNhcGU7TGVncyBvZiB0aGUgS2hhLVJlbiBGYWl0aGZ1bDtPYXRocyBvZiB0aGUgRHJhZ29uYm9ybiBRdWl2ZXI7RnVyeSBvZiB0aGUgUmlnaHRlb3VzIFN0b3JtIC0gQmFjaztNYXNrIG9mIHRoZSBHYWx2YW5pemVkIFNwYXJrO0dydWxsIHRoZSBHcmltIFdhbGtlcjtGdXJ5IG9mIHRoZSBSaWdodGVvdXMgU3Rvcm0gLSBTaG91bGRlcjtKdWdnZXJuYXVudCBFbmcgQXJjYW5hIFZvaWNlO0xlZ2lvbiBDb21tYW5kZXIgRU5HIEFyY2FuZSB2b2ljZTtQaGFudG9tIEFzc2FzaW4gRU5HIEFyY2FuZSB2b2ljZTtUZXJyb3JibGFkZSBFTkcgQXJjYW5lIHZvaWNlO1B1ZGdlIEFyY2FuYSBFTkcgVm9pY2U7WmV1cyBFTkcgQXJjYW5lIHZvaWNlO0FjaWQgSHlkcmEgQ3Vyc29yIFBhY2s7Uml2ZXIgVmlhbCBOb25lO0N1c3RvbSBEYXNoYm9hcmQgMTMyO0d1YXJkaWFucyBvZiB0aGUgTG9zdCBQYXRoIERpcmUgVG93ZXJzO0d1YXJkaWFucyBvZiB0aGUgTG9zdCBQYXRoIFJhZGlhbnQgVG93ZXJzO0FybXMgb2YgRGVzb2xhdGlvbiBQcmVtO1NvdWxzIFR5cmFudCBIZWFkO1RlcnJhaW4gLSBUaGUgS2luZ3MgTmV3IEpvdXJuZXk7V2VhdGhlciBTcHJpbmc7VGltZSBXYW5kZXJlcjtMaWdodG5pbmcgSGFyYmluZ2VyO1dpY2tlZCBTdWNjdWJ1cyBTZXQgMyBMVkw7VG9sbCBvZiB0aGUgRmVhcmZ1bCBBcmlhO1N1c2FubyBPcyBEZXNjZW5kYW50O01hZ2UgQWJvbGlzaGVyIFYgMi4wO1NvdWwgTGlsaXRoO0ZvdWxmZWxsIENvcnJ1cHRvcjtWZW5nZWFuY2Ugb2YgdGhlIFN1bndhcnJpb3I7U2hlcm1hbiBNYWlkZW4gViA0LjE7VG94aWMgRGVhdGggRWF0ZXI7IDEyM3x8fA==