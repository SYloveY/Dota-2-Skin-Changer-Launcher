limitHWID:: 1 000||| 111::  111||| 222:: $2y$10$NzdmZjZlZjJjMGZmZDQ0M.dFmxPozxnT3vOsoh4wtCTIlaY4EefZa 222||| 123:: Arcana SF Demon Eather;Arms of Desolation Prem;Manifold Paradox PA Arcana Style 3;Codicil of the Veiled Ones;Avowance of the Veiled Ones;Legacy of the Fallen Legion Style 2 NEW;Baneful Devotion;Radiant Conqueror Shoulder;Legion Commander Arcana UP;Bloodfeather Feast;Dread Retribution - Headwear;Soul of the Slayer Prem;Disciple of the Wyrmwrought Flame;Dread Retribution - Bracers;Dread Retribution - Bracers Alt;Frost Avalanche Prem;Resistive Pinfold Prem;Moonfall Prem;Helm of the Dark Moon Stalker;Bane of the Deathstalkers;Queen of Pain Arcana MegaPack;Drow Ranger MegaPack;Stranger in the Wandering Isles;Darkbrew Enforcer and Eternal Radiance Blades and Midas Knuckles MegaPack;Pledge of the Dragons Disciple and Golden Basher Blades and Golden Origins of Faith MegaPack;Axe full Immortals Megapack;Windranger Arcana style 1 (Blue Bird) + Full WR immortal;Bristleback MegaPack;Doom Immortals MegaPack;Enigma MegaPack;Kunkka Immortals MegaPack;Righteous Thunderbolt and Arcana MegaPack;Wraith King Arcana MegaPack; 123|||