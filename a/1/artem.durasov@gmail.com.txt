limitHWID:: 1 000||| 111::  111||| 222:: $2y$10$NzdmZjZlZjJjMGZmZDQ0M.dFmxPozxnT3vOsoh4wtCTIlaY4EefZa 222||| 123:: Arcana SF Demon Eather;Arms of Desolation Prem;Manifold Paradox PA Arcana Style 3;Codicil of the Veiled Ones;Avowance of the Veiled Ones;Legacy of the Fallen Legion Style 2 NEW;Baneful Devotion;Radiant Conqueror Shoulder;Legion Commander Arcana UP;Bloodfeather Feast;Soul of the Slayer Prem;Disciple of the Wyrmwrought Flame;Frost Avalanche Prem;Resistive Pinfold Prem;Moonfall Prem;Helm of the Dark Moon Stalker;V1lat Mega-Kills;Waterlogged Kunkka Shoes;Prize of the Saltworn Mariner;Leviathan Whale Blade Prem;Tempest Revelation;Golden Immortal Pantheon;Wyrmwrought Flare;Concord Dominion;Concord Reversion UP;Golden Silent Wake;Dread Retribution;Bracers of Aeons;Jewel of Aeons;Mace of Aeons Prem;Damarakan Muzzle;Glaive of Oscilla;Bane of the Deathstalkers;Queen of Pain Arcana MegaPack;Pledge of the Dragons Disciple and Golden Basher Blades and Golden Origins of Faith MegaPack;Righteous Thunderbolt and Arcana MegaPack; 123|||