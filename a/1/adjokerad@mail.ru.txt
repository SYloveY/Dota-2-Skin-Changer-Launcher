bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogQzIzNjgxQTAtNzJCQS0xMUUzLUFBRTktMzhENTQ3QjcyRTRCIDExMXx8fCAyMjI6OiBhZDQ3MDE2N2JlMzI5NGVjZDkyNTFkZWNjZTU4ZjU0ZDQ2NzdjZGRjZDBmZDgzNzRjMTEyMWJmMWUzODVkNDgzYjMwMDE4MjdiNzJmODUwYzBiMGE4MzQyODMxZWZjMzczMjdkZGY4ZDQ2MjMyYmZmYzhmMTY1NjQ1YmI0NmZlOCAyMjJ8fHwgMTIzOjogTWluZSBSYWRpdXMgNzAyO0JhbGxpc3RhIG9mIHRoZSBGb3J0aWZpZWQgRmFicmljYXRvcjtDYW5ub24gb2YgdGhlIEZvcnRpZmllZCBGYWJyaWNhdG9yO0hlbG1ldCBvZiB0aGUgRm9ydGlmaWVkIEZhYnJpY2F0b3I7Q29udHJvbHMgb2YgdGhlIEZvcnRpZmllZCBGYWJyaWNhdG9yO1Nob3VsZGVycyBvZiB0aGUgRm9ydGlmaWVkIEZhYnJpY2F0b3I7U3RhZmYgb2YgR3VuLVl1O1RoaXJzdCBvZiBFenR6aG9rIEJ1bmRsZSBQcmVtO1JhenppbHMgTWlkYXMgS251Y2tsZXMgUHJlbTtHb2xkZW4gT2ZmaGFuZCBCYXNoZXIgb2YgTWFnZSBTa3VsbHM7T2ZmaGFuZCBCYXNoZXIgb2YgTWFnZSBTa3VsbHM7TGVnYWN5IG9mIGEgTG9zdCBBZ2UgLSBTdGVnYWJvYXI7R29sZGVuIFJhYmlkIFdhdGNoY29nO0dvbGRlbiBOb3RobGljIEJ1cmRlbiBQcmVtO0JyYWNlcnMgb2YgdGhlIENhdmVybiBMdW1pbmFyO1RvdGVtIG9mIERlZXAgTWFnbWE7U2VlciBvZiBJbmZpbml0eSBTcGFjZSBFaWRvbG9uO011bGN0YW50IFBhbGw7U2hvY2sgb2YgdGhlIEFudmlsO1BoYW50b20gQ29uY29yZDtHb2xkZW4gR3Jhc3BpbmcgQmx1ZGdlb247QmFkIFRvIFRoZSBCb25lIFdlYXBvbjtCb3cgb2YgdGhlIEJhdHRsZXJhbmdlcjtUZW1wZXN0IEhlbG0gb2YgdGhlIFRodW5kZXJnb2QgUHJlbTtNb2x0ZW4gQ2xhdyBQcmVtO01hbnRsZSBvZiB0aGUgQ2luZGVyIEJhcm9uIFN0eWxlIDE7UGlzdG9uIEltcGFsZXI7Q2hhb3MgQXJiaXRlcjtLaW5kcmVkIG9mIHRoZSBJcm9uIERyYWdvbiBWIDMuMDtNYW5pYXMgTWFzayBQcmVtO0Zsb3VyaXNoaW5nIExvZGVzdGFyIFByZW07SmV3ZWwgb2YgQWVvbnMgUHJlbTtCcmFjZXJzIG9mIEFlb25zIFByZW07R29sZGVuIEF0b21pYyBSYXkgVGhydXN0ZXJzIFByZW07TWFndXMgQXBleDtLaWRzIE9yYjtMZWdhY3kgb2YgdGhlIEZhbGxlbiBMZWdpb247R29sZGVuIFNoYXJkcyBvZiBFeGlsZTtNYXNrIG9mIHRoZSBDb25maWRhbnQ7R3JhbmQgQWJzY2Vzc2lvbiBIb29rIEJ1bmRsZTtHb2xkZW4gU2NhdmVuZ2luZyBHdXR0bGVzbHVnO1RoZSBCYXJyZW4gVmVjdG9yO1RoZSBHb2xkZW4gQmFyYiBvZiBTa2FkaTtHb2xkZW4gRnVsbC1Cb3JlIEJvbmFuemE7Q2Fubm9uIG9mIHRoZSBPY2N1bHRpc3RzIFB1cnN1aXQ7TGFyZ2UgQmFkIFRvIFRoZSBCb25lO0ZvbGlhZ2Ugb2YgRWxkcml0Y2ggR25hcmw7V2F0Y2hlciBvZiB0aGUgVmlydWxlbnQgS3JhaXQ7R3VhcmRpYW5zIG9mIHRoZSBMb3N0IFBhdGggRGlyZSBUb3dlcnM7R3VhcmRpYW5zIG9mIHRoZSBMb3N0IFBhdGggUmFkaWFudCBUb3dlcnM7VEktMTAgTGV2ZWwgVXAgRWZmZWN0O1RlcnJhaW4gLSBEZXNlcnQ7V2VhdGhlciBTaXJvY2NvO1NvdWwgRGlmZnVzZXIgViAyLjE7UGhhbnRvbSBBZHZlbnQgV2VhcG9uIFVQO1BoYW50b20gQWR2ZW50IFVQO1BoYW50b20gQWR2ZW50IFNob3VsZGVycyBVUDtQaGFudG9tIEFkdmVudCBCZWx0IFVQO1N1bmtlbiBGcm9zdHNoYXJkO0dyaXAgb2YgdGhlIERyb3duaW5nIFRyZW5jaDtUaWRvc2F1cnVzIFRhaWw7VGFpbCBvZiB0aGUgRXF1aWxpYnJpdW07QXJtb3Igb2YgdGhlIEVxdWlsaWJyaXVtO0xhc2ggb2YgdGhlIExpemFyZCBLaW4gb2YgdGhlIENyaW1zb24gV2l0bmVzcztHb2xkZW4gTGFtYiB0byB0aGUgU2xhdWdodGVyO0F1c3BpY2Ugb2YgdGhlIFdoeXJsZWd5Z2UgUHJlbTtSb3lhbCBEZWNyZWUgS25pZmUgQXR0YWNrO1N3b3JkIG9mIHRoZSBDb2xvc3N1cyBQcmVtO01hamVzdHkgT2YgVGhlIENvbG9zc3VzIC0gQ29iYmxlO01hamVzdHkgT2YgVGhlIENvbG9zc3VzIC0gTW9ub2xpdGg7TWFqZXN0eSBPZiBUaGUgQ29sb3NzdXMgLSBQZWJibGU7QmFzdGlvbiBvZiB0aGUgTGlvbnNndWFyZDtGaXJlcyBvZiBWYXNodW5kb2wgbm8gZWZmZWN0IFYgMi4xO0dyaW0gRGVzdGlueTtPcmRlciBvZiB0aGUgV2FuZGVyaW5nIEZsYW1lIFYgMi4xO0Zlcm9jaWQ5519cyBIZWFydDtPY2VhbiBDb25xdWVyb3I7U3RlYW0gQ2hvcHBlcjtTY2F2ZW5nZXIgb2YgdGhlIEJhc2lsaXNrO1RhbGVzIG9mIHRoZSBXaW5kd2FyZCBSb2d1ZTtXYXJyaW9yIG9mIEFyZW5hIFNldDtDb3ZlbmFudCBvZiB0aGUgRGVwdGhzO0tpcmluIFJpZGVyIFNldDtPcHVzIG9mIHRoZSBWaXppZXIgRXhpbGUgViAyLjE7QnVyZ2xhciBvZiBXYXNwO0JsYXppbmcgT2JsaXZpb24gViAzLjA7VGhlIEhvbGxvdyBTZXQ7VGhlIFBhdGggb2YgT2RvY29lbGV1cztHdWFyZGlhbiBvZiBWYWxoYWxsYTtJbXBlcmlhbCBFbnZveTtUaGUgUGxhZ3VlbW9uZ2VyO1VuZmV0dGVyZWQgTWFsZXZvbGVuY2U7Q2hpdGlub3VzIFN0YWxrZXI7U2hvcmVsaW5lIFNhcHBlcjtBbGx1cmluZyBNZXNtZXI7U292ZXJlaWduIG9mIHRoZSBLcmF5IExlZ2lvbnMgMnN0IFN0eWxlO0Jlc3Rvd21lbnRzIG9mIHRoZSBDZW50dXJpb24gVmFuZ3VhcmQ7Qml0ZSBvZiB0aGUgU3VyZ2luZyBXaW5kO1NhbXVyYWkgU2V0O1JpZnQgQ2hhbXBpb247Q29ycnVwdGlvbiBvZiB0aGUgVmlydWxlbnQgS3JhaXQ7V2luZ3Mgb2YgQ29sb3JmdWwgSWNlY3J5c3RhbHM7RmF0aGVyIE9mIFNwaXJpdHM7RXllIG9mIHRoZSBCZWhvbGRlcjtSaWdodGVvdXMgVGh1bmRlcmJvbHQgYW5kIEFyY2FuYSBNZWdhUGFjaztEZXNlcnQgVHJhdmVsbGVyIFNldDtUb2xsIG9mIHRoZSBGZWFyZnVsIEFyaWE7RWxkcml0Y2ggR25hcmw7U3dhbXAgU2hhbWFuIFNldDtMaW5lYWdlIFByb3ZpbmNlIG9mIHRoZSBIdW50IEV0ZXJuYWw7IDEyM3x8fA==