bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogIDExMXx8fCAyMjI6OiAkMnkkMTAkTWpSbFpUUTBZemszTkRFMFlXWXpNdVhtdDNsMkIyU0RIZGF2SXNiZ01qT3kxRmd4aTM2MS4gMjIyfHx8IDEyMzo6IENyeXN0YWwgTWFpZGVuIEFuaW1lIFZvaWNlO1dlYXRoZXIgUmFpbjtXZWF0aGVyIFNpcm9jY287V2VhdGhlciBQZXN0aWxlbmNlO1dlYXRoZXIgTW9vbmJlYW07V2VhdGhlciBCbHVlIFNreSBmcm9tIFNvdXAgZm9yIFNsdXRzO1dlYXRoZXIgSGFydmVzdDtXZWF0aGVyIEF1cm9yYTtXZWF0aGVyIEFzaDtXZWF0aGVyIFNwcmluZztXZWF0aGVyIFNub3c7RGVjbGFyYXRpb24gb2YgdGhlIERpdmluZSBTaGFkb3cgRGlyZSBUb3dlcnM7RGVjbGFyYXRpb24gb2YgdGhlIERpdmluZSBMaWdodCBSYWRpYW50IFRvd2VycztTbWVldmlscyBQZW5hbmNlIFN0eWxlIDU7Q29sbGVjdG9ycyBCYWJ5IFJvc2hhbiAyMDE4O0FnaGFuaW1zIEludGVyZGltZW5zaW9uYWwgQmFieSBSb3NoYW47QmFieSBSb3NoYW4gUHJlbTtXeXZlcm4gSGF0Y2hsaW5nO0dyYW5kIEFic2Nlc3Npb247RmVhc3Qgb2YgQWJzY2Vzc2lvbjtMYXJnZSBUYXNzZWxzIG9mIHRoZSBCbGFjayBEZWF0aDtJbnNhdGlhYmxlIEJvbmVzYXcgUHJlbTtJbnNhdGlhYmxlIEJvbmVzYXc7R29sZGVuIFNjYXZlbmdpbmcgR3V0dGxlc2x1ZztEcmFnb25jbGF3IEhvb2s7RG9vbXNkYXkgUmlwcGVyIFdlYXBvbjtHb2xkZW4gUmlwcGVycyBSZWVsO0dyYW5kIEFic2Nlc3Npb24gSG9vayBCdW5kbGU7UmlwcGVycyBSZWVsO1JpcHBlcnMgUmVlbCBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzO0FyY2FuYSBTRiBEZW1vbiBFYXRoZXI7QXJtcyBvZiBEZXNvbGF0aW9uIFByZW07SG9ybnMgb2YgRXRlcm5hbCBIYXJ2ZXN0IFByZW07TWFqZXN0eSBPZiBUaGUgQ29sb3NzdXMgLSBQZWJibGU7VGhlIElnbmVvdXMgU3RvbmUgViA0LjA7TWFqZXN0eSBPZiBUaGUgQ29sb3NzdXMgLSBDb2JibGU7QW5jaWVudCBJbmhlcml0YW5jZSAtIFdlYXBvbjtMYXJnZSBCYWQgVG8gVGhlIEJvbmU7Qmxpc3RlcmluZyBTaGFkZTtCbGlzdGVyaW5nIFNoYWRlIG9mIHRoZSBDcmltc29uIFdpdG5lc3M7QXhlIG9mIFZpbGUgUmVsaXF1YXJ5O0NyaW1zb24gVW5icm9rZW4gRmVhbHR5O1N3b3JkIG9mIHRoZSBNYWxpZ25hbnQgUnVsZTtVbmJyb2tlbiBGZWFsdHk7QWNvbHl0ZSBvZiBWZW5nZWFuY2UgTWFzaztNYXNrIG9mIHRoZSBGb3Jnb3R0ZW4gUGxhbmU7T2ZmLUhhbmQgV2VhcG9uIG9mIHRoZSBGb3Jnb3R0ZW4gUGxhbmU7Rm9ydHVuZXMgVG91dCBQcmVtO0phZ2dlZCBIb25vciBCcmFjZXI7V3JhcHMgb2YgYSBUaG91c2FuZCBGYWNlcztKYWdnZWQgSG9ub3IgQmFubmVyO0JhdHRsZSBCYW5uZXIgb2YgdGhlIE1hc2tlZDtQcm92b2NhdGlvbiBvZiBSdWluIFBhdWxkcm9uO0p1Z2dlcm5hdXQgQXJjYW5hIEJsYWRlZm9ybSBMZWdhY3k7SnVnZ2VybmF1dCBBcmNhbmEgUmVkIEJsYWRlZm9ybSBPcmlnaW5zO1Byb3ZvY2F0aW9uIG9mIFJ1aW4gTWFzaztTaWdpbCBNYXNrIG9mIHRoZSBCbGFkZWtlZXBlcjtTdG9pYyBNYXNrIG9mIHRoZSBIaWdoIFBsYWlucztKYWdnZWQgSG9ub3IgTGVncztCbGFja2VuZWQgRWRnZSBvZiB0aGUgQmxhZGVrZWVwZXI7QWtha2lyeXUgb2YgYSBUaG91c2FuZCBGYWNlcyBWIDMuMTtDcmltc29uIEVkZ2Ugb2YgdGhlIExvc3QgT3JkZXI7RGVmZW5kZXIgb2YgdGhlIEl2b3J5IElzbGVzIFYgMy4xO0ZpcmUgb2YgdGhlIEV4aWxlZCBSb25pbjtGaXJlYm9ybiBPZGFjaGk7R2VuamkgU3dvcmQgUHJlbWl1bSBFZGl0aW9uIFNlcnJha3VyYSBTdHlsZTtHZW5qaSBTd29yZCBQcmVtaXVtIEVkaXRpb24gQmxhY2tlbmVkIEVkZ2UgU3R5bGU7SmFnZ2VkIEhvbm9yIEJsYWRlO0thbnR1c2EgdGhlIFNjcmlwdCBTd29yZDtHZW5qaSBTd29yZCBmb3IgSnVnZyB3aXRoIGVmZmVjdHMgViAzLjE7U2VycmFrdXJhIFByZW07UHJvdm9jYXRpb24gb2YgUnVpbiBTd29yZDtSZWxlbnRsZXNzO1dhdGVybG9nZ2VkIEt1bmtrYSBTaG9lcztHb2xkZW4gRHJlYWQgUmVxdWlzaXRpb247RHJlYWQgUmVxdWlzaXRpb247R29sZGVuIFByb2ZhbmUgVW5pb247R29sZGVuIFByb2ZhbmUgVW5pb24gQ2xvc2U7UHJvZmFuZSBVbmlvbjtQcm9mYW5lIFVuaW9uIENsb3NlO0hlbGwtU3BhciBBbmF0aGVtYSBPYnNpZGlhbiBCbGlnaHQ7SGVsbC1TcGFyIEFuYXRoZW1hO0F2YWRhIEtlZGF2cmE7RHJhZ29ucyBCcmVhdGg7UmlmbGUgb2YgdGhlIEdyZWF0IFNhZmFyaTtTd2luZSBvZiB0aGUgU3Vua2VuIEdhbGxleSBQcmVtO1B1ZGdlIFRJMTAgQ29sbGVjdG9ycyBDYWNoZSBNZWdhUGFjaztDaGFpbnMgb2YgdGhlIEJsYWNrIERlYXRoIFN0eWxlIDI7RGFwcGVyIERpc2d1aXNlO0NoYWlucyBvZiB0aGUgQmxhY2sgRGVhdGggU3R5bGUgMTtKb2xseSBSZWF2ZXI7TmlnaHRtYXJlIFNjYXJlY3JvdztQdXBwZXQgUHVkZ2UgUGVyc29uYSAoeWQ5519IGNhbiBhZGQgSG9vaykgVVA7QXJjYW5hIE1lZ2FQYWNrIFNoYWRvdyBGaWVuZDtXYXRjaGVyIG9uIHRoZSBOb3J0aGVybiBTaG9yZTtHcmltIERlc3Rpbnk7UmVsaWNzIG9mIHRoZSBTdW5kZXJlZCBLaW5nO0FudGltYWdlIFNoaW5vYmk7QmFsYW5jZSBvZiB0aGUgQmxhZGVrZWVwZXI7SG9ycm9yIE9mIFRoZSBGYWNlIENvbGxlY3RvcjtUaG91c2FuZCBGYWNlcyBTZXQ7R29sZGVuIERhcmsgTWF3IEluaGliaXRvIGFuZCBHb2xkZW4gUHJvZmFuZSBVbmlvbiBhbmQgR29sZGVuIERyZWFkIFJlcXVpc2l0aW9uIExpZmVzdGVhbGVyIEltbW9ydGFscyBNZWdhcGFjaztMaWZlc3RlYWxlciBNZWdhUGFjaztBbmNpZW50IE1hZ3VzIFN0eWxlIDM7QW5jaWVudCBNYWd1cyBTdHlsZSAxO1J1YmljayBBcmNhbmEgd2l0aCBJbW1vcnRhbDtBbmNpZW50IE1hZ3VzIFN0eWxlIDI7SGF1bnRlZCBDbGFpcnZveWFuY2U7V2FuZGVyaW5nIEhhcmxlcXVpbnMgUmVnYWxpYTtLZWVuIE1hY2hpbmU7IDEyM3x8fA==