limitHWID:: 1 000||| 111:: 724D244C-5823-E311-A833-201A064D984C 111||| 222:: ee4e1e02d3e316e41a324a504025430e915ae465283b3ffee2a5a4822fc23fb9d064a445d1132c3dd144caddc890ab61699c0aa2fccf2fe5a9e24efbeaf919c8 222||| 123:: Cape of the Dead Reborn;Blood Shard;Paddapon of Ribbitar V 4.0;Sylvan Cascade Prem;Crimson Cyrridae;Form of the Fervid Monarch;Malefic Drakes Hood of the Crimson Witness;Foliage of Eldritch Gnarl;Large Scarlet Quarry;Rollermawster and Mecha Boots of Travel Mk III;Rectifier;Pink Color for TB;Pachyderm Powderwagon Elephant;The Lightning Orchid V 3.0;Savage Mettle;Iron Surge V 2.2;Soul Diffuser V 2.1;Spottin Goggles;Golden Full-Bore Bonanza;Cannon of the Occultists Pursuit;Pale Edge V 2.0;Golden Grasping Bludgeon effect;Hazhadal Magebreaker;Lamb to the Slaughter;Golden Lamb to the Slaughter;Arms of Desolation Prem;The Barren Vector;Staff of Perplex Prem;Severing Crest V 2.0;Bloodfeather Wings Prem;Bloodfeather Feast;DotaCinema - Queen of Pain Spells;Rippers Reel;Golden Scavenging Guttleslug;Small Tassels of the Black Death;Nova of Golden Nirvana;Dread of the Gleaming Seal Set;Rapier of the Windward Rogue;Coat of the Windward Rogue;Mask of the Confidant;Alluvion Prophecy;Auspice of the Whyrlegyge Prem;Nyx Assassins Dagon;Crown of Gilded Worship;Sullen Hollow V 3.2;Fluttering Staff V 2.0;Blade of Tears and Crown of Tears;Staff of Gun-Yu;Crescent Bow;Moon Griffon;Form of the Great Calamity V 2.1;Twilight Schism;Stone Infusion Prem;Mulctant Pall;BladeBiter V 3.1;Edge of the Lost Order;Battle Banner of the Masked;Pyrexaec Floe;Datastar Progenitor (Alter Arcana);Acolyte of the Lost Arts;Trainer Dragon;Flashpoint Proselyte - Head;Gravelmaw;Manias Mask Prem;Bow of the Frostfangs V 2.0;Ice Blossom;Yulsarias Mantle Prem;Paraflare Cannon;Heat;Chaos Arbiter;Thistle Crawler;Piston Impaler;Aghanims Basher Prem;Mark of the First Hunt Bestowed;Wraps of the Seasoned Veteran V 2.1;Off-Hand Weapon of the Bloodforge;Helm of the Primeval Predator;Weapon of the Bloodforge;Harvested Shoulders;Molten Claw Prem;Mantle of the Cinder Baron Style 1;Crucible of Rile;Axe of Phractos Prem;Shatterblast Crown;Eternal Radiance Blades Prem;Razzils Midas Knuckles Prem;Cranial Clap Trap;Suit of the Darkbrew Enforcer;Prisoners Anchor;Guardians of the Lost Path Dire Towers;Guardians of the Lost Path Radiant Towers;Terrain - The Kings New Journey;Cavernite Dire Creeps;Cavernite Radiant Creeps;DotaCinema Bright HUD;Toilet Shrine;Combo Mega Greevil;Weather Moonbeam;Arsenal of the Demonic Vessel V 2.1;Righteous Thunderbolt and Arcana MegaPack;Regalia of the Wraith Lord Set;Outlandish Gourmet;Bindings of the Battleranger Chaotic Style;The Dusk Crawler Set;Dread Compact Style 2;Molokau Stalker;Echoes of the Eyrie V 2.0;Scale of the Razorwyrm Chaos;Seablight Procession;Abyssal Cuirass;Barrier Rogue;Bark of the Ageless Witness;Timberthaw;Concealed Raven;Full Metal Techies;Relics of the Lost Vigil Pathfinder;Corridan Maestro V 2.0;Bite of the Surging Wind;Soul Lilith;Hinterland Stalker;Dark Reef Escape V 2.1;Vantage of the Breach Warden;Gold Skymage;Charmer of Firesnake;Crown of The Nightworld;Ancient Magus Style 2;Monstrous Reprisal;Bonds of Vincere Set;Golden Nether Lords Regalia Set Prem;Murder of Crows (no crow);Alluring Mesmer;Ire of Molten Rebirth;Vengeance of the Sunwarrior;Sentinel of the Lucent Gate V 2.1;Armor of the Stalwart Soul;Shoreline Sapper;Shimmer of the Anointed;Black Nihility;Wrath of Ka V 2.1;Desert Traveller Set;Prismatic Grace;Havoc of Dragon Palace V 2.0;The Moon Rider Set V 2.1;Voodoo Meepo;Eye of the Beholder;Fury of War God;Seismic Berserker;Hunter of Kings V 2.0;Black Ice Scourge;War-Burrow Ravager;The Garments of the Charred Bloodline Set V 2.0;Compendium Bloody Ripper;Icebound King Set;Spirethorn Regalia V 2.0;Errant Soldier;Divine Anchor Style 2;Forgotten Renegade;Sky-High Warship Style 1 V 3.0;Tengu Guardian Set;Misgivings of the Emerald Age;Abyssal Vortex;The Sheep Set;Cinder Sensei;Harness of the Fissured Soul;Bindings of Deep Magma;Vanquishing Demons General V 3.1;Death Blossom Set;Dragon Guardian;Bringer of Troubles;Kirin Rider Set;Bloody Bride;Smoky Dreamer;Bewitching Flare V 2.0;The Duskbloom Trickster;Forgotten Tactician;Blueheart Sovereign V 2.0;The Iron Pioneer;The Faith of Avengers;Savior for Jungles Honor;Gryphon Rider Set;Relentless Warbringer V 3.0;Epoch of the Abysm;Lost Ranger;Brew Jousting Panda and Donkey Kong;Bounty Hunter Maniac Set;Wrath of the Blood Covenant Set;The Rowdy Firebrand;Overgrown;Wicked Space Knight;Antimage Shinobi;Arabian Riders; 123|||