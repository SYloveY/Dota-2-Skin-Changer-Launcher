bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogQjZCN0U5OEQtMDk2Ni1ENjE0LUFCODEtMDBEODYxQzRBMDEyIDExMXx8fCAyMjI6OiAyYzg0YjllNTI5ZjcxMGFhYzI5MjI3ZTk0OTZlZjc1OTlmY2M5NmViODUxMTJkMjMyMGE2M2JjNzYzMWYwOTE1MmI2MDVjNjE5MDg4Yjk4N2E4YzBmNTQzNzdhY2M3Y2Q0MThlODk1MDhjZjdhYjlhOWI5OTY3NGFjMzk3NzFhNyAyMjJ8fHwgMTIzOjogQXhlIG9mIFBocmFjdG9zIFByZW07RXRlcm5hbCBSYWRpYW5jZSBCbGFkZXMgUHJlbTtSYXp6aWxzIE1pZGFzIEtudWNrbGVzIFByZW07WXVsc2FyaWFzIE1hbnRsZSBQcmVtO0tpbmRyZWQgb2YgdGhlIElyb24gRHJhZ29uIFYgMy4wO0FybXMgb2YgRGVzb2xhdGlvbiBQcmVtO0lyb24gU3VyZ2UgViAyLjI7Rm9jYWwgUmVzb25hbmNlIFYgMy4wO1JvbGxlcm1hd3N0ZXIgYW5kIE1lY2hhIEJvb3RzIG9mIFRyYXZlbCBNayBJSUk7UGFkZGFwb24gb2YgUmliYml0YXIgViA0LjA7VG9sbGluZyBTaGFkb3dzO1NvdWwgRGlmZnVzZXIgViAyLjE7RW1lcmFsZCBSb3NoYW47U2F2YWdlIE1ldHRsZTtMZXZpYXRoYW4gV2hhbGUgQmxhZGUgb2YgRW1pbmVudCBSZXZpdmFsO0dvbGRlbiBHcmFzcGluZyBCbHVkZ2VvbiBlZmZlY3Q7VGhlIElnbmVvdXMgU3RvbmUgViA0LjA7RnJvc3QgQXZhbGFuY2hlIFByZW07Q3JpbXNvbiBVbmJyb2tlbiBGZWFsdHk7Qmxpc3RlcmluZyBTaGFkZSBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzO1BhdWxkcm9uIG9mIHRoZSBEcmVhZGJvcm4gUmVnZW50O0hlbG0gb2YgdGhlIERhcmsgUmVzZXJ2b2lyO0Nsb2FrIG9mIHRoZSBEYXJrIFJlc2Vydm9pcjtBcm1vciBvZiB0aGUgRGFyayBSZXNlcnZvaXI7U2tpdHRlcmluZyBEZXNvbGF0aW9uIFByZW07Q3JpbXNvbiBNb3VybmZ1bCBSZXZlcmllO0N1bHQgb2YgQWt0b2s7V2luZ3Mgb2YgdGhlIEZhdGFsIEJsb29tO1RhaWwgb2YgdGhlIEZlcm9jaWQ5519cyBUb3hpY2FudDtQYWxlIEF1Z3VyIFByZW07SGVsbSBvZiBHcmltIFJlZm9ybWF0aW9uO0FybW9yIG9mIEdyaW0gUmVmb3JtYXRpb247Q29ycHNlIEhpdmUgb2YgR3JpbSBSZWZvcm1hdGlvbjtBcm1vciBvZiB0aGUgT2JzaWRpYW4gRm9yZ2U7SG9ybnMgb2YgdGhlIE9ic2lkaWFuIEZvcmdlO0NyaW1zb24gRW1lcmFsZCBDb25xdWVzdDtDcnlzdGFsIERyeWFkIFByZW07VGlkZWh1bnRlciBCbGluayBEYWdnZXI7Q2xhZGRpc2ggQ3VkZ2VsIFByZW07VHJhbnN2ZXJzYW50IFNvdWwgb2YgdGhlIENyaW1zb24gV2l0bmVzcyBQcmVtO0NyZXN0IG9mIHRoZSBGbG93ZXJpbmcgU2hhZGU7RmxvdyBvZiB0aGUgRmxvd2VyaW5nIFNoYWRlO1RoZSBCYXJyZW4gQ3Jvd24gUHJlbTtUaGUgQmFycmVuIFZlY3RvcjtUYWlsIG9mIHRoZSBTY291cmluZyBEdW5lcztHb2xkZW4gU2hhZG93IE1hc3F1ZXJhZGUgUHJlbTtTbW9rZSBCb21iIG9mIE1vbnN0cm91cyBSZXByaXNhbCBQcmVtO01vbHRlbiBDbGF3IFByZW07TGl0dGxlIEJsaW5rIERhZ2dlcjtTb2xhciBGb3JnZSBQcmVtO0NyZXN0IG9mIHRoZSBWZXJtaWxsaW9uIENydWNpYmxlO0ZlYXRoZXJzIG9mIHRoZSBWZXJtaWxsaW9uIENydWNpYmxlO0VnZyBvZiB0aGUgVmVybWlsbGlvbiBDcnVjaWJsZTtTZXZlcmluZyBMYXNoIFByZW07Q2hlc3RwbGF0ZSBvZiB0aGUgR3VhcmRpYW4gQ29uc3RydWN0IEJlc3Rvd2VkO0JyYWNlcnMgb2YgdGhlIEd1YXJkaWFuIENvbnN0cnVjdCBCZXN0b3dlZDtTa2lydCBvZiB0aGUgR3VhcmRpYW4gQ29uc3RydWN0IEJlc3Rvd2VkO0dyYW5kIEFic2Nlc3Npb247R29sZGVuIFNjYXZlbmdpbmcgR3V0dGxlc2x1ZztJbnNhdGlhYmxlIEJvbmVzYXcgUHJlbTtHb2xkZW4gRnVsbC1Cb3JlIEJvbmFuemE7VG9wIEhhdCBvZiB0aGUgT2NjdWx0aXN0cyBQdXJzdWl0O0Nhbm5vbiBvZiB0aGUgT2NjdWx0aXN0cyBQdXJzdWl0O1BhdWxkcm9ucyBvZiB0aGUgU2lsdmVyIEZveDtCcmFjZXJzIG9mIHRoZSBTaWx2ZXIgRm94O0dvbGRlbiBCbG9vZGZlYXRoZXIgRmVhc3Q7Qmxvb2RmZWF0aGVyIFdpbmdzIFByZW07Q29uY29yZCBEb21pbmlvbjtQaGFudG9tIENvbmNvcmQgUHJlbTtDb2RpY2lsIG9mIHRoZSBWZWlsZWQgT25lcztBdXNwaWNlIG9mIHRoZSBXaHlybGVneWdlIFByZW07R2ltbGVrIERlY2FudGVyO1dpbmdzIG9mIERhcmtoZWFydCBQdXJzdWl0O0xlZ3Mgb2YgRGFya2hlYXJ0IFB1cnN1aXQ7RW5kbGVzcyBOaWdodG1hcmUgVGFpbDtNYW50bGUgb2YgdGhlIFRydWViYXJrIEFkaGVyZW50O0dvbGRlbiBTdGFmZiBvZiBHdW4tWXUgUHJlbTtEYXVnaHRlcnMgb2YgSHlkcm9waGlpbmFlIFByZW07SGVsbSBvZiB0aGUgRGFyayBNb29uIFN0YWxrZXI7THVjZW50eXIgUHJlbTtGaW4gS2luZ3MgQ2hhcm0gb2YgRW1pbmVudCBSZXZpdmFsIEV4Y2VwdGlvbmFsO0hlbGwtU3BhciBBbmF0aGVtYSBPYnNpZGlhbiBCbGlnaHQ7TXVsY3RhbnQgUGFsbCBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzO0dsYXJlIG9mIHRoZSBUeXJhbnQ7U2hlYXJpbmcgRGVwb3NpdGlvbiBQcmVtO0xlZ2FjeSBvZiB0aGUgRmFsbGVuIExlZ2lvbiBTdHlsZSAyO0JhbmVmdWwgRGV2b3Rpb247QmVsdCBvZiB0aGUgQmxhZGVmb3JtIEFlc3RoZXRlO0dvbGRlbiBFZGdlIG9mIHRoZSBMb3N0IE9yZGVyO0ZvcnR1bmVzIFRvdXQgUHJlbTtTaG91bGRlcnMgb2YgdGhlIEJsYWRlZm9ybSBBZXN0aGV0ZTtNYW50bGUgb2YgdGhlIEJsYWNrZ3VhcmQgTWFndXM7RGFyayBBcnRpc3RyeSBIYWlyIDJuZCBTdHlsZTtNYWd1cyBBY2NvcmQ7RGFyayBBcnRpc3RyeSBDYXBlIFByZW07RGFyayBBcnRpc3RyeSBCZWx0IFByZW07VGhlIFNwb2lscyBvZiBEZXp1bjtQZXJjZXB0aW9ucyBvZiB0aGUgRXRlcm5hbCBNaW5kO01hY2Ugb2YgQWVvbnMgUHJlbTtKZXdlbCBvZiBBZW9ucyBQcmVtO0JyYWNlcnMgb2YgQWVvbnMgUHJlbTtHb2xkZW4gU2lsZW50IFdha2U7TWFuaWFzIE1hc2sgUHJlbTtCdXJuaW5nIFNoaWVsZCBvZiB0aGUgT3V0bGFuZCBSYXZhZ2VyO0FybW9yIG9mIHRoZSBPdXRsYW5kIFJhdmFnZXI7QnJhY2VycyBvZiB0aGUgT3V0bGFuZCBSYXZhZ2VyO0hlbG0gb2YgdGhlIE91dGxhbmQgUmF2YWdlcjtNYW50bGUgb2YgdGhlIE91dGxhbmQgUmF2YWdlcjtTd29yZCBvZiB0aGUgT3V0bGFuZCBSYXZhZ2VyO1NrdWxsIG9mIFZhc2h1bmRvbDtXaW5ncyBvZiBWYXNodW5kb2w7QnVybmluZyBGaWVuZDtEcmVhZCBBc2NlbmRhbmNlIEFybW9yO0RyZWFkIEFzY2VuZGFuY2UgQmVsdDtGb3dsIG9mIHRoZSBTdG9ybWNoYXJnZSBEcmFnb29uO09yYiBvZiBEZWxpdmVyYW5jZTtSZXNpc3RpdmUgUGluZm9sZCBQcmVtO0hhdCBvZiB0aGUgU3Rvcm1jaGFyZ2UgRHJhZ29vbjtGbHV0dGVyaW5nIE1vcnRpcyBQcmVtO0NvdmVycyBvZiB0aGUgTWVycXVlZW47Q3Jvd24gb2YgdGhlIE1lcnF1ZWVuO1NsZWV2ZXMgb2YgdGhlIE1lcnF1ZWVuO0RvdGEgMiBDaGFuZ2VyIEVkaXRpb24gSHVudGVycyBIb2FyZCBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzO01hcmsgb2YgdGhlIEZpcnN0IEh1bnQgSGFydmVzdGVkO01hdyBvZiBFenR6aG9rO1RoaXJzdCBvZiBFenR6aG9rIEJ1bmRsZSBQcmVtO1ByaW1hbCBQYWVhbjtHaGFzdGx5IE5vY3R1cm5lO0hlYWQgb2YgdGhlIEFwZXggRXhwbG9yZXI7U2hvdWxkZXIgb2YgdGhlIEFwZXggRXhwbG9yZXI7VGVtcGVzdCBSZXZlbGF0aW9uO1N1bGxlbiBIYXJ2ZXN0O1N1bGxlbiBIb2xsb3cgUHJlbTtEYXJrIE1vb24gQmFieSBSb3NoYW47V2VhdGhlciBBc2g7VGVtcGVzdCBIZWxtIG9mIHRoZSBUaHVuZGVyZ29kIFByZW07SGFpciBvZiB0aGUgU3Vydml2b3I7R29sZGVuIE9yaWdpbnMgb2YgRmFpdGggUHJlbTtHb2xkZW4gQmFzaGVyIEJsYWRlcyBWIDIuMDtCZWx0IG9mIHRoZSBTdXJ2aXZvcjtHb2xkZW4gTWFudGxlIG9mIEdyaW0gRmFjYWRlO1ByaXplIG9mIHRoZSBTYWx0d29ybiBNYXJpbmVyIEdob3N0bHk7Rmx1dHRlcmluZyBTdGFmZiBWIDIuMDtDcmltc29uIEVkaWN0IG9mIFNoYWRvd3M7QnJhY2VycyBhbmQgU2hvdWxkZXJzIG9mIHRoZSBTdXJ2aXZvcjtUdW5pYyBvZiB0aGUgV2FuZGVyaW5nIEZsYW1lO1RoZSBMaWdodG5pbmcgT3JjaGlkIG9mIEVtaW5lbnQgUmV2aXZhbCBFeGNlcHRpb25hbDtQYXJhZ29ucyBSZWJ1a2U7QmxhZGUgb2YgVGVhcnMgYW5kIENyb3duIG9mIFRlYXJzO1Nob2NrIG9mIHRoZSBBbnZpbCBQcmVtO0hvcm4gb2YgdGhlIFNwaXJhbCBCb3JlO0JlbHQgb2YgT3JuYXRlIENydWVsdHk7QnJhY2VyIG9mIHRoZSBTcGlyYWwgQm9yZTtIZWxtIG9mIHRoZSBTcGlyYWwgQm9yZTtIb29kIG9mIHRoZSBCbGFkZWZvcm0gQWVzdGhldGU7VGVycmFpbiAtIFJlZWZzIEVkZ2U7UGVyZWdyaW5lIEZsaWdodCBQcmVtO1N5bHZhbiBDYXNjYWRlIFByZW07TWFzcXVlIG9mIEF3YWxlYjtHb2xkZW4gQXRvbWljIFJheSBUaHJ1c3RlcnMgUHJlbTtIZWFkIG9mIHRoZSBWZXNwaWR1biBIdW50ZXItS2lsbGVyO1BheWxvYWQgb2YgdGhlIFZlc3BpZHVuIEh1bnRlci1LaWxsZXI7UHJvcGVsbGVycyBvZiB0aGUgVmVzcGlkdW4gSHVudGVyLUtpbGxlcjtDb25lIG9mIHRoZSBWZXNwaWR1biBIdW50ZXItS2lsbGVyO1YxbGF0IE1lZ2EtS2lsbHM7Sm9sbHkgUm9nZXIgSFVEIERhdnkgSm9uZXMgU3R5bGU7Sm9sbHkgUm9nZXIgSFVEIExhbmRsdWJiZXIgU3R5bGU7Uml2ZXIgVmlhbCBCbG9vZDtSZXB0aWxpYW4gUmVmdWdlIFJhZGlhbnQgQ3JlZXBzO1JlcHRpbGlhbiBSZWZ1Z2UgRGlyZSBDcmVlcHM7SG9saWRheSBSYWRpYW50IFRvd2VyO0Rhcmtlc3QgRHVuZ2VvbiBBbm5vdW5jZXI7R29sZGVuIEZsb29kbWFzaztIb3Jyb3IgZnJvbSB0aGUgRGVlcCBBcm1zO0hvcnJvciBmcm9tIHRoZSBEZWVwIEJlbHQ7UmF2ZW5vdXMgQWJ5c3MgLSBBcm1vcjtSYXZlbm91cyBBYnlzcyAtIEhlYWQ7U2lsZW50IFdha2U7Q3Jvd24gb2YgdGhlIFNhY3JlZCBIdW50O1JlYXBlcnMgV3JlYXRoO1BpbmsgQWxjaGVtaXN0O0VsZW1lbnRhbCBJbXBlcmF0b3IgViAyLjA7TWFyYXVkZXIgQ2hpZWZ0YWluIG9mIHRoZSBDaGFvcyBXYXN0ZXM7VGhlIEphZGUgR2VuZXJhbDtHb2xkIFNreW1hZ2U7VmVuZ2VhbmNlIG9mIHRoZSBTdW53YXJyaW9yO0V5ZSBvZiB0aGUgQmVob2xkZXI7RGl2aW5lIEFuY2hvciBTdHlsZSAyO0ZvdWxmZWxsIENvcnJ1cHRvcjtCYXJrIG9mIHRoZSBBZ2VsZXNzIFdpdG5lc3MgRGlzdGluZ3Vpc2hlZDtEcmVhZCBDb21wYWN0IFN0eWxlIDI7QmVzdG93bWVudHMgb2YgdGhlIERpdmluZSBBbmNob3IgZWZmZWN0cztWaXBlciBNZWdhUGFjaztTdmVuIE1lZ2FQYWNrO1N0b3JtIFNwaXJpdCBNZWdhUGFjaztTaWxlbmNlciBNZWdhUGFjaztUaW1iZXJzYXcgTWVnYVBhY2s7T3V0d29ybGQgRGV2b3V2ZXIgTWVnYVBhY2s7T21uaWtuaWdodCBNZWdhUGFjaztNaXJhbmEgTWVnYVBhY2s7SWNlIExpbmEgUHJlbWl1bTtMaWZlc3RlYWxlciBNZWdhUGFjaztFbmlnbWEgTWVnYVBhY2s7QnJvb2Rtb3RoZXIgTWVnYVBhY2s7SHVudGVyIHdpdGggTm8gTmFtZSBWIDIuMTtBQU1lZ2FQYWNrO0JlYXJpbmcgb2YgdGhlIEtpbmcgUmVzdG9yZWQgRGlzdGluZ3Vpc2hlZDtQcmVzc3VyZSBSZWd1bGF0b3I7Tnl4IEFzc2Fzc2luIE1lZ2FQYWNrO0N1cnNlZCBTcGlyaXQ7RmlyZXMgb2YgVmFzaHVuZG9sIG5vIGVmZmVjdCBWIDIuMTtTZWFib3JuZSBSZXByaXNhbDtNYW5pZm9sZCBQYXJhZG94IEdvdGhpYyBIdW50ZXI7IDEyM3x8fA==