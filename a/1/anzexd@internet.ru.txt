limitHWID:: 1 000||| 111::  111||| 222:: $2y$10$YWQ5YzM3ZTYxMjI5NGM2OONeKBO76fLNXx.646bR5NbD7udU9bPnq 222||| 123:: Aegis and Roshan St. Valentine Day;TI-10 Aghanim Effect;Blink Dagger lvl 1 TI-6 Effect;TI-10 Bottle Effect;Reptilian Refuge Dire Creeps;Reptilian Refuge Radiant Creeps;Question mark Deny;TI-10 Eul Scepter Effect;TI-7 Euls Scepter Of Divinity Effect;TI-7 Level Up Effect;TI-8 LVL UP Effect;Grimwolf;Acid Hydra Cursor Pack;Roshan Halloween Skin;Weather Spring;Terrain - Winter;River Vial Green;Brood Hunter HUD;Seer of Infinity Space Eidolon;Yoba Wisp;Barding of Chimeric Rapport;Bonds of Madness Set Style 1;Great Sage*s Reckoning;Hazhadal Magebreaker;Majesty Of The Colossus - Pebble;Tempest Helm of the Thundergod Prem;Rakshasa Set;Old Model Shadow Fiend;Grim Destiny;Endless Night;Arabian Riders;Spoils from the Shifting Sorcerer V 2.0;Time Wanderer;Black Orc Warboss V 2.0;The Wild Tamer;Harvests Hound;Tipsy Brawler;Charge of the Wrathrunner;Feast of the Gluttons Larder;Chaos Chosen V 3.0;Arms of Burning Turmoil Set V 3.1;Savior for Jungles Honor;Cloak of the Fallen;Artisan of Havoc V 3.0;Smoky Dreamer;Royal Winterbloom;Manipulator of Warsituation;Burglar of Wasp;Bloody Bride;Kirin Rider Set;Fires of Vashundol no effect V 2.1;Blazing Oblivion V 3.0;Sight of the Kha Ren Faithful;The Jade General;Crimson Beast V 3.0;Warden of the Wyrmforge Shard;Order of the Wandering Flame V 2.1;Amberlight Raiment V 2.0;The Hollow Set;Mystic of Celestial Art;Flamed Falcon Patrol Set;Trials of the Blackguard Magus No effects;The Path of Odocoeleus;Seaborne Reprisal;Sharpstar Armor;Dark Forest Punisher;Ascendance of the Rime Lord 2nd Style;Divine Flame V 2.0;Rage of the Dark Wood v 2.0;Dusklight Marauder V 2.1;Hunter of Kings V 2.0;Rising Glory V 2.1;Imperial Envoy;Convalescing Empress;The Family Values Bundle;Darkfall Warden no effects V 2.1;Stellar Jade;Allure of the Deep;Fungal Lord Set;The Murid Divine;Unfettered Malevolence;Carapace of the Hidden Hive Set;Antipodean Allies;Armor of the Stalwart Soul;The Fate Fiddler;Herald of Measureless Ruin V 2.1;Tales of the Windward Rogue;Creeping Shadow;Harsh Sojourn;Golden Nirvana;Faeriesnap Spriteleaf;Surgical Precision;Researcher of Oblivion Magic;Countess of Ristul;Magister of the Narrow Fates;Cunning Corsair;Gifted Jester;Sovereign of the Kray Legions 2st Style;Origins of the Shadow Creed;The True Crow V 2.0;Beacon of Cerulean Light 1 Style V 2.1;Bestowments of the Centurion Vanguard;Kindred of the Umizar Crawler;Flowing Entropy V 2.0;Bite of the Surging Wind;Corridan Maestro V 2.0;Arms of Rising Fury;March of the Powderkeg Patrol;Ritual of the Loyal Fold;Samurai Set;Lumberclaw;Bark of the Ageless Witness Distinguished;Barrier Rogue;Rift Champion;Dirgesworn Dynasty;Ferocious Heart;Resentment of the Banished Princess;Corruption of the Virulent Krait;Unblinking Eternity;Puppet Summoner;The Dusk Crawler Set;Array of Tranquility;Wings of Colorful Icecrystals;Bearer of the Arkturan Talon;Izayoi Sakuya for Tinker by Patchouli Knowledge; 123|||