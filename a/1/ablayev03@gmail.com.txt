limitHWID:: 1 000||| 111:: 86BE14E8-3732-11E9-9404-56F8016D7100 111||| 222:: 87f7645b539606236381c36286c3d8a889558faf5f2a7e8b0b7410c361ebd30520d68852feacc7c43c366c8564bfbac691d8b1116a45f3595b1418af9f718328 222||| 123:: Fan of Piercing Silence;Burning Spear (Equipment) V 3.0;Spinal Slicers Pack;Steamcape;JJ Lins Timekeeper Music Pack V 2.1;Cloak of the One True King;Blood Shard;WK - Vi-Ka;Bloodstained Britches;Doomsday Ripper Arms;Dendi Doll;Heavy Tenderizer;Nails in the Mad Harvester;Battlefury;Pauldrons of the Sharpstar;Stonehall Royal Guard Helmet;Plate of the Sharpstar;Shadows of Ravensmane Arms;Algid Falcon Greaves;Frostglade Familiar Quiver;Frostglade Familiar Armor;Hydrakan Latch;Roshan Hunter Belt;Frostreach Brigands Harness;Suit of the Convicts;Mohawk of the Convicts;Armor of the Enduring Conscript;Belt of the Eleven Curses;Horns of the Eleven Curses;Wrath of the Fallen Tail;Wrath of the Fallen Arms;Style of the Lumini Polare;Kimono of the Icebound Floret;Vestments of the Blackguard Magus;Cape of the Blackguard Magus;Dragonclaw Hook;River Vial Green;Heaven-Piercing Pauldrons;Barrier Rogue;Blossoming Harmony V 2.0;Volatile Firmament V 2.0;Apostle of Decay V 2.1;Light of Eleanor Set;Crystal Scavenger;Snowstorm Huntress V 2.1;Trail of the Grey Ghost;Spirit of the Emeraldine Rider V 2.1;Clan of the Arctic Owlbear;Order of the Wandering Flame V 2.1;Flameguard Commanders Set; 123|||