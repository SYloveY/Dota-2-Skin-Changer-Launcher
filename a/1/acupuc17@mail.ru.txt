bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogIDExMXx8fCAyMjI6OiAkMnkkMTAkTTJNell6VTFNRFl4WW1JME1HVXlNZTR2SnVZZEdEZVlGSGRud282dXlIMmNjaG0xVE04SXUgMjIyfHx8IDEyMzo6IEFzc2Fzc2luYXRpb24gb2YgRGFyayBGZWF0aGVyIEJhY2s7U3R5bGUgb2YgdGhlIEZlYXJmdWwgQXJpYTtBcm1vciBvZiBDcnVlbCBSZXByaXNhbDtBc3Nhc3NpbmF0aW9uIG9mIERhcmsgRmVhdGhlciBTaG91bGRlcjtCbGFkZSBvZiB0aGUgQmxvb2Ryb290IEd1YXJkO0dhdW50bGV0cyBvZiB0aGUgU2NhcmxldCBSYXZlbjtCYWNrIG9mIHRoZSBTYWNyaWZpY2lhbCBTZXJwZW50O0NhcGUgb2YgdGhlIFdlZXBpbmcgQmVhc3Q7R2FsbG93cyBVbmRlcnN0dWR5IEJhY2s7Q29hdCBvZiB0aGUgU2NhcmxldCBSYXZlbjtNYXNrIG9mIHRoZSBXZWVwaW5nIEJlYXN0O0ZlYXN0IG9mIHRoZSBVbndpbGxpbmcgU2hvdWxkZXJzO1RoaXJzdCBvZiBFenR6aG9rIEJ1bmRsZSBQcmVtO0Zyb3N0Z2xhZGUgRmFtaWxpYXIgQ2FwZTtTaG9vdGluZyBTdGFycyBXZWFwb247TGluZWFnZSBBcm1vciBvZiBCcm9rZW4gU2NhbGU7TGluZWFnZSBCcmFjZXJzIG9mIEJyb2tlbiBTY2FsZTtMaW5lYWdlIEJlbHQgb2YgQnJva2VuIFNjYWxlO0xpbmVhZ2UgSGVsbSBvZiBCcm9rZW4gU2NhbGU7TGluZWFnZSBPZmZoYW5kIEJsYWRlIG9mIEJyb2tlbiBTY2FsZTtMaW5lYWdlIEJsYWRlIG9mIEJyb2tlbiBTY2FsZTtMaW5lYWdlIFRhaWxzIG9mIHRoZSBUdW5kcmEgV2FyZGVuO0xpbmVhZ2UgQ3Jvd24gb2YgdGhlIFR1bmRyYSBXYXJkZW47TGluZWFnZSBHdWFyZCBvZiB0aGUgVHVuZHJhIFdhcmRlbjtMaW5lYWdlIE5vcnRoIFN0YXI7QXJtcyBvZiB0aGUgQml0dGVyd2luZyBMZWdhY3k7R2F1bnRsZXRzIG9mIEFzY2Vuc2lvbjtDYXBlIG9mIHRoZSBCdXJuaW5nIFNjYWxlO0hlbG0gb2YgdGhlIEJ1cm5pbmcgU2NhbGU7U2hpZWxkIG9mIHRoZSBCdXJuaW5nIFNjYWxlO0N1aXJhc3Mgb2YgdGhlIEJ1cm5pbmcgU2NhbGU7QmxhZGUgb2YgdGhlIEJ1cm5pbmcgU2NhbGU7TGluZWFnZSBXaW5ncyBvZiB0aGUgQXJjaCBUZW1wdHJlc3M7Q2hhaW5lZCBCZWF1dHk7Rm9ybSBvZiB0aGUgQWJ5c3NhbCBLaW47QmxhZGUgb2YgdGhlIEFieXNzYWwgS2luO1RoZSBEdXNrYmxvb20gVHJpY2tzdGVyIEFybW9yO1dpbmdzIG9mIHRoZSBGYWVzaGFkZSBGbG93ZXI7UGV0YWxzIG9mIHRoZSBXaW50ZXIgUm9zZTtHbG9vbWJvYjtPcmlmaWNlIG9mIHRoZSBOdXJnbGUgQ2hhbXBpb247UmF6b3JzIG9mIHRoZSBJcm9uIEhvZztCZWx0IG9mIHRoZSBJcm9uIEhvZztGYWNlIG9mIHRoZSBJcm9uIEhvZztSZWQgV2lzcDtBcm1zIG9mIHRoZSBPbnl4IENydWNpYmxlIEJyYWNlcnM7VHdpbiBCYW5uZXIgb2YgdGhlIERyYWdvbiBHdWFyZDtIZWxtIG9mIFpodXpob3U7TGluZWFnZSBNYW50bGUgb2YgRGVzb2xhdGUgQ29ucXVlc3Q7TGluZWFnZSBMYW5jZSBvZiBEZXNvbGF0ZSBDb25xdWVzdDtGbG93ZXJzb25nIEJlYXV0eTtRdWl2ZXIgb2YgRmFsY29uc2lkZSBBcm1vcjtTb25nIG9mIHRoZSBCbHVlYmlyZCAtIFF1aXZlcjtQYXVsZHJvbnMgb2YgRmFsY29uc2lkZSBBcm1vcjtUZXJyYWluIC0gU3ByaW5nO1JpdmVyIFZpYWwgR3JlZW47SmluIGFuZCBZaW4gRm94IFNwaXJpdHMgRGVmYXVsdDtDYXBlIG9mIHRoZSBSaXNpbmcgR2FsZTtGZWF0aGVyZmFsbCBCb3c7SGFuZHMgb2YgSW5lcnJhbnQgRW1pbmVuY2U7RmFjZSBvZiBJbmVycmFudCBFbWluZW5jZTtBcm1vcmVkIEV4b3NrZWxldG9uIExlZ3M7SG9ybnMgb2YgRW1pbmVuY2U7VHJlbmNoa25pZ2h0IC0gTWQ5519bnQ7R2FyYiBvZiB0aGUgUHJvcGhldCBGb3JldG9sZDtCcnVtYWwgQmVyc2Vya2VyIFNob3VsZGVyO0FyYyBXYXJkZW4gTWFnaWNpYW4gQXJtcztBcmMgV2FyZGVuIE1hZ2ljaWFuIEJhY2s7QXhlIEJsYWNrdGhvcm4gQXJtb3I7QXhlIEJsYWNrdGhvcm4gQmVsdDtBeGUgQmxhY2t0aG9ybiBIZWFkO0JyYWNlcnMgb2YgdGhlIFNoYXR0ZXJlZCBWYW5ndWFyZDtCZXJzZXJrZXJzIFdpdGNoc2xheWVyO0Jlc3Rvd2VkIFNob3VsZGVycztIZWFydGxlc3MgSHVudCAtIEFybW9yO0hlYXJ0bGVzcyBIdW50IC0gQmFjaztCbGFkZSBvZiB0aGUgSHVudGVyKnMgR2xvcnk7TWFyayBvZiB0aGUgRmlyc3QgSHVudDtUb25mYSBvZiB0aGUgR2lhbnQgSHVudGVyO0JhcmJhcm91cyBCbGFkZXMgQmFjaztCYXJiYXJvdXMgQmxhZGVzIE1hc2s7QnJlYWtpbmcgRW1lcmFsZDtQZXJkaXRpb247UGF1bGRyb25zIG9mIHRoZSBCdXJuaW5nIE5pZ2h0bWFyZTtCbGFkZSBvZiBCdXJuaW5nIFR1cm1vaWw7UGlsZ3JpbSBvZiB0aGUgU25vd3kgU2hyaW5lIE1vdW50O0xvc3QgSGlsbHMgR2F1bnRsZXRzO0xlYWRlciBvZiB0aGUgTW9sdGVuIGFybXkgLSBDbGlua3ogQmFjaztMZWFkZXIgb2YgdGhlIE1vbHRlbiBhcm15IC0gQ2xpbmt6IEhlYWQ7TGluZWFnZSBLaXQgb2YgdGhlIEh1bnQgRXRlcm5hbDtCb3cgb2YgdGhlIFNlYXJpbmcgU291bDtQc2lvbmljIFNhZ2UgLSBCYWNrO0JlbHQgb2YgdGhlIEZvcmdvdHRlbiBUYWN0aWNpYW47Q3JhbmlvbWFuY2VyO1BzaW9uaWMgU2FnZSAtIFNob3VsZGVyO1F1ZWVuIG9mIENyaW1zb24gVGhvcm5zIEFybW9yO1RhaWxzIG9mIHRoZSBTaGFkZWQgRXVsb2d5O0hvb2Qgb2YgdGhlIE1vdGhiaW5kZXI7RHJlc3Mgb2YgdGhlIFNoYWRlZCBFdWxvZ3k7QmFyZGluZyBvZiB0aGUgQml0dGVyd2luZyBMZWdhY3k7RW5kbGVzcyBOaWdodDtHb2RkZXNzIG9mIFdvb2RzO1NoYWRvd3Mgb2YgUmF2ZW5zbWFuZTtIdW50ZXIgb2YgdGhlIENyeXN0YWwgRHJpZnQ7VHJpYWxzIG9mIHRoZSBCbGFja2d1YXJkIE1hZ3VzIE5vIGVmZmVjdHM7V2l0Y2ggSHVudGVyIFRlbXBsYXI7UGlsbGFyIG9mIHRoZSBGcmFjdHVyZWQgQ2l0YWRlbDtSb3lhbCBXaW50ZXJibG9vbTsgMTIzfHx8