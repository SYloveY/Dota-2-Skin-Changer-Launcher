bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogMDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDBEODYxMTY2MDYyIDExMXx8fCAyMjI6OiAkMnkkMTAkTkdJNVpEWmtNelEwTkdKaFlqRm1NdVZ0U0lNbklqaThld215c0JoZk9CejNJakFOUDNsZi4gMjIyfHx8IDEyMzo6IE1hdyBvZiBFenR6aG9rO0dvbGRlbiBJbmZlcm5hbCBDaGllZnRhaW47SHVudGVycyBIb2FyZCBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzO1RpbmVzIG9mIFR5YmFyYTtNYXJrIG9mIHRoZSBGaXJzdCBIdW50IEhhcnZlc3RlZDtEaWFib2xpYyBBc3BlY3Q7Q2hhb3MgRnVsY3J1bTtUYWxvbnMgb2YgdGhlIEVuZGxlc3MgU3Rvcm0gV2VhcG9uO01pbmVzIG9mIHRoZSBQcmVzc3VyZSBSZWd1bGF0b3I7VGhlIElyb24gUGlvbmVlciBIZWxtO0Zyb3N0IEF2YWxhbmNoZSBQcmVtO0NyaW1zb24gSGVhcnRzIG9mIE1pc3J1bGU7Tm90aGxpYyBCdXJkZW4gb2YgdGhlIENyaW1zb24gV2l0bmVzcyBQcmVtO1BpcGUgb2YgRGV6dW4gUHJlbTtWb29kb28gUHJpZXN0ZXNzIEV4b3JjaXNtO0NvdmVycyBvZiB0aGUgTWVycXVlZW47U2lsZW50IFdha2U7TWFzayBvZiBaZWJ1bG9uO0FsZ2lkIExlZ2FjeSBQcmVtO1NvbmdzIG9mIFN0YXJmYWxsIEdsZW4gLSBBcm1zO0Zsb3VyaXNoaW5nIExvZGVzdGFyO1ZpcmdhcyBBcmM7TG9yZCBvZiBMdW1pbmFyaWVzIEVpZG9sb25zO1R3aXN0ZWQgTWFlbHN0cm9tIHdpdGggV29ybGQgQ2hhc20gQXJ0aWZhY3Q7Q3JpbXNvbiBCcmFjZXJzIG9mIEFlb25zIFByZW07SGVyYWxkIG9mIHRoZSBFbWJlciBFeWUgLSBNYXNrO0hlcmFsZCBvZiB0aGUgRW1iZXIgRXllIC0gQnJ1c2g7SnVnZ2VybmF1dCBBcmNhbmEgQmxhZGVmb3JtIExlZ2FjeTtGb3J0dW5lcyBUb3V0IFByZW07Q3JpbXNvbiBFZGdlIG9mIHRoZSBMb3N0IE9yZGVyO0dsYXJlIG9mIHRoZSBUeXJhbnQ7VG9tZSBvZiBGb3JiaWRkZW4gS25vd2xlZGdlO0NvbmNvcmQgUmV2ZXJzaW9uIFVQO0Nyb3duIG9mIFNhY3JlZCBMaWdodDtDaGlja2VuIEh1dCBXYXJkO0pha2lybyBJbW1vcnRhbCBXaW5ncztNb3RoZXIgb2YgVGhvdXNhbmRzIFNwaWRlcmxpbmc7SG9vZHdpbmsgR2xlaXBuaXI7TWFzayBvZiBNZXRpcmE7SGVsbC1TcGFyIEFuYXRoZW1hIE9ic2lkaWFuIEJsaWdodDtIb3JucyBvZiB0aGUgQmV0cmF5ZXI7RmluIEtpbmdzIENoYXJtIG9mIEVtaW5lbnQgUmV2aXZhbCBFeGNlcHRpb25hbDtHb2xkZW4gVHdpbGlnaHQgU2NoaXNtO1NpZ25zIG9mIHRoZSBBbGxmYXRoZXIgLSBXZWFwb247TW9uYXJjaCBvZiB0aGUgU2FwcGhpcmUgR2xlbjtNYW50bGUgb2YgdGhlIFRydWViYXJrIEFkaGVyZW50O1Nocm9vbWxpbmc7UnViaWNrIEN1cnNlIC0gQ2hyb25vc3BoZXJlO1N3aW5lIG9mIHRoZSBTdW5rZW4gR2FsbGV5IFByZW07SGVsbSBvZiB0aGUgRGFyayBNb29uIFN0YWxrZXI7TWQ5519bnQgb2YgdGhlIFdpbmdlZCBTZW50aW5lbDtXYXItQnVycm93IFJhdmFnZXIgVHJ1ZSBGb3JtO0NhdWxkcm9uIG9mIFhhaHJ5eCBvZiBFbWluZW50IFJldml2YWwgRXhjZXB0aW9uYWw7QW5jaWVudCBSaHl0aG0gTG9hZGluZyBTY3JlZW47UGxhbmV0ZmFsbCBGaXJlIEJsaW5rO0NvbmNvcmQgRG9taW5pb247UGhhbnRvbSBDb25jb3JkIFByZW07RGlyZSBOZW1lc3RpY2UgQ3JlZXBzO1JhZGlhbnQgTmVtZXN0aWNlIENyZWVwcztIb29kd2luayBEcmFnb24gQ3Jvc3Nib3c7Q29kaWNpbCBvZiB0aGUgVmVpbGVkIE9uZXM7TWFuaWZvbGQgUGFyYWRveCBQQSBBcmNhbmEgU3R5bGUgMTtPcmlnaW4gb2YgdGhlIFVubWFraW5nO1NsdW1iZXJpbmcgVGVycm9yO0JlYXN0IG9mIHRoZSBDcmltc29uIFJpbmcgQnJhY2VycztTY29yY2hlZCBBbWJlciBTaGllbGQ7Q3JpbXNvbiBFZGljdCBvZiBTaGFkb3dzO0h1bmdlciBvZiB0aGUgSG93bGluZyBXaWxkcyBBcm1zO1BhbGUgTWF1c29sZXVtO0FybW9yIG9mIEdyaW0gUmVmb3JtYXRpb247R2F1bnRsZXRzIG9mIEdyaW0gUmVmb3JtYXRpb247Rmxlc2ggR29sZW0gb2YgRm9ybG9ybiBEZXNjZW50O1BhbGUgQXVndXIgUHJlbTtUaGUgSGFsbG93cyBXaXRoaW47Qm9ua2VycyB0aGUgTWFkO0Zvb3RmYWxscyBvZiB0aGUgU3BvcmVmYXRoZXJzIC0gRGVhdGggV2FyZDtBbmNpZW50IEluaGVyaXRhbmNlIC0gU2hvdWxkZXI7U3Rld2FyZCBvZiB0aGUgRm9yYmlkZGVuIENoYW1iZXIgQXJtb3I7TWFudGxlIG9mIHRoZSBXaGlzcGVyZWQgQm9uZDtTZXZlcmluZyBMYXNoIFByZW07Q2hlc3RwbGF0ZSBvZiB0aGUgR3VhcmRpYW4gQ29uc3RydWN0IEhhcnZlc3RlZDtTZXZlcmluZyBDcmVzdCBQcmVtO1NraXJ0IG9mIHRoZSBHdWFyZGlhbiBDb25zdHJ1Y3QgQmVzdG93ZWQ7TWFudGxlIG9mIHRoZSBDaW5kZXIgQmFyb24gU3R5bGUgMjtHb2xkZW4gQ3J1Y2libGUgb2YgUmlsZTtCcmFjZXJzIG9mIEZvcmxvcm4gUHJlY2lwaWNlO1NwZWFyIG9mIHRoZSBEYWVtb25mZWxsIEZsYW1lO1N1bGxlbiBIYXJ2ZXN0O0dvbGRlbiBTdWxsZW4gSG9sbG93O1N1bGxlbiBSYW1wYXJ0O1dpbmdzIG9mIHRoZSBBZ2VsZXNzIEZhZTtSb3lhbCBEZWNyZWUgV2hpcCBBdHRhY2s7VGhlIEJhcnJlbiBDcm93bjtDaGFybSBvZiB0aGUgTHVjZW50IENhbm9weTtTaGFkZSBvZiB0aGUgU3BpdGVmdWwgRXllO0dvbGRlbiBXaW5ncyBvZiB0aGUgTWFudGljb3JlO1RyYW5zdmVyc2FudCBTb3VsIG9mIHRoZSBDcmltc29uIFdpdG5lc3MgUHJlbTtTb3VsIERpZmZ1c2VyIFByZW07Qml0dGVyIExpbmVhZ2UgSW1tb3J0YWwgQXhlcztUYWlsIG9mIHRoZSBGZXJvY2lvdXMgVG94aWNhbnQ7SWNlZmxpZ2h0IEVkaWZpY2U7VGVycmFpbiAtIERlc2VydDtGb3JjZSBvZiBTcGlyaXQgSFVEO0NsYXNoIG9mIHRoZSBBbmNpZW50cyBEYXNoYm9hcmQ7U2xhcmRhciBJbW1vcnRhbCBIZWFkIEZpbiBvZiB0aGUgRmlyc3QgU3BlYXI7U2NhbGVzIG9mIEVsYXNteXI7VG9ybWVudGVkIFN0YWZmO1Byb25ncyBvZiB0aGUgQWZmbGljdGVkIFNvdWwgO0Nyb3duIG9mIHRoZSBBZ2VsZXNzIEZhZTtSaXZlciBWaWFsIE9pbDtHdWFyZGlhbnMgb2YgdGhlIExvc3QgUGF0aCBSYWRpYW50IFRvd2VycztHdWFyZGlhbnMgb2YgdGhlIExvc3QgUGF0aCBEaXJlIFRvd2VycztHb2xkZW4gQWVnaXM7UHJlIEFnaGFuaW0gRHVuZ2VvbiBTY2VwdGVyIEVmZmVjdDtCYXR0bGUgUGFzcyBFZmZlY3QgQmxpbmsgRGFnZ2VyO1RJLTEwIEFnaGFuaW0gRWZmZWN0O092ZXJncm93biBFbWJsZW0gQWdoYW5pbSBFZmZlY3Q7V2VhdGhlciBCbHVlIFNreSBmcm9tIFNvdXAgZm9yIFNsdXRzO0FiYWRkb24gUkVEIE1lZ2FQYWNrO0RhcmticmV3IEVuZm9yY2VyIGFuZCBFdGVybmFsIFJhZGlhbmNlIEJsYWRlcyBhbmQgTWlkYXMgS251Y2tsZXMgTWVnYVBhY2s7R2lmdHMgb2YgdGhlIEZsYXllZCBUd2lucyBTdHlsZSAxO0J1cm5pbmcgTmlnaHRtYXJlO0Nsb2Nrd2VyayBNZWdhUGFjaztBbGx1cmUgb2YgTWlyYWNsZSBGcnVpdDtFdGVybmFsIFRlc3RhbWVudDtEb29tIEltbW9ydGFscyBNZWdhUGFjaztQbGFuZXRmYWxsIGFuZCBKdWRnZW1lbnQgb2YgdGhlIEZhbGxlbiBhbmQgQnJhY2VycyBvZiB0aGUgQ2F2ZXJuIEx1bWluYXIgQVJDQU5BIE1lZ2FQYWNrO0t1bmcgZnUgTWFzdGVyO0Zyb3plbiBWb2lkO0luayBEcmFnb24gUG9ldDtIdXNrYXIgTWVnYVBhY2sgTkVXO0t1bmtrYSBJbW1vcnRhbHMgTWVnYVBhY2s7SWNlIExpbmEgUHJlbWl1bTtEaXZpbmUgQW52aWwgU2V0O1NwaXJpdCBCcmVha2VyIE1lZ2FQYWNrO1NpbGVuY2VyIFRJMTAgQ29sbGVjdG9ycyBDYWNoZSBNZWdhUGFjaztXcmFpdGggS2luZyBBcmNhbmEgTWVnYVBhY2s7VG9vbHMgb2YgdGhlIEhlbGxzd29ybjtVcnNhIEltbW9ydGFscyBNZWdhUGFjaztIb25vcmVkIFNlcnZhbnQgb2YgdGhlIEVtcGlyZTtUcmFwcGluZyBvZiB0aGUgU2VjcmV0IE1lZGljaW5lO05pZ2h0c3RhbGtlciBNZWdhUGFjayBzZXQ7RCBPY3RvIFRpbmtlcjtXaW5kcmFuZ2VyIEFyY2FuYSBzdHlsZSAyICsgV1IgaW1tb3J0YWw7TGluZWFnZSBSZWRlbXB0aW9uIG9mIHRoZSBSYWlkZm9yZ2VkIFJpZGVyO0xvbmUgRHJ1aWQgTWVnYVBhY2s7T2NjdWx0aXN0cyBQdXJzdWl0O1RpbWJlcnNhdyBNZWdhUGFjaztNYXJzIFRJMTAgQ29sbGVjdG9ycyBDYWNoZSBNZWdhUGFjaztTdmVuIEltbW9ydGFscyBNZWdhUGFjayBVUDtTY29yY2hpbmcgQW1iZXIgRHJhZ29vbjtXaXRjaCBEb2N0b3IgTWVnYVBhY2s7TW9ycGhsaW5nIEltbW9ydGFscyBNZWdhUGFjayBVUDtGcm96ZW4gRmFsY2hpb25haXJlO1NsYXJrIE1lZ2FQYWNrIE5ldztTdG9ybSBTcGlyaXQgTWVnYVBhY2s7UmViaXJ0aCBWZW5nZWZ1bCBTcGlyaXQ7QXJtcyBvZiB0aGUgRGVlcCBWYXVsdCBHdWFyZGlhbiBTZXQ7TWlyYW5hIE1lZ2FQYWNrO091dHdvcmxkIERldm91dmVyIE1lZ2FQYWNrO1B1Z25hIEltbW9ydGFscyBNZWdhUGFjaztBbmNpZW50IE1hZ3VzIFN0eWxlIDM7U2t5d3JhdGggTWFnZSBNZWdhUGFjayBUaGFuYXRvcztEcm93IFJhbmdlciBNZWdhUGFjaztBbnRpbWFnZSBXZWkgRmVtYWxlIChZb3UgY2FuIGFkZCBXZWFwb24gYW5kIEhlYWQpOyAxMjN8fHw=