bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogMUY3N0ZDODAtRDdEQS0xMURELUFCQjMtQzg2MDAwOUQyMEM4IDExMXx8fCAyMjI6OiBmODc0OWU0OWQ3Y2E3NWI0YTVlNDI5Njk4ZjVhMjE2NTY1YTFlZGZiNzY0MjFkYmMxMDVjNjk2MzMyNmIxM2I1Yjk1OTkwNWFkOTYzZTM1ZWNlMGQwYzRhNGFjMmRlMzc3NDUxYzRiZTAyOTNjZjExZjUyZDhjYTc2YTQ2ODNiMyAyMjJ8fHwgMTIzOjogZHJpdmVfZGlyOjpCb3VudHkgSHVudGVyIE1hbmlhYyBTZXQ7ZHJpdmVfZGlyOjpTaGVybWFuIE1haWRlbiBWIDQuMTtkcml2ZV9kaXI6OkZsYXNocG9pbnQgUHJvc2VseXRlIC0gSGVhZDtkcml2ZV9kaXI6OkdvbGRlbiBNb29uZmFsbCBQcmVtO2RyaXZlX2Rpcjo6TmVidWxhcyBXYWxrZXI7ZHJpdmVfZGlyOjpUYWxlcyBvZiB0aGUgV2luZHdhcmQgUm9ndWU7ZHJpdmVfZGlyOjpNYXNrIG9mIHRoZSBDb25maWRhbnQ7ZHJpdmVfZGlyOjpHcmFuZCBBYnNjZXNzaW9uIEhvb2sgQnVuZGxlO2RyaXZlX2Rpcjo6R29sZGVuIFNjYXZlbmdpbmcgR3V0dGxlc2x1Zztkcml2ZV9kaXI6OlNvdmVyZWlnbiBvZiB0aGUgS3JheSBMZWdpb25zIDJzdCBTdHlsZTtkcml2ZV9kaXI6OlRoZSBCYXJyZW4gVmVjdG9yO2RyaXZlX2Rpcjo6Q3Jvd24gb2YgVGhlIE5pZ2h0d29ybGQ7ZHJpdmVfZGlyOjpHcmlwIG9mIHRoZSBEcm93bmluZyBUcmVuY2g7ZHJpdmVfZGlyOjpDb25zcGljdWQ5519cyBDdWxwcml0IE1vaGF3aztkcml2ZV9kaXI6Ok1hcmsgb2YgdGhlIEZpcnN0IEh1bnQgQmVzdG93ZWQ7ZHJpdmVfZGlyOjpJbnNhdGlhYmxlIEJvbmVzYXc7ZHJpdmVfZGlyOjpEb29tc2RheSBSaXBwZXIgQXJtcztkcml2ZV9kaXI6OlBhdWxkcm9uIFBlcmNoO2RyaXZlX2Rpcjo6QmVsdCBvZiB0aGUgSXJvbiBIb2c7ZHJpdmVfZGlyOjpSb3NlIG9mIHRoZSBDb3JyaWRhbiBNYWVzdHJvO2RyaXZlX2Rpcjo6VGhlIExpZ2h0bmluZyBPcmNoaWQgb2YgRW1pbmVudCBSZXZpdmFsO2RyaXZlX2Rpcjo6Rmxvd2VyIEZsYW1lIExpbmEgViAzLjA7ZHJpdmVfZGlyOjpBbnZpbCBvZiB0aGUgRWFydGh3cmlnaHQ7ZHJpdmVfZGlyOjpEaXZpbmUgQW5jaG9yIFN0eWxlIDI7ZHJpdmVfZGlyOjpCaWcgVW4gViAzLjA7ZHJpdmVfZGlyOjpSYXp6aWxzIE1pZGFzIEtudWNrbGVzIFByZW07ZHJpdmVfZGlyOjpFdGVybmFsIFJhZGlhbmNlIEJsYWRlcyBQcmVtO2RyaXZlX2Rpcjo6QW50aS1NYWdlIFVsdGltYXRlIFJlZCBEcmFnb247ZHJpdmVfZGlyOjpNaXNnaXZpbmdzIG9mIHRoZSBFbWVyYWxkIEFnZTsgMTIzfHx8