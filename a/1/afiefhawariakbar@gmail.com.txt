bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogNzNEODYwRDgtOEYzNS0xMUU1LThGQzctNTA3QjlENzMzNjdDIDExMXx8fCAyMjI6OiAkMnkkMTAkWVRFMk9EZzFaV1pqTlRjMFlUZzVZTzhKQXFQYWVxcEsxMDdaOVdKcGFPcFFOczF1Smd1Ly4gMjIyfHx8IDEyMzo6IE9uaWJpIFN0YW5kYXJ0O1JlcHRpbGlhbiBSZWZ1Z2UgRGlyZSBDcmVlcHM7UmVwdGlsaWFuIFJlZnVnZSBSYWRpYW50IENyZWVwcztCbGluayBEYWdnZXIgbHZsIDEgVEktNiBFZmZlY3Q7UXVlc3Rpb24gbWFyayBEZW55O1RJLTggTFZMIFVQIEVmZmVjdDtUSS0xMCBUZWxlcG9ydCBsdmwgMiBFZmZlY3Q7VEktMTAgTWpvbGxuaXIgRWZmZWN0O1JhenppbHMgTWlkYXMgS251Y2tsZXMgUHJlbTtGcm9zdHJlYWNoIEJyaWdhbmRzIEhhdDtFdGVybmFsIFJhZGlhbmNlIEJsYWRlcyBQcmVtO0NpbmRlciBTZW5zZWkgT2ZmLUhhbmQgV2VhcG9uO1N0YWZmIG9mIEd1bi1ZdTtUZW1wZXN0IEhlbG0gb2YgdGhlIFRodW5kZXJnb2Q7Q2FwZSBvZiBHcmltIERlc3Rpbnk7SGVsbSBvZiBHcmltIERlc3Rpbnk7TWVtb3JpZXMgb2YgQm9uZSBIZWxtO1BhdWxkcm9ucyBvZiB0aGUgU3RvbmVtYXJjaCBTb3ZlcmVpZ247R2FycmFuIERyeXdpeiBhbmQgR2FyYWN0YWN1cztBZWdpcyBhbmQgUm9zaGFuIFN0LiBWYWxlbnRpbmUgRGF5O0VtYmxlbSBvZiB0aGUgQ3J5c3RhbCBFY2hlbG9uIEFnaGFuaW0gRWZmZWN0O1RJLTEwIEFnaGFuaW0gRWZmZWN0O1RJLTEwIEJvdHRsZSBFZmZlY3Q7VEktNyBFdWxzIFNjZXB0ZXIgT2YgRGl2aW5pdHkgRWZmZWN0O1RJLTEwIEV1bCBTY2VwdGVyIEVmZmVjdDtUSS04IEZvdW50YWluIGx2bCAxIEVmZmVjdDtQZWRlc3RhbCBGZWFzdCBvZiBBYnNjZXNzaW9uIEdyZWVuO1RJLTkgTWVrYXNtIEVmZmVjdDtMYXN0aGl0IEdvbGQgLSBOZXcgQmxvb20gMjAxOTtBcm1vciBvZiB0aGUgRXF1aWxpYnJpdW07VGFpbCBvZiB0aGUgRXF1aWxpYnJpdW07R29sZGVuIEJhc2hlciBvZiBNYWdlIFNrdWxscztPYXRoYm91bmQgRGVmaWFudCBPZmYtSGFuZCBCbGFkZTtPYXRoYm91bmQgRGVmaWFudCBCbGFkZXM7UGF1bGRyb25zIG9mIERvcm1hbnQgT2JsaXZpb247QmVzdG93ZWQgU2hvdWxkZXJzO1R6b2thbG90bHMgRHJlYWQgSGVhZDtIZWlyIG9mIFRlcnJvciBXaW5ncztCdXJuaW5nIEphY2tzO01hc2sgb2YgdGhlIE1hcmF1ZGluZyBQeXJvO05pZ2h0IFRlcnJvcnMgTWQ5519bnQ7RmxhbWVzdGl0Y2hlZCBTdWl0aW5ncyBDYXBlO1RoaXJzdCBvZiBFenR6aG9rIEJ1bmRsZSBQcmVtO1BsYXRlIG9mIHRoZSBHaWFudCBIdW50ZXI7Q2FwZSBvZiB0aGUgSHVudGVyO0hlYXJ0bGVzcyBIdW50IC0gT2ZmLUhhbmQ7TWFyayBvZiB0aGUgRmlyc3QgSHVudDtIZWFydGxlc3MgSHVudCAtIFdlYXBvbjtCYXJiYXJvdXMgQmxhZGVzIEJhY2s7R2xhY2lhbCBHYXJkZW5zIEhlYWQ7Um95YWwgV2ludGVyYmxvb20gQmFjaztSb3lhbCBXaW50ZXJibG9vbSBBcm1zO0RhcmtjbGF3IEVtaXNzYXJ5IEFybXM7RGl2aW5hdGlvbnMgb2YgdGhlIE5vdGhsIEhhemUgSGVhZGRyZXNzO1NraXJ0IG9mIFBldGFsdW5hO0dvbGRlbiBOb3RobGljIEJ1cmRlbiBQcmVtO0FyYyBvZiBTa2Fyc25paztIZWxtIG9mIHRoZSBEZWZlbmRlciBvZiBSdWluO0hhbW1lciBvZiB0aGUgU3Rvcm1sYW5kcztDb21wbGV0ZSBBbGdpZCBMZWdhY3k7U2VycGVudCBvZiB0aGUgSmFkZSBFbWlzc2FyeTtBcm1vciBvZiB0aGUgSmFkZSBHZW5lcmFsO1N0eWxlIG9mIHRoZSBKYWRlIEdlbmVyYWw7QmVsdCBvZiB0aGUgSmFkZSBHZW5lcmFsO0VtYW5hdGlvbnMgb2YgdGhlIFdvcmxkY29yZSBBcm1zO0JyYWNlcnMgb2YgdGhlIENhdmVybiBMdW1pbmFyO1RvdGVtIG9mIERlZXAgTWFnbWE7U2VlciBvZiBJbmZpbml0eSBTcGFjZSBFaWRvbG9uO0Jsb29kZmVhdGhlciBXaW5ncztIb3JucyBvZiB0aGUgT2JzaWRpYW4gTmlnaHRtYXJlO1Nhc2ggb2YgVHdpbGlnaHQgU2hhZGU7VmFsZW50aW5lIFdhcmQ7QnJhY2VycyBvZiBPZG9jb2VsZXVzO0JhdHRsZSBCYW5uZXIgb2YgdGhlIE1hc2tlZDtTaWdpbCBNYXNrIG9mIHRoZSBCbGFkZWtlZXBlcjtIYWthbWEgb2YgdGhlIFVueWllbGRpbmcgTWFzaztTZXJyYWt1cmE7VGlueSBCYWQgVG8gVGhlIEJvbmU7U21hbGwgQmFkIFRvIFRoZSBCb25lO01lZGl1bSBCYWQgVG8gVGhlIEJvbmU7TGFyZ2UgRWxlbWVudGFsIEljZTtGcm9zdG1vb3QgVHJlZTtDb25zcGljdWQ5519cyBDdWxwcml0IE1vaGF3aztUaWRvc2F1cnVzIEFybSBTY2FsZXM7VGlkb3NhdXJ1cyBUYWlsO0xlYXNoZWQgUm9ja3NoYXJrO1RyYWlsIG9mIHRoZSBGZWFyZnVsIEFyaWE7U2FzaCBvZiB0aGUgRmVhcmZ1bCBBcmlhO0NhcHJpY2lvdXMgRmF0ZSBIZWFkO1Zlc3Qgb2YgdGhlIEJsb29kcm9vdCBHdWFyZDtNZWdhLUtpbGxzIERpcmV0aWRlO1BoYW50b20gQ29uY29yZDtTY29yY2hpbmcgVGFsb24gUHJlbTtEaXJlY291cnQgSmVzdGVyIENsZWF2ZXI7SGVhZCBvZiB0aGUgT2RvYmVudXMgT25lO0JlbHQgb2YgdGhlIElyb24gSG9nO1Jhem9ycyBvZiB0aGUgSXJvbiBIb2c7QXJtcyBvZiB0aGUgSXJvbiBIb2c7U3BpZGVyIEJlbHQgb2YgUHVycGxlIE5pZ2h0bWFyZTtGb290ZmFsbHMgb2YgdGhlIFNwb3JlZmF0aGVycyAtIEhlYWQ7RmVhdGhlcmVkIE1hbnRsZSBvZiB0aGUgQXJrdHVyYW4gVGFsb247Q3Jvd24gb2YgdGhlIEFyY3RpYyBSZWNsdXNlO0NhcGUgb2YgdGhlIFJpc2luZyBHYWxlO0JvdyBvZiB0aGUgQmF0dGxlcmFuZ2VyO0Zsb3dlcnNvbmcgR3VhcmQ7QXJtb3Igb2YgdGhlIFJpc2luZyBHYWxlO1JpdmVyIFZpYWwgQm9pbGluZztXZWF0aGVyIFNwcmluZztBcm1ndWFyZHMgb2YgdGhlIFNtb2xkZXJpbmcgU2FnZTtSb2JlcyBvZiBCbGF6ZSBBcm1vcjtIZWFkZHJlc3Mgb2YgdGhlIFJla2luZGxlZCBBc2hlcztQYXVsZHJvbnMgb2YgdGhlIFZvbGNhbmljIEd1YXJkO1N3b3JkIG9mIHRoZSBWb2xjYW5pYyBHdWFyZDtNYXR0IExhbmdlIEFic3RyYWN0aW9uIE11c2ljIFBhY2sgViAyLjE7SnVnZ2VybmF1bnQgRW5nIEFyY2FuYSBWb2ljZTtMZWdpb24gQ29tbWFuZGVyIEVORyBBcmNhbmUgdm9pY2U7UHVkZ2UgQXJjYW5hIEVORyBWb2ljZTtQaGFudG9tIEFzc2FzaW4gRU5HIEFyY2FuZSB2b2ljZTtaZXVzIEVORyBBcmNhbmUgdm9pY2U7U0YgUlUgQXJjYW5lIHZvaWNlO1RlcnJvcmJsYWRlIEVORyBBcmNhbmUgdm9pY2U7TWFsZWZpYyBEcmFrZXMgSG9vZCBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzO1N1bmtlbiBTbmFwcGVyIFdpbmdzO1BsYXRpbmcgb2YgdGhlIE5ldGhlcnN3YXJtIFZhbmd1YXJkO0Zyb3plbiBWb2lkIEFybXM7QmFyZGluZyBvZiBDaGltZXJpYyBSYXBwb3J0O0NhcGUgb2YgdGhlIEdpZnRlZCBKZXN0ZXI7S29uZ291IE1lZ2EtS2lsbHM7TW9ua2V5IEtpbmcgQW5ub3VuY2VyO0NsYXdzIG9mIHRoZSBTYW5nc3RyYXRoIEZvbGQ7Um9zaGFuIEh1bnRlciBCYWNrO1Jvc2hhbiBIdW50ZXIgQmVsdDtPcmRlciBvZiB0aGUgU2lsdmVyZWQgVGFsb247RW5kbGVzcyBOaWdodDtSaXB0aWRlIFJhaWRlciBWIDIuMDtTa2VsZXRvbiBLaW5nIFJldHVybiBGaW5hbCBWIDMuMDtTa2VsZXRvbiBLaW5nIHdpdGggUmVtYWlucyBvZiB0aGUgRHJlYWRrbmlnaHQgU2V0O0VtcGlyZSBEZXN0cm95ZXI7VGhlIE9ibGl0ZXJhdG9yIG9mIE1hZ2ljO1RpbWUgV2FuZGVyZXI7QmxhY2sgT3JjIFdhcmJvc3MgViAyLjA7TWFyYXVkZXIgQ2hpZWZ0YWluIG9mIHRoZSBDaGFvcyBXYXN0ZXM7SGFydmVzdHMgSG91bmQ7SWNlYnJldyBBbmdsZXI7V2FycmlvciBvZiBBcmVuYSBTZXQ7V2FyIEJyZWFrZXJzIFNldDtSb3NlIEFuZCBUaGUgQmVhc3Q7U2F2aW9yIGZvciBKdW5nbGVzIEhvbm9yO0Z1cm5hdG9yIFNldDtSb3lhbCBXaW50ZXJibG9vbTtNYW5pcHVsYXRvciBvZiBXYXJzaXR1YXRpb247QnVyZ2xhciBvZiBXYXNwO1BlYWNvY2sgUHJpZXN0O0tpcmluIFJpZGVyIFNldDtGaXJlcyBvZiBWYXNodW5kb2wgbm8gZWZmZWN0IFYgMi4xO0JsYXppbmcgT2JsaXZpb24gViAzLjA7SWNlIFNoYWtlcjtDYWVydWxhIFNpbHZhO0Zsb3dlcmluZyBTaGFkZSBWIDIuMDtUcm9sbCBXYXJsb3JkIEphaFJha2FsO0dvZGRlc3Mgb2YgdGhlIFVuZGVyd29ybGQ7U2VhYm9ybmUgUmVwcmlzYWw7THVya2FibG87SGFyc2ggU29qb3VybjtCZWFyZXIgb2YgdGhlIEFya3R1cmFuIFRhbG9uO0NoaWxsaW5nIEZlYXRoZXI7QmluZGluZ3Mgb2YgdGhlIEJhdHRsZXJhbmdlcjtUaGUgRHVzayBDcmF3bGVyIFNldDtFbWluZW5jZSBvZiB0aGUgU291dGggU3RhcjtTaWdodCBvZiB0aGUgS2hhIFJlbiBGYWl0aGZ1bDtTaGFkb3dzIG9mIFJhdmVuc21hbmU7VGhlIENvcnJ1cHRpb24gb2YgTmV6enVyZWVtO1RoZSBHaWZ0cyBvZiBaaHV6aG91O1dheWZhcmluZyBTY2hvbGFyIFNldDtSaXR1YWwgb2YgdGhlIExveWFsIEZvbGQ7RGFyayBNb29uIFN0YWxrZXIgViAyLjE7IDEyM3x8fA==