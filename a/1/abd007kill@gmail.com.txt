limitHWID:: 1 000||| 111::  111||| 222:: $2y$10$ZDYyNDkyMzNiOWI5ZTFiMujYkbRimjdfJXcL0zeJuM3BAPAt56fk2 222||| 123:: Arms of Desolation;Arms of the Diabolical Fiend;Claws of the Fathomless Ravager;Grips of Eternal Harvest;King of Vipers Arms;Soul Corpulence - Arms;Souls Tyrant Arms;Twilight Effigy Arms;Murder of Souls Talons;Helm of the Fathomless Ravager;Horns of Eternal Harvest;Horns of the Diabolical Fiend;King of Vipers Head;Murder of Souls Crown;Soul Corpulence - Head;Twilight Effigy Head;Armor of the Diabolical Fiend;Breastplate of the Fathomless Ravager;Twilight Effigy Armor;Soul Corpulence - Shoulder;Pauldrons of Eternal Harvest;Murder of Souls Shoulders;King of Vipers Shoulder;Collar of Eternal Purgatory;Marauder*s Armor;Plate of the Baleful Hollow;Marauder*s Wings;Wings of Eternal Purgatory;Wings of the Baleful Hollow;Wings of the Foulfell Corruptor;Helm of the Foulfell Corruptor;Horns of Eternal Purgatory;Horns of the Baleful Hollow;Marauder*s Crown;Chasm of the Broken Code Weapon;Curse of Eternal Purgatory;Marauder*s Blades;Pirate of Treasure*s Bight Weapon;Swine Helmet;Keg of the Powderkeg Patrol;Pirate of Treasure*s Bight Back;Sack of the Sapper*s Guile;Swine Powder Barrel;Coat of the Powderkeg Patrol;Helm of the Sapper*s Guile;Pirate of Treasure*s Bight Head;Swine Visor;Cart of the Powderkeg Patrol;Eternal Harvest;Old Model Shadow Fiend;Sand Shadow Fiend Dota 2 Changer Edition V 3.0;Samurai Set;Illidan RUS sounds;Illidan Stormrage for Terrorblade V 2.0;March of the Powderkeg Patrol; 123|||