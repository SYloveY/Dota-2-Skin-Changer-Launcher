bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogMDMwMDAyMDAtMDQwMC0wNTAwLTAwMDYtMDAwNzAwMDgwMDA5IDExMXx8fCAyMjI6OiAkMnkkMTAkTWpSbU5UVTFaVFUwWXpNNU4yRTRNLnBERmVpTEZzNzk0SGx5eEZUOUdaMVh5WWI5dGNsYy4gMjIyfHx8IDEyMzo6IGRyaXZlX2Rpcjo6Qmxvb2RzdGFpbmVkIEJyaXRjaGVzO2RyaXZlX2Rpcjo6RG9vbXNkYXkgUmlwcGVyIFNob3VsZGVyO2RyaXZlX2Rpcjo6VGhlIENyb3cgRWF0ZXI7ZHJpdmVfZGlyOjpTbWFsbCBUYXNzZWxzIG9mIHRoZSBCbGFjayBEZWF0aDtkcml2ZV9kaXI6OlRydWUgRm9ybSAtIFJhZGlhbnQgRGVmZW5kZXI7ZHJpdmVfZGlyOjpBcm1zIG9mIHRoZSBBcmN0aWMgT3dsYmVhciBDbGFuO2RyaXZlX2Rpcjo6QXNwZWN0IG9mIHRoZSBEYXJrIFdvb2Q7ZHJpdmVfZGlyOjpTaG91bGRlciBvZiB0aGUgV2FyLUJ1cnJvdyBSYXZhZ2VyO2RyaXZlX2Rpcjo6Q2F1bGRyb24gb2YgWGFocnl4O2RyaXZlX2Rpcjo6VmFsZW50aW5lIFdhcmQ7ZHJpdmVfZGlyOjpTZXZlbi1TZWFsZWQgdGhlIEZ1ciBCcmFjZXI7ZHJpdmVfZGlyOjpBcnNlbmFsIG9mIHRoZSBCbGFkZWtlZXBlcjtkcml2ZV9kaXI6Okd1aXNlIG9mIHRoZSBVbnlpZWxkaW5nIE1hc2s7ZHJpdmVfZGlyOjpQcm92b2NhdGlvbiBvZiBSdWluIEJlbHQ7ZHJpdmVfZGlyOjpSZWxlbnRsZXNzO2RyaXZlX2Rpcjo6Q3JlZWQgb2YgdGhlIFNrdWxsaG91bmQgLSBBcm1vcjtkcml2ZV9kaXI6OkNyZWVkIG9mIHRoZSBTa3VsbGhvdW5kIC0gQmVsdDtkcml2ZV9kaXI6OkNyZWVkIG9mIHRoZSBTa3VsbGhvdW5kIC0gU2hvdWxkZXI7ZHJpdmVfZGlyOjpCZWx0IG9mIHRoZSBCbG9vZCBNb29uO2RyaXZlX2Rpcjo6QnJhY2VycyBvZiB0aGUgU3Vud2Fycmlvcjtkcml2ZV9kaXI6Okh1bWJsZSBEcmlmdGVyIFBhbnRzO2RyaXZlX2Rpcjo6UGhhbnRvbSBDb25jb3JkO2RyaXZlX2Rpcjo6QW5jZXN0b3JzKiBQYXVsZHJvbjtkcml2ZV9kaXI6OkdhdW50bGV0cyBvZiB0aGUgRmluYWwgVXR0ZXJhbmNlO2RyaXZlX2Rpcjo6Um9iZSBvZiB0aGUgSGlkZGVuIFRhbGVudDtkcml2ZV9kaXI6OkhlbG0gb2YgdGhlIFNpbHZlcmVkIFRhbG9uO2RyaXZlX2Rpcjo6U2lsZW50IFNsYXllciAtIE9mZi1IYW5kO2RyaXZlX2Rpcjo6Q2FwZSBvZiB0aGUgSGF6aGFkYWwgTWFnZWJyZWFrZXI7ZHJpdmVfZGlyOjpIZWFydGxlc3MgSHVudCAtIEFybW9yO2RyaXZlX2Rpcjo6Q2FwZSBvZiB0aGUgSHVudGVyKnMgR2xvcnk7ZHJpdmVfZGlyOjpNYXNrIG9mIERhcmsgRmVyb2NpdHk7ZHJpdmVfZGlyOjpIZWFydGxlc3MgSHVudCAtIE9mZi1IYW5kO2RyaXZlX2Rpcjo6QmVhdWxpZXUgUmluZztkcml2ZV9kaXI6OkhlYXJ0bGVzcyBIdW50IC0gV2VhcG9uO2RyaXZlX2Rpcjo6QXJtb3Igb2YgdGhlIE1hemUgS2VlcGVyO2RyaXZlX2Rpcjo6QXJtcyBvZiB0aGUgRm9ybG9ybiBNYXplO2RyaXZlX2Rpcjo6QmFyZGluZyBvZiB0aGUgTWF6ZSBLZWVwZXI7ZHJpdmVfZGlyOjpTZXZlcmluZyBDcmVzdDtkcml2ZV9kaXI6OldoaXAgb2YgdGhlIE92ZXJzZWVyO2RyaXZlX2Rpcjo6QXJtb3Igb2YgU2VhYmxpZ2h0IFByb2Nlc3Npb247ZHJpdmVfZGlyOjpCcmFjZXJzIG9mIFNlYWJsaWdodCBQcm9jZXNzaW9uO2RyaXZlX2Rpcjo6V3JhcHMgb2YgU2VhYmxpZ2h0IFByb2Nlc3Npb247ZHJpdmVfZGlyOjpTZWFibGlnaHQgUHJvY2Vzc2lvbjtkcml2ZV9kaXI6OkFybW9yIG9mIEJyb2tlbiBTY2FsZTtkcml2ZV9kaXI6OkJyYWNlciBvZiB0aGUgRm9yZ290dGVuIFBsYW5lO2RyaXZlX2Rpcjo6QmVsdCBvZiB0aGUgRm9yZ290dGVuIFBsYW5lO2RyaXZlX2Rpcjo6T2F0aGJvdW5kIERlZmlhbnQgSGVsbTtkcml2ZV9kaXI6Ok9mZi1IYW5kIG9mIHRoZSBEcmFnb24qcyBEaXNjaXBsZTtkcml2ZV9kaXI6OlNob3VsZGVycyBvZiB0aGUgU3Vydml2b3I7ZHJpdmVfZGlyOjpBTSBBenppbm90cztkcml2ZV9kaXI6OlZhYWwgdGhlIEFuaW1hdGVkIENvbnN0cnVjdDtkcml2ZV9kaXI6OkdhcnJhbiBEcnl3aXogYW5kIEdhcmFjdGFjdXM7ZHJpdmVfZGlyOjpUcnVzdHkgTWQ5519bnRhaW4gWWFrO2RyaXZlX2Rpcjo6Q2hhb3MgTGVnaW9uIEhlbG07ZHJpdmVfZGlyOjpDaGFvcyBNYXcgSGVhZDtkcml2ZV9kaXI6OkVubWl0eTtkcml2ZV9kaXI6OkF0cmFtZW50b3MgdGhlIEFwb2NhbHlwdGljO2RyaXZlX2Rpcjo6U3RlZWQgb2YgdGhlIERhcmsgQ29ucXVlcm9yO2RyaXZlX2Rpcjo6U2hpZWxkIG9mIHRoZSBEYXJrIENvbnF1ZXJvcjtkcml2ZV9kaXI6OlNoYXJkcyBvZiB0aGUgQmFsZWZ1bCBSZWlnbjtkcml2ZV9kaXI6OlNwYXVsZGVycyBvZiB0aGUgRGFyayBDb25xdWVyb3I7ZHJpdmVfZGlyOjpDYXBlIG9mIHRoZSBFdmVyYmxhY2s7ZHJpdmVfZGlyOjpIb29kIG9mIHRoZSBFdmVyYmxhY2s7ZHJpdmVfZGlyOjpBYmFkZG9uIFJFRCBNZWdhUGFjaztkcml2ZV9kaXI6Ok1hY2Ugb2YgdGhlIENob3NlbiBQcmVtOyAxMjN8fHw=