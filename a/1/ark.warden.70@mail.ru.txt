bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogMDMwMDAyMDAtMDQwMC0wNTAwLTAwMDYtMDAwNzAwMDgwMDA5IDExMXx8fCAyMjI6OiAkMnkkMTAkTWpSbU5UVTFaVFUwWXpNNU4yRTRNLnBERmVpTEZzNzk0SGx5eEZUOUdaMVh5WWI5dGNsYy4gMjIyfHx8IDEyMzo6IGRyaXZlX2Rpcjo6VGFsb25zIG9mIHRoZSBFbmRsZXNzIFN0b3JtIEhlYWQ7ZHJpdmVfZGlyOjpUYWxvbnMgb2YgdGhlIEVuZGxlc3MgU3Rvcm0gTWQ5519bnQ7ZHJpdmVfZGlyOjpDaGFvcyBGdWxjcnVtO2RyaXZlX2Rpcjo6QnVybmluZyBOaWdodG1hcmU7ZHJpdmVfZGlyOjpTaGllbGQgb2YgdGhlIERhcmsgQ29ucXVlcm9yO2RyaXZlX2Rpcjo6VGFsb25zIG9mIHRoZSBFbmRsZXNzIFN0b3JtIFdlYXBvbiBHcmVlbiBTdHlsZTtkcml2ZV9kaXI6OkNhdWxkcm9uIG9mIFhhaHJ5eCBvZiBFbWluZW50IFJldml2YWwgRXhjZXB0aW9uYWw7ZHJpdmVfZGlyOjpUcm9waHkgb2YgdGhlIFdvbGYgSHVudGVyO2RyaXZlX2Rpcjo6VHJ1ZSBGb3JtIC0gUmFkaWFudCBEZWZlbmRlcjtkcml2ZV9kaXI6OkxvbmUgRHJ1aWQgTWVnYVBhY2s7ZHJpdmVfZGlyOjpMeWNhbiBLaXNpbGV2IE1vZE1ha2VyIE1lZ2FQYWNrO2RyaXZlX2Rpcjo6U2F2YWdlIEJlYXN0IFNoYXBlc2hpZnQ7ZHJpdmVfZGlyOjpTYXZhZ2UgQmVhc3QgU3VtbW9uIFdvbHZlcztkcml2ZV9kaXI6OlBhdWxkcm9uIG9mIHRoZSBHcmV5IEdob3N0O2RyaXZlX2Rpcjo6U3VsbGVuIFJhbXBhcnQ7ZHJpdmVfZGlyOjpTdWxsZW4gSG9sbG93O2RyaXZlX2Rpcjo6U3VsbGVuIEhhcnZlc3Q7ZHJpdmVfZGlyOjpIZWFkIG9mIHRoZSBTYW5ndWluZSBTcGVjdHJ1bTtkcml2ZV9kaXI6OlN0cnlnd3lyIEJsb29kc2Vla2VyO2RyaXZlX2Rpcjo6QXJtcyBvZiBIYXJ2ZXN0KnMgSG91bmQ7ZHJpdmVfZGlyOjpCYWNrIEhvb2s7ZHJpdmVfZGlyOjpGdXJ5YmxhZGU7ZHJpdmVfZGlyOjpGdXJ5YmxhZGVzIFBhY2s7ZHJpdmVfZGlyOjpUaGlyc3Qgb2YgRXp0emhvayBCdW5kbGUgUHJlbTtkcml2ZV9kaXI6OkFybW9yIG9mIHRoZSBGZWFyZnVsIEFyaWEgUHJlbTtkcml2ZV9kaXI6OkF2b3dhbmNlIG9mIHRoZSBWZWlsZWQgT25lcztkcml2ZV9kaXI6OkdvdGhpYyBXaGlzcGVyIEJsYWRlO2RyaXZlX2Rpcjo6TWFuaWZvbGQgUGFyYWRveCBQQSBBcmNhbmEgU3R5bGUgMztkcml2ZV9kaXI6OlZhbGt5cmllKnMgU2hhZGUgSGVhZDtkcml2ZV9kaXI6OkJlbHQgb2YgdGhlIEJsb29kcm9vdCBHdWFyZDtkcml2ZV9kaXI6OkVkZ2Ugb2YgdGhlIEZsb3dlcmluZyBTaGFkZTtkcml2ZV9kaXI6OlNvdWwgRGlmZnVzZXIgUHJlbTtkcml2ZV9kaXI6OlBoYW50b20gQXNjZW5zaW9uO2RyaXZlX2Rpcjo6UGhhbnRvbSBBc2NlbnNpb24gV2VhcG9uO2RyaXZlX2Rpcjo6RG90YSAyIENoYW5nZXIgRWRpdGlvbiBEYW1hcmFrYW4gTXV6emxlIG9mIHRoZSBDcmltc29uIFdpdG5lc3M7ZHJpdmVfZGlyOjpTaWxlbmNlciBNZWdhUGFjaztkcml2ZV9kaXI6OkFzcGVjdCBvZiBPc2NpbGxhO2RyaXZlX2Rpcjo6R2xhaXZlIG9mIE9zY2lsbGE7ZHJpdmVfZGlyOjpDYW5ub24gb2YgdGhlIEpvbGx5IFJlYXZlcjtkcml2ZV9kaXI6OkdyYW5kIEFic2Nlc3Npb247ZHJpdmVfZGlyOjpJbnNhdGlhYmxlIEJvbmVzYXcgUHJlbTtkcml2ZV9kaXI6OlJpcHBlcnMgUmVlbCBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzO2RyaXZlX2Rpcjo6UXVlZW4gb2YgUGFpbiBBcmNhbmEgTWVnYVBhY2s7ZHJpdmVfZGlyOjpFbWluZW5jZSBvZiBSaXN0dWwgV2hpcCBBdHRhY2s7ZHJpdmVfZGlyOjpXaW5ncyBvZiB0aGUgT2JzaWRpYW4gTmlnaHRtYXJlO2RyaXZlX2Rpcjo6U2lsZW50IFdha2U7ZHJpdmVfZGlyOjpNYXNrIG9mIFplYnVsb247ZHJpdmVfZGlyOjpSZWFwZXJzIFdyZWF0aDtkcml2ZV9kaXI6OlNoYWRvd3Mgb2YgUmF2ZW5zbWFuZSBDbG9haztkcml2ZV9kaXI6OlNraXJ0IG9mIHRoZSBTYWNyZWQgSHVudDtkcml2ZV9kaXI6OlF1aXZlciBvZiB0aGUgS2hhLVJlbiBGYWl0aGZ1bDtkcml2ZV9kaXI6OkNvcnNldCBvZiB0aGUgTWFzdGVyIFRoaWVmO2RyaXZlX2Rpcjo6TWFuaWFzIE1hc2sgUHJlbTtkcml2ZV9kaXI6OkhpZGRlbiBWZWN0b3IgLSBCbGFkZTtkcml2ZV9kaXI6OkhpZGRlbiBWZWN0b3IgLSBCZWx0O2RyaXZlX2Rpcjo6SGlkZGVuIFZlY3RvciAtIEFybW9yO2RyaXZlX2Rpcjo6SGlkZGVuIFZlY3RvciAtIEhhdDtkcml2ZV9kaXI6OkNvbnN0ZWxsYXRpb24gQXJtb3I7ZHJpdmVfZGlyOjpDb25zdGVsbGF0aW9uIFdlYXBvbjsgMTIzfHx8