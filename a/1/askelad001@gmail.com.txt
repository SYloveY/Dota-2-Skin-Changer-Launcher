bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogQ0Y5OUE2NEMtNkEyQS04RDFFLURBRUItMTQ0Rjg5QjVGRDMyOzsgMTExfHx8IDIyMjo6ICQyeSQxMCRNMlJqWlRZMk9ESmhaV1JsWldZNE5PanZRaE9mdlN5Zk1FSHJqVnFDOWR6dUJJVlV5SnlOMiAyMjJ8fHwgMTIzOjogQmVhc3Qgb2YgdGhlIENyaW1zb24gUmluZyBCcmFjZXJzO01vdW50IG9mIHRoZSBXaW5nZWQgU2VudGluZWw7R29sZGVuIFR3aWxpZ2h0IFNjaGlzbTtHb2xkZW4gTW9vbmZhbGwgUHJlbTtKdWdnZXJuYXV0IEFyY2FuYSBCbGFkZWZvcm0gTGVnYWN5O0NyaW1zb24gRWRnZSBvZiB0aGUgTG9zdCBPcmRlcjtGb3J0dW5lcyBUb3V0IFByZW07UHJvZ2VuaXRvcnMgQmFuZTtHb2xkZW4gQXJtcyBvZiBEZXNvbGF0aW9uIFByZW07RmxvdXJpc2hpbmcgTG9kZXN0YXIgUHJlbTtWaXJnYXMgQXJjO0dsb3J5IG9mIHRoZSBTb3V0aCBTdGFyO1BoYW50b20gQXNjZW5zaW9uO1RlbXBlc3QgUmV2ZWxhdGlvbjtUZW1wZXN0IEhlbG0gb2YgdGhlIFRodW5kZXJnb2QgKyBSaWdodGVvdXMgVGh1bmRlcmJvbHQ7UmljayBhbmQgTW9ydHkgQW5ub3VuY2VyO1JpY2sgYW5kIE1vcnR5IE1lZ2EtS2lsbDtNYXcgb2YgRXp0emhvaztUaGlyc3Qgb2YgRXp0emhvayBCdW5kbGUgUHJlbTtEQUMgMjAxNSBNaXJhbmEgQ3Vyc29yIFBhY2s7RGFtYXJha2FuIE11enpsZSBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzO0FieXNtIGRvbWluYXRvciBsb2FkaW5nc2NyZWVuO0N1c3RvbSBEYXNoYm9hcmQgMTU7QXhlIGZ1bGwgSW1tb3J0YWxzIE1lZ2FwYWNrIGFsdDtEYXJrYnJldyBFbmZvcmNlciBhbmQgRXRlcm5hbCBSYWRpYW5jZSBCbGFkZXMgYW5kIE1pZGFzIEtudWNrbGVzIE1lZ2FQYWNrO0FudGlNYWdlIFJFRCBNZWdhUGFjaztCcmlzdGxlYmFjayBNZWdhUGFjaztNYXJzIFRJMTAgQ29sbGVjdG9ycyBDYWNoZSBNZWdhUGFjaztTdmVuIEltbW9ydGFscyBNZWdhUGFjayBVUDtTRiBBcmNhbmEgTWVnYXBhY2s7TGVnaW9uIENvbW1hbmRlciBNb2RNYWtlciBNZWdhUGFjaztXaW5kcmFuZ2VyIEFyY2FuYSBzdHlsZSAyICsgV1IgaW1tb3J0YWw7U2xhcmRhciBNZWdhUGFjayBzZXQ7TmlnaHRzdGFsa2VyIE1lZ2FQYWNrIHNldDtTaWxlbmNlciBNZWdhUGFjaztCdXJuaW5nIE5pZ2h0bWFyZTtQdXBwZXQgUHVkZ2UgUGVyc29uYSAoeWQ5519IGNhbiBhZGQgSG9vaykgVVA7V3JhaXRoIEtpbmcgQXJjYW5hIE1lZ2FQYWNrO1RpbWJlcnNhdyBNZWdhUGFjaztRdWVlbiBvZiBQYWluIEFyY2FuYSBNZWdhUGFjaztHb2xkZW4gRGFyayBNYXcgSW5oaWJpdG8gYW5kIEdvbGRlbiBQcm9mYW5lIFVuaW9uIGFuZCBHb2xkZW4gRHJlYWQgUmVxdWlzaXRpb24gTGlmZXN0ZWFsZXIgSW1tb3J0YWxzIE1lZ2FwYWNrOyAxMjN8fHw=