bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogIDExMXx8fCAyMjI6OiAkMnkkMTAkWkRSbE5HUTNNRGcxWldJd04yWTJaZWNVdXRCUXVLb3Nhd00yTmV0MXBiR3RIcnZtSDFTeFcgMjIyfHx8IDEyMzo6IEhhcnZlc3RlZCBTaG91bGRlcnM7TGVnYWN5IG9mIGEgTG9zdCBBZ2UgLSBTdGVnYWJvYXI7TGVnYWN5IG9mIGEgTG9zdCBBZ2UgLSBBeGU7U3VybHkgQm9nc3RvbXBlciBGaXNoY2x1YjtQaXN0b24gSW1wYWxlcjtCbGFzdGZvcmdlIEV4aGFsZXI7SW5mZXJuYWwgQ2hpZWZ0YWluIG9mIHRoZSBDcmltc29uIFdpdG5lc3M7Q2luZGVyIFNlbnNlaSBTdHlsZTtSYXBpZXJzIG9mIHRoZSBCdXJuaW5nIEdvZCBWIDMuMTtFaWRlbG9uIG9mIFR3aXN0ZWQgTWFlbHN0cm9tO0tpZHMgT3JiO1B5cmV4YWVjIEZsb2U7QmFyZGluZyBvZiBDaGltZXJpYyBSYXBwb3J0O0dvbGRlbiBTaGFyZHMgb2YgRXhpbGU7U29sYXIgR3lyZTtTb2xhciBGb3JnZTtLaXRlc3RhciBTcGxlbmRvciBCZWFrO05vdmEgb2YgR29sZGVuIE5pcnZhbmE7R29sZGVuIFNjYXZlbmdpbmcgR3V0dGxlc2x1ZztHcmFuZCBBYnNjZXNzaW9uIEhvb2sgQnVuZGxlO1B1ZGdlIGJsb29kIGFmdGVyIGhvb2s7Um95YWwgRGVjcmVlIEtuaWZlIEF0dGFjaztBcm1zIG9mIERlc29sYXRpb24gUHJlbTtUb29scyBvZiB0aGUgRmluYWwgVXR0ZXJhbmNlO1RoZSBMaWdodG5pbmcgT3JjaGlkIG9mIEVtaW5lbnQgUmV2aXZhbDtSb3NlIG9mIHRoZSBDb3JyaWRhbiBNYWVzdHJvO0NvbXBsZXRlIEdhcmIgb2YgdGhlIENvcnJpZGFuIE1hZXN0cm87UnVhbiBvZiBCbG9zc29taW5nIEhhcm1vbnk7UGluayBDb2xvciBmb3IgVEI7U3dvcmQgb2YgdGhlIENvbG9zc3VzIFByZW07TWFqZXN0eSBPZiBUaGUgQ29sb3NzdXMgLSBNb25vbGl0aDtNYWplc3R5IE9mIFRoZSBDb2xvc3N1cyAtIENvYmJsZTtQYWRkYXBvbiBvZiBSaWJiaXRhciBWIDQuMDtRdWVlbiBvZiB0aGUgSmFjayBCb21iZXI7TmlnaHQgVGVycm9ycyBIYXQ7Rmxhc2hwb2ludCBQcm9zZWx5dGUgLSBIZWFkO0RhdGFzdGFyIFByb2dlbml0b3IgKEFsdGVyIEFyY2FuYSk7VHdpbGlnaHQgU2NoaXNtO0hlbG0gb2YgdGhlIFdpbmdlZCBTZW50aW5lbDtMaW5lYWdlIE1vdW50IG9mIHRoZSBSYWlkZm9yZ2VkIFJpZGVyO0F1c3BpY2Ugb2YgdGhlIFdoeXJsZWd5Z2UgUHJlbTtNYXNrIG9mIHRoZSBDb25maWRhbnQ7Q29hdCBvZiB0aGUgV2luZHdhcmQgUm9ndWU7UmFwaWVyIG9mIHRoZSBXaW5kd2FyZCBSb2d1ZTtHaWxkZWQgRWRnZSBWIDIuMDtUaGUgR29sZGVuIEJhcmIgb2YgU2thZGk7SXJvbiBTdXJnZSBWIDIuMjtTYXZhZ2UgTWV0dGxlO0ZvY2FsIFJlc29uYW5jZSBWIDMuMDtTcGF1bGRlcnMgb2YgdGhlIFBzaW9uIElucXVpc2l0b3I7Rmx1dHRlcmluZyBBbWV0aHlzdCBUcmFwICsgSWNvbjtSZWNsdXNlIFJlZWYgRGVuaXplbjtBcm0gRmlucyBvZiB0aGUgRGVlcHdlZWQgRHJvd25lcjtHb2xkZW4gUGFsZSBNYXVzb2xldW07QmxpbmsgRGFnZ2VyIGx2bCAyIFRJLTYgRWZmZWN0OzI1IGx2bCBwaW5nO1RJLTQgZWZmZWN0IEJvdHRsZTtDYXZlcm5pdGUgRGlyZSBDcmVlcHM7VEktNSBlZmZlY3QgRGFnb247RW1pbmVuY2Ugb2YgUmlzdHVsIERlbnkgMjtFdWxzIFNjZXB0ZXIgVEktNiBFZmZlY3Q7Rm9yY2UgU3RhZmYgVEktNiBFZmZlY3Q7VEktNCBlZmZlY3QgcmVnZW4tZm91bnRhaW47TGV2ZWxVcCBUSS02IEVmZmVjdDtNam9sbG5pciBUSS02IEVmZmVjdDtQaGFzZSBCb290cyBUSS02IEVmZmVjdDtSaXZlciBWaWFsIFBpbms7VGktOSBSb3NoYW47VEktNSBlZmZlY3QgVGVsZXBvcnQ7VEktOCBTaGl2YXMgRWZmZWN0O0d1YXJkaWFucyBvZiB0aGUgTG9zdCBQYXRoIERpcmUgVG93ZXJzO0d1YXJkaWFucyBvZiB0aGUgTG9zdCBQYXRoIFJhZGlhbnQgVG93ZXJzO1BsYXRpbnVtIEJhYnkgUm9zaGFuO0RBQyAyMDE1IENoYW9zIEtuaWdodCBDdXJzb3IgUGFjaztDaHJvbXkgdGhlIENlbnRpcGVkZSBXYXJkO1dlYXRoZXIgU25vdztQdW1wa2luIFRyZWVzIFVQO1RlcnJhaW4gLSBXaW50ZXI7UnViaWNrIEFyY2FuYSBFTkcgVm9pY2U7SW52b2tlciBsb2Fkc2NyZWVuO0dyZWVuIFVyYWwgSFVEO01vbHRlbiBDbGF3IFByZW07Q3J1Y2libGUgb2YgUmlsZTtNYW50bGUgb2YgdGhlIENpbmRlciBCYXJvbiBTdHlsZSAxO0JlbHQgb2YgdGhlIFByb3ZlbjtBcm1hdHVyZSBvZiB0aGUgQmVsbGlnZXJlbnQgUmFtIEhlbG07QXJtYXR1cmUgb2YgdGhlIEJlbGxpZ2VyZW50IFJhbSBTaG91bGRlcjtNZXJhbnRoIERyYWdvb24gRmluYmxhZGU7TGV2aWF0aGFuIFdoYWxlIEJsYWRlIG9mIEVtaW5lbnQgUmV2aXZhbDtJbWFnZSBvZiBTZWFib3JuZSBSZXByaXNhbDtDbGF3IG9mIFNlYWJvcm5lIFJlcHJpc2FsO0JlbHQgb2YgU2VhYm9ybmUgUmVwcmlzYWw7SGFyYm9yYmxvc3NvbSBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzO0Zsb3VyaXNoaW5nIExvZGVzdGFyIFByZW07QXJtb3Igb2YgdGhlIEJvaWxlcnBsYXRlIEJydWlzZXI7QXJtcyBvZiB0aGUgQm9pbGVycGxhdGUgQnJ1aXNlcjtQcmlzb25lcnMgQW5jaG9yO0hlYXZ5IEJ1dHRlcmZseSBCbGFkZXM7UmVjdGlmaWVyO0dvbGRlbiBJbW1vcnRhbCBQYW50aGVvbjtUZW1wZXN0IEhlbG0gb2YgdGhlIFRodW5kZXJnb2QgUHJlbTtTeW1ib2wgb2YgdGhlIEtpbmcgUmVzdG9yZWQ7TXVsY3RhbnQgUGFsbDtMaW9uIEdyZWVkeSBLaW5nIEFybXM7SW5mZXJuYWwgV2luZ3M7RmluIEtpbmcqcyBDaGFybTtBdmFkYSBLZWRhdnJhO0FnaGFuaW1zIEJhc2hlciBQcmVtO0dvbGRlbiBHcmF2ZWxtYXc7QnJhY2VycyBvZiB0aGUgQ2F2ZXJuIEx1bWluYXI7TWlraSBTYXlha2EgZm9yIEFiYmFkb24gYnkgUGF0Y2hvdWxpIEtub3dsZWRnZTtCcnVtYWwgQmVyc2Vya2VyO0FuY2llbnQgTWVjaGFuaXNtO0ljZXBsYWluIFJhdmFnZXI7SHVtYmxlIEtuaWdodDtOdWNsZWFyIENsb2Nrd2VyaztTYWlneWQ5519amkgWW95b2tvIGZvciBEUCBieSBQYXRjaG91bGkgS25vd2xlZGdlO0hlYXZlbmx5IFN3b3JkIERvb20gViAzLjA7TGFkeSBTeWx2YW5hcyBmb3IgRHJvdyAtIExvbmVycyBWYW5pdHk7QWJ5c3NhbCBWb3J0ZXg7U3RlYW1wb3dlcmVkIE1hZ2ljIFNldDtXaXNkb20gb2YgdGhlIE1pZG5pZ2h0IFN1bjtBa2FtYW5haCBmb3IgTGVnaW9uIENvbW1hbmRlciBWIDMuMTtUaGUgU2VyYWt1bmQgVHlyYW50O0dvZGRlc3Mgb2YgdGhlIFVuZGVyd29ybGQ7TG9uZSBEcnVpZCBXaW5uaWUgUG9vaCBWIDIuMDtIdW50ZXIgb2YgS2luZ3MgViAyLjA7TmVwdHVuZSBmb3IgTWFycyBieSBQYXRjaG91bGkgS25vd2xlZGdlO0plc3RlciBLaW5nIFNldDtNYXNrcyBvZiBNaXNjaGllZjtJemF5b2kgTWlrdSBmb3IgTmFnYSBTaXJlbiBieSBQYXRjaG91bGkgS25vd2xlZGdlO0RlYXRoIE5lY3JvbGlnaHQgViAzLjI7Q2ljYXRyaXggUmVnYWxpYSBSZWQ7R3VhcmRpYW4gb2YgTWV0YWw7RGVzZXJ0IEFzc2Fzc2luO0dvcG9QdWRnZTtCbGFkZWJyZWFrZXIgT3JkZXIgVmFsZWVyYSBmb3IgUmlraTtSdWxlciBvZiB0aGUgRnJvc3RiaXRlIER1bmVzO1RveGljIERlYXRoIEVhdGVyO1lheWEgZm9yIFNsYXJkYXIgYnkgUGF0Y2hvdWxpIEtub3dsZWRnZTtBdXJhbnRpYWNvIG1pbGl0aXM7RnVsbCBNZXRhbCBUZWNoaWVzO1RpbnkgTWl4IFYgNC4wO0hha3VyZWkgUmVpbXUgZm9yIFRyb2xsIFdhcmxvcmQgYnkgUGF0Y2hvdWxpIEtub3dsZWRnZTtBYnlzc2FsIEN1aXJhc3M7UG9sYXIgVXJzYTtPbGQgVmVub21hbnNlciBNb2RlbDtDaGlsbCBvZiB0aGUgS2VlcGVycyBHYXplO0RyZWFkIENvbXBhY3Q7UGl4ZWwgV2luZHJ1bm5lcjtTZlMgRGVtb24gSHVudGVyIEZvciBBbnRpbWFnZTtXZXJld29sZiB0byBCbG9vZHNlZWtlcjtXeXJtYnJldyBDb25ub2lzc2V1cjtSb3NlIEFuZCBUaGUgQmVhc3Q7Q2xpbmt6IENoaW5hIE1vZGVsO1NoZXJtYW4gTWFpZGVuIFYgNC4xO0J1cmdsYXIgb2YgV2FzcDtZYWdva29ybyBFaXJpbiBmb3IgRGF6emxlIGJ5IFBhdGNob3VsaSBLbm93bGVkZ2U7TGlnaHRuaW5nIEhhcmJpbmdlcjtFbWVyYWxkIERyYWdvbjtDaGxvZSB2b24gRWluemJlcm4gZm9yIEVhcnRoIFNwaXJpdCBieSBQYXRjaG91bGkgS25vd2xlZGdlO1dhcmRlbiBvZiB0aGUgV3lybWZvcmdlIFNoYXJkO1NwYXRpYWwgUmlmdGVyIFYgMy4wO1BvcnRlbnQgUGF5bG9hZDtSZWNrbGVzcyBWaWdvciBWIDIuMTtMb2xsaXBvcCBKdWdnZXJuYXV0IFYgMy4wO1NwaXJldGhvcm4gUmVnYWxpYSBWIDIuMDtDb21wZW5kaXVtIEJsb29keSBSaXBwZXI7TWVtb3JpZXMgb2YgdGhlIFZvdyBFdGVybmFsO1NwaXJpdCBvZiBUaGUgU2FjcmVkIEdsb3ZlO1JlbWlsaWEgU2NhcmxldCBmb3IgTlMgYnkgUGF0Y2hvdWxpIEtub3dsZWRnZTtTaG9yZWxpbmUgU2FwcGVyO0F1c3BpY2lvdXMgU2VhZHdlbGxlcjtIYXJzaCBTb2pvdXJuO0xlQmxhbmMgZm9yIFB1Y2s7RGVtb25pYyBQdWduYSBWIDMuMDtTYWludCBSYXpvcjtUaGUgQXJjYW5pc3RzIEd1aXNlO0Nyb3duIG9mIFRoZSBOaWdodHdvcmxkO1RoZSBUcnVlIENyb3cgViAyLjA7R29sZCBTa3ltYWdlO1RvbW9lIE1hbWkgZm9yIFNuaXBlciBieSBQYXRjaG91bGkgS25vd2xlZGdlO0l6YXlvaSBTYWt1eWEgZm9yIFRpbmtlciBieSBQYXRjaG91bGkgS25vd2xlZGdlO0Jhcmsgb2YgdGhlIEFnZWxlc3MgV2l0bmVzcyBEaXN0aW5ndWlzaGVkO0Zyb3N0IEJyaWdhZGllcjtTZWFibGlnaHQgUHJvY2Vzc2lvbjtTaGlyYWkgS3Vyb2tvIGZvciBWZW5nZWZ1bCBTcGlyaXQgYnkgUGF0Y2hvdWxpIEtub3dsZWRnZTtQcmlueiBFdWdlbiBmb3IgVmlwZXIgYnkgUGF0Y2hvdWxpIEtub3dsZWRnZTtUb2tpc2FraSBLdXJ1bWkgZm9yIFdlYXZlciBieSBQYXRjaG91bGkgS25vd2xlZGdlO1dpbmdzIG9mIENvbG9yZnVsIEljZWNyeXN0YWxzO0ljZSBMaW5hIDJuZCBTdHlsZTtHb2xkZW4gU2xhcmsgViAyLjA7QXJtcyBvZiBSaXNpbmcgRnVyeTtCb3VudHkgSHVudGVyIE1hbmlhYyBTZXQ7RGl2aW5lIEFuY2hvciBTdHlsZSAyO0NhZXJ1bGEgU2lsdmE7QWxsZmF0aGVyIG9mIE5hdHVyZSBTZXQ7TXlzdGljIG9mIENlbGVzdGlhbCBBcnQ7VHJlayBvZiB0aGUgVHJhaWxibGF6ZXI7RmF0aGVyIE9mIFNwaXJpdHM7RGVtb25zIEJhY2NoYW5hbDtFcnVwdGluZyBXcmF0aCBWIDIuMDtDb3JydXB0ZWQgQnJvb2Rtb3RoZXI7U3RlbGxhciBKYWRlO1BzaW9uaWMgU2FnZTtJY2UgU2hha2VyOyAxMjN8fHw=