bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogIDExMXx8fCAyMjI6OiAkMnkkMTAkT1RZM1lXTXpaakZtT1RsaU1qRXpZdW1LQWpIelcuUDlNcjdKNXdqMTM5QUdEVnNLcktGLlMgMjIyfHx8IDEyMzo6IFJlcHRpbGlhbiBSZWZ1Z2UgRGlyZSBDcmVlcHM7V2VhdGhlciBTcHJpbmc7V2VhdGhlciBNb29uYmVhbTtUZXJyYWluIC0gU3ByaW5nO1JlcHRpbGlhbiBSZWZ1Z2UgUmFkaWFudCBDcmVlcHM7V2VhdGhlciBBc2g7UGVkZXN0YWwgVGktNSBSYWRpYW50O0RlY2xhcmF0aW9uIG9mIHRoZSBEaXZpbmUgTGlnaHQgUmFkaWFudCBUb3dlcnM7VGVycmFpbiAtIFNhbmN0dW1zIG9mIHRoZSBEaXZpbmU7R2xvcnkgb2YgdGhlIEVsZGVyZmxhbWUgLSBIZWFkO0xpbmEgQW1iZXIgUXVlZW4gQmVsdDtTb3VsIG9mIHRoZSBTbGF5ZXIgUHJlbTtIZWxsZmlyZSBJbnN1cmdlbnQgTmVjaztBcmNhbmEgQ3J5c3RhbCBNYWlkZW4gRnJvc3QgQXZhbGFuY2hlO0Zyb3N0IEF2YWxhbmNoZSBQcmVtO0dpbGRlZCBGYWxjb24gQ2xvYWs7V2luZHJhbmdlciBBcmNhbmEgc3R5bGUgMTtBcm1vciBvZiB0aGUgUmlzaW5nIEdhbGU7V2luZHJhbmdlciBZZWxsb3cgSW1tb3J0YWwgQmlyZDtCbG9vZGZlYXRoZXIgV2luZ3MgUHJlbTtEb3RhQ2luZW1hIC0gUXVlZW4gb2YgUGFpbiBTcGVsbHM7QXJjYW5hIERyZWFkIFJldHJpYnV0aW9uO0RyZWFkIFJldHJpYnV0aW9uO1ZhbGVudGluZSBXYXJkO1NlcnJha3VyYSBQcmVtO0dlbmppIFN3b3JkIFByZW1pdW0gRWRpdGlvbiBTZXJyYWt1cmEgU3R5bGU7SnVnZ2VybmF1dCBQYWNrZXRmYWNlO0xpbmVhZ2Ugb2YgdGhlIFN0b3JtbG9yZHMgLSBCYWNrO1RvbW8qa2FuIEluY2FybmF0ZSBBcm1vcjtUb21vKmthbiBJbmNhcm5hdGUgSG9vZDtUb21vKmthbiBJbmNhcm5hdGUgQXJiYWxlc3Q7VG9tbyprYW4gSW5jYXJuYXRlIFRhaWw7QWdoYW5pbSBEdW5nZW9uIFNjZXB0ZXIgRWZmZWN0O0N1c3RvbSBCbHVlIEltbW9ydGFsIENhcGU7V2luZHJhbmdlciBDdXN0b20gQmx1ZSBJbW1vcnRhbCBCb3c7R3VhcmRpYW5zIG9mIHRoZSBMb3N0IFBhdGggRGlyZSBUb3dlcnM7Q3Jvd24gb2YgdGhlIFdpbnRlcm1vb247R29sZGVuIE1hc2sgb2YgTWV0aXJhO01hc2sgb2YgTWV0aXJhO1dvbGYgU2thZGkgTWQ5519bnQgZm9yIE1pcmFuYTtTdHJhbmdlciBpbiB0aGUgV2FuZGVyaW5nIElzbGVzO1F1ZWVuIG9mIFBhaW4gQXJjYW5hIE1lZ2FQYWNrO1NpbHZlcnd1cm0gU2FjcmlmaWNlO01pcmFuYSBNZWdhUGFjazsgMTIzfHx8