limitHWID:: 1 000||| 111::  111||| 222:: $2y$10$NjdmNDE3ZTQyYmZkZjM4Nu4YRbxt3GdQ4PYZCW0y5ZzlgLR3C6Hey 222||| 123:: Royal Winterbloom Arms;Arcana Crystal Maiden Frost Avalanche;Yulsaria*s Glacier Prem;Glacial Gardens Shoulder;Ice Blossom;Silent Wake of the Crimson Witness;Dread Retribution;Bracers of the Cavern Luminar;Planetfall;Judgement of the Fallen;Perceptions of the Eternal Mind;Jewel of Aeons;Mace of Aeons Prem;Bracers of Aeons;Claszureme Incursion Belt;Dark Artistry Throwback;Gothic Whisper Mask;Gothic Whisper Cape;Gothic Whisper Belt;Avowance of the Veiled Ones;Manifold Paradox PA Arcana Style 3;Eminence of Ristul Whip Attack;Crown of the Eminence of Ristul;Grace of the Eminence of Ristul;Raiments of the Eminence of Ristul;Phantom Advent UP;Phantom Advent Belt UP;Phantom Advent Shoulders UP;Phantom Advent Weapon UP;Vigil Signet;Vigil Odyssey;Vigil Triumph;Indomitable Legacy - Shoulder;Indomitable Legacy - Belt;Sword of the Colossus;Medium Frostmoot;Windranger Arcana style 1;Crown of the One True King;Declaration of the Divine Light Radiant Towers;Declaration of the Divine Shadow Dire Towers;Terrain - Immortal Gardens;Emblem of the Crystal Echelon;AntiMage Female;Stranger in the Wandering Isles;Baby Toy Pudge Persona; 123|||