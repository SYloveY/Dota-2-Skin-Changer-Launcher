bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogMEFEMzcyMjAtMTlBNC02QTYwLTdFMTUtMEM5RDkyODU5N0RCIDExMXx8fCAyMjI6OiAkMnkkMTAkWlRGbFpUUmhaRFkxWm1KbU56UXdZZWw1M3JFSUVCQUFsckljdHBWcmhzb1UvdDdiMlpJcC4gMjIyfHx8IDEyMzo6IEJhcmRpbmcgb2YgQ2hpbWVyaWMgUmFwcG9ydDtIZWFsaW5nIEZvdW50IG9mIHRoZSBMb3N0IElzbGVzO0JvbmRzIG9mIE1hZG5lc3MgU2V0IFN0eWxlIDE7QmVhdXRpZnVsIEhhdW50aW5nO1NpbGVudCBFZGljdDtUaW55IEJhZCBUbyBUaGUgQm9uZTtJc2h1bC1TaG9nIHRoZSBXYXRjaGVyO1RlbXBlc3QgSGVsbSBvZiB0aGUgVGh1bmRlcmdvZCBQcmVtO0tpcmluIFJpZGVyIFNldDtBbnRpcG9kZWFuIEFsbGllcztPY2VhbiBDb25xdWVyb3I7QXVzcGljaWQ5519cyBTZWFkd2VsbGVyO0VuZGxlc3MgTmlnaHQ7VW5kZWZlYXRlZCBHZW5lcmFsO0h1bnQgb2YgdGhlIFdlZXBpbmcgQmVhc3Q7V2FycmlvciBvZiBBcmVuYSBTZXQ7Um9zZSBBbmQgVGhlIEJlYXN0O0JsYXppbmcgT2JsaXZpb24gViAzLjA7TGFkeSBTeWx2YW5hcyBmb3IgRHJvdyBSYW5nZXIgViAzLjA7QW1iZXJsaWdodCBSYWltZW50IFYgMi4wO1RoZSBIb2xsb3cgU2V0O1RoZSBCYXB0aXNtIG9mIE1lbHRpbmcgRmlyZTtUaGUgUGF0aCBvZiBPZG9jb2VsZXVzO1dpdGNoIEh1bnRlciBUZW1wbGFyO0V2ZXJsYXN0aW5nIEhlYXQgViAyLjA7Uml0ZXMgb2YgVmlsZSBDb252b2NhdGlvbjtUaGUgU2VyYWt1bmQgVHlyYW50O01pZ2h0IG9mIHRoZSBHYWxsb3BpbmcgQXZlbmdlciBWIDIuMTtJbXBlcmlhbCBFbnZveTtTZXJwZW50IG9mIHRoZSBFbWVyYWxkIFNlYSBWIDMuMDtTbm93c3Rvcm0gSHVudHJlc3MgViAyLjE7VW5mZXR0ZXJlZCBNYWxldm9sZW5jZTtNYXN0ZXIgTmVjcm9tYW5jZXIgViAyLjE7Q2ljYXRyaXggUmVnYWxpYSBCbGFjaztNYW5kYXRlIG9mIHRoZSBOYW1lbGVzcztDcmVlcGluZyBTaGFkb3c7TWF6ZSBXYXRjaGVyIFNldDtSdWxlciBvZiB0aGUgRnJvc3RiaXRlIER1bmVzO1NwaW5lcyBvZiB0aGUgU3Vua2VuIEdhb2xlcjtUaGUgRHdhcmYgRW5naW5lZXI7UmlwdGlkZSBSYWlkZXIgViAyLjA7RW5kdXJpbmcgU29saXR1ZGU7RWxlbWVudGFsIFJlYWxtcyBWIDIuMDtBcm1hdHVyZSBvZiB0aGUgQmVsbGlnZXJlbnQgUmFtIEJsdWU7U2FtdXJhaSBTZXQ7QmFyayBvZiB0aGUgQWdlbGVzcyBXaXRuZXNzO0h1bnRlciBvZiB0aGUgQ3J5c3RhbCBEcmlmdDtEcmVhZGhhd2sgQXJtb3I7VGhlIEluZmVybmFsIE1hc3RlcjtUaGUgRHVzayBDcmF3bGVyIFNldDtCZWFyZXIgb2YgdGhlIEFya3R1cmFuIFRhbG9uO0dyaW0gRGVzdGlueTsgMTIzfHx8