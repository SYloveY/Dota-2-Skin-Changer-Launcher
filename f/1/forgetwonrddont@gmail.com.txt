limitHWID:: 1 000||| 111::  111||| 222:: $2y$10$MjZlYmY1OWM1YmU0ZDEzNOURToGwVeqUf.Wk1KYu2.NugxteZFMHW 222||| 123:: Immortal Invoker Kid;Hidden Vector - Blade;Hidden Vector - Hat;Hidden Vector - Belt;Hidden Vector - Armor;Manifold Paradox PA Arcana Style 3;Benevolent Companion V 2.0;Creators Light Color for TB;Focal Resonance V 3.0;Pale Edge V 2.0;Golden Mandate of the Stormborn;The Lightning Orchid of Eminent Revival Exceptional;Blossom of the Merry Wanderer;Staff of the Demon Trickster;Mask of the Demon Trickster;Armor of the Demon Trickster Green;Pauldrons of the Demon Trickster;Garb of the Masks of Mischief;Fortunes Tout Prem;Juggernaut Arcana Red Bladeform Origins;Atomic Ray Thrusters Prem;Crimson Bracers of Aeons Prem;Mace of Aeons Prem;Apogee of the Guardian Flame;Manias Mask Prem;Golden Silent Wake;Golden Origins of Faith Prem;Hair of the Survivor;Bracers and Shoulders of the Survivor;Bitter Lineage Immortal Axes;Scale of Bitter Spoil Immortal UP;Crown of the One True King;Blistering Shade of the Crimson Witness;Crimson Unbroken Fealty;Declaration of the Divine Light Radiant Towers;Declaration of the Divine Shadow Dire Towers;Terrain - Sanctums of the Divine;Reptilian Refuge Radiant Creeps;Cavernite Dire Creeps;Chicken Hut Ward;Enigmatic Emblem of the Diretide - Red;TI-6 Evil Geniuses TP Effect;Sword of the Colossus;Transversant Soul of the Crimson Witness Prem;Phantom Advent;Soul Diffuser Prem;Bombtrails and Boomsticks Squee;Golden Rectifier;Controlled Burn;Golden Piscean Pulverizer;Emerald Conquest;Coat of Forlorn Descent;Armor of Grim Reformation;Crimson Mournful Reverie;Helm of Echoes;Wings of the Fatal Bloom;Verdant Predator Tail;Tolling Shadows;Servant of the Infernal Maw;Lantern of the Infernal Maw;Golden Cyrridae Prem;Skittering Desolation Prem;Apocalypse Unbound - Shoulder;Shatterblast Crown;Ire of the Ancient Gaoler Shoulder;Bracers of the Fractured Envoy;Pauldrons of the Fractured Envoy;Slumbering Terror;Origin of the Unmaking;Ghastly Nocturne;Maw of Eztzhok;Off-Hand Weapon of the Bloodforge;Hunters Hoard;Tines of Tybara;Mark of the First Hunt Harvested;Elixir of Dragons Breath Prem;Beast of the Crimson Ring Bracers;Infernal Menace;Golden Infernal Chieftain;Diabolic Aspect;Arcana Crystal Maiden Frost Avalanche;White Sentry;Golden Bracers of Forlorn Precipice;Book of the Vizier Exile Prem;Harness of the Forgotten Tactician;Hearts of Misrule;The Sunbreeze Birthright;Belt of the Faeshade Flower;Dress of the Faeshade Flower;Crimson Gates of Nothl;Darkclaw Emissary Staff;The Gates of Nothl;Nothlic Burden of the Crimson Witness Prem;Covers of the Merqueen;Crown of the Brightshroud;Fluttering Mortis Prem;Scabbards of the Stormcharge Dragoon;Beast of the Defender of Ruin;Resistive Pinfold Prem;Weapon of the Defender of Ruin;Planetfall;Totem of Tectonic Implications;Flourishing Lodestar Prem;Harborblossom;Virgas Arc;World Chasm Artifact;Lord of Luminaries Eidolons;Fortune of the Five Houses;Herald of the Ember Eye - Brush;Remnants of Ascension;Herald of the Ember Eye - Belt;Herald of the Ember Eye - Armor;Prominence;Wings of Daybreak;The King Of Thieves Head;Tormented Crown;Tormented Staff;Wyrmwrought Flare;Horns of the Betrayer;Mulctant Pall of the Crimson Witness;Gauntlet of the Infernal Rambler;Golden Twilight Schism;Mount of the Winged Sentinel;Golden Moonfall Prem;Seismic Berserker Club;Tail of the Vow Eternal;Progenitors Bane;Color Meepo;Golden Mask of Metira;The Order of Cyprin;Blades of Prismatic Grace;Monarch of the Sapphire Glen;Signs of the Allfather - Weapon;Mantle of the Truebark Adherent;Paragons Rebuke;Fetters of Omniscience;Adoring Wingfall Prem;Orb of the Hierophant;Dress of the Hierophant;Back of the Hierophant;Mask of the Confidant;Blissful Knave Hat;Blissful Knave Rapier;Pyramid of the Temple of the Fallen Sun;Kitestar Splendor Beak;Crimson Edict of Shadows;Golden Shadow Masquerade Prem;Hunger of the Howling Wilds Weapon;Skirt of the Guardian Construct Bestowed;Head of the Forlorn Maze;Severing Lash Prem;Lash of the Lizard Kin;Crimson Censer of Gliss UP;Haul of the Lucent Canopy;Arms of the Lucent Canopy;Crimson Flight of Epiphany;Skywarriors Countenance;Flame of the Penitent Scholar;Slardar MegaPack set;Radiant Conqueror Back;Baneful Devotion;Radiant Conqueror Shoulder;Spear of the Daemonfell Flame;Tempest Helm of the Thundergod + Righteous Thunderbolt;Span of Sorrow;Chasm of the Broken Code Helm;Reflections Shade Color for TB;Ancient Inheritance - Back;Ancient Inheritance - Neck;Ancient Inheritance - Belt;Ancient Inheritance - Shoulder;Windranger Arcana style 1 (Blue Bird) + Full WR immortal;Ritual of the Loyal Fold;Sven Immortals MegaPack UP;Slark MegaPack New;Baby Toy Pudge Persona;Morphling Immortals MegaPack UP;Drow Ranger MegaPack;Darkbrew Enforcer and Eternal Radiance Blades and Midas Knuckles MegaPack;Bristleback MegaPack;Ursa Immortals MegaPack;Hinterland Stalker;Spirit Breaker MegaPack;Tidehunter MegaPack;Timbersaw MegaPack;D Octo Tinker;Treant Protector MegaPack;Jungle Explorer Set;Abaddon RED MegaPack;AAMegaPack;Axe full Immortals Megapack alt;Beastmaster MegaPack;Broodmother MegaPack;Burning Nightmare;Emperor of the Sun;Maraxiforms Fate Bundle;Clinkz MegaPack;Battletrap V 3.0;Bitterwing Legacy;Doom Immortals MegaPack;Monuments of the Natural Demiurge;Twisted Maelstrom;Huskar MegaPack NEW;Jakiro MegaPack;Kunkka Immortals MegaPack;Golden Dark Maw Inhibito and Golden Profane Union and Golden Dread Requisition Lifestealer Immortals Megapack;Ice Lina Premium;War-Burrow Ravager;Lycan Kisilev ModMaker MegaPack;Seismic Berserker;Medusa MegaPack NEW;Mars TI10 Collectors Cache MegaPack;Mirana MegaPack;Nyx Assassin MegaPack UP;Ogre Magi Immortals Arcana MegaPack;Outworld Devouver MegaPack;Ice Phoenix Premium Edition;Pugna Immortals MegaPack;Queen of Pain Arcana MegaPack;SF Arcana Megapack;Silencer TI10 Collectors Cache MegaPack; 123|||