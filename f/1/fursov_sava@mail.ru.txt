bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogNDg3NjA3RTItREIwRC1FNzExLUI3NTMtM0M1MjgyOEFFQzBDOzsgMTExfHx8IDIyMjo6ICQyeSQxMCRNakpsTldObU9HTmhNamcxTjJZME0uZE1mcXI1Z2llRGppRTFXQ2FIZnNPOWRZSUczR3IvNiAyMjJ8fHwgMTIzOjogQm9uZHMgb2YgTWFkbmVzcyBTZXQgU3R5bGUgMTtKaW4gYW5kIFlpbiBGb3ggU3Bpcml0cyBEZWZhdWx0O0FjaWQgSHlkcmEgQ3Vyc29yIFBhY2s7TWVnYSBHcmVldmlsIFdhcmQ7UmVwdGlsaWFuIFJlZnVnZSBEaXJlIENyZWVwcztSb3NoYW4gSGFsbG93ZWVuIFNraW47Q29uY2VhbGVkIFJhdmVuIERhc2hib2FyZDtSaXZlciBWaWFsIEdyZWVuO0JyaXN0dGxlQmFjayBsb2Fkc2NyZWVuO0Jyb29kIEh1bnRlciBIVUQ7TWFndXMgQXBleDtLaXRlc3RhciBTcGxlbmRvciBXaW5ncztTdWxsZW4gSG9sbG93IFYgMy4yO01hcmF1ZGVyIG9mIHRoZSBDaGFvcyBXYXN0ZXM7VmlzaW9ucyBvZiB0aGUgRm9yc2FrZW4gRmxhbWU7VGhlIEJhcHRpc20gb2YgTWVsdGluZyBGaXJlO1ZvbGF0aWxlIE1hamVzdHk7V2l0Y2ggSHVudGVyIFRlbXBsYXI7RGl2aW5lIEZsYW1lIFYgMi4wO01lbW9yaWVzIG9mIHRoZSBWb3cgRXRlcm5hbDtSZWRlbXB0aW9uIG9mIHRoZSBSYWlkZm9yZ2VkIFJpZGVyO1RoZSBGcmFjdHVyZWQgT3JkZXIgViAzLjA7TWFza3Mgb2YgTWlzY2hpZWY7U3RlbGxhciBKYWRlO1Zpc2lvbnMgb2YgdGhlIExpZnRlZCBWZWlsO1N1cmdpY2FsIFByZWNpc2lvbjtPY2VhbiBDb25xdWVyb3I7Rmxvd2VyaW5nIFNoYWRlIFYgMi4wO0lsbGlkYW4gUlVTIHNvdW5kcztDb3JyaWRhbiBNYWVzdHJvIFYgMi4wO1N0b3Jtd3JvdWdodCBBcmJpdGVyIFYgMi4wO1JpdHVhbCBvZiB0aGUgTG95YWwgRm9sZDtJemF5b2kgU2FrdXlhIGZvciBUaW5rZXIgYnkgUGF0Y2hvdWxpIEtub3dsZWRnZTtEaXJnZXN3b3JuIER5bmFzdHk7RmVyb2Npb3VzIEhlYXJ0O0JpbmRpbmdzIG9mIHRoZSBCYXR0bGVyYW5nZXI7UGF0dGVybiBvZiB0aGUgU2lsa2VuIFF1ZWVuO0xhZHkgU3lsdmFuYXMgZm9yIERyb3cgLSBHaWZ0cyBvZiB0aGUgU2hhZG93Y2F0IFNldDtIYXJuZXNzIG9mIHRoZSBGaXNzdXJlZCBTb3VsO1RvbW9lIE1hbWkgZm9yIFNuaXBlciBieSBQYXRjaG91bGkgS25vd2xlZGdlO1RyZWsgb2YgdGhlIFRyYWlsYmxhemVyO091dGxhbmRpc2ggR291cm1ldDtJdHN1a2EgS290b3JpIGZvciBXSyBieSBQYXRjaG91bGkgS25vd2xlZGdlO1JpZ2h0ZWQ5519cyBUaHVuZGVyYm9sdCBhbmQgQXJjYW5hIE1lZ2FQYWNrO0dvcG9QdWRnZTtSZW1pbGlhIFNjYXJsZXQgZm9yIE5TIGJ5IFBhdGNob3VsaSBLbm93bGVkZ2U7RXJ1cHRpbmcgV3JhdGggViAyLjA7IDEyM3x8fA==