bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogNjA5REYyODAtNzJEQy0xMUUzLTk2NDYtOUM1QzhFODc3QzBGIDExMXx8fCAyMjI6OiAkMnkkMTAkWkRoa09ETXdORGN4WkRrMU5qWTNNZXR0bDRKZ2U4T0Z4VWpDdHlSdzByeEdzb0dzLkhIR2kgMjIyfHx8IDEyMzo6IEFnaGFuaW0gRHVuZ2VvbiBTY2VwdGVyIEVmZmVjdDtBcG9jYWx5cHNlIFVuYm91bmQgLSBTaG91bGRlcjtBcG9jYWx5cHNlIFVuYm91bmQgLSBUYWlsO0h1bnRlcnMgSG9hcmQ7RnJvc3QgQXZhbGFuY2hlIFByZW07RHJlYWQgUmV0cmlidXRpb24gLSBCcmFjZXJzIEFsdDtMZWdpb24gQ29tbWFuZGVyIEFyY2FuYSBVUDtKdWdnZXJuYXV0IEFyY2FuYSBSZWQgQmxhZGVmb3JtIE9yaWdpbnM7VG9tbyprYW4gSW5jYXJuYXRlIEhvb2Q7VG9tbyprYW4gSW5jYXJuYXRlIFRhaWw7VG9tbyprYW4gSW5jYXJuYXRlIEFyYmFsZXN0O1RvbW8qa2FuIEluY2FybmF0ZSBBcm1vcjtHb2xkZW4gVHdpbGlnaHQgU2NoaXNtO01vb25mYWxsIFByZW07SGVsbSBvZiB0aGUgRGFyayBNb29uIFN0YWxrZXI7TWQ5519bnQgb2YgdGhlIFdpbmdlZCBTZW50aW5lbDtHb2RzIE1lcmN5IG9mIHRoZSBDcmltc29uIFdpdG5lc3M7TW9uYXJjaCBvZiB0aGUgU2FwcGhpcmUgR2xlbjtNYW50bGUgb2YgdGhlIFRydWViYXJrIEFkaGVyZW50O0dyZWF0IFNhZ2VzIFJlY2tvbmluZyBJbW1vcnRhbCBQYXRoO1RoZSBPcmRlciBvZiBDeXByaW47QmxhZGVzIG9mIFByaXNtYXRpYyBHcmFjZTtGZXR0ZXJzIG9mIE9tbmlzY2llbmNlIG9mIHRoZSBDcmltc29uIFdpdG5lc3M7Q29kaWNpbCBvZiB0aGUgVmVpbGVkIE9uZXM7QXZvd2FuY2Ugb2YgdGhlIENyaW1zb24gV2l0bmVzcztNYW5pZm9sZCBQYXJhZG94IFBBIEFyY2FuYSBTdHlsZSAzO0NvbmNvcmQgRG9taW5pb247Q29uY29yZCBSZXZlcnNpb24gVVA7UGhhbnRvbSBDb25jb3JkIFByZW07UGhhbnRvbSBBc2NlbnNpb247Rmx1dHRlcmluZyBBbWV0aHlzdCArIFB1cnBsZSBGb2NhbCBSZXNvbmFuY2UgRG90YTJDaGFuZ2VyIEVkaXRpb247U3Rld2FyZCBvZiB0aGUgRm9yYmlkZGVuIENoYW1iZXIgU2hvdWxkZXI7U3Rld2FyZCBvZiB0aGUgRm9yYmlkZGVuIENoYW1iZXIgQXJtb3I7Q2hhbXBpb25zIEJsdWUgQ29sb3IgZm9yIFRCO0NvbnN0ZWxsYXRpb24gQXJtb3I7SGlkZGVuIFZlY3RvciAtIEFybW9yO0hpZGRlbiBWZWN0b3IgLSBCZWx0O0NvbnN0ZWxsYXRpb24gV2VhcG9uO1RvbWUgb2YgRm9yYmlkZGVuIEtub3dsZWRnZTtHbGFyZSBvZiB0aGUgVHlyYW50O1NoZWFyaW5nIERlcG9zaXRpb24gUHJlbTtCZW5ldm9sZW50IENvbXBhbmlvbiBQcmVtO1dpbmRyYW5nZXIgQXJjYW5hIHN0eWxlIDIgKE9yYW5nZSBCaXJkKSBhbmQgRnVsbCBXUiBpbW1vcnRhbDtRdWVlbiBvZiBQYWluIEFyY2FuYSBNZWdhUGFjaztEYXJrYnJldyBFbmZvcmNlciBhbmQgRXRlcm5hbCBSYWRpYW5jZSBCbGFkZXMgYW5kIE1pZGFzIEtudWNrbGVzIE1lZ2FQYWNrO0FiYWRkb24gUkVEIE1lZ2FQYWNrO01pa2kgU2F5YWthIDIgZm9yIEFiYmFkb24gYnkgUGF0Y2hvdWxpIEtub3dsZWRnZTtBbnRpTWFnZSBGZW1hbGU7QXhlIGZ1bGwgSW1tb3J0YWxzIE1lZ2FwYWNrIGFsdDtBQU1lZ2FQYWNrO0dpZnRzIG9mIHRoZSBGbGF5ZWQgVHdpbnMgU3R5bGUgMTtHaWFudCBIdW50ZXIgViAyLjE7QnJpc3RsZWJhY2sgTWVnYVBhY2s7QnJvb2Rtb3RoZXIgTWVnYVBhY2s7TWFyYXhpZm9ybXMgRmF0ZSBCdW5kbGU7UXVldHphbDtESyBQZXJzb25hIERhdmlvbjtFdGVybmFsIFRlc3RhbWVudDtFbmlnbWEgTWVnYVBhY2s7RnJvemVuIFZvaWQ7SHVza2FyIE1lZ2FQYWNrIE5FVztHb2xkZW4gRGFyayBNYXcgSW5oaWJpdG8gYW5kIEdvbGRlbiBQcm9mYW5lIFVuaW9uIGFuZCBHb2xkZW4gRHJlYWQgUmVxdWlzaXRpb24gTGlmZXN0ZWFsZXIgSW1tb3J0YWxzIE1lZ2FwYWNrO05pZ2h0IFN0YWxrZXIgSW1tb3J0YWwgYW5kIFJlYXBlciBLaXNpbGV2IE1vZE1ha2VyIE1lZ2FQYWNrO0ZlbGxzdHJhdGggU2VycGVudDtOeXggQXNzYXNzaW4gTWVnYVBhY2sgVVA7T21uaWtuaWdodCBNZWdhUGFjaztSaWdodGZ1bCBIZWlyIFZhbGVlcmEgZm9yIFJpa2k7RCBPY3RvIFRpbmtlcjtTdmVuIEltbW9ydGFscyBNZWdhUGFjayBVUDtSaWdodGVvdXMgVGh1bmRlcmJvbHQgYW5kIEFyY2FuYSBNZWdhUGFjaztSZWJpcnRoIFZlbmdlZnVsIFNwaXJpdDtBenRlYyBXYXJyaW9yO0tpbiBvZiB0aGUgU2FuZ3N0cmF0aCBGb2xkO1RyZWFudCBQcm90ZWN0b3IgTWVnYVBhY2s7VmlwZXIgTWVnYVBhY2s7VHJhY2VyIGZvciBXZWF2ZXI7U2xhcmsgTWVnYVBhY2sgTmV3O1NpbGVuY2VyIE1lZ2FQYWNrO1RoYW5hdG9zIE1lZ2FQYWNrIFVQIHdpdGhvdXQgRXllO0FyY2FuYSBNZWdhUGFjayBTaGFkb3cgRmllbmQ7UHVnbmEgSW1tb3J0YWxzIE1lZ2FQYWNrO0FuY2llbnQgTWFndXMgU3R5bGUgMztPdXR3b3JsZCBEZXZvdXZlciBNZWdhUGFjaztEZWF0aCBOZWNyb2xpZ2h0IFByZW1pdW0gU3R5bGUgMjtNZWR1c2EgTWVnYVBhY2sgTkVXO0ljZSBMaW5hIFByZW1pdW07V3JhaXRoIEtpbmcgQXJjYW5hIE1lZ2FQYWNrO1dpdGNoIERvY3RvciBNZWdhUGFjaztEZW1vbmZvcmdlZCBTZXQ7U2xhcmRhciBNZWdhUGFjayBzZXQ7IDEyM3x8fA==