limitHWID:: 1 000||| 111::  111||| 222:: bedec10b6b34c7782bd0d7731c7cc8d9007c4d4e643d0a1a1ee61953232faf31ed536b36223dfa07ad449495d44e45ae4a206c1fa9a3cc21780861b6192f94df 222||| 123:: Lina Announcer;Lina Mega-Kills;Fuck Deny;Arena Champion Shield;God*s Mercy;Arena Champion Spear;Arena Champion Armor;Arena Champion Belt;Forsworn Legacy - Legs;Arsenal of the Bladekeeper;Prayer Beads of the Bladekeeper;Sigil Mask of the Bladekeeper;Provocation of Ruin Belt;Blackened Edge of the Bladekeeper;Relentless;Serrakura;Sack of the Sapper*s Guile;Helm of the Sapper*s Guile;Pirate of Treasure*s Bight Head;Implements of the Sapper*s Guile;Pirate of Treasure*s Bight Weapon;Belt of the Red Sands;Humble Drifter Garb;Herbal Boooofus;Reptilian Refuge Dire Creeps;Reptilian Refuge Radiant Creeps;Axia of Metira;First Light Head;First Light Arms;First Light Armor;Jewel of Aeons Prem;Bracers of Aeons Prem;Phantom Concord;Manias Mask Prem;Mark of the First Hunt Bestowed;Lion Greedy King Back;Infernal Wings Claw;The Lightning Orchid V 3.0;The Golden Barb of Skadi;Arms of Desolation Prem;Iron Surge V 2.2;Azure Constellation HUD;Pyrexaec Floe;Watcher Below;Cavernite Dire Creeps;Cavernite Radiant Creeps;Guardians of the Lost Path Dire Towers;Guardians of the Lost Path Radiant Towers;Virtus Werebear Upgrade 1;Patch Stash and Hobb;Whispers of the Damned Wings;Golden Scavenging Guttleslug;Grand Abscession Hook Bundle;Nothlic Burden;Flight of the Undying Light;Crow of Empiric Incendiary;Hat of Empiric Incendiary;Belt of Empiric Incendiary;Firestarter Gas Pump;Cannon of the Occultists Pursuit;Sullen Hollow V 3.2;Thundergod*s Bare Chest;Markings of the King Restored;Symbol of the King Restored;Tempest Helm of the Thundergod Prem;Solar Gyre;Kitestar Splendor Beak;Nova of Golden Nirvana;Mask of the Confidant;Crimson Cyrridae;Focal Resonance V 3.0;Fractal Horns of Inner Abysm UP;Shatterblast Crown;Mantle of the Cinder Baron Style 1;Crucible of Rile;Molten Claw Prem;Harvested Shoulders;Verna;Terrain - Immortal Gardens;Shackles of the Enduring Conscript;Arms of the Bogatyr;Gladiators Revenge;Imperial Envoy;Undefeated General;Army Of The Vast Sea;Lord of Northwarden;Scarlet Lords;Darkfall Warden no effects V 2.1;Spirit of The Sacred Glove;Creeping Shadow;Bloodroot Guard;Riptide Raider V 2.0;Bindings of the Battleranger;Dapper Disguise;Ferocious Heart;Burglar of Wasp;Jolly Reaver;The Exiled Ronin Set;Darkfall Warden;Misgivings of the Emerald Age;Toll of the Fearful Aria;Vengeance of the Sunwarrior;Harvests Hound;Lightning Harbinger;Sight of the Kha Ren Faithful;Bounty Hunter Maniac Set;Fury of War God;Tales of the Grey Wastes;Serpentine Guard;Seaborne Reprisal;Ghost Judger;Bindings of Deep Magma;Raikage Warrior V 2.0;Powdersled Rookery;Dark Reef Escape V 2.1;Eternal Harvest;Bite of the Surging Wind;Submerged Hazard;Iceplain Ravager;Bark of the Ageless Witness;Ancient Magus Style 2;Cry of the Battlehawk;Imperial Relics V 2.1;Seismic Berserker;Dirgesworn Dynasty;Brawler of the Glacier Sea V 3.0;Antimage Shinobi;Blueheart Sovereign V 2.0;The Keen Commander;Fires of Vashundol no effect V 2.1;Bringer of Troubles;Desert Traveller Set;Puppet Summoner;Bindings of the Battleranger Light Style;Bindings of the Battleranger Chaotic Style;Black Nihility;Warrior of Arena Set;Cursed Zealot And Dagon;Bewitching Flare V 2.0;Smoky Dreamer;Siege of the Arctic Hall;Azure Constellation V 2.1;Armor of the Stalwart Soul;Exact Marksman;Charmer of Firesnake;Wrath of Ka V 2.1;Hunter of Kings V 2.0;Outlandish Gourmet;Trek of the Trailblazer;Plunder of the Savage Monger;Soul Lilith;Atrocities of the Abyssal Scourge;Bastion of the Lionsguard;Emperor Of The Clergy;Lineage Province of the Hunt Eternal;Fatal Blossom V 3.0;Compendium Bloody Ripper;Adage of the Smoldering Sage;Convalescing Empress;Memories of the Vow Eternal;Nirvana Spiritual;Tales of the Windward Rogue;Ember Tipped Carapace Set;Echoes of the Eyrie V 2.0;The Timekeeper Golden;Gryphon Rider Set;Samurai Set;Allied Commander Set;Pillar of the Fractured Citadel;Ironclad Mold V 2.0;Ascendance of the Rime Lord 2nd Style;The Witch Hunter V 2.0;Raid of the Northern Exiles;Mark of the Mistral Fiend V 2.1;Time Wanderer;Ancient Mechanism;Overgrown;The Wild Tamer; 123|||