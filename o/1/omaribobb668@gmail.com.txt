bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogMzY3N0ZEN0QtRTYxRC0xMUUxLUJGNDItQ0M4OEIzMDA4MEEyIDExMXx8fCAyMjI6OiAkMnkkMTAkTWpCalltRXhNVGN6TUdNM1lqYzROdWdVamwzSkIzSGNJdDYyQ0EwdldmTld0MVJ0bWt1Z1cgMjIyfHx8IDEyMzo6IGRyaXZlX2Rpcjo6TW9ycGhsaW5nIEltbW9ydGFscyBNZWdhUGFjayBVUDtkcml2ZV9kaXI6OlRvcm1lbnRlZCBTdGFmZiBvZiBFbWluZW50IFJldml2YWwgRXhjZXB0aW9uYWw7ZHJpdmVfZGlyOjpTcGlyZXRob3JuIFJlZ2FsaWEgViAyLjA7ZHJpdmVfZGlyOjpSYXBpZXJzIG9mIHRoZSBCdXJuaW5nIEdvZCBWIDMuMTtkcml2ZV9kaXI6OkltbW9ydGFsIEludm9rZXIgS2lkO2RyaXZlX2Rpcjo6T3V0d29ybGQgRGV2b3V2ZXIgTWVnYVBhY2s7ZHJpdmVfZGlyOjpTaGFkb3cgRmllbmQgQXJjYW5hIERlbW9uIEVhdGVyO2RyaXZlX2Rpcjo6UGF1bGRyb25zIG9mIEV0ZXJuYWwgSGFydmVzdCBQcmVtO2RyaXZlX2Rpcjo6R3JpcHMgb2YgRXRlcm5hbCBIYXJ2ZXN0IFByZW07ZHJpdmVfZGlyOjpXaW5kcmFuZ2VyIEFyY2FuYSBzdHlsZSAxIChCbHVlIEJpcmQpICsgRnVsbCBXUiBpbW1vcnRhbDtkcml2ZV9kaXI6Ok1lcnJ5IFdhbmRlcmVyKnMgQnJ1c2ggUHJlbTtkcml2ZV9kaXI6OkJsb3Nzb20gb2YgdGhlIE1lcnJ5IFdhbmRlcmVyO2RyaXZlX2Rpcjo6Q3Jvd24gb2YgQ3VyaWQ5519cyBDb2xkc3BlbGw7ZHJpdmVfZGlyOjpESyBQZXJzb25hIERhdmlvbjtkcml2ZV9kaXI6OlNob2NrIG9mIHRoZSBBbnZpbCBQcmVtO2RyaXZlX2Rpcjo6U2lsZW5jZXIgTWVnYVBhY2s7ZHJpdmVfZGlyOjpHb2xkZW4gV3lybXdyb3VnaHQgRmxhcmUgUHJlbTtkcml2ZV9kaXI6OlNvdWwgb2YgdGhlIFNsYXllciBQcmVtO2RyaXZlX2Rpcjo6RGlzY2lwbGUgb2YgdGhlIFd5cm13cm91Z2h0IEZsYW1lO2RyaXZlX2Rpcjo6TWVkdXNhIE1lZ2FQYWNrIE5FVztkcml2ZV9kaXI6OlN3b3JkIG9mIHRoZSBDb2xvc3N1cyBQcmVtO2RyaXZlX2Rpcjo6TWFqZXN0eSBPZiBUaGUgQ29sb3NzdXMgLSBNb25vbGl0aDtkcml2ZV9kaXI6Ok1hamVzdHkgT2YgVGhlIENvbG9zc3VzIC0gQ29iYmxlO2RyaXZlX2Rpcjo6TWFqZXN0eSBPZiBUaGUgQ29sb3NzdXMgLSBQZWJibGU7ZHJpdmVfZGlyOjpBbmNpZW50IEluaGVyaXRhbmNlIC0gTmVjaztkcml2ZV9kaXI6Okt1bmtrYSBJbW1vcnRhbHMgTWVnYVBhY2s7ZHJpdmVfZGlyOjpFbWluZW5jZSBvZiBSaXN0dWwgS25pZmUgQXR0YWNrO2RyaXZlX2Rpcjo6RW1pbmVuY2Ugb2YgUmlzdHVsIFdoaXAgQXR0YWNrO2RyaXZlX2Rpcjo6UXVlZW4gb2YgUGFpbiBBcmNhbmEgTWVnYVBhY2s7IDEyM3x8fA==