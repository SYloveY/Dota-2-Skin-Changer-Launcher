bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogNzY1OUExQTgtNDQ0NC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAwIDExMXx8fCAyMjI6OiAkMnkkMTAkTnpJM09URTFORGd4TVdWaU0ySmpPT0czUkw5OE5pMkJXV2VBQjhkMm14RTVRS2pMWm53UXUgMjIyfHx8IDEyMzo6IExlZ2lvbiBDb21tYW5kZXIgQXJjYW5hIFVQO1BhdWxkcm9ucyBvZiB0aGUgSG9ub3JlZCBTZXJ2YW50IG9mIHRoZSBFbXBpcmU7SGVsbSBvZiB0aGUgSG9ub3JlZCBTZXJ2YW50IG9mIHRoZSBFbXBpcmU7UmFkaWFudCBDb25xdWVyb3IgQmFjaztCcmFjZXJzIG9mIHRoZSBIb25vcmVkIFNlcnZhbnQgb2YgdGhlIEVtcGlyZTtDYXZlcm5pdGUgRGlyZSBDcmVlcHM7Q2F2ZXJuaXRlIFJhZGlhbnQgQ3JlZXBzO1RlcnJhaW4gLSBJbW1vcnRhbCBHYXJkZW5zO0RlY2xhcmF0aW9uIG9mIHRoZSBEaXZpbmUgTGlnaHQgUmFkaWFudCBUb3dlcnM7RGVjbGFyYXRpb24gb2YgdGhlIERpdmluZSBTaGFkb3cgRGlyZSBUb3dlcnM7Q2hhb3MgRnVsY3J1bTtUYWxvbnMgb2YgdGhlIEVuZGxlc3MgU3Rvcm0gSGVhZDtDaGFvcyBBcmJpdGVyO1dpbmdzIG9mIHRoZSBQZW5pdGVudCBTY2hvbGFyIENoYW1waW9uO0hlbG0gb2YgdGhlIFBlbml0ZW50IFNjaG9sYXI7RW1weXJlYW47U2hhZG93IGluIHRoZSBEZWVwIEJyYWNlcnM7U2hhZG93IGluIHRoZSBEZWVwIEJhY2s7U2VhIFJha2VzIEJyaWRsZTtTaGFkb3cgaW4gdGhlIERlZXAgQXJtb3I7SHlkcmFrYW4gTGF0Y2g7UHJvZ2VuaXRvcnMgQmFuZTtTd2lmdCBDbGF3O0RpcHBlciB0aGUgRGVzdHJveWVyO0hpZGRlbiBWZWN0b3IgLSBCZWx0O0hpZGRlbiBWZWN0b3IgLSBBcm1vcjtIaWRkZW4gVmVjdG9yIC0gQmxhZGU7Q3Jvd24gb2YgdGhlIE11cmlkIERpdmluZTtTdWxsZW4gUmFtcGFydDtGb3dsIE9tZW4gU2hvdWxkZXI7U3VsbGVuIEhhcnZlc3Q7Rm93bCBPbWVuIEJlYXJkO0Zvd2wgb2YgdGhlIFN0b3JtY2hhcmdlIERyYWdvb247QmxhZGUgb2YgdGhlIFN0b3JtY2hhcmdlIERyYWdvb247U2NhYmJhcmRzIG9mIHRoZSBTdG9ybWNoYXJnZSBEcmFnb29uO0Z1cnkgb2YgdGhlIFJpZ2h0ZWQ5519cyBTdG9ybSAtIEhlYWQ7Q2luZGVyIFNlbnNlaSBCcmFjZXI7QmVsdCBvZiB0aGUgRm9yc2FrZW4gRmxhbWU7Q2luZGVyIFNlbnNlaSBTdHlsZTtNYXN0ZXIgb2YgdGhlIFNlYXJpbmcgUGF0aCBPZmYtSGFuZDtBcG9nZWUgb2YgdGhlIEd1YXJkaWFuIEZsYW1lO0JsYWRlIG9mIHRoZSBXYW5kZXJpbmcgRmxhbWU7T2ZmLUhhbmQgQmxhZGUgb2YgdGhlIFdhbmRlcmluZyBGbGFtZTtXaW5kcyBvZiBDb25xdWVzdCBCZWx0O0dyYW5kIEdsb3ZlcyBvZiB0aGUgV2l0Y2ggSHVudGVyIFRlbXBsYXI7U3R5bGUgb2YgdGhlIERpdmluZSBBbmNob3I7V2F0ZXJsb2dnZWQgS3Vua2thIFNob2VzO1ByaXplIG9mIHRoZSBTYWx0d29ybiBNYXJpbmVyO0ludmVyc2UgQmF5b25ldDtHcmFzcCBvZiBNZWFzdXJlbGVzcyBSdWluO0FzdHJhbCBEcmlmdDtNYW5kYXRlIG9mIHRoZSBOYW1lbGVzcyAtIENyb3duO1NoYXJkcyBvZiBFeGlsZSBQcmVtO09yaWdpbnMgb2YgRmFpdGggUHJlbTtCcmFjZXJzIGFuZCBTaG91bGRlcnMgb2YgdGhlIFN1cnZpdm9yO0JlbHQgb2YgdGhlIFN1cnZpdm9yO01hc2sgb2YgdGhlIEZvcmdvdHRlbiBQbGFuZTtTaG91bGRlcnMgb2YgdGhlIFdpdGNoIEh1bnRlcjtPYXRoYm91bmQgRGVmaWFudCBCbGFkZXMgbmV3O0NvZGljaWwgb2YgdGhlIFZlaWxlZCBPbmVzO0F2b3dhbmNlIG9mIHRoZSBWZWlsZWQgT25lcztNYW5pZm9sZCBQYXJhZG94IFBBIEFyY2FuYSBTdHlsZSAzO0JyYWNlcnMgb2YgQWVvbnM7QmVsdCBvZiB0aGUgRW1lcmFsZCBBZ2U7Q2xhc3p1cmVtZSBJbmN1cnNpb24gSGVhZDtKZXdlbCBvZiBBZW9ucztNYWNlIG9mIEFlb25zIFByZW07Rm9ydHVuZXMgVG91dCBQcmVtO1ByYXllciBCZWFkcyBvZiB0aGUgQmxhZGVrZWVwZXI7UHJvdm9jYXRpb24gb2YgUnVpbiBQYXVsZHJvbjtKdWdnZXJuYXV0IEFyY2FuYSBSZWQgQmxhZGVmb3JtIE9yaWdpbnM7QmVsdCBvZiB0aGUgQmxhZGVmb3JtIEFlc3RoZXRlO1N3b3JkIG9mIHRoZSBCbGFkZWZvcm0gQWVzdGhldGU7VGhlIEJhcnJlbiBWZWN0b3I7VGFpbCBvZiB0aGUgS3JheSBMZWdpb25zO0phd3Mgb2YgdGhlIEtyYXkgTGVnaW9ucztEZWZpbGVkIFN0aW5nZXI7TGVncyBvZiB0aGUgUmVkIFNhbmQgV2FycmlvcjtWZXN0aWdpYWwgV2luZ3Mgb2YgdGhlIEFuY2llbnQgU292ZXJlaWduO0N1ZmZzIG9mIHRoZSBJcm9uIFdpbGw7SGVhdnkgQmVsdCBvZiB0aGUgV29ybGQgUnVubmVyO0lyb24gU3VyZ2UgViAyLjI7TWFudGxlIG9mIHRoZSBJcm9uIFdpbGw7VGFpbCBvZiB0aGUgRGVhdGggQ2hhcmdlO1NhdmFnZSBNZXR0bGU7QXJtcyBvZiBEZXNvbGF0aW9uIFByZW07U291bHMgVHlyYW50IFNob3VsZGVyO0FyY2FuYSBTRiBEZW1vbiBFYXRoZXI7Q29udHJvbHMgb2YgdGhlIEZvcnRpZmllZCBGYWJyaWNhdG9yO1JvbGxlcm1hd3N0ZXI7QmFsbGlzdGEgb2YgdGhlIEZvcnRpZmllZCBGYWJyaWNhdG9yO0JsYWNrc2hpZWxkIFByb3RvZHJvbmUgQXJtb3I7QXJjYW5pYyBSZXNvbmFuY2UgQmVhbTtRdWVlbiBvZiBQYWluIEFyY2FuYSBNZWdhUGFjaztCdXJuaW5nIE5pZ2h0bWFyZTtCYXN0aW9uIG9mIHRoZSBMaW9uc2d1YXJkO1dpbmRyYW5nZXIgQXJjYW5hIHN0eWxlIDIgKyBXUiBpbW1vcnRhbDtBcmVuYSBDaGFtcGlvbiBTZXQ7RmVyb2Npb3VzIEhlYXJ0OyAxMjN8fHw=