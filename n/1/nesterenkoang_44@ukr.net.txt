limitHWID:: 1 000||| 111:: 7659A1A8-4444-0000-0000-000000000000 111||| 222:: $2y$10$NzI3OTE1NDgxMWViM2JjOOG3RL98Ni2BWWeAB8d2mxE5QKjLZnwQu 222||| 123:: Legion Commander Arcana UP;Pauldrons of the Honored Servant of the Empire;Helm of the Honored Servant of the Empire;Radiant Conqueror Back;Bracers of the Honored Servant of the Empire;Cavernite Dire Creeps;Cavernite Radiant Creeps;Terrain - Immortal Gardens;Declaration of the Divine Light Radiant Towers;Declaration of the Divine Shadow Dire Towers;Chaos Fulcrum;Talons of the Endless Storm Head;Chaos Arbiter;Wings of the Penitent Scholar Champion;Helm of the Penitent Scholar;Empyrean;Shadow in the Deep Bracers;Shadow in the Deep Back;Sea Rakes Bridle;Shadow in the Deep Armor;Hydrakan Latch;Swift Claw;Dipper the Destroyer;Hidden Vector - Belt;Hidden Vector - Armor;Hidden Vector - Blade;Crown of the Murid Divine;Sullen Rampart;Fowl Omen Shoulder;Sullen Harvest;Fowl Omen Beard;Fowl of the Stormcharge Dragoon;Blade of the Stormcharge Dragoon;Scabbards of the Stormcharge Dragoon;Fury of the Righteous Storm - Head;Cinder Sensei Bracer;Belt of the Forsaken Flame;Cinder Sensei Style;Master of the Searing Path Off-Hand;Apogee of the Guardian Flame;Blade of the Wandering Flame;Off-Hand Blade of the Wandering Flame;Winds of Conquest Belt;Grand Gloves of the Witch Hunter Templar;Style of the Divine Anchor;Waterlogged Kunkka Shoes;Prize of the Saltworn Mariner;Inverse Bayonet;Grasp of Measureless Ruin;Astral Drift;Mandate of the Nameless - Crown;Shards of Exile Prem;Origins of Faith Prem;Bracers and Shoulders of the Survivor;Belt of the Survivor;Mask of the Forgotten Plane;Shoulders of the Witch Hunter;Oathbound Defiant Blades new;Codicil of the Veiled Ones;Avowance of the Veiled Ones;Manifold Paradox PA Arcana Style 3;Bracers of Aeons;Belt of the Emerald Age;Claszureme Incursion Head;Jewel of Aeons;Mace of Aeons Prem;Fortunes Tout Prem;Prayer Beads of the Bladekeeper;Provocation of Ruin Pauldron;Juggernaut Arcana Red Bladeform Origins;Belt of the Bladeform Aesthete;Sword of the Bladeform Aesthete;The Barren Vector;Tail of the Kray Legions;Jaws of the Kray Legions;Defiled Stinger;Legs of the Red Sand Warrior;Vestigial Wings of the Ancient Sovereign;Cuffs of the Iron Will;Heavy Belt of the World Runner;Iron Surge V 2.2;Mantle of the Iron Will;Tail of the Death Charge;Savage Mettle;Arms of Desolation Prem;Souls Tyrant Shoulder;Arcana SF Demon Eather;Controls of the Fortified Fabricator;Rollermawster;Ballista of the Fortified Fabricator;Blackshield Protodrone Armor;Arcanic Resonance Beam;Eidelon of Twisted Maelstrom;World Chasm Artifact;Arena Champion Armor;Arena Champion Belt;Gods Mercy of the Crimson Witness;Crimson Progenitors Bane;Queen of Pain Arcana MegaPack;Burning Nightmare;Bastion of the Lionsguard;Windranger Arcana style 2 + WR immortal;Ferocious Heart;Twisted Maelstrom;Earthshaker MegaPack New; 123|||