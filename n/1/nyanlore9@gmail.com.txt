limitHWID:: 1 000||| 111::  111||| 222:: $2y$10$ZmIzYTczMmI3M2JiMTEzYu/ZTYXbR.lW1/3u/1f4jLp3cEY7/chLy 222||| 123:: Defense Grid Announcer;TI-10 Phase Boots Effect;Covenant of the Depths Spirit;Blink Dagger lvl 2 TI-6 Effect;Arms of Desolation Prem;Heaven-Piercing Pauldrons;Dark Artistry Cape;Dark Artistry Belt;Great Sage*s Reckoning;Blade of Tears and Crown of Tears;Helm of the Nimble Edge;Belt of the Sacrosanct;Shoulders of the Sacrosanct;Blade of the Creeping Shadow;Pink Color for TB;Seven-Sealed the Fur Bracer;Duangua of the Wandering Demon;Burden of the Exiled Ronin;Pelt of Odocoeleus;Faulds of the Wandering Demon;Serrakura;Valentine Ward;Kataginu of a Thousand Faces;Terrain - Overgrown Empire;TI-10 Teleport lvl 2 Effect;Magus Apex;Red Wisp;Soul Corpulence - Shoulder;Horns of the Diabolical Fiend;Armor of Unblinking Eternity;Helm of the Keeper*s Gaze;Epitaphic Bonds;Hakurei Reimu for Troll Warlord by Patchouli Knowledge;Chronite Defense V 2.1;Antimage Shinobi;Corridan Maestro V 2.0;Efrit Sultan Set;Itsuka Kotori for WK by Patchouli Knowledge;Creed of the Outlaw Huntsman;GopoPudge;Seasoned Expeditionary;Bitterwing Legacy;Exponent of the Endless Stars;Samurai Set;Jester King Set;Komeiji Koishi 2 for Bane by Patchouli Knowledge;Maze Watcher Set;Ancestral Luck Set;Herald of Measureless Ruin V 2.1;Eye of the Beholder;Siege of the Arctic Hall;Prinz Eugen for Viper by Patchouli Knowledge;Emperor Of The Clergy;Lady Sylvanas for Drow - Tools of the Master Thief Set; 123|||