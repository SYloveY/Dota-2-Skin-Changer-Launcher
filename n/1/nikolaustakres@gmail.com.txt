bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogIDExMXx8fCAyMjI6OiAkMnkkMTAkWlRZME5qVTFNRFExWldFMFl6STBOT3ZaTUw4VWhOQk9uYzM0cHFPQXVaYjhiQUxxdlpzbE8gMjIyfHx8IDEyMzo6IEJyaWdodHNreWUgR2VtIG9mIFRydWVzaWdodDtBY2lkIEh5ZHJhIEN1cnNvciBQYWNrO0EgRGlyZSBHYXplO0JvdHRvbSBXYXRjaGVyO0hvbGlkYXkgUmFkaWFudCBUb3dlcjtXZWF0aGVyIE1vb25iZWFtO1ZhbGVudGluZSBXYXJkO1dyYXBzIG9mIGEgVGhvdXNhbmQgRmFjZXM7S2F0YWdpbnUgb2YgYSBUaG91c2FuZCBGYWNlcztQYXVsZHJvbnMgb2YgdGhlIEd3aW15ZW9uIFdhcnJpb3I7U2hvdWxkZXJzIG9mIHRoZSBCbGFkZXNydW5uZXI7TWFzayBvZiBhIFRob3VzYW5kIEZhY2VzO0FybWQ5519ciBvZiB0aGUgRXhpbGVkIFJvbmluO0FrYWtpcnl1IG9mIGEgVGhvdXNhbmQgRmFjZXMgViAzLjE7U291bCBDb3JwdWxlbmNlIC0gQXJtcztQYXVsZHJvbnMgb2YgRXRlcm5hbCBIYXJ2ZXN0O0hhemhhZGFsIE1hZ2VicmVha2VyO1NpbGVudCBFZGljdDtIZWlybG9vbXMgb2YgQWVvbCBEcmlhcztUaHVuZGVyZ29kKnMgQmFyZSBBcm1zO1RodW5kZXJnb2QqcyBCYXJlIENoZXN0O01hcmtpbmdzIG9mIHRoZSBLaW5nIFJlc3RvcmVkO0dvbGRlbiBJbW1vcnRhbCBQYW50aGVvbjtBcmMgb2YgdGhlIFNvdmVyZWlnbiBCYWNrO1pldXMgRW1wZXJvciBvZiB0aGUgQ2xlcmd5IEJhY2s7QmVsdCBvZiB0aGUgS2luZyBSZXN0b3JlZDtUZW1wZXN0IEhlbG0gb2YgdGhlIFRodW5kZXJnb2QgUHJlbTtaZXVzIEVtcGVyb3Igb2YgdGhlIENsZXJneSBCZWx0O1N5bWJvbCBvZiB0aGUgS2luZyBSZXN0b3JlZDtNYWplc3R5IE9mIFRoZSBDb2xvc3N1cyAtIFBlYmJsZTtTbWFsbCBCYWQgVG8gVGhlIEJvbmU7QmFyZGluZyBvZiBDaGltZXJpYyBSYXBwb3J0O0VsZGVyIENvbnZlcmdlbmNlIFdpbmdzO1NlZXIgb2YgSW5maW5pdHkgU3BhY2UgRWlkb2xvbjtNYWxlZmljIERyYWtlcyBIb29kIG9mIHRoZSBDcmltc29uIFdpdG5lc3M7QmFyZGluZyBvZiB0aGUgU2llZ2UtRHJha2U7S2luZyBvZiB0aGUgQ29ycnVwdGVkIE5lc3QgQmFjaztBbmNpZW50IFJoeXRobSBMb2FkaW5nIFNjcmVlbjtQaXJhdGUgU2xheWVyKnMgQmxhY2sgRmxhZztTa2VsZXRhbCBDYXRjaDtSZWNsdXNlIFJlZWYgRGVuaXplbjtBcm0gRmlucyBvZiB0aGUgRGVlcHdlZWQgRHJvd25lcjtCcmFjZXIgb2YgdGhlIFBvYWNoZXIqcyBCYW5lO0FybXMgb2YgdGhlIERpYWJvbGljYWwgRmllbmQ7SHVudCBvZiB0aGUgV2VlcGluZyBCZWFzdDtCbGFjayBPcmMgV2FyYm9zcyBWIDIuMDtTYWJlcmhvcm5zIEFybW9yIFNldDtTbm93YmxpbmQgU3Vydml2YWw7VGhlIFJlZCBDb25xdWVyb3IgU2V0O1VuZGVmZWF0ZWQgR2VuZXJhbDtUaGUgT2JsaXRlcmF0b3Igb2YgTWFnaWM7V2FyZGVucyBXYXRjaDtDaGFyZ2Ugb2YgdGhlIFdyYXRocnVubmVyO0VtZXJhbGQgRnJlbnp5IFNldDtIZWF2eSBCYXJiZWQgQXJtb3IgU2V0O1dhcnJpb3Igb2YgQXJlbmEgU2V0O0Nsb2FrIG9mIHRoZSBGYWxsZW47QWRhZ2Ugb2YgdGhlIFNtb2xkZXJpbmcgU2FnZTtCbGF6ZSBBcm1vciBWIDIuMTtFZnJpdCBTdWx0YW4gU2V0O09yZGVyIG9mIHRoZSBXYW5kZXJpbmcgRmxhbWUgViAyLjE7U3VyZ2ljYWwgUHJlY2lzaW9uO0RhcHBlciBEaXNndWlzZTtCdXRjaGVycyBXYWtlO0Fjb2x5dGUgb2YgQ2xhc3ogU2V0IFYgMi4xO1RoZSBDb3JydXB0aW9uIG9mIE5lenp1cmVlbTtBbmNpZW50IEN1bHRpc3QgViAyLjE7U2luaXN0ZXIgTGlnaHRuaW5nO1JlbGljcyBvZiBHbG9yaWQ5519cyBJbnNwaXJhdGlvbjtBcm1hdHVyZSBvZiB0aGUgQmVsbGlnZXJlbnQgUmFtIEJsdWU7QXJtcyBvZiBSaXNpbmcgRnVyeTtDdXJyZW50cyBvZiBFbmRsZXNzIFdvZTtDaGlsbGluZyBGZWF0aGVyO0FuY2hvcnMgb2YgdGhlIEFnZWxlc3MgRGVlcDtXaXRjaCBIdW50ZXIgVGVtcGxhcjtQYWNrLUljZSBQcml2YXRlZXI7RGFtZSBkZSBDYXJyZWF1O0NyZWVwaW5nIFNoYWRvdztCbG9vZHJvb3QgR3VhcmQ7Qmxvb2R5IFJpcHBlcjtDb21wZW5kaXVtIEJsb29keSBSaXBwZXI7UmVkcmFnZSBDcmF3bGVyO1RyYW5zbXV0ZWQgQXJtYW1lbnRzO0RlZXAgU2VhIFNjb3VuZHJlbDtPY2VhbiBDb25xdWVyb3I7U2hpdnNoZWxsIENyYXdsZXI7RGl2aW5lIEZsYW1lIFYgMi4wO1ZlaGVtZW50IFBsdW1lIFYgMi4wO1Ntb2xkZXJpbmcgSm91cm5leSBWIDIuMDtEcmFnb25maXJlIFYgMi4wO0JsYXppbmcgQ29zbW9zO1NhbXVyYWkgU2V0O0V4YWN0IE1hcmtzbWFuO0xvbmdiZWFyZCBEd2FyZiBFbmdpbmVlcjtUaGUgRHdhcmYgRW5naW5lZXI7VmlydHVvdXMgUm9hciBWIDIuMDtSYWlrYWdlIFdhcnJpb3IgViAyLjA7Vm9sYXRpbGUgRmlybWFtZW50IFYgMi4wO0FycmF5IG9mIFRyYW5xdWlsaXR5O1N3aWZ0IFBhdGhmaW5kZXIgU2V0O0V5ZSBvZiB0aGUgTWF6ZSBLZWVwZXI7TWFnaXN0ZXIgb2YgdGhlIE5hcnJvdyBGYXRlcztNYXplIFdhdGNoZXIgU2V0O0FsZ2lkIEZhbGNvbjtFbGR3dXJtcyBUb3VjaDtCbGFjayBXaW5kIFJhdmVuO0RpcmVzdG9uZSBCaW5kaW5ncyBTZXQ7U3RlbGxhciBKYWRlO0NoYWlucyBvZiB0aGUgU3VtbW9uZWQgTG9yZCBTZXQ7TWFsaWNpb3VzIFN0aW5nO1N0eWdpYW4gTWF3O0NoaW1lcyBvZiB0aGUgVGVtcGxlO1NoYWRvd3Mgb2YgdGhlIFd1eGlhO1JlZG1vb24gQXNzYXNzaW5zIFNlY3JldCBTZXQ7S2l0IG9mIHRoZSBGaXJzdCBIdW50IFYgMi4xO0NvcnJ1cHRpb24gViAyLjE7QXJteSBPZiBUaGUgVmFzdCBTZWE7Rmxvd2VyaW5nIFNoYWRlIFYgMi4wO1JpcHRpZGUgUmFpZGVyIFYgMi4wOyAxMjN8fHw=