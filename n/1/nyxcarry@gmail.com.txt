limitHWID:: 1 000||| 111::  111||| 222:: $2y$10$ZDgyNjkyZWMxNTNmM2E4N.8kJegwwLlxdHNrlTnS4M4VYxpV7/Mha 222||| 123:: Pumpkin Trees UP;Weather Moonbeam;Chaos Knight WC 3 Sound;Oracle WC 3 Sound;Juggernaut WC 3 Sound;Tinker WC 3 Sound;Rubick WC 3 Sound;Kunkka WC 3 Sound;Techies WC 3 Sound;Juggernaut - Rollin;Kunkka Pirate;Arthas WC 3 Sound for Abbadon;Akasha WC 3 Sound;Alchemist WC 3 Sound;Anubarak WC 3 Sound;Axe WC 3 Sound;Barathrum WC 3 Sound;Batrider WC 3 Sound;Beastmaster WC 3 Sound;Brewmaster WC 3 Sound;Bounty Hunter WC 3 Sound;Centaur WC 3 Sound;Clinkz WC 3 Sound;Crystal Maiden WC 3 Sound;Drow Ranger WC 3 Sound;Death Prophet WC 3 Sound;Disruptor WC 3 Sound;Enchantress WC 3 Sound;Gyrocopter WC 3 Sound;Huskar WC 3 Sound;Invoker WC 3 Sound;Keeper of the Light WC 3 Sound;Lich WC 3 Sound;Lina WC 3 Sound;Lone Druid WC 3 Sound;Luna WC 3 Sound;Mars Ult - U Got That;Medusa WC 3 Sound;Mirana WC 3 Sound;Naga Siren WC 3 Sound;Naix WC 3 Sound;Nature Prophet (Furion) WC 3 Sound;Nevermore WC 3 Sound;Necrolyte WC 3 Sound;Pugna WC 3 Sound;Ogre Magi WC 3 Sound;Rikimaru WC 3 Sound;Shadow Demon WC 3 Sound;Silenser WC 3 Sound;Shadow Shaman WC 3 Sound;Skywrath Mage WC 3 Sound;Sniper WC 3 Sound;Slardar WC 3 Sound;Templar Assassin WC 3 Sound;Vengeful Spirit WC 3 Sound;Warlock WC 3 Sound;Windrunner WC 3 Sound;Weaver WC 3 Sound;Witch Doctor WC 3 Sound;Cunning Corsair Valeera for Riki; 123|||