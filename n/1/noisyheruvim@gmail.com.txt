bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogMDY1MjBEMUEtQzVFQS1DMkFCLTFEMzEtNjA0NUNCQTg4OTAzIDExMXx8fCAyMjI6OiAkMnkkMTAkTVdaaFptWmpZekUyWVRRMk5UWmpOdXlhbUVlSWtVNHF1dkxuSXN3REhiRzhXOWlzckpmOEsgMjIyfHx8IDEyMzo6IENyaW1zb24gUGlxdWU7U2tpdHRlcmluZyBEZXNvbGF0aW9uIFByZW07Q3JpbXNvbiBQaXF1ZSBQcmVtO0dvbGRlbiBDeXJyaWRhZSBQcmVtO0hpZGRlbiBWZWN0b3IgLSBCbGFkZTtDb25zdGVsbGF0aW9uIEFybW9yO0hpZGRlbiBWZWN0b3IgLSBBcm1vcjtIaWRkZW4gVmVjdG9yIC0gSGF0O0NvbnN0ZWxsYXRpb24gV2VhcG9uO0hpZGRlbiBWZWN0b3IgLSBCZWx0O0NyaW1zb24gTWQ5519cm5mdWwgUmV2ZXJpZTtCbGFkZSBvZiBGbGlnaHRsZXNzIEZ1cnk7SGVsbSBvZiBFY2hvZXM7Q29hdCBvZiBGb3Jsb3JuIERlc2NlbnQ7QXJtcyBvZiBGb3Jsb3JuIERlc2NlbnQ7UGFsZSBBdWd1cjtDcmltc29uIEVtZXJhbGQgQ29ucXVlc3Q7Qml0dGVyIExpbmVhZ2UgSW1tb3J0YWwgQXhlcztUaW55IEZyb3N0bW9vdDtBbmNpZW50IEluaGVyaXRhbmNlIC0gU2hvdWxkZXI7RWFydGggR3JlZW4gQ29sb3IgZm9yIFRCO1N0ZXdhcmQgb2YgdGhlIEZvcmJpZGRlbiBDaGFtYmVyIEFybW9yO1N0ZXdhcmQgb2YgdGhlIEZvcmJpZGRlbiBDaGFtYmVyIEhlYWQ7TWFudGxlIG9mIHRoZSBXaGlzcGVyZWQgQm9uZDtHb2xkZW4gTWFuZGF0ZSBvZiB0aGUgU3Rvcm1ib3JuO1BoYW50b20gQXNjZW5zaW9uIEJlbHQ7UGhhbnRvbSBBc2NlbnNpb247UGhhbnRvbSBBc2NlbnNpb24gU2hvdWxkZXJzO1RyYW5zdmVyc2FudCBTb3VsIG9mIHRoZSBDcmltc29uIFdpdG5lc3M7RWRnZSBvZiB0aGUgRmxvd2VyaW5nIFNoYWRlO0JsYWNrc2FpbCBDYW5ub25lZXIgSGF0O1BhY2sgb2YgdGhlIEFyZGFsYW4gSW50ZXJkaWN0b3I7U25pcGVyIEltbW9ydGFsIFdlYXBvbiBvZiB0aGUgQXJkYWxhbiBJbnRlcmRpY3RvcjtMYXNoIG9mIHRoZSBMaXphcmQgS2luO0NyaW1zb24gQ2Vuc2VyIG9mIEdsaXNzIFVQO1JlZCBTYW5kcyBNYXJhdWRlciAtIE9mZmhhbmQ7T2ZmLUhhbmQgb2YgdGhlIEx1Y2VudCBDYW5vcHk7SGF1bCBvZiB0aGUgTHVjZW50IENhbm9weTtBcm1zIG9mIHRoZSBMdWNlbnQgQ2Fub3B5O0xhbWIgdG8gdGhlIFNsYXVnaHRlciBQcmVtO0dvbGRlbiBMYW1iIHRvIHRoZSBTbGF1Z2h0ZXIgUHJlbTtDaGFybSBvZiB0aGUgTHVjZW50IENhbm9weTtTaGFkb3cgRmllbmQgQXJjYW5hIERlbW9uIEVhdGVyO1RhaWwgb2YgdGhlIFNjb3VyaW5nIER1bmVzO1RoZSBCYXJyZW4gQ3Jvd24gUHJlbTtUaGUgQmFycmVuIENyb3duO0NyaW1zb24gRWRpY3Qgb2YgU2hhZG93cztHb2xkZW4gRWRpY3Qgb2YgU2hhZG93cztFZGljdCBvZiBTaGFkb3dzO0dvbGRlbiBTaGFkb3cgTWFzcXVlcmFkZTtHb2xkZW4gU2hhZG93IE1hc3F1ZXJhZGUgUHJlbTtTaGFkb3cgTWFzcXVlcmFkZTtIdW5nZXIgb2YgdGhlIEhvd2xpbmcgV2lsZHMgV2VhcG9uO1Ntb2tlIEJvbWIgb2YgTW9uc3Ryb3VzIFJlcHJpc2FsO0dyYW5kIEFic2Nlc3Npb247Q2hhbGljZSBvZiBJeHl4YTtTZXZlcmluZyBMYXNoIFByZW07U2V2ZXJpbmcgQ3Jlc3QgUHJlbTtDaGVzdHBsYXRlIG9mIHRoZSBHdWFyZGlhbiBDb25zdHJ1Y3QgQmVzdG93ZWQ7QnJhY2VycyBvZiB0aGUgR3VhcmRpYW4gQ29uc3RydWN0IEhhcnZlc3RlZDtDaGVzdHBsYXRlIG9mIHRoZSBHdWFyZGlhbiBDb25zdHJ1Y3QgSGFydmVzdGVkO1NraXJ0IG9mIHRoZSBHdWFyZGlhbiBDb25zdHJ1Y3QgSGFydmVzdGVkO1NraXJ0IG9mIHRoZSBHdWFyZGlhbiBDb25zdHJ1Y3QgQmVzdG93ZWQ7SGVhZCBvZiB0aGUgRm9ybG9ybiBNYXplO0dvbGRlbiBTZXZlcmluZyBDcmVzdCBQcmVtO0hlbG0gb2YgdGhlIEd1YXJkaWFuIENvbnN0cnVjdCBIYXJ2ZXN0ZWQ7Q29kaWNpbCBvZiB0aGUgVmVpbGVkIE9uZXM7QXZvd2FuY2Ugb2YgdGhlIFZlaWxlZCBPbmVzO0FzdHJhbCBEcmlmdDtHb2xkZW4gU2hhcmRzIG9mIEV4aWxlIFByZW07QXVzcGljZSBvZiB0aGUgV2h5cmxlZ3lnZTtGbG9ja2hlYXJ0cyBHYW1ibGUgTW9sdGVuIEZpcmVsYXJrO0dpbWxlayBEZWNhbnRlcjtWb2ljZSBvZiBGbG9ja2hlYXJ0cyBHYW1ibGU7R29sZGVuIFN1bGxlbiBIb2xsb3c7R29sZGVuIFN1bGxlbiBIb2xsb3cgUHJlbTtTdWxsZW4gSGFydmVzdDtSdWJpY2sgQ3Vyc2UgLSBHb2RzIFJlYnVrZTtDcmltc29uIFByb2dlbml0b3JzIEJhbmU7SGVsbC1TcGFyIEFuYXRoZW1hIE9ic2lkaWFuIEJsaWdodDtNdWxjdGFudCBQYWxsIG9mIHRoZSBDcmltc29uIFdpdG5lc3M7RmluIEtpbmdzIENoYXJtIG9mIEVtaW5lbnQgUmV2aXZhbCBFeGNlcHRpb25hbDtEcmVzcyBvZiB0aGUgQmV3aXRjaGluZyBGbGFyZSBQcmVtaXVtO0dsYXJlIG9mIHRoZSBUeXJhbnQ7U2hlYXJpbmcgRGVwb3NpdGlvbiBQcmVtO0Nyb3duIG9mIFZpbGUgQ29udm9jYXRpb247VG9tZSBvZiBGb3JiaWRkZW4gS25vd2xlZGdlO0JlbHQgb2YgVmlsZSBDb252b2NhdGlvbjtCYW5lZnVsIERldm90aW9uO0xlZ2FjeSBvZiB0aGUgRmFsbGVuIExlZ2lvbiBTdHlsZSAxO1JhZGlhbnQgQ29ucXVlcm9yIFdlYXBvbjtGb3J0dW5lcyBUb3V0IFByZW07Q3JpbXNvbiBFZGdlIG9mIHRoZSBMb3N0IE9yZGVyO0pha2lybyBJbW1vcnRhbCBXaW5ncztEYXJrIEFydGlzdHJ5IFRocm93YmFjaztBdG9taWMgUmF5IFRocnVzdGVycyBQcmVtO0hlcmFsZCBvZiB0aGUgRW1iZXIgRXllIC0gQnJ1c2g7Q2xhc3p1cmVtZSBJbmN1cnNpb24gQXJtcztCcmFjZXJzIG9mIEFlb25zO0NyaW1zb24gQnJhY2VycyBvZiBBZW9ucyBQcmVtO0NsYXN6dXJlbWUgSW5jdXJzaW9uIEhlYWQ7UGVyY2VwdGlvbnMgb2YgdGhlIEV0ZXJuYWwgTWluZDtGYWNlbGVzcyBNYWRuZXNzO01hY2Ugb2YgQWVvbnMgUHJlbTtKZXdlbCBvZiBBZW9ucztDbGFzenVyZW1lIEluY3Vyc2lvbiBTaG91bGRlcjtMb3JkIG9mIEx1bWluYXJpZXMgRWlkb2xvbnM7V29ybGQgQ2hhc20gQXJ0aWZhY3Q7VHdpc3RlZCBNYWVsc3Ryb20gd2l0aCBXb3JsZCBDaGFzbSBBcnRpZmFjdDtHb2xkZW4gU2lsZW50IFdha2U7SGVsbSBvZiB0aGUgVGhpcmQgQXdha2VuaW5nO0RyYWdvbiBvZiB0aGUgT3V0bGFuZCBSYXZhZ2VyO0FybW9yIG9mIHRoZSBPdXRsYW5kIFJhdmFnZXI7TWFudGxlIG9mIHRoZSBPdXRsYW5kIFJhdmFnZXI7Q3JpbXNvbiBHYXRlcyBvZiBOb3RobDtOb3RobGljIEJ1cmRlbiBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzO0RhcmtjbGF3IEVtaXNzYXJ5IFN0YWZmIHdpdGggY3VzdG9tIFVybjtHb2xkZW4gQnJhY2VycyBvZiBGb3Jsb3JuIFByZWNpcGljZTtCb29rIG9mIHRoZSBWaXppZXIgRXhpbGUgUHJlbTtBcmNhbmEgQ3J5c3RhbCBNYWlkZW4gRnJvc3QgQXZhbGFuY2hlO01hcmF4aWZvcm1zIElyZSBQcmVtO01hcmF4aWZvcm1zIEZhdGU7R29sZGVuIEluZmVybmFsIENoaWVmdGFpbjtJbmZlcm5hbCBNZW5hY2U7RGlhYm9saWMgQXNwZWN0O1RhbG9ucyBvZiB0aGUgRW5kbGVzcyBTdG9ybSBNb3VudDtDaGFvcyBGdWxjcnVtO1RhbG9ucyBvZiB0aGUgRW5kbGVzcyBTdG9ybSBXZWFwb24gR3JlZW4gU3R5bGU7R29sZGVuIENoYW9zIEZ1bGNydW07VGFsb25zIG9mIHRoZSBFbmRsZXNzIFN0b3JtIFdlYXBvbjtCZWFzdCBvZiB0aGUgQ3JpbXNvbiBSaW5nIEJyYWNlcnM7RG90YSAyIENoYW5nZXIgRWRpdGlvbiBIdW50ZXJzIEhvYXJkIG9mIHRoZSBDcmltc29uIFdpdG5lc3M7SHVudGVycyBIb2FyZCBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzO1RpbmVzIG9mIFR5YmFyYTtNYXJrIG9mIHRoZSBGaXJzdCBIdW50IEhhcnZlc3RlZDtNYXcgb2YgRXp0emhvaztPcmlnaW4gb2YgdGhlIFVubWFraW5nO1NsdW1iZXJpbmcgVGVycm9yO01hbnRsZSBvZiB0aGUgQ2luZGVyIEJhcm9uIFN0eWxlIDI7R29sZGVuIENydWNpYmxlIG9mIFJpbGU7RmlzdHMgb2YgQXhlIFVubGVhc2hlZDtBeGUgSnVuZ2xlO0dvbGRlbiBPcmlnaW5zIG9mIEZhaXRoIFByZW07T3JpZ2lucyBvZiBGYWl0aCBQcmVtO1Ntb2tlc3RhY2tzIG9mIHRoZSBCb2lsZXJwbGF0ZSBCcnVpc2VyO01vbG90b3YgQ29ja3RhaWwgb2YgdGhlIERhcmticmV3IEVuZm9yY2VyO0VuZGxlc3MgTmlnaHQgTWQ5519bnQ7QWdoYW5pbXMgSW50ZXJkaW1lbnNpb25hbCBCYWJ5IFJvc2hhbjtDaGlja2VuIEh1dCBXYXJkO1RoZSBJbnRlcm5hdGlvbmFsIDIwMTkgQ3Vyc29yIFBhY2s7RHJhZ29uIFRvd2VycyBieSBKZXQgU2hhcmsgViAyLjA7V2ludGVyIENyZWVwcyBWIDMuMDtNaWRuaWdodCBUZXJyb3IgSFVEO0VsaXhpciBvZiBEcmFnb25zIEJyZWF0aCBQcmVtO0NyaW1zb24gSGVhcnRzIG9mIE1pc3J1bGU7VGhlIFN1bmJyZWV6ZSBCaXJ0aHJpZ2h0O1Zvb2RvbyBQcmllc3Rlc3MgRXhvcmNpc207RmxvdXJpc2hpbmcgTG9kZXN0YXI7VmlyZ2FzIEFyYztNYXN0ZXIgb2YgdGhlIFNlYXJpbmcgUGF0aCBIZWFkO09mZi1IYW5kIEJsYWRlIG9mIHRoZSBXYW5kZXJpbmcgRmxhbWU7T2ZmLUhhbmQgQmxhZGUgb2YgdGhlIFJla2luZGxlZCBBc2hlcztBcG9nZWUgb2YgdGhlIEd1YXJkaWFuIEZsYW1lO0hvb2R3aW5rIEdsZWlwbmlyO0JlbmV2b2xlbnQgQ29tcGFuaW9uIFByZW07SnVnZ2VybmF1dCBBcmNhbmEgUmVkIEJsYWRlZm9ybSBPcmlnaW5zO1Rvcm1lbnRlZCBDcm93bjtUb3JtZW50ZWQgU3RhZmY7R29sZGVuIFR3aWxpZ2h0IFNjaGlzbTtTZWlzbWljIEJlcnNlcmtlciBDbHViO1NpZ25zIG9mIHRoZSBBbGxmYXRoZXIgLSBXZWFwb247TW9uYXJjaCBvZiB0aGUgU2FwcGhpcmUgR2xlbjtQeXJhbWlkIG9mIHRoZSBUZW1wbGUgb2YgdGhlIEZhbGxlbiBTdW47RGVzZXJ0IEJ1cm4gU2FkZGxlO0N1bHQgb2YgQWt0b2s7VGVtcGVzdCBIZWxtIG9mIHRoZSBUaHVuZGVyZ29kICsgUmlnaHRlb3VzIFRodW5kZXJib2x0O1RlbXBlc3QgUmV2ZWxhdGlvbjtXaXRjaCBEb2N0b3IgTWVnYVBhY2s7V2luZHJhbmdlciBBcmNhbmEgc3R5bGUgMSAoQmx1ZSBCaXJkKSArIEZ1bGwgV1IgaW1tb3J0YWw7RGV2aWwgUmlwcGVyO1ZpcGVyIE1lZ2FQYWNrO1Vyc2EgSW1tb3J0YWxzIE1lZ2FQYWNrO0tpbiBvZiB0aGUgU2FuZ3N0cmF0aCBGb2xkO1Zpc2lvbiBvZiB0aGUgU2VyYXBoIFNjaW9uIC0gRmFsbGVuO1Zpc2lvbiBvZiB0aGUgU2VyYXBoIFNjaW9uIC0gTGlnaHQ7VmlzaW9uIG9mIHRoZSBTZXJhcGggU2Npb24gLSBSb3lhbDtJbmN1cmFibGUgUGVzdGlsZW5jZTtDYXJuaXZvcm91cyBQYXJhc2l0aXNtO0RlbW9uZm9yZ2VkIFNldDtBenRlYyBXYXJyaW9yO1RyZWFudCBQcm90ZWN0b3IgTWVnYVBhY2s7VGlkZWh1bnRlciBNZWdhUGFjaztDb3JyaWRhbiBNYWVzdHJvIGFuZCBUaGUgTGlnaHRuaW5nIE9yY2hpZCBhbmQgR29sZGVuIE1hbmRhdGUgb2YgdGhlIFN0b3JtYm9ybiBNZWdhUGFjayBORVc7U3ZlbiBJbW1vcnRhbHMgTWVnYVBhY2s7T2NjdWx0aXN0cyBQdXJzdWl0O1NsYXJrIE1lZ2FQYWNrIE5ldztTbGFyZGFyIE1lZ2FQYWNrIHNldDtTRiBBcmNhbmEgTWVnYXBhY2s7TG9yZCBvZiB0aGUgU2NvdXJpbmcgRHVuZXMgViAyLjA7UXVlZW4gb2YgUGFpbiBBcmNhbmEgTWVnYVBhY2s7UHVkZ2UgVEkxMCBDb2xsZWN0b3JzIENhY2hlIE1lZ2FQYWNrO1B1Z25hIE1lZ2FQYWNrO1B1Z25hIEltbW9ydGFscyBNZWdhUGFjaztTaWx2ZXIgUmV2ZW5hbnQ7T3V0d29ybGQgRGV2b3V2ZXIgTWVnYVBhY2s7T2dyZSBNYWdpIEltbW9ydGFscyBBcmNhbmEgTWVnYVBhY2s7Tnl4IEFzc2Fzc2luIE1lZ2FQYWNrIG5ldztOeXggQXNzYXNzaW4gTWVnYVBhY2sgVVA7RGVhdGggTmVjcm9saWdodCBQcmVtaXVtIFN0eWxlIDE7Rm93bCBQbGFndWUgU2V0O1RoZSBCcmluZ2VyIG9mIFBsYWd1ZXM7TW9ua2V5IEtpbmcgQXJjYW5hIE1lZ2FQYWNrO01lZHVzYSBNZWdhUGFjayBORVc7TWFycyBUSTEwIENvbGxlY3RvcnMgQ2FjaGUgTWVnYVBhY2s7RXNzZW5jZSBPZiBUaGUgRGFyayBNb29uO01vcnBobGluZyBJbW1vcnRhbHMgTWVnYVBhY2sgVVA7QmV0dGVyIENhbGwgTW9ycGhsaW5nIFdpdGggSW1tb3J0YWxzO0xlZ2lvbiBDb21tYW5kZXIgTW9kTWFrZXIgTWVnYVBhY2s7SmFraXJvIE1lZ2FQYWNrO0h1c2thciBNZWdhUGFjaztIdXNrYXIgTWVnYVBhY2sgTkVXO0FpcmJvcm5lIE1hY2hldGU7QXJjYW5lIEludmVydGVyO0luayBEcmFnb24gUG9ldDtGcm96ZW4gVm9pZDtFbmlnbWEgTWVnYVBhY2s7VHdpc3RlZCBNYWVsc3Ryb207RWFydGhzaGFrZXIgTWVnYVBhY2sgTmV3O1Njb3JjaGluZyBBbWJlciBEcmFnb29uO0V0ZXJuYWwgVGVzdGFtZW50O0Rvb20gSW1tb3J0YWxzIE1lZ2FQYWNrO1NoYWRvdyBGbGFtZSBWIDMuMDtDbGlua3ogTWVnYVBhY2s7TWFyYXhpZm9ybXMgRmF0ZSBCdW5kbGU7VW5icm9rZW4gU3RhbGxpb247QnVybmluZyBOaWdodG1hcmU7Q2hhcmdlIG9mIHRoZSBCYWxlZnVsIFJlaWduIFYgMy4xO0JyaXN0bGViYWNrIE1lZ2FQYWNrO0dpZnRzIG9mIHRoZSBGbGF5ZWQgVHdpbnMgU3R5bGUgMTtCZWFzdG1hc3RlciBNZWdhUGFjaztBeGUgZnVsbCBJbW1vcnRhbHMgTWVnYXBhY2s7QXhlIGZ1bGwgSW1tb3J0YWxzIE1lZ2FwYWNrIGFsdDtBbnRpTWFnZSBSRUQgTWVnYVBhY2s7RGFya2JyZXcgRW5mb3JjZXIgYW5kIEV0ZXJuYWwgUmFkaWFuY2UgQmxhZGVzIGFuZCBNaWRhcyBLbnVja2xlcyBNZWdhUGFjaztBYmFkZG9uIFJFRCBNZWdhUGFjaztFdmVyYmxhY2s7QUFNZWdhUGFjaztBcmMgV2FyZGVuIE1lZ2FQYWNrO0ZpcmVzdGFydGVyIFYyLjA7TG9hZGVkIFByb3NwZWN0cztCcm9vZG1vdGhlciBNZWdhUGFjaztFbXBlcm9yIG9mIHRoZSBTdW47Q2xvY2t3ZXJrIE1lZ2FQYWNrO0JpbmRpbmdzIG9mIHRoZSBHYWx2YW5pemVkIFNwYXJrO0Ryb3cgUmFuZ2VyIE1lZ2FQYWNrO1R1cnF1b2lzZSBHaWFudCBHdWFyZDtNb251bWVudHMgb2YgdGhlIE5hdHVyYWwgRGVtaXVyZ2U7S3Vua2thIEltbW9ydGFscyBNZWdhUGFjaztUaGUgS2luZyBvZiBUaGlldmVzO0dvbGRlbiBEYXJrIE1hdyBJbmhpYml0byBhbmQgR29sZGVuIFByb2ZhbmUgVW5pb24gYW5kIEdvbGRlbiBEcmVhZCBSZXF1aXNpdGlvbiBMaWZlc3RlYWxlciBJbW1vcnRhbHMgTWVnYXBhY2s7SWNlIExpbmEgUHJlbWl1bTtMb25lIERydWlkIE1lZ2FQYWNrO0x5Y2FuIEtpc2lsZXYgTW9kTWFrZXIgTWVnYVBhY2s7QXV0aG9yaXR5IG9mIHRoZSBJbXBlcmlzaGFibGUgR3JhbmQgSGllcm9waGFudDtFdGllbm5lIFN3aWZ0Z3VhcmQ7TWFuaWZvbGQgUGFyYWRveCBHb3RoaWMgSHVudGVyO0FyaXN0b2NyYXRpYyBSZWJpcnRoO0FoUHVjaztDb3JydXB0ZWQgU2hyaW5lIEdhcm1lbnRzO1NpbGVuY2VyIE1lZ2FQYWNrO1NwaXJpdCBCcmVha2VyIE1lZ2FQYWNrO0QgT2N0byBUaW5rZXI7VGltYmVyc2F3IE1lZ2FQYWNrO0Nob21wZXIgU2V0O1Zpc2FnZSBNZWdhUGFjaztUb29scyBvZiB0aGUgSGVsbHN3b3JuO0RlZmVuZGVyIG9mIHRoZSBCcnVtYWwgQ3Jlc3Q7V3JhaXRoIEtpbmcgQXJjYW5hIE1lZ2FQYWNrOyAxMjN8fHw=