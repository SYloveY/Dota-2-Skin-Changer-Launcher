bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogIDExMXx8fCAyMjI6OiAkMnkkMTAkWkRsbE1ESmhNemczTUdNNU9EWTNaT3lqVE5qaGx4ODFOc2k1ZmlzNHNpaHQzSkZHVXhhSlMgMjIyfHx8IDEyMzo6IFdvb2RsYW5kIFdhcmJhbmRzIC0gRGlyZSBDcmVlcHM7V29vZGxhbmQgV2FyYmFuZHMgLSBSYWRpYW50IENyZWVwcztXb29kbGFuZCBXYXJiYW5kcyAtIERpcmUgU2llZ2UgQ3JlZXBzO1dvb2RsYW5kIFdhcmJhbmRzIC0gUmFkaWFudCBTaWVnZSBDcmVlcHM7SHVtYW5pdHlzIExhc3QgQnJlYXRoIC0gVm9pZCBNdXNpYyBQYWNrO0FnaGFuaW1zIExhYnJ5aW50aCAyMDIxIEhVRDtEcmVhZCBSZXRyaWJ1dGlvbiAtIEJyYWNlcnMgQWx0O0RyZWFkIFJldHJpYnV0aW9uIC0gQ2FwZSBBbHQ7RHJlYWQgUmV0cmlidXRpb24gLSBIZWFkd2VhciBBbHQ7RHJlYWQgUmV0cmlidXRpb24gLSBMZWcgQXJtb3IgQWx0O0RyZWFkIFJldHJpYnV0aW9uIC0gUXVpdmVyIEFsdDtEcmVhZCBSZXRyaWJ1dGlvbiAtIFNob3VsZGVyIEFybW9yIEFsdDtBcmNhbmEgRHJlYWQgUmV0cmlidXRpb24gTWFzdGVyIG9mIE1hZG5lc3M7RGF2aW9uKnMgRHJhZ29uIEhvbGQgSGVsbTtEYXZpb24qcyBEcmFnb24gSG9sZCBQYXVsZHJvbnM7U2NvcmNoZWQgQW1iZXIgU3dvcmQ7SW1tb3J0YWwgUGFudGhlb247VG9tbyprYW4gSW5jYXJuYXRlIEhvb2Q7VG9tbyprYW4gSW5jYXJuYXRlIEFybW9yO1RvbW8qa2FuIEluY2FybmF0ZSBBcmJhbGVzdDtUb21vKmthbiBJbmNhcm5hdGUgVGFpbDtEb3RhIDIgQ2hhbmdlciBFZGl0aW9uIEh1bnRlcnMgSG9hcmQgb2YgdGhlIENyaW1zb24gV2l0bmVzcztUaW5lcyBvZiBUeWJhcmE7QWt0b2sqcyBBcm1vcjtBa3RvaypzIEVtaXNzYXJpZXM7Q3VsdCBvZiBBa3RvaztMZWZ0eSAtIEFlZ2lzIG9mIHRoZSBJbW1vcnRhbDtTb3VsIFNocmVkZGVyO0dvbGRlbiBEcmFjYSBNYXc7TWFuaWZvbGQgUGFyYWRveCBQQSBBcmNhbmEgU3R5bGUgMztUYWxvbnMgb2YgdGhlIEVuZGxlc3MgU3Rvcm0gTWQ5519bnQ7Q2hhb3MgRnVsY3J1bTtEaWFib2xpYyBBc3BlY3Q7VGFsb25zIG9mIHRoZSBFbmRsZXNzIFN0b3JtIFNoaWVsZDtUYWxvbnMgb2YgdGhlIEVuZGxlc3MgU3Rvcm0gU2hvdWxkZXI7UmljayBhbmQgTW9ydHkgQW5ub3VuY2VyO1JpY2sgYW5kIE1vcnR5IE1lZ2EtS2lsbDtHb2RzIE1lcmN5IG9mIHRoZSBDcmltc29uIFdpdG5lc3M7Q3JpbXNvbiBQcm9nZW5pdG9ycyBCYW5lO1N3aW5lIG9mIHRoZSBTdW5rZW4gR2FsbGV5IFByZW07RGVjbGFyYXRpb24gb2YgdGhlIERpdmluZSBMaWdodCBSYWRpYW50IFRvd2VycztEZWNsYXJhdGlvbiBvZiB0aGUgRGl2aW5lIFNoYWRvdyBEaXJlIFRvd2VycztTdWxsZW4gSGFydmVzdDtTdWxsZW4gSG9sbG93IFByZW07U3VsbGVuIFJhbXBhcnQ7Rm93bCBPbWVuIEhlYWQ7QXRvbWljIFJheSBUaHJ1c3RlcnMgUHJlbTtQcm9wZWxsZXJzIG9mIHRoZSBWZXNwaWR1biBIdW50ZXItS2lsbGVyO0hlYWQgb2YgdGhlIFZlc3BpZHVuIEh1bnRlci1LaWxsZXI7Q29uZSBvZiB0aGUgVmVzcGlkdW4gSHVudGVyLUtpbGxlcjtQYXlsb2FkIG9mIHRoZSBWZXNwaWR1biBIdW50ZXItS2lsbGVyO1dlYXRoZXIgU3ByaW5nO1RlcnJhaW4gLSBJbW1vcnRhbCBHYXJkZW5zO0ZvcnR1bmUgb2YgdGhlIEZpdmUgSG91c2VzO1JlbW5hbnRzIG9mIEFzY2Vuc2lvbjtIZXJhbGQgb2YgdGhlIEVtYmVyIEV5ZSAtIEJlbHQ7SGVyYWxkIG9mIHRoZSBFbWJlciBFeWUgLSBBcm1vcjtTY29yY2hpbmcgVGFsb247QXBvZ2VlIG9mIHRoZSBHdWFyZGlhbiBGbGFtZTtSYXBpZXJzIG9mIHRoZSBCdXJuaW5nIEdvZCBWIDMuMTtDaW5kZXIgU2Vuc2VpIEJlbHQ7Q2luZGVyIFNlbnNlaSBCcmFjZXI7VGhlIEJhcnJlbiBDcm93bjtUaGUgQmFycmVuIFZlY3RvcjtUYWxvbnMgb2YgdGhlIEVuZGxlc3MgU3Rvcm0gV2VhcG9uO01hc2sgb2YgTWV0aXJhO0dvbGRlbiBSZWN0aWZpZXI7UHVwcGV0IFB1ZGdlIFBlcnNvbmEgKHlvdSBjYW4gYWRkIEhvb2spIFVQO0RLIFBlcnNvbmEgRGF2aW9uO1JpZ2h0ZWQ5519cyBUaHVuZGVyYm9sdCBhbmQgQXJjYW5hIE1lZ2FQYWNrO1R3aW4gQmxhZGVzIEFzc2Fzc2luIFNldDtEb29tIEltbW9ydGFscyBNZWdhUGFjaztIdXNrYXIgTWVnYVBhY2sgTkVXO1N2ZW4gSW1tb3J0YWxzIE1lZ2FQYWNrIFVQO0FyY2FuYSBNZWdhUGFjayBTaGFkb3cgRmllbmQ7V2luZHJhbmdlciBBcmNhbmEgc3R5bGUgMSAoQmx1ZSBCaXJkKSArIEZ1bGwgV1IgaW1tb3J0YWw7VXJzYSBJbW1vcnRhbHMgTWVnYVBhY2s7TWFycyBUSTEwIENvbGxlY3RvcnMgQ2FjaGUgTWVnYVBhY2s7U3Bpcml0IEJyZWFrZXIgTWVnYVBhY2s7RWFydGhzaGFrZXIgTWVnYVBhY2sgTmV3O0dvbGRlbiBEYXJrIE1hdyBJbmhpYml0byBhbmQgR29sZGVuIFByb2ZhbmUgVW5pb24gYW5kIEdvbGRlbiBEcmVhZCBSZXF1aXNpdGlvbiBMaWZlc3RlYWxlciBJbW1vcnRhbHMgTWVnYXBhY2s7TGVnaW9uIENvbW1hbmRlciBNb2RNYWtlciBNZWdhUGFjaztNb25rZXkgS2luZyBBcmNhbmEgTWVnYVBhY2s7S3Vua2thIEltbW9ydGFscyBNZWdhUGFjaztTbGFyZGFyIE1lZ2FQYWNrIHNldDtRdWVlbiBvZiBQYWluIEFyY2FuYSBNZWdhUGFjaztSdWxlciBvZiB0aGUgRnJvc3RiaXRlIER1bmVzO01pcmFuYSBNZWdhUGFjaztUaW1iZXJzYXcgTWVnYVBhY2s7IDEyM3x8fA==