bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogMTg1NjgwQjAtMkFDMC0yMDE4LTExMjMtMDczODA1MDAwMDAwOzsgMTExfHx8IDIyMjo6ICQyeSQxMCRZakZrTUdOaU1qWm1Oak0zTmpRMk1PcjE2anFSNE1hbTFNTWppak1rSVFnczk3UTZoVFV4TyAyMjJ8fHwgMTIzOjogQ29kaWNpbCBvZiB0aGUgVmVpbGVkIE9uZXM7R290aGljIFdoaXNwZXIgQmVsdDtNYW5pZm9sZCBQYXJhZG94IFBBIEFyY2FuYSBTdHlsZSAxO0dvdGhpYyBXaGlzcGVyIENhcGU7Q29uY29yZCBSZXZlcnNpb24gVVA7Q29uY29yZCBEb21pbmlvbjtKYWdnZWQgSG9ub3IgQnJhY2VyO0phZ2dlZCBIb25vciBCYW5uZXI7QmVsdCBvZiB0aGUgQmxhZGVmb3JtIEFlc3RoZXRlO0p1Z2dlcm5hdXQgQXJjYW5hIFJlZCBCbGFkZWZvcm0gT3JpZ2lucztPZmZoYW5kIEJsYWRlIG9mIHRoZSBTdXJ2aXZvciBQcmVtO1RoZSBHb2xkIEJhc2hlciBCbGFkZXMgZm9yIFdlaTtTaGFkb3cgaW4gdGhlIERlZXAgQXJtb3I7R29sZGVuIEh5ZHJha2FuIExhdGNoO1NoYWRvdyBpbiB0aGUgRGVlcCBCYWNrO1NoYWRvdyBpbiB0aGUgRGVlcCBCcmFjZXJzO1NlYSBSYWtlcyBCcmlkbGU7V2ludGVyYmxpZ2h0IFByZW07UGF1bGRyb24gb2YgdGhlIERyZWFkYm9ybiBSZWdlbnQ7Q3Jvd24gb2YgdGhlIE1hbGlnbmFudCBSdWxlO0Nsb2FrIG9mIHRoZSBEYXJrIFJlc2Vydm9pcjtCbGlzdGVyaW5nIFNoYWRlIG9mIHRoZSBDcmltc29uIFdpdG5lc3M7QXJtb3Igb2YgdGhlIERhcmsgUmVzZXJ2b2lyO0dvbGRlbiBBcm1zIG9mIERlc29sYXRpb24gUHJlbTtQYXVsZHJvbnMgb2YgRXRlcm5hbCBIYXJ2ZXN0IFByZW07Qml0dGVyIExpbmVhZ2UgSW1tb3J0YWwgQXhlcztTaG91bGRlcnMgb2YgdGhlIEltcGVyaWQ5519cyBDb21tYW5kO0hhaXIgb2YgdGhlIEltcGVyaWQ5519cyBDb21tYW5kO0FybW9yIG9mIHRoZSBJbXBlcmlvdXMgQ29tbWFuZDtDb21wbGV0ZSBHYXJiIG9mIHRoZSBDb3JyaWRhbiBNYWVzdHJvO0dvbGRlbiBNYW5kYXRlIG9mIHRoZSBTdG9ybWJvcm47VGhlIExpZ2h0bmluZyBPcmNoaWQgb2YgRW1pbmVudCBSZXZpdmFsIEV4Y2VwdGlvbmFsO1Byb3ZvY2F0aW9uIG9mIFJ1aW4gU3dvcmQ7R3VhcmQgb2YgdGhlIFdhbmRlcmluZyBGbGFtZTtSYXBpZXIgb2YgdGhlIEJ1cm5pbmcgR29kO0Fwb2dlZSBvZiB0aGUgR3VhcmRpYW4gRmxhbWU7TWFzdGVyIG9mIHRoZSBTZWFyaW5nIFBhdGggSGVhZDtUdW5pYyBvZiB0aGUgV2FuZGVyaW5nIEZsYW1lO01hZ3VzIEFjY29yZDtEYXJrIEFydGlzdHJ5IENhcGUgUHJlbTtEYXJrIEFydGlzdHJ5IEJlbHQgUHJlbTtEYXJrIEFydGlzdHJ5IEhhaXIgMXN0IFN0eWxlO0RhcmsgQXJ0aXN0cnkgUGF1bGRyb25zO01hdyBvZiBFenR6aG9rO0JsYWRlcyBvZiB0aGUgU2FuZ3VpbmUgU3BlY3RydW07R29sZGVuIFNpbGVudCBXYWtlO01hc2sgb2YgWmVidWxvbjtRdWl2ZXIgb2YgdGhlIEtoYS1SZW4gRmFpdGhmdWw7U2hvdWxkZXJzIG9mIHRoZSBTYWNyZWQgSHVudDtSZWFwZXJzIFdyZWF0aDtDcmltc29uIEJyYWNlcnMgb2YgQWVvbnMgUHJlbTtQZXJjZXB0aW9ucyBvZiB0aGUgRXRlcm5hbCBNaW5kO0pld2VsIG9mIEFlb25zO01hY2Ugb2YgQWVvbnMgUHJlbTtTY3l0aGVzIG9mIFNvcnJvdztDcmVhdG9ycyBMaWdodCBDb2xvciBmb3IgVEI7U3BhbiBvZiBTb3Jyb3c7Q2hhc20gb2YgdGhlIEJyb2tlbiBDb2RlIEFybW9yO0ZsdXR0ZXJpbmcgQW1ldGh5c3QgKyBQdXJwbGUgRm9jYWwgUmVzb25hbmNlIERvdGEyQ2hhbmdlciBFZGl0aW9uO1NoYXR0ZXJlZCBHcmVhdHN3b3JkIFByZW07SW5kb21pdGFibGUgTGVnYWN5IC0gU2hvdWxkZXI7VmlnaWwgT2R5c3NleTtJbmRvbWl0YWJsZSBMZWdhY3kgLSBCZWx0O0luZG9taXRhYmxlIExlZ2FjeSAtIEFybXM7RW5pZ21hdGljIEVtYmxlbSBvZiB0aGUgRGlyZXRpZGUgLSBCbHVlO0dyZWF0IFNhZ2VzIFJlY2tvbmluZyBJbW1vcnRhbCBQYXRoO1N0YWZmIG9mIEd1bi1ZdSBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzO0FybW9yIG9mIHRoZSBEZW1vbiBUcmlja3N0ZXIgT3JhbmdlO1BhdWxkcm9ucyBvZiB0aGUgRGVtb24gVHJpY2tzdGVyO1Rvcm1lbnRlZCBTdGFmZiBvZiBFbWluZW50IFJldml2YWwgRXhjZXB0aW9uYWw7VG9ybWVudGVkIENyb3duO0xhbmNlIG9mIHRoZSBTdW53YXJyaW9yO0F2b3dhbmNlIG9mIHRoZSBDcmltc29uIFdpdG5lc3M7R29sZGVuIFR3aWxpZ2h0IFNjaGlzbTtBcm1vciBvZiB0aGUgV2luZ2VkIFNlbnRpbmVsO0dvbGRlbiBNb29uZmFsbCBQcmVtO0x1Y2VudHlyIFByZW07SGVsbSBvZiB0aGUgRGFyayBNb29uIFN0YWxrZXI7U25pcGVyIEltbW9ydGFsIFdlYXBvbiBvZiB0aGUgQXJkYWxhbiBJbnRlcmRpY3RvcjtQYWNrIG9mIHRoZSBBcmRhbGFuIEludGVyZGljdG9yO0hlbG0gb2YgdGhlIEFyZGFsYW4gSW50ZXJkaWN0b3I7QmxhY2tzYWlsIENhbm5vbmVlciBTaG91bGRlcjtCcmFjZXJzIG9mIHRoZSBTaWx2ZXIgRm94O1BoYW50b20gQXNjZW5zaW9uIEJlbHQ7UGhhbnRvbSBBc2NlbnNpb247UGhhbnRvbSBBc2NlbnNpb24gU2hvdWxkZXJzO1BoYW50b20gQXNjZW5zaW9uIFdlYXBvbjtVcnNhIEltbW9ydGFscyBNZWdhUGFjaztNb3JwaGxpbmcgSW1tb3J0YWxzIE1lZ2FQYWNrIFVQO01lZHVzYSBNZWdhUGFjayBORVc7S3Vua2thIEltbW9ydGFscyBNZWdhUGFjaztEYXJrYnJldyBFbmZvcmNlciBhbmQgRXRlcm5hbCBSYWRpYW5jZSBCbGFkZXMgYW5kIE1pZGFzIEtudWNrbGVzIE1lZ2FQYWNrO0dvbGRlbiBEYXJrIE1hdyBJbmhpYml0byBhbmQgR29sZGVuIFByb2ZhbmUgVW5pb24gYW5kIEdvbGRlbiBEcmVhZCBSZXF1aXNpdGlvbiBMaWZlc3RlYWxlciBJbW1vcnRhbHMgTWVnYXBhY2s7QW50aU1hZ2UgUkVEIE1lZ2FQYWNrO1dpbmRyYW5nZXIgQXJjYW5hIHN0eWxlIDIgKE9yYW5nZSBCaXJkKSBhbmQgRnVsbCBXUiBpbW1vcnRhbDtBaXJib3JuZSBNYWNoZXRlO1Rva2lzYWtpIEt1cnVtaSB3ZWRkaW5nIGZvciBXZWF2ZXIgYnkgUGF0Y2hvdWxpIEtub3dsZWRnZTtBYmFkZG9uIFJFRCBNZWdhUGFjazsgMTIzfHx8