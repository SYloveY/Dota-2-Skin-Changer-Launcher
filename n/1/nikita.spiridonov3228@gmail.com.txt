limitHWID:: 1 000||| 111::  111||| 222:: $2y$10$ODE2MjAzNjlkMGUwZjM2OOYO.QkqGSg9e3oK7yBelpa.kmzynU.H6 222||| 123:: The Basher Blades;Vest of the Mage Abolisher;Bracers of the Survivor;Belt of the Forgotten Plane;Lineage Helm of Broken Scale;Golden Basher of Mage Skulls;Lineage Offhand Blade of Broken Scale;Oathbound Defiant Pauldrons;Belt of the Gleaming Seal;Vest of the Bloodroot Guard;Helm of the Bloodroot Guard;Belt of the Bloodroot Guard;Cape of the Bloodroot Guard;The Scarlet Flare Arms;The Scarlet Flare Head;The Scarlet Flare Neck;The Scarlet Flare Belt;Magus Apex;Infernus;Northern Blight Arms;Dark Artistry Cape;Dark Artistry Belt;Golden Moonfall Prem;Helm of the Winged Sentinel;Twilight Schism;Lucentyr;Armor of the Winged Sentinel;Nova of Golden Nirvana;Solar Forge;Solar Gyre;Arms of Desolation Prem;Horns of Eternal Harvest;Pauldrons of Eternal Harvest;Blood Shard;Dreadknight Pauldron;Regalia of the Wraith Lord Helmet;Cloak of the Haunted Lord;Dreadknight Gauntlet;Memories of Bone Armor;Commander*s Skirt of the Flameguard;Rogue at Arms;Commander*s Helm of the Flameguard;Commander*s Pauldron of the Flameguard;Blade of the Northern Shore;Kantusa the Script Sword V 3.1;The Ward of Odocoeleus;Sinister Shadow Arms;Arsenal of the Bladekeeper;Sigil Mask of the Bladekeeper;Pantaloons of the Bladekeeper;Bindings of Deep Magma;Bogborne;Hunter of the Crystal Drift; 123|||