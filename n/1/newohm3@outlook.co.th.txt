bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogIDExMXx8fCAyMjI6OiAkMnkkMTAkTWpZNE9ERTFOVFEwTmpBNU5tVTBPTzRrejNubFMvZXl0bDJNa0ZMck9obVZEMjdicE93bG0gMjIyfHx8IDEyMzo6IEFwZXJ0dXJlIFNjaWVuY2UgV2FyZGNvcmU7Uml2ZXIgVmlhbCBHcmVlbjtHbG9vbWJvYjtOYWNyZWQ5519cyBTdGFnIEJhY2s7RGltZW5zaW9uIFJpcHBlciBIZWFkO0FyZW5hIENoYW1waW9uIEFybW9yO0ZlYXN0IG9mIHRoZSBVbndpbGxpbmcgU2hvdWxkZXJzO0ZlYXN0IG9mIHRoZSBVbndpbGxpbmcgQXJtb3I7R29sZGVuIFJhYmlkIFdhdGNoY29nO1RoZSBCcmFzcyBGbHllciBIZWFkO0FybW9yIG9mIEVuZGxlc3MgRGF5cztFeWUgb2YgdGhlIEZhdGV3ZWF2ZXIgQXJtb3I7U2FnYXMgb2YgdGhlIEN5bXVycmluIFNhZ2U7TWFsZWZpYyBEcmFrZXMgSG9vZCBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzO1N1bmtlbiBTbmFwcGVyIFdpbmdzO0JsYWRlIG9mIHRoZSBEZW1vbmljIFZlc3NlbDtDYXBlIG9mIHRoZSBFdmVyYmxhY2s7UGF1bGRyb25zIG9mIHRoZSBNaXN0cmFsIEZpZW5kO1Zlc3BlcnRpbmUgR3VhcmQgSGVsbWV0O0dydWRnZSBpbiB0aGUgTWlzdDtGcm9zdHJlYWNoIEJyaWdhbmRzIFNjYXJmO0V0ZXJuYWwgUmFkaWFuY2UgQmxhZGVzIFByZW07QnJhY2VyIG9mIHRoZSBGb3Jnb3R0ZW4gUGxhbmU7QWNvbHl0ZSBvZiBWZW5nZWFuY2UgSG9vZGVkIE1hc2s7R29sZGVuIE9mZmhhbmQgQmFzaGVyIG9mIE1hZ2UgU2t1bGxzO1Nob3VsZGVyIFBsYXRlIG9mIHRoZSBGZXJ2ZW50IENvbnNjcmlwdDtHb2xkZW4gQmFzaGVyIG9mIE1hZ2UgU2t1bGxzO0FybW9yIG9mIHRoZSBGb3Jnb3R0ZW4gUGxhbmU7VG94aWMgU2llZ2UgQXJtb3JlZCBTYWRkbGU7Rm9ybWVkIEFsbG95IEZsYXNrO1NwaWtlZCBTaG91bGRlciBvZiB0aGUgQ29udmljdHM7UmF6emlscyBNaWRhcyBLbnVja2xlcyBQcmVtO0xlZ2FjeSBvZiBhIExvc3QgQWdlIC0gUHRlcm9oYXdrO0xlZ2FjeSBvZiBhIExvc3QgQWdlIC0gQnJhY2VycztFZGdlIG9mIEV4dGluY3Rpb24gQmVsdDtFZGdlIG9mIEV4dGluY3Rpb24gSGVsbTtMZWdhY3kgb2YgYSBMb3N0IEFnZSAtIEFybW9yO0xlZ2FjeSBvZiBhIExvc3QgQWdlIC0gU3RlZ2Fib2FyO0xlZ2FjeSBvZiBhIExvc3QgQWdlIC0gQXhlO0hlYXJ0bGVzcyBIdW50IC0gQXJtb3I7U2t1bGwgb2YgdGhlIEZpcnN0IEh1bnQ7SGVhcnRsZXNzIEh1bnQgLSBPZmYtSGFuZDtNYXJrIG9mIHRoZSBGaXJzdCBIdW50O0JyYWNlcnMgb2YgdGhlIEZvdXIgQ29ybmVycztQaXBlIG9mIHRoZSBGb3VyIENvcm5lcnM7SGVhZCBvZiB0aGUgSWNlYnJldyBBbmdsZXI7S2VnIG9mIHRoZSBGb3VyIENvcm5lcnM7UGF1bGRyb24gb2YgdGhlIEZvdXIgQ29ybmVycztGbGFpbCBvZiB0aGUgRHJ1bmtlbiBDYXNrO1VuZGVmZWF0ZWQgR2VuZXJhbDsgMTIzfHx8