limitHWID:: 1 000||| 111:: C05CBF81-9FC6-11EA-80DD-002B677FAD94;; 111||| 222:: $2y$10$M2E4NGZjZDk0OGEzZjgzZ.Q5b.T1D2acNrJXsu3yIHUQYzLV2CXRa 222||| 123:: Mask of Zebulon;Silent Wake of the Crimson Witness;Reapers Wreath;Immortal Invoker Kid;Juggernaut Arcana Bladeform Legacy;Manifold Paradox PA Arcana Style 3;Rubick Curse - Exocirsm;Fantoccini;Rubick Curse - Chaos Meteor;Rubick Curse - Black Hole;Rubick Curse - Chain Frost;Rubick Curse - Chronosphere;Rubick Curse - Finger of Death;Rubick Curse - Fire Remnant;Rubick Curse - Mystic Flare;Rubick Curse - Ravage;Rubick Curse - Rolling Thunder;Rubick Curse - Supernova;Rubick Curse - Thundergods Wrath;Rubick Curse - Wraithfire Blast;Rubick Curse - Freezing Field;Staff of Perplex Prem;Hidden Vector - Armor;Hidden Vector - Hat;Hidden Vector - Belt;Hidden Vector - Blade;Windranger Arcana style 1;Windranger Blue Immortal Bird UP;Coat of Fantoccinis Dilemma;Golden Huntling Prem;Knight Statue;Hat of Fantoccinis Dilemma;Fractal Horns of Inner Abysm UP;AntiMage Female;Legion Commander ModMaker MegaPack;Creeping Shadow;Queen of Pain Arcana MegaPack;Puppet Pudge Persona (you can add Hook) UP; 123|||