bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogMDNERTAyOTQtMDQ4MC0wNUJBLTQ3MDYtNzUwNzAwMDgwMDA5IDExMXx8fCAyMjI6OiA2ZTI5NjZmNGE5YjQ0YWE1ZmUwZWRiNTYzNmE0YjYxMzI1NjFjZWNiMDI3YTg4MzcxZmFiMjNhMDIyMDEzZjg3NjMxZjYxMTZlZWRhMmYyMTI0Mzc3MzlhOWQxYmQ3MGQ5MTgyYjI5NWYyMzU1MzIwNTNiYzc3NjUzNDlkM2ZmOSAyMjJ8fHwgMTIzOjogRnJvc3QgQXZhbGFuY2hlIFByZW07R2xhY2lhbCBHYXJkZW5zIEhlYWQ7SWNlIEJsb3Nzb207R29sZGVuIFBpc2NlYW4gUHVsdmVyaXplcjtTcGFuIG9mIHRoZSBUZW1wbGUgb2YgdGhlIEZhbGxlbiBTdW47U29sYXIgRm9yZ2UgUHJlbTtBcmNhbmEgU0YgRGVtb24gRWF0aGVyO1N3aW5lIG9mIHRoZSBTdW5rZW4gR2FsbGV5IFByZW07Qm9tYnRyYWlscyBhbmQgQm9vbXN0aWNrcyBTcG9vbjtCb21idHJhaWxzIGFuZCBCb29tc3RpY2tzIFNwbGVlbjtQb3dkZXJzbGVkIFJvb2tlcnkgQ2Fubm9uO0lyb24gU3VyZ2UgViAyLjI7U2F2YWdlIE1ldHRsZTtCbG9vZHN0YWluZWQgQnJpdGNoZXM7SGVhdnkgVGVuZGVyaXplcjtEcmFnb25jbGF3IEhvb2s7QXJtcyBvZiBEZXNvbGF0aW9uIFByZW07UGF1bGRyb25zIG9mIEV0ZXJuYWwgSGFydmVzdCBQcmVtO0RlbmRpIERvbGw7SGF0IG9mIHRoZSBKb2xseSBSZWF2ZXI7TWFndXMgQWNjb3JkO0RhcmsgQXJ0aXN0cnkgQ2FwZSBQcmVtO0RhcmsgQXJ0aXN0cnkgQmVsdCBQcmVtO01hc2sgb2YgdGhlIERpdmluZSBTb3Jyb3cgViAzLjE7SGVhdmVuLVBpZXJjaW5nIFBhdWxkcm9ucztGYW1pbGlhcnMgb2YgR2xvcmlvdXMgSW5zcGlyYXRpb247U291bCBvZiB0aGUgU2xheWVyIFByZW07RGlzY2lwbGUgb2YgdGhlIFd5cm13cm91Z2h0IEZsYW1lO1d5cm13cm91Z2h0IEZsYXJlO0F2b3dhbmNlIG9mIHRoZSBDcmltc29uIFdpdG5lc3M7TWFuaWZvbGQgUGFyYWRveCBQQSBBcmNhbmEgU3R5bGUgMjtDb2RpY2lsIG9mIHRoZSBWZWlsZWQgT25lcztEcmVhZCBSZXRyaWJ1dGlvbiAtIEhlYWR3ZWFyIEFsdDtNYXcgb2YgRXp0emhvaztUaGlyc3Qgb2YgRXp0emhvayBCdW5kbGUgUHJlbTtIYWlyIG9mIHRoZSBTdXJ2aXZvcjtHb2xkZW4gQmFzaGVyIEJsYWRlcyBWIDIuMDtTd2lmdCBDbGF3IGFuZCBGZXJvY2lvdXMgSGVhcnQ7RXllIG9mIHRoZSBXZWF0aGVyZWQgU3Rvcm07UmFkaWFudCBDb25xdWVyb3I7Qml0ZSBvZiB0aGUgU3VyZ2luZyBXaW5kO1JpZ2h0ZWQ5519cyBUaHVuZGVyYm9sdCBhbmQgQXJjYW5hIE1lZ2FQYWNrO05pZ2h0IFN0YWxrZXIgSW1tb3J0YWwgYW5kIFJlYXBlciBLaXNpbGV2IE1vZE1ha2VyIE1lZ2FQYWNrO1dpbmRyYW5nZXIgQXJjYW5hIHN0eWxlIDEgKEJsdWUgQmlyZCkgKyBGdWxsIFdSIGltbW9ydGFsO0RhcmtjbGF3IEJlcnNlcmtlcjtPdXR3b3JsZCBEZXZvdXZlciBNZWdhUGFjaztQbGVkZ2Ugb2YgdGhlIERyYWdvbnMgRGlzY2lwbGUgYW5kIEdvbGRlbiBCYXNoZXIgQmxhZGVzIGFuZCBHb2xkZW4gT3JpZ2lucyBvZiBGYWl0aCBNZWdhUGFjazsgMTIzfHx8