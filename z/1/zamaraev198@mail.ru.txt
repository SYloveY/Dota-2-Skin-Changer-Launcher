limitHWID:: 1 000||| 111:: 03DE0294-0480-05BA-4706-750700080009 111||| 222:: 6e2966f4a9b44aa5fe0edb5636a4b6132561cecb027a88371fab23a022013f87631f6116eeda2f212437739a9d1bd70d9182b295f235532053bc7765349d3ff9 222||| 123:: Pink Color for TB;Mask of the Divine Sorrow;Dark Artistry Pauldrons;Dark Artistry Cape;Dark Artistry Belt;Dark Artistry Bracers;Battlefury;Jewel of Aeons Prem;Bracers of Aeons Prem;Visage of the Emerald Age;Manias Mask Prem;Oaths of the Dragonborn Wing;Pauldrons of Zebulon;Algid Legacy;Form of the Monument of Ruin;Arms of the Monument of Ruin;Shards of the Monument of Ruin;Mask of the Monument of Ruin;Bombtrails and Boomsticks Spoon;Bombtrails and Boomsticks Spleen;Bombtrails and Boomsticks Weapon;Bombtrails and Boomsticks Cart;Bloodstained Britches;Heavy Tenderizer;Golden Scavenging Guttleslug;Grand Abscession Hook Bundle;Mask of the Mad Harvester;Dendi Doll;Gauntlet of Dark Feathers;Belt of the Forsaken Flame;Cinder Sensei Style;Pauldrons of the Volcanic Guard;Rapiers of the Burning God V 3.1;Swine Helmet;Samurai Set;Hunter of the Crystal Drift;Susano Os Descendant;Havoc of Dragon Palace V 2.0;The Jade General;Gryphon Rider Set;Golden Nirvana;Manipulator of Warsituation;Unfettered Malevolence;Daemonfell Flame;Eternal Harvest; 123|||