bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogRTc1NjNEMjAtOTZDOC0xMUU1LThFQUEtMkM1NkRDNzlDQUM4IDExMXx8fCAyMjI6OiA1MDRjMjAwNzUzNmUxYjI1OWMwZTNjYzRlNmZkMzA3NGNjYzAxN2I0YmNlOTRmMzlhOTU3NzAwN2MxNjc5MmI0MWM4NmMxNjlkZThkZWMwMjBkZmE5MTU1YmM0MjNjNTQ0MmFhOTU3ZDIwOTU4YzYwOWVmYmVlNmZjYjg4ODdjZiAyMjJ8fHwgMTIzOjogVGhpcnN0IG9mIEV6dHpob2sgQnVuZGxlIFByZW07Q2hhb3MgQXJiaXRlcjtQeXJleGFlYyBGbG9lO0hlbG0gb2YgdGhlIFdpbmdlZCBTZW50aW5lbDtBeGlhIG9mIE1ldGlyYTtNYXNrIG9mIHRoZSBDb25maWRhbnQ7RG90YUNpbmVtYSAtIFF1ZWVuIG9mIFBhaW4gU3BlbGxzO1NldmVyaW5nIENyZXN0IFYgMi4wO1NvdWxzIFR5cmFudCBIZWFkO0FybXMgb2YgRGVzb2xhdGlvbiBQcmVtO0h1c2ggb2YgRXRlcm5hbCBOaWdodDtQaGFudG9tIEFkdmVudCBCZWx0IFVQO1BoYW50b20gQWR2ZW50IFNob3VsZGVycyBVUDtQaGFudG9tIEFkdmVudCBVUDtQaGFudG9tIEFkdmVudCBXZWFwb24gVVA7Rm9jYWwgUmVzb25hbmNlIFYgMy4wO1Bpc2NlYW4gUHVsdmVyaXplcjtUaGVGYXRSYXQgV2FycmlvciBTb25ncyBNdXNpYyBQYWNrIE9mZmljaWFsO01hdyBvZiBFenR6aG9rO1N3b3JkIG9mIHRoZSBPdXRsYW5kIFJhdmFnZXI7SG9vZHdpbmsgRHJhZ29uIENyb3NzYm93O0hlbGwtU3BhciBBbmF0aGVtYSBPYnNpZGlhbiBCbGlnaHQ7QXJlbmEgQ2hhbXBpb24gQmVsdDtGb3Jzd29ybiBMZWdhY3kgLSBMZWdzO0FyZW5hIENoYW1waW9uIEFybW9yO0FyY2FuYSBDcnlzdGFsIE1haWRlbiBGcm9zdCBBdmFsYW5jaGU7TWFyayBvZiB0aGUgTWlzdHJhbCBGaWVuZCBWIDIuMTtCb3VudHkgSHVudGVyIE1hbmlhYyBTZXQ7QnJldyBKb3VzdGluZyBQYW5kYSBhbmQgRG9ua2V5IEtvbmc7V2FycmlvciBvZiBBcmVuYSBTZXQ7U2FjY2hhcmluZSBTYWJvdGV1cjtEcmFnb24gR3VhcmRpYW47QXBvc3RsZSBvZiBEZWNheSBWIDIuMTtJcmUgb2YgTW9sdGVuIFJlYmlydGg7UHVkZ2UtQ007Q3Jvd24gb2YgVGhlIE5pZ2h0d29ybGQ7Q2hhcm1lciBvZiBGaXJlc25ha2U7UGx1bmRlciBvZiB0aGUgU2F2YWdlIE1vbmdlcjtEcmVhZCBDb21wYWN0IFN0eWxlIDI7V2luZ3Mgb2YgQ29sb3JmdWwgSWNlY3J5c3RhbHM7QW50aW1hZ2UgV2VpIEZlbWFsZSAoWWQ5519IGNhbiBhZGQgV2VhcG9uIGFuZCBIZWFkKTtBcm1vciBvZiB0aGUgU2hhdHRlcmVkIFZhbmd1YXJkO0RLIFBlcnNvbmEgRGF2aW9uO0xlZ2lvbiBDb21tYW5kZXIgTW9kTWFrZXIgTWVnYVBhY2s7V2luZHJhbmdlciBBcmNhbmEgc3R5bGUgMiArIFdSIGltbW9ydGFsO1Zpc2lvbiBvZiB0aGUgU2VyYXBoIFNjaW9uIC0gTGlnaHQ7IDEyM3x8fA==