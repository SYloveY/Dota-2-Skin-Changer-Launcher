limitHWID:: 1 000||| 111:: 03D40274-0435-0518-5F06-250700080009;; 111||| 222:: $2y$10$ZmFiN2JkZDE1MzE4MzRkYegbexu1r5g9wPDIdUUTGG2AhsHGcYp6i 222||| 123:: Vespertine Guard Cloak;Vespertine Guard Helmet;Nightsbane;Vespertine Guard Shoulders;Vespertine Guard Blade;Garb of the Saccharine Saboteur;Wings of the Saccharine Saboteur;Tricks of the Saccharine Saboteur;Confidant of the Saccharine Saboteur;Lantern of the Saccharine Saboteur;Frozen Feather Set;Peacock Priest;Elements of the Endless Plane V 2.1;Seaborne Reprisal;Compendium Bloody Ripper;Divine Flame V 2.0;Reef Kyte Rider;Serpent of the Emerald Sea V 3.0;Light of Eleanor Set;Darkfall Warden no effects V 2.1;Vanguard of the Emerald Insurgence;Antipodean Allies;Creeping Shadow;Harsh Sojourn;Raiments of Twilight Shade;Eternal Harvest;The Dwarf Engineer;Clandestine Trail;Omens Embrace;Ember Tipped Carapace Set;Array of Tranquility;Aspect of the Year Beast;Old Zeus model; 123|||