limitHWID:: 1 000||| 111::  111||| 222:: $2y$10$ZmI4NjIxOTBiMzJjMDJlNOWuGe6LubPN1oTLjCnWCOB1FzHw2R5Da 222||| 123:: Northern Blight Arms;Dark Artistry Cape;Covenant of the Depths Belt;Mask of the Divine Sorrow;Heaven-Piercing Pauldrons;Grand Belt of the Witch Hunter Templar;Grand Gloves of the Witch Hunter Templar;Style of the Divine Anchor;Legs of the Seaborne Reprisal;Grand Pauldrons of the Witch Hunter Templar;BladeBiter;Shadows of Ravensmane Arms;Black Ice Constellation - Cloak;Oaths of the Dragonborn Head;Black Ice Constellation - Legs;Oaths of the Dragonborn Quiver;Shooting Stars Shoulder;Complete Algid Legacy;Dusklight Crest;Lucentyr;Shield of the Shadowforce Gale;Lineage Armor of the Raidforged Rider;Scourge of the sacred grove Weapon;Cape of the Lifted Veil;Belt of the Creeping Shadow;Helm of the Bloodroot Guard;Vest of the Bloodroot Guard;Leaf of the Nimble Edge;Provocation of Ruin Bracers;Kataginu of a Thousand Faces;Sinister Shadow Head;Sinister Shadow Legs;Relentless;Armor of the Sundered King;Dreadknight Gauntlet;Cape of the Dreadborn Regent;Curse of the Crow King Head;Dreadknight Pauldron;Blood Shard;Viridus Claw;Belt of Nezzureem;Visage of the Emerald Age;Viridus Spine;Voidhammer;Direstone Bindings Set;Eternal Harvest; 123|||