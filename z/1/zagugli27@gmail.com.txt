bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogRDU0MDdFMjAtRkU4RS0xMUQ1LUE4RkItQzg2MDAwQTREQkE1IDExMXx8fCAyMjI6OiA3MTM1YTk4ZmMwZTc3ZGQ2YWRhZjkwN2I5NTcxYjFlN2E2N2IyM2QwMzk0Y2Y2ZGE3MmEyNTVhZjczYmJlZmQ3NGRhODY3NjI2YjYwZTA4OGZhNDQ4Y2Q0MWRkYWI1YjFiYmNjNTI4NTNjNjllYzIzN2Y5N2YyZDY3ZGRjMTk0OSAyMjJ8fHwgMTIzOjogVGVtcGVzdCBIZWxtIG9mIHRoZSBUaHVuZGVyZ29kIFByZW07TWFndXMgQXBleDtBcm1zIG9mIERlc29sYXRpb24gUHJlbTtJcm9uIFN1cmdlIFYgMi4yO1F1ZXN0aW9uIG1hcmsgRGVueTtDb2xvclN0YXRzO1BpbmUgQ29uZSBNZWxlZSBNZWdhIENyZWVwczsyNSBsdmwgcGluZztQbGFuZXRmYWxsIEJsaW5rO1ByaW1ldmFsIFRyZWFudDtUaGUgSXJvbiBQaW9uZWVyIENvZ3M7WW9iYSBXaXNwO0NyZXNjZW50IEJvdztFdGVybmFsIFJhZGlhbmNlIEJsYWRlcyBQcmVtO1JhenppbHMgTWlkYXMgS251Y2tsZXMgUHJlbTtSYW1wYW50IE91dHJhZ2UgUHJlbTtNdWxjdGFudCBQYWxsO01hbnRsZSBvZiB0aGUgQ2luZGVyIEJhcm9uIFN0eWxlIDE7QXhlIG9mIFBocmFjdG9zIFByZW07RWlkZWxvbiBvZiBUd2lzdGVkIE1hZWxzdHJvbTtTZXJ2YW50cyBvZiBFbmRsZXNzIFN0YXJzO0NyZXNjZW50IEJvdyBBcnJvdyBvbmx5O0F2YWRhIEtlZGF2cmE7SGVhZGh1bnRlciBTbGFyaztUaGUgTGlnaHRuaW5nIE9yY2hpZCBvZiBFbWluZW50IFJldml2YWw7UHlyZXhhZWMgRmxvZTtFbGRlciBDb252ZXJnZW5jZSBXaW5ncztHb2xkZW4gRW1weXJlYW47SGFydmVzdGVkIFNob3VsZGVycztNYXJrIG9mIHRoZSBGaXJzdCBIdW50IEJlc3Rvd2VkO0h1bnRlcnMgSG9hcmQ7VGhlIFdhcmQgb2YgT2RvY29lbGV1cztTb3VscyBUeXJhbnQgSGVhZDtZdWxzYXJpYXMgTWFudGxlIFByZW07UmFwaWVycyBvZiB0aGUgQnVybmluZyBHb2QgViAzLjE7V3lybXdyb3VnaHQgRmxhcmU7RnVsbC1Cb3JlIEJvbmFuemE7U2F2YWdlIE1ldHRsZTtGb2NhbCBSZXNvbmFuY2UgViAzLjA7U291bCBEaWZmdXNlciBWIDIuMTtTcGxhdHRlcmluZyBGb3JjaXB1bGU7U3BhdWxkZXJzIG9mIHRoZSBQc2lvbiBJbnF1aXNpdG9yO1N0YWZmIG9mIEd1bi1ZdTtOb3RobGljIEJ1cmRlbiBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzIFByZW07UGlzdG9uIEltcGFsZXIgZWZmZWN0O0ZsdXR0ZXJpbmcgU3RhZmYgViAyLjA7VGhlIEdvbGRlbiBCYXJiIG9mIFNrYWRpO0J1cm5pbmcgU3BlYXIgKEVxdWlwbWVudCkgViAzLjA7RHJhZ29uIExvcmUgQVdQO0FybXMgb2YgRG9ybWFudCBPYmxpdmlvbjtDYXBlIG9mIHRoZSBGcmFjdHVyZWQgRW52b3k7SXJlIG9mIHRoZSBBbmNpZW50IEdhb2xlciBTaG91bGRlcjtHYXJiIG9mIHRoZSBGaXJzdCBXYXlzO1dyYWl0aGJpbmRlcjtIdW50ZXJzIEhvYXJkIG9mIHRoZSBDcmltc29uIFdpdG5lc3M7SGVhcnRsZXNzIEh1bnQgLSBPZmYtSGFuZDtUaW5lcyBvZiBUeWJhcmE7Q29udHJvbGxlZCBCdXJuO0JlYXN0IG9mIHRoZSBDcmltc29uIFJpbmcgQnJhY2VycztCbGFzdGZvcmdlIEV4aGFsZXIgb2YgdGhlIENyaW1zb24gV2l0bmVzcztCZWFzdCBvZiB0aGUgQ3JpbXNvbiBSaW5nIFdlYXBvbjtCb29rIG9mIHRoZSBWaXppZXIgRXhpbGUgUHJlbTtXcmF0aCBvZiB0aGUgRmFsbGVuIFNob3VsZGVyO1dyYXRoIG9mIHRoZSBGYWxsZW4gV2VhcG9uO0Zsb3VyaXNoaW5nIExvZGVzdGFyO1ZpcmdhcyBBcmM7SG9vZHdpbmsgR2xlaXBuaXI7SG9vZHdpbmsgRHJhZ29uIENyb3NzYm93O1N1ZmZlcndvb2QgU2FwbGluZztTaWducyBvZiB0aGUgQWxsZmF0aGVyIC0gSGVhZDtNb25hcmNoIG9mIHRoZSBTYXBwaGlyZSBHbGVuO1NpZ25zIG9mIHRoZSBBbGxmYXRoZXIgLSBBcm1zO1NpZ25zIG9mIHRoZSBBbGxmYXRoZXIgLSBOZWNrO1NpZ25zIG9mIHRoZSBBbGxmYXRoZXIgLSBTaG91bGRlcjtTdWxsZW4gUmFtcGFydDtFeG9kdXMgb2YgdGhlIFBsYWd1ZSBXaXRjaCBCYWNrO0Zvd2wgT21lbiBTY3l0aGU7Q3Jvd24gb2YgdGhlIE11cmlkIERpdmluZTtMaWNoIEd1aXNlIG9mIHRoZSBNYXN0ZXIgTmVjcm9tYW5jZXI7R29sZGVuIFNoYWRvdyBNYXNxdWVyYWRlO0h1bmdlciBvZiB0aGUgSG93bGluZyBXaWxkcyBPZmYtSGFuZCBXZWFwb247VGFpbCBvZiB0aGUgQ3VubmluZyBDb3JzYWlyO0RhZ2dlciBvZiB0aGUgQ3VubmluZyBDb3JzYWlyO0h1bmdlciBvZiB0aGUgSG93bGluZyBXaWxkcyBXZWFwb247SHVuZ2VyIG9mIHRoZSBIb3dsaW5nIFdpbGRzIEhlYWQ7SHVuZ2VyIG9mIHRoZSBIb3dsaW5nIFdpbGRzIEFybXM7U2tpdHRlcmluZyBEZXNvbGF0aW9uIFByZW07Q3JpbXNvbiBQaXF1ZTtHb2xkZW4gQ3lycmlkYWUgUHJlbTtUaGUgSGFsbG93cyBXaXRoaW4gVG9tYnN0b25lO0RlY2xhcmF0aW9uIG9mIHRoZSBEaXZpbmUgTGlnaHQgUmFkaWFudCBUb3dlcnM7RGVjbGFyYXRpb24gb2YgdGhlIERpdmluZSBTaGFkb3cgRGlyZSBUb3dlcnM7UHVtcGtpbiBUcmVlcyBVUDtUZXJyYWluIC0gQXV0dW1uO1dlYXRoZXIgSGFydmVzdDtDb25jb3JkIFJldmVyc2lvbiBVUDtDb25jb3JkIERvbWluaW9uO1BoYW50b20gQ29uY29yZDtGcm9zdG1vb3QgRnJvc3RpdnVzIFRyZWU7QW5jaWVudCBJbmhlcml0YW5jZSAtIFNob3VsZGVyO0FuY2llbnQgSW5oZXJpdGFuY2UgLSBCZWx0O0FuY2llbnQgSW5oZXJpdGFuY2UgLSBOZWNrO0FuY2llbnQgSW5oZXJpdGFuY2UgLSBCYWNrO0FzcGVjdCBvZiBPc2NpbGxhO0dsYWl2ZSBvZiBPc2NpbGxhO0xhc2ggb2YgdGhlIExpemFyZCBLaW4gb2YgdGhlIENyaW1zb24gV2l0bmVzcztQaXhlbCBXaW5kcnVubmVyO0Jhcmsgb2YgdGhlIEFnZWxlc3MgV2l0bmVzcyBEaXN0aW5ndWlzaGVkO1RoZSBLZWVuIENvbW1hbmRlcjtEcmFnb25zIEFzY2Vuc2lvbiBWIDMuMDtUaGUgQ29ycnVwdGlvbiBvZiBOZXp6dXJlZW07UmFtYmxpbmcgRmF0ZWJlbmRlcjtJbGxpZGFuIFN0b3JtcmFnZSBmb3IgVGVycm9yYmxhZGUgViAyLjA7VmVuZ2VmdWwgU3Bpcml0IFJlYmlydGggViAzLjA7UHVycGxlIEZpcmUgQ2xpbmt6IEZ1biBNb2QgViAzLjA7QW50aS1NYWdlIFVsdGltYXRlIFJlZCBEcmFnb247Q2luZGVyIFNlbnNlaTtUYWxlcyBvZiB0aGUgV2luZHdhcmQgUm9ndWU7TWlzY2hpZWYgb2YgdGhlIEZhZSBGb3JhZ2VyO0tvbWVpamkgS29pc2hpIDIgZm9yIEJhbmUgYnkgUGF0Y2hvdWxpIEtub3dsZWRnZTtNYXJhdWRlciBDaGllZnRhaW4gb2YgdGhlIENoYW9zIFdhc3RlcztUc3VrdW1vIE1vb24gQ2xvdWQ7Qmxvb2Ryb290IEd1YXJkO0JpbmRpbmdzIG9mIERlZXAgTWFnbWE7UmFpbWVudHMgb2YgVHdpbGlnaHQgU2hhZGU7RGFuY2VyIG9mIHRoZSBTcGl0ZWZ1bCBFeWUgViAzLjA7U3RyeWd3eXIgQmxvb2RzZWVrZXI7U2hlcm1hbiBNYWlkZW4gViA0LjE7TGFkeSBTeWx2YW5hcyBmb3IgRHJvdyAtIFRoZSBGcm9zdGJvcm5lIFdheWZhcmVyO055YXJ1a28gZm9yIExpb24gYnkgUGF0Y2hvdWxpIEtub3dsZWRnZTtMdXJrYWJsbztBdXJhbnRpYWNvIG1pbGl0aXM7U2FpbnQgUmF6b3I7TGVCbGFuYyBmb3IgUHVjaztHb2xkZW4gTmlydmFuYTtBdHJvY2l0aWVzIG9mIHRoZSBBYnlzc2FsIFNjb3VyZ2U7Q29uY2VhbGVkIFJhdmVuO1N0eWdpYW4gTWF3O0FrYW1hbmFoIGZvciBMZWdpb24gQ29tbWFuZGVyIFYgMy4xO0VydXB0aW5nIFdyYXRoIFYgMi4wO0Jhc3Rpb24gb2YgdGhlIExpb25zZ3VhcmQ7Q2hsb2Ugdm9uIEVpbnpiZXJuIGZvciBFYXJ0aCBTcGlyaXQgYnkgUGF0Y2hvdWxpIEtub3dsZWRnZTtIdW50ZXJzIEdsb3J5O1RoZSBIb3VuZHMgb2YgQ2hhb3MgViAzLjE7RXhwb25lbnQgb2YgdGhlIEVuZGxlc3MgU3RhcnM7U2VycGVudGluZSBHdWFyZDtIYXZvYyBvZiBEcmFnb24gUGFsYWNlIFYgMi4wO0Zlcm9jaWQ5519cyBUb3hpY2FudDtTYW1hcmVlbiBTYWNyaWZpY2U7QXNjZW5kYW5jZSBvZiB0aGUgUmltZSBMb3JkIDFzdCBTdHlsZTtSZW5ld2FsIG9mIFNwcmluZztLdW5ra2EgSW1tb3J0YWxzIE1lZ2FQYWNrO0dvbGRlbiBEYXJrIE1hdyBJbmhpYml0byBhbmQgR29sZGVuIFByb2ZhbmUgVW5pb24gYW5kIEdvbGRlbiBEcmVhZCBSZXF1aXNpdGlvbiBMaWZlc3RlYWxlciBJbW1vcnRhbHMgTWVnYXBhY2s7V3JhaXRoIEtpbmcgQXJjYW5hIE1lZ2FQYWNrO1dpbmRyYW5nZXIgQXJjYW5hIHN0eWxlIDEgKEJsdWUgQmlyZCkgKyBGdWxsIFdSIGltbW9ydGFsO1B1ZGdlIFRJMTAgQ29sbGVjdG9ycyBDYWNoZSBNZWdhUGFjaztJbmN1cmFibGUgUGVzdGlsZW5jZTtOeXggQXNzYXNzaW4gTWVnYVBhY2sgbmV3O1NpbGVuY2VyIFRJMTAgQ29sbGVjdG9ycyBDYWNoZSBNZWdhUGFjaztEIE9jdG8gVGlua2VyOyAxMjN8fHw=