bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogRDU0MDdFMjAtRkU4RS0xMUQ1LUE4RkItQzg2MDAwQTREQkE1IDExMXx8fCAyMjI6OiA3MTM1YTk4ZmMwZTc3ZGQ2YWRhZjkwN2I5NTcxYjFlN2E2N2IyM2QwMzk0Y2Y2ZGE3MmEyNTVhZjczYmJlZmQ3NGRhODY3NjI2YjYwZTA4OGZhNDQ4Y2Q0MWRkYWI1YjFiYmNjNTI4NTNjNjllYzIzN2Y5N2YyZDY3ZGRjMTk0OSAyMjJ8fHwgMTIzOjogVGVtcGVzdCBIZWxtIG9mIHRoZSBUaHVuZGVyZ29kIFByZW07TWFndXMgQXBleDtBcm1zIG9mIERlc29sYXRpb24gUHJlbTtJcm9uIFN1cmdlIFYgMi4yO1F1ZXN0aW9uIG1hcmsgRGVueTtDb2xvclN0YXRzO1BpbmUgQ29uZSBNZWxlZSBNZWdhIENyZWVwczsyNSBsdmwgcGluZztQbGFuZXRmYWxsIEJsaW5rO1ByaW1ldmFsIFRyZWFudDtUaGUgSXJvbiBQaW9uZWVyIENvZ3M7Q3Jlc2NlbnQgQm93O0V0ZXJuYWwgUmFkaWFuY2UgQmxhZGVzIFByZW07UmF6emlscyBNaWRhcyBLbnVja2xlcyBQcmVtO1JhbXBhbnQgT3V0cmFnZSBQcmVtO011bGN0YW50IFBhbGw7TWFudGxlIG9mIHRoZSBDaW5kZXIgQmFyb24gU3R5bGUgMTtBeGUgb2YgUGhyYWN0b3MgUHJlbTtFaWRlbG9uIG9mIFR3aXN0ZWQgTWFlbHN0cm9tO1NlcnZhbnRzIG9mIEVuZGxlc3MgU3RhcnM7Q3Jlc2NlbnQgQm93IEFycm93IG9ubHk7QXZhZGEgS2VkYXZyYTtIZWFkaHVudGVyIFNsYXJrO1RoZSBMaWdodG5pbmcgT3JjaGlkIG9mIEVtaW5lbnQgUmV2aXZhbDtQeXJleGFlYyBGbG9lO0VsZGVyIENvbnZlcmdlbmNlIFdpbmdzO0dvbGRlbiBFbXB5cmVhbjtIYXJ2ZXN0ZWQgU2hvdWxkZXJzO01hcmsgb2YgdGhlIEZpcnN0IEh1bnQgQmVzdG93ZWQ7SHVudGVycyBIb2FyZDtUaGUgV2FyZCBvZiBPZG9jb2VsZXVzO1NvdWxzIFR5cmFudCBIZWFkO1l1bHNhcmlhcyBNYW50bGUgUHJlbTtSYXBpZXJzIG9mIHRoZSBCdXJuaW5nIEdvZCBWIDMuMTtXeXJtd3JvdWdodCBGbGFyZTtGdWxsLUJvcmUgQm9uYW56YTtTYXZhZ2UgTWV0dGxlO0ZvY2FsIFJlc29uYW5jZSBWIDMuMDtTb3VsIERpZmZ1c2VyIFYgMi4xO1NwbGF0dGVyaW5nIEZvcmNpcHVsZTtTcGF1bGRlcnMgb2YgdGhlIFBzaW9uIElucXVpc2l0b3I7U3RhZmYgb2YgR3VuLVl1O05vdGhsaWMgQnVyZGVuIG9mIHRoZSBDcmltc29uIFdpdG5lc3MgUHJlbTtQaXN0b24gSW1wYWxlciBlZmZlY3Q7Rmx1dHRlcmluZyBTdGFmZiBWIDIuMDtUaGUgR29sZGVuIEJhcmIgb2YgU2thZGk7QnVybmluZyBTcGVhciAoRXF1aXBtZW50KSBWIDMuMDtEcmFnb24gTG9yZSBBV1A7QXJtcyBvZiBEb3JtYW50IE9ibGl2aW9uO0NhcGUgb2YgdGhlIEZyYWN0dXJlZCBFbnZveTtJcmUgb2YgdGhlIEFuY2llbnQgR2FvbGVyIFNob3VsZGVyO0dhcmIgb2YgdGhlIEZpcnN0IFdheXM7V3JhaXRoYmluZGVyO0h1bnRlcnMgSG9hcmQgb2YgdGhlIENyaW1zb24gV2l0bmVzcztIZWFydGxlc3MgSHVudCAtIE9mZi1IYW5kO1RpbmVzIG9mIFR5YmFyYTtDb250cm9sbGVkIEJ1cm47QmVhc3Qgb2YgdGhlIENyaW1zb24gUmluZyBCcmFjZXJzO0JsYXN0Zm9yZ2UgRXhoYWxlciBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzO0JlYXN0IG9mIHRoZSBDcmltc29uIFJpbmcgV2VhcG9uO0Jvb2sgb2YgdGhlIFZpemllciBFeGlsZSBQcmVtO1dyYXRoIG9mIHRoZSBGYWxsZW4gU2hvdWxkZXI7V3JhdGggb2YgdGhlIEZhbGxlbiBXZWFwb247RmxvdXJpc2hpbmcgTG9kZXN0YXI7VmlyZ2FzIEFyYztIb29kd2luayBHbGVpcG5pcjtIb29kd2luayBEcmFnb24gQ3Jvc3Nib3c7U3VmZmVyd29vZCBTYXBsaW5nO1NpZ25zIG9mIHRoZSBBbGxmYXRoZXIgLSBIZWFkO01vbmFyY2ggb2YgdGhlIFNhcHBoaXJlIEdsZW47U2lnbnMgb2YgdGhlIEFsbGZhdGhlciAtIEFybXM7U2lnbnMgb2YgdGhlIEFsbGZhdGhlciAtIE5lY2s7U2lnbnMgb2YgdGhlIEFsbGZhdGhlciAtIFNob3VsZGVyO1N1bGxlbiBSYW1wYXJ0O0V4b2R1cyBvZiB0aGUgUGxhZ3VlIFdpdGNoIEJhY2s7Rm93bCBPbWVuIFNjeXRoZTtDcm93biBvZiB0aGUgTXVyaWQgRGl2aW5lO0xpY2ggR3Vpc2Ugb2YgdGhlIE1hc3RlciBOZWNyb21hbmNlcjtHb2xkZW4gU2hhZG93IE1hc3F1ZXJhZGU7SHVuZ2VyIG9mIHRoZSBIb3dsaW5nIFdpbGRzIE9mZi1IYW5kIFdlYXBvbjtUYWlsIG9mIHRoZSBDdW5uaW5nIENvcnNhaXI7RGFnZ2VyIG9mIHRoZSBDdW5uaW5nIENvcnNhaXI7SHVuZ2VyIG9mIHRoZSBIb3dsaW5nIFdpbGRzIFdlYXBvbjtIdW5nZXIgb2YgdGhlIEhvd2xpbmcgV2lsZHMgSGVhZDtIdW5nZXIgb2YgdGhlIEhvd2xpbmcgV2lsZHMgQXJtcztTa2l0dGVyaW5nIERlc29sYXRpb24gUHJlbTtDcmltc29uIFBpcXVlO0dvbGRlbiBDeXJyaWRhZSBQcmVtO1RoZSBIYWxsb3dzIFdpdGhpbiBUb21ic3RvbmU7RGVjbGFyYXRpb24gb2YgdGhlIERpdmluZSBMaWdodCBSYWRpYW50IFRvd2VycztEZWNsYXJhdGlvbiBvZiB0aGUgRGl2aW5lIFNoYWRvdyBEaXJlIFRvd2VycztQdW1wa2luIFRyZWVzIFVQO1RlcnJhaW4gLSBBdXR1bW47V2VhdGhlciBIYXJ2ZXN0O0NvbmNvcmQgUmV2ZXJzaW9uIFVQO0NvbmNvcmQgRG9taW5pb247UGhhbnRvbSBDb25jb3JkO0Zyb3N0bW9vdCBGcm9zdGl2dXMgVHJlZTtBbmNpZW50IEluaGVyaXRhbmNlIC0gU2hvdWxkZXI7QW5jaWVudCBJbmhlcml0YW5jZSAtIEJlbHQ7QW5jaWVudCBJbmhlcml0YW5jZSAtIE5lY2s7QW5jaWVudCBJbmhlcml0YW5jZSAtIEJhY2s7QXNwZWN0IG9mIE9zY2lsbGE7R2xhaXZlIG9mIE9zY2lsbGE7TGFzaCBvZiB0aGUgTGl6YXJkIEtpbiBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzO1RoaXJzdCBvZiBFenR6aG9rIC0gT2ZmLUhhbmQ7VGhpcnN0IG9mIEV6dHpob2sgQmxhZGU7TWF3IG9mIEV6dHpob2s7RmVhc3Qgb2YgdGhlIFVud2lsbGluZyBTaG91bGRlcnM7QmVuZXZvbGVudCBDb21wYW5pb24gUHJlbTtCYXJrIG9mIHRoZSBBZ2VsZXNzIFdpdG5lc3MgRGlzdGluZ3Vpc2hlZDtUaGUgS2VlbiBDb21tYW5kZXI7RHJhZ29ucyBBc2NlbnNpb24gViAzLjA7VGhlIENvcnJ1cHRpb24gb2YgTmV6enVyZWVtO1JhbWJsaW5nIEZhdGViZW5kZXI7SWxsaWRhbiBTdG9ybXJhZ2UgZm9yIFRlcnJvcmJsYWRlIFYgMi4wO1ZlbmdlZnVsIFNwaXJpdCBSZWJpcnRoIFYgMy4wO1B1cnBsZSBGaXJlIENsaW5reiBGdW4gTW9kIFYgMy4wO0FudGktTWFnZSBVbHRpbWF0ZSBSZWQgRHJhZ29uO0NpbmRlciBTZW5zZWk7VGFsZXMgb2YgdGhlIFdpbmR3YXJkIFJvZ3VlO01pc2NoaWVmIG9mIHRoZSBGYWUgRm9yYWdlcjtLb21laWppIEtvaXNoaSAyIGZvciBCYW5lIGJ5IFBhdGNob3VsaSBLbm93bGVkZ2U7TWFyYXVkZXIgQ2hpZWZ0YWluIG9mIHRoZSBDaGFvcyBXYXN0ZXM7VHN1a3VtbyBNb29uIENsb3VkO0Jsb29kcm9vdCBHdWFyZDtCaW5kaW5ncyBvZiBEZWVwIE1hZ21hO1JhaW1lbnRzIG9mIFR3aWxpZ2h0IFNoYWRlO0RhbmNlciBvZiB0aGUgU3BpdGVmdWwgRXllIFYgMy4wO1N0cnlnd3lyIEJsb29kc2Vla2VyO1NoZXJtYW4gTWFpZGVuIFYgNC4xO055YXJ1a28gZm9yIExpb24gYnkgUGF0Y2hvdWxpIEtub3dsZWRnZTtMdXJrYWJsbztBdXJhbnRpYWNvIG1pbGl0aXM7U2FpbnQgUmF6b3I7TGVCbGFuYyBmb3IgUHVjaztHb2xkZW4gTmlydmFuYTtBdHJvY2l0aWVzIG9mIHRoZSBBYnlzc2FsIFNjb3VyZ2U7Q29uY2VhbGVkIFJhdmVuO1N0eWdpYW4gTWF3O0FrYW1hbmFoIGZvciBMZWdpb24gQ29tbWFuZGVyIFYgMy4xO0VydXB0aW5nIFdyYXRoIFYgMi4wO0Jhc3Rpb24gb2YgdGhlIExpb25zZ3VhcmQ7Q2hsb2Ugdm9uIEVpbnpiZXJuIGZvciBFYXJ0aCBTcGlyaXQgYnkgUGF0Y2hvdWxpIEtub3dsZWRnZTtIdW50ZXJzIEdsb3J5O1RoZSBIb3VuZHMgb2YgQ2hhb3MgViAzLjE7RXhwb25lbnQgb2YgdGhlIEVuZGxlc3MgU3RhcnM7U2VycGVudGluZSBHdWFyZDtIYXZvYyBvZiBEcmFnb24gUGFsYWNlIFYgMi4wO0Zlcm9jaWQ5519cyBUb3hpY2FudDtTYW1hcmVlbiBTYWNyaWZpY2U7QXNjZW5kYW5jZSBvZiB0aGUgUmltZSBMb3JkIDFzdCBTdHlsZTtSZW5ld2FsIG9mIFNwcmluZztLdW5ra2EgSW1tb3J0YWxzIE1lZ2FQYWNrO0dvbGRlbiBEYXJrIE1hdyBJbmhpYml0byBhbmQgR29sZGVuIFByb2ZhbmUgVW5pb24gYW5kIEdvbGRlbiBEcmVhZCBSZXF1aXNpdGlvbiBMaWZlc3RlYWxlciBJbW1vcnRhbHMgTWVnYXBhY2s7V3JhaXRoIEtpbmcgQXJjYW5hIE1lZ2FQYWNrO1dpbmRyYW5nZXIgQXJjYW5hIHN0eWxlIDEgKEJsdWUgQmlyZCkgKyBGdWxsIFdSIGltbW9ydGFsO1B1ZGdlIFRJMTAgQ29sbGVjdG9ycyBDYWNoZSBNZWdhUGFjaztJbmN1cmFibGUgUGVzdGlsZW5jZTtOeXggQXNzYXNzaW4gTWVnYVBhY2sgbmV3O1NpbGVuY2VyIFRJMTAgQ29sbGVjdG9ycyBDYWNoZSBNZWdhUGFjaztEIE9jdG8gVGlua2VyO1Vyc2EgSW1tb3J0YWxzIE1lZ2FQYWNrO0Ryb3cgUmFuZ2VyIE1lZ2FQYWNrO0xlZ2lvbiBDb21tYW5kZXIgTW9kTWFrZXIgTWVnYVBhY2s7IDEyM3x8fA==