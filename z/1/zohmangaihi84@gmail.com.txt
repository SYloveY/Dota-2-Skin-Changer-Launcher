limitHWID:: 1 000||| 111::  111||| 222:: $2y$10$NzJmYjJiNTJlZWM4ODkyYejR50M4/KaXm1rcoYoR7BUqG/9cg1mom 222||| 123:: Sempiternal Revelations Hat;Acid Hydra Cursor Pack;Eye of Avernus;Antipode Courier (Angel only);Weather Moonbeam;Terrain - Spring;Brood Hunter HUD;Tzokalotls Dread Head;Healing Fount of the Lost Isles;Barding of Chimeric Rapport;Dragonclaw Hook;Arms of Desolation;Horns of the Diabolical Fiend;Armor of the Diabolical Fiend;The Lightning Orchid;Malefic Drakes Hood of the Crimson Witness;Sunken Snapper Wings;Barding of the Siege-Drake;Trine Announcer;Aegis and Roshan St. Valentine Day;Trials of the Blackguard Magus No effects;Undefeated General;The Witch Hunter V 2.0;Champion of Discord V 3.1;Harvests Hound;Kit of the First Hunt V 2.1;Royal Winterbloom;Crimson Beast V 3.0;Ghastly Matriarch V 3.0;Guise of the Winged Bolt;Blazing Oblivion V 3.0;The Corruption of Nezzureem;Witch Hunter Templar;The Path of Odocoeleus;Warhawk Vestiments V 2.0;Dusklight Marauder V 2.1;Armor of the Stalwart Soul;Scavenger of the Basilisk;Magister of the Narrow Fates;Cyclopean Marauder;Alchemy Essentials Set;Corridan Maestro V 2.0;Exact Marksman;Aspect of the Year Beast;Resentment of the Banished Princess;Bindings of the Battleranger;Bearer of the Arkturan Talon; 123|||