bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogNEU5Rjc5NEUtRTZDOC1BNTNFLUE2QjItRUE4QzUyMjJBODQ2IDExMXx8fCAyMjI6OiAkMnkkMTAkTTJZelpESTBNamhpTUdaak1tSmhNdUlLN21pTmlvRmxjc2xUU0Y1dzdFcVZVS2xEYUdaTTIgMjIyfHx8IDEyMzo6IERpcmUgTmVtZXN0aWNlIENyZWVwcztEZWNsYXJhdGlvbiBvZiB0aGUgRGl2aW5lIExpZ2h0IFJhZGlhbnQgVG93ZXJzO0RlY2xhcmF0aW9uIG9mIHRoZSBEaXZpbmUgU2hhZG93IERpcmUgVG93ZXJzO1N3aW5lIG9mIHRoZSBTdW5rZW4gR2FsbGV5IFByZW07QWdoYW5pbXMgSW50ZXJkaW1lbnNpb25hbCBCYWJ5IFJvc2hhbjtSaWNrIGFuZCBNb3J0eSBBbm5vdW5jZXI7RGFyayBBcnRpc3RyeSBUaHJvd2JhY2s7Um95YWwgRGVjcmVlIEtuaWZlIEF0dGFjaztQaGFudG9tIEFkdmVudCBTaG91bGRlcnMgVVA7UGhhbnRvbSBBZHZlbnQgVVA7UGhhbnRvbSBBZHZlbnQgQmVsdCBVUDtQaGFudG9tIEFkdmVudCBXZWFwb24gVVA7TGVnaW9uIENvbW1hbmRlciBNb2RNYWtlciBNZWdhUGFjaztTRiBBcmNhbmEgTWVnYXBhY2s7V3JhaXRoIEtpbmcgQXJjYW5hIE1lZ2FQYWNrO01vbmtleSBLaW5nIEFyY2FuYSBNZWdhUGFjaztTbGFyayBNZWdhUGFjayBOZXc7Tnl4IEFzc2Fzc2luIE1lZ2FQYWNrO0N1c3RvbSBNZWdhUGFjayBEZWxpbGFoIFJFO0N1c3RvbSBNZWdhUGFjayBTdmVuIFRydWUgVmlnaWw7QWJhZGRvbiBSRUQgTWVnYVBhY2s7RGV2aWwgUmlwcGVyO0F4ZSBmdWxsIEltbW9ydGFscyBNZWdhcGFjaztFYXJ0aHNoYWtlciBNZWdhUGFjayBOZXc7Q3VzdG9tIE1lZ2FQYWNrIEZhY2VsZXNzIFZvaWQgQmxhY2sgVGltZTtCZXdpdGNoaW5nIEZsYXJlIFYgMi4wO0dvbGRlbiBEYXJrIE1hdyBJbmhpYml0byBhbmQgR29sZGVuIFByb2ZhbmUgVW5pb24gYW5kIEdvbGRlbiBEcmVhZCBSZXF1aXNpdGlvbiBMaWZlc3RlYWxlciBJbW1vcnRhbHMgTWVnYXBhY2s7TWlyYW5hIE1lZ2FQYWNrO1dpbmRyYW5nZXIgQXJjYW5hIHN0eWxlIDIgKE9yYW5nZSBCaXJkKSBhbmQgRnVsbCBXUiBpbW1vcnRhbDtNYWdpYyBQeXJvbWFuY2VyO0N1c3RvbSBOaWdodCBTdGFsa2VyIE1lZ2FwYWNrIEZyb3N0IFdhbGtlcjtBbnRpbWFnZSBXZWkgRmVtYWxlIChZb3UgY2FuIGFkZCBXZWFwb24gYW5kIEhlYWQpO0RLIFBlcnNvbmEgRGF2aW9uO0N1c3RvbSBNZWdhUGFjayBKdWdnZXJuYXV0IEphZGUgRHluYXN0eSBSRTtQdXBwZXQgUHVkZ2UgUGVyc29uYSAoeWQ5519IGNhbiBhZGQgSG9vaykgVVA7U2t5d3JhdGggTWFnZSBNZWdhUGFjayBUaGFuYXRvcztEb29tIEltbW9ydGFscyBNZWdhUGFjaztEcm93IFJhbmdlciBNZWdhUGFjazsgMTIzfHx8