bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogNzFFOTA1MjEtOTM0MS1FNzE4LTlENzgtNzREMDJCQzRGNTE3IDExMXx8fCAyMjI6OiA0ZjNlZDY3MjRkNmQyYzg1ZjQzYmFjODljZmE0MWIwZmNkMDRmOTVhMWU0YmIzMjY1Yjg1MzQ4NDhmMmI3M2M0OTk3ZjJlMTdhN2VjOTQ0MzE1NjExNDBhOTYxZjEyMzlkOGIyMWYwZWVkYzY5NzYxMGM2YzFjOWE0OWJjY2M1ZSAyMjJ8fHwgMTIzOjogZHJpdmVfZGlyOjpBbmNpZW50IE1lY2hhbmlzbTtkcml2ZV9kaXI6OkFybW9yIG9mIHRoZSBGb3Jnb3R0ZW4gUGxhbmU7ZHJpdmVfZGlyOjpCcmFjZXJzIG9mIHRoZSBTdXJ2aXZvcjtkcml2ZV9kaXI6OkJlbHQgb2YgdGhlIEZvcmdvdHRlbiBQbGFuZTtkcml2ZV9kaXI6Ok9hdGhib3VuZCBEZWZpYW50IEhlbG07ZHJpdmVfZGlyOjpBY29seXRlIG9mIHRoZSBMb3N0IEFydHM7ZHJpdmVfZGlyOjpJbmZlcm51cztkcml2ZV9kaXI6OlByYXllciBCZWFkcyBvZiB0aGUgQmxhZGVrZWVwZXI7ZHJpdmVfZGlyOjpTaWdpbCBNYXNrIG9mIHRoZSBCbGFkZWtlZXBlcjtkcml2ZV9kaXI6OlBhbnRhbG9vbnMgb2YgdGhlIEJsYWRla2VlcGVyO2RyaXZlX2Rpcjo6V2FyZ29kIG9mIHRoZSBCbGFkZWtlZXBlcjtkcml2ZV9kaXI6OkdyZWF0IFNhZ2UqcyBSZWNrb25pbmc7ZHJpdmVfZGlyOjpBcm1vciBvZiB0aGUgRGVtb24gVHJpY2tzdGVyO2RyaXZlX2Rpcjo6U3RhZmYgb2YgR3VuLVl1O2RyaXZlX2Rpcjo6U2hvdWxkZXJzIG9mIHRoZSBEcmFnb24gUGFsYWNlO2RyaXZlX2Rpcjo6R29sZGVuIFNjYXZlbmdpbmcgR3V0dGxlc2x1Zztkcml2ZV9kaXI6OlRoZSBDcm93IEVhdGVyO2RyaXZlX2Rpcjo6UGx1bmRlciBvZiB0aGUgU2F2YWdlIE1vbmdlcjtkcml2ZV9kaXI6Ok1hc2sgb2YgdGhlIEJsb29kZm9yZ2U7ZHJpdmVfZGlyOjpUaGlyc3Qgb2YgRXp0emhvayAtIE9mZi1IYW5kO2RyaXZlX2Rpcjo6V2VhcG9uIG9mIHRoZSBCbG9vZGZvcmdlO2RyaXZlX2Rpcjo6QXJtcyBvZiB0aGUgU2FuZ3VpbmUgU3BlY3RydW07ZHJpdmVfZGlyOjpCYWNrIG9mIEhhcnZlc3QqcyBIb3VuZDtkcml2ZV9kaXI6OkJlbHQgb2YgdGhlIEJsb29kZm9yZ2U7ZHJpdmVfZGlyOjpBeGlhIG9mIE1ldGlyYTtkcml2ZV9kaXI6OkdvbGRlbiBNYXNrIG9mIE1ldGlyYTtkcml2ZV9kaXI6OlNwaXJpdCBvZiB0aGUgU2FjcmVkIEdyb3ZlIC0gQXJtcztkcml2ZV9kaXI6OlF1aXZlciBvZiB0aGUgV2ludGVybW9vbjtkcml2ZV9kaXI6OlBhdWxkcm9ucyBvZiB0aGUgV2ludGVybW9vbjtkcml2ZV9kaXI6OkJvdyBvZiB0aGUgTW9vbiBSaWRlcjtkcml2ZV9kaXI6Ok1hbnRsZSBvZiB0aGUgQ2luZGVyIEJhcm9uIFN0eWxlIDE7ZHJpdmVfZGlyOjpNb2x0ZW4gQ2xhdyBQcmVtO2RyaXZlX2Rpcjo6Q3J1Y2libGUgb2YgUmlsZTtkcml2ZV9kaXI6OkV4ZWN1dGlvbmVyKnMgVHJvcGhpZXM7ZHJpdmVfZGlyOjpDb3Jwc2VtYWtlcjtkcml2ZV9kaXI6OkVzc2VuY2Ugb2YgdGhlIFRyaWNrc3RlciBDcm93bjtkcml2ZV9kaXI6OkN5Y2xlcyBvZiB0aGUgU2VyZW5lIFdpbmdzO2RyaXZlX2Rpcjo6VGFpbCBvZiB0aGUgRXRoZXJlYWwgTW9uYXJjaDtkcml2ZV9kaXI6OkJlc3Rvd21lbnRzIG9mIHRoZSBEaXZpbmUgQW5jaG9yIGVmZmVjdHM7ZHJpdmVfZGlyOjpTdHlsZSBvZiB0aGUgRGl2aW5lIEFuY2hvcjtkcml2ZV9kaXI6OkNvbW1vZG9yZSpzIEdhaXRlcnM7ZHJpdmVfZGlyOjpQYXVsZHJvbnMgb2YgdGhlIFdpdGNoIEh1bnRlciBUZW1wbGFyO2RyaXZlX2Rpcjo6R2xvdmVzIG9mIHRoZSBXaXRjaCBIdW50ZXIgVGVtcGxhcjtkcml2ZV9kaXI6OkJlbHQgb2YgdGhlIFdpdGNoIEh1bnRlciBUZW1wbGFyO2RyaXZlX2Rpcjo6RnVsbC1Cb3JlIEJvbmFuemE7ZHJpdmVfZGlyOjpNdWggS2VlbiBHdW47ZHJpdmVfZGlyOjpCbGFkZSBvZiBUZWFycyBhbmQgQ3Jvd24gb2YgVGVhcnM7ZHJpdmVfZGlyOjpLYW50dXNhIHRoZSBTY3JpcHQgU3dvcmQgViAzLjE7ZHJpdmVfZGlyOjpQYXVsZHJvbnMgb2YgdGhlIE9jY3VsdGlzdCpzIFB1cnN1aXQ7ZHJpdmVfZGlyOjpCZWFyZCBvZiB0aGUgSGludGVybGFuZCBTdGFsa2VyO2RyaXZlX2Rpcjo6QnJhY2VycyBvZiB0aGUgT2NjdWx0aXN0KnMgUHVyc3VpdDtkcml2ZV9kaXI6OkZyYWN0YWwgSG9ybnMgb2YgSW5uZXIgQWJ5c20gVVA7ZHJpdmVfZGlyOjpXaW5ncyBvZiBFdGVybmFsIFB1cmdhdG9yeTtkcml2ZV9kaXI6OlBsYXRlIG9mIHRoZSBCYWxlZnVsIEhvbGxvdztkcml2ZV9kaXI6OkdvbGRlbiBTaGFyZHMgb2YgRXhpbGU7ZHJpdmVfZGlyOjpCbGFja2dhdGUgU2VudGluZWwgQmFjaztkcml2ZV9kaXI6OkJsYWNrZ2F0ZSBTZW50aW5lbCBBcm1vcjtkcml2ZV9kaXI6OkJsYWNrZ2F0ZSBTZW50aW5lbCBIZWFkO2RyaXZlX2Rpcjo6QXJjcyBvZiBNYW50YSBQYWNrIFYgMy4wO2RyaXZlX2Rpcjo6R29sZGVuIE9mZmhhbmQgQmFzaGVyIG9mIE1hZ2UgU2t1bGxzO2RyaXZlX2Rpcjo6RXRlcm5hbCBIYXJ2ZXN0O2RyaXZlX2Rpcjo6VG94aWMgRGVhdGggRWF0ZXI7ZHJpdmVfZGlyOjpCbGFkZUJpdGVyIFYgMy4xO2RyaXZlX2Rpcjo6TG9sbGlwb3AgSnVnZ2VybmF1dCBWIDMuMDtkcml2ZV9kaXI6OlNlcnJha3VyYTtkcml2ZV9kaXI6OlBoYW50b20gQWR2ZW50IEJlbHQgVVA7ZHJpdmVfZGlyOjpQaGFudG9tIEFkdmVudCBVUDtkcml2ZV9kaXI6OlBoYW50b20gQWR2ZW50IFNob3VsZGVycyBVUDtkcml2ZV9kaXI6OlBoYW50b20gQWR2ZW50IFdlYXBvbiBVUDtkcml2ZV9kaXI6OlRoZSBMaWdodG5pbmcgT3JjaGlkIFYgMy4wO2RyaXZlX2Rpcjo6Q29tcGxldGUgR2FyYiBvZiB0aGUgQ29ycmlkYW4gTWFlc3Rybztkcml2ZV9kaXI6OkNvbXBsZXRlIFJvc2Ugb2YgdGhlIENvcnJpZGFuIE1hZXN0cm87ZHJpdmVfZGlyOjpUSS0xMCBNam9sbG5pciBFZmZlY3Q7ZHJpdmVfZGlyOjpCbGluayBEYWdnZXIgbHZsIDEgVEktNiBFZmZlY3Q7ZHJpdmVfZGlyOjpUSS0xMCBCb3R0bGUgRWZmZWN0O2RyaXZlX2Rpcjo6VEktMTAgRXVsIFNjZXB0ZXIgRWZmZWN0O2RyaXZlX2Rpcjo6U2FrdXJhIEZvbnRhaW4gUmVnZW47ZHJpdmVfZGlyOjpUSS0xMCBMZXZlbCBVcCBFZmZlY3Q7ZHJpdmVfZGlyOjpCcmluZ2VyIG9mIFRyb3VibGVzO2RyaXZlX2Rpcjo6V2hpc3BlcnMgb2YgdGhlIERhbW5lZCBXaW5ncztkcml2ZV9kaXI6Ok5lcHR1bmUgZm9yIE1hcnMgYnkgUGF0Y2hvdWxpIEtub3dsZWRnZTtkcml2ZV9kaXI6OlRoZSBUaW1la2VlcGVyIEdvbGRlbjtkcml2ZV9kaXI6OkZvY2FsIFJlc29uYW5jZSBWIDMuMDtkcml2ZV9kaXI6OkZsb3dlciBGbGFtZSBMaW5hIFYgMy4wO2RyaXZlX2Rpcjo6R29sZGVuIEF0b21pYyBSYXkgVGhydXN0ZXJzIGVmZmVjdDtkcml2ZV9kaXI6Ok1lbW9yaWVzIG9mIHRoZSBWb3cgRXRlcm5hbDtkcml2ZV9kaXI6OkRhdWdodGVycyBvZiBIeWRyb3BoaWluYWU7ZHJpdmVfZGlyOjpEcmVhZCBvZiB0aGUgR2xlYW1pbmcgU2VhbCBTZXQ7ZHJpdmVfZGlyOjpCZWx0IG9mIHRoZSBDcmVlcGluZyBTaGFkb3c7ZHJpdmVfZGlyOjpDYXBlIG9mIHRoZSBDcmVlcGluZyBTaGFkb3c7ZHJpdmVfZGlyOjpIb29kIG9mIHRoZSBDcmVlcGluZyBTaGFkb3c7ZHJpdmVfZGlyOjpTaGF3bCBvZiB0aGUgQ3JlZXBpbmcgU2hhZG93O2RyaXZlX2Rpcjo6U2hpcmFpIEt1cm9rbyBmb3IgVmVuZ2VmdWwgU3Bpcml0IGJ5IFBhdGNob3VsaSBLbm93bGVkZ2U7ZHJpdmVfZGlyOjpUaGUgRmFpdGggb2YgQXZlbmdlcnM7ZHJpdmVfZGlyOjpNZWRpdW0gVGFzc2VscyBvZiB0aGUgQmxhY2sgRGVhdGg7ZHJpdmVfZGlyOjpHYXVudGxldCBvZiBEYXJrIEZlYXRoZXJzO2RyaXZlX2Rpcjo6UGF1bGRyb24gUGVyY2g7ZHJpdmVfZGlyOjpEZW5kaSBEb2xsO2RyaXZlX2Rpcjo6SG9vayBvZiB0aGUgQmFzaWxpc2s7ZHJpdmVfZGlyOjpNYWplc3R5IE9mIFRoZSBDb2xvc3N1cyAtIENvYmJsZTtkcml2ZV9kaXI6Ok1hamVzdHkgT2YgVGhlIENvbG9zc3VzIC0gTW9ub2xpdGg7ZHJpdmVfZGlyOjpNYWplc3R5IE9mIFRoZSBDb2xvc3N1cyAtIFBlYmJsZTtkcml2ZV9kaXI6Ok1hbGVmaWMgRHJha2VzIEhvb2Qgb2YgdGhlIENyaW1zb24gV2l0bmVzcztkcml2ZV9kaXI6OkZvcm0gb2YgdGhlIEZlcnZpZCBNb25hcmNoO2RyaXZlX2Rpcjo6TWFsZWZpYyBEcmFrZXMgU3RyaWtlIG9ubHkgRWZmZWN0O2RyaXZlX2Rpcjo6UG9sYXIgVXJzYTtkcml2ZV9kaXI6Ok1hbnRsZSBvZiB0aGUgU2FuZ3N0cmF0aCBGb2xkO2RyaXZlX2Rpcjo6Q2xhd3Mgb2YgdGhlIFNhbmdzdHJhdGggRm9sZDtkcml2ZV9kaXI6OkJhcmRpbmcgb2YgdGhlIFNhbmdzdHJhdGggRm9sZDtkcml2ZV9kaXI6OkhlbG0gb2YgdGhlIEZlcm9jaWQ5519cyBIZWFydDtkcml2ZV9kaXI6Okl0c3VrYSBLb3RvcmkgZm9yIFdLIGJ5IFBhdGNob3VsaSBLbm93bGVkZ2U7IDEyM3x8fA==