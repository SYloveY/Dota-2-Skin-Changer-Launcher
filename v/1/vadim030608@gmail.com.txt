bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogIDExMXx8fCAyMjI6OiAkMnkkMTAkWVdGbFptVTJNRGRrTTJKbE1UUm1OZVBqRm9wSXZPWmVyczdJckJCWVU0Vnc3M0JrNG1RQVcgMjIyfHx8IDEyMzo6IFJvc2hhbiBIYWxsb3dlZW4gU2tpbjtNYWplc3R5IE9mIFRoZSBDb2xvc3N1cyAtIFBlYmJsZTtNZWRpdW0gQmFkIFRvIFRoZSBCb25lO0xhcmdlIEVsZW1lbnRhbCBJY2U7VGlueSBCYW5hbmE7SG9vZCBvZiB0aGUgRXZlcmJsYWNrO0hlbG0gb2YgdGhlIE1pc3RyYWwgRmllbmQ7QmxhZGUgb2YgdGhlIERlbW9uaWMgVmVzc2VsO1JhenppbHMgTWlkYXMgS251Y2tsZXMgUHJlbTtDcmF6eSBFeHBlcmltZW50IE5lY2s7RXRlcm5hbCBSYWRpYW5jZSBCbGFkZXMgUHJlbTtGbGFzayBvZiBMaXR0bGUgQmlnICpVbjtXYWFhZ2ggU3BhdWxkZXJzIG9mIEJpZyAqVW47QXNzaXN0YW50KnMgUmVzcGlyYXRvcjtUYWlsIG9mIHRoZSBFcXVpbGlicml1bTtBcm1vciBvZiB0aGUgRXF1aWxpYnJpdW07QWNvbHl0ZSBvZiBWZW5nZWFuY2UgSG9vZGVkIE1hc2s7T2ZmaGFuZCBCYXNoZXIgb2YgTWFnZSBTa3VsbHM7T2F0aGJvdW5kIERlZmlhbnQgUGF1bGRyb25zO0dvbGRlbiBPZmZoYW5kIEJhc2hlciBvZiBNYWdlIFNrdWxscztHb2xkZW4gQmFzaGVyIG9mIE1hZ2UgU2t1bGxzO0JlbHQgb2YgdGhlIEZvcmdvdHRlbiBQbGFuZTtCcmFjZXJzIG9mIHRoZSBTdXJ2aXZvcjtXeXZlcm4gSGF0Y2hsaW5nO0FybXMgb2YgdGhlIEZpcnN0IFdheXM7Q29zbWljIFdhbmRlcmVyIC0gQmFjaztTaG91bGRlciBvZiB0aGUgRmlyc3QgV2F5cztQYXVsZHJvbiBvZiB0aGUgSGFyYmluZ2VyO0F4ZSBCbGFja3Rob3JuIEJlbHQ7UmFtcGFudCBPdXRyYWdlIFByZW07QXJtIEd1YXJkIG9mIHRoZSBSYW0qcyBIZWFkO0hvcm5zIG9mIHRoZSBXcmF0aGZ1bCBBbm5paGlsYXRvcjtSYW0qcyBIZWFkIEJsYWRlO1Zpc2FnZSBvZiB0aGUgU2xlZXBsZXNzIFNlY3Q7RXllcyBvZiBMdWNpZCBUb3JtZW50O092ZXJncm93biBUZXJyb3IgU2hvdWxkZXI7QXJtb3Igb2YgdGhlIEZvcmdvdHRlbiBQbGFuZTtCdXJuaW5nIEphY2tzO0ZpcmVzdGFydGVyIEdhcyBNYXNrO05pZ2h0IFRlcnJvcnMgTWQ5519bnQ7Um91Z2ggUmlkZXIqcyBTbGlwc2hvZCBTbGlja2VyO093bCBvZiB0aGUgU3RvdXRoZWFydCBHcm93bGVyO0xlZ2FjeSBvZiBhIExvc3QgQWdlIC0gSGVsbTtFZGdlIG9mIEV4dGluY3Rpb24gU2hvdWxkZXJzO0JvYXIgb2YgdGhlIFN0b3V0aGVhcnQgR3Jvd2xlcjtMZWdhY3kgb2YgYSBMb3N0IEFnZSAtIEF4ZTtCcmFjZXIgb2YgdGhlIEJsb29kZm9yZ2U7R2FsbG93cyBVbmRlcnN0dWR5IEdhdW50bGV0cztNYW50bGUgb2YgdGhlIEJsb29kIENvdmVuYW50O0JlbHQgb2YgdGhlIFNjYXJsZXQgUmF2ZW47R2FsbG93cyBVbmRlcnN0dWR5IEhvb2Q7VGhpcnN0IG9mIEV6dHpob2sgLSBPZmYtSGFuZDtTaG91bGRlcnMgb2YgdGhlIFNhY3JpZmljaWFsIFNlcnBlbnQ7VGhpcnN0IG9mIEV6dHpob2sgQnVuZGxlIFByZW07QXJtb3Igb2YgdGhlIEh1bnRlcjtDYXBlIG9mIHRoZSBIdW50ZXIqcyBHbG9yeTtNYXNrIG9mIERhcmsgRmVyb2NpdHk7SGVhcnRsZXNzIEh1bnQgLSBPZmYtSGFuZDtNYXJrIG9mIHRoZSBGaXJzdCBIdW50O1dyYXBzIG9mIHRoZSBEcnVua2VuIFdhcmxvcmQ7V3lybWJyZXcgQ29ubm9pc3NldXIgQmFjaztTcGlyaXR1YWwgU3Bpcml0cztHYXJiIG9mIHRoZSBJY2VicmV3IEFuZ2xlcjtSZWQgRHJhZ29uIFNob3VsZGVycztUaGUgQmVsbCBvZiBTZWNsdXNpb24gV2VhcG9uO0JhbmRhbmEgb2YgdGhlIFJ1bXJ1bm5lcipzIENhcnJvbmFkZTtIZWF2eSBCYXJiZWQgQXJtcztIZWF2eSBCYXJiZWQgQmFjaztTdXJseSBCb2dzdG9tcGVyIEhhdDtCcmVha2luZyBFbWVyYWxkO0JlYXN0IG9mIHRoZSBDcmltc29uIFJpbmcgQXJtb3I7THljb3NpZGFlKnMgQnJvb2Q7UGVyY2VwdGl2ZSBTcGlkZXJsaW5nO1RJOSBDYWNoZSBCcm9vZCBWZW5vbWQ5519cyBDYXJlc3NpbiBIZWFkO0xlZ3Mgb2YgUGVyY2VwdGlvbjtIZWxtIG9mIHRoZSBCdXJuaW5nIE5pZ2h0bWFyZTtNb3VudCBvZiB0aGUgQnVybmluZyBOaWdodG1hcmU7RnVyeSBvZiBCb3VuZGxlc3MgRGFya25lc3MgT2ZmLUhhbmQ7RXllcyBvZiB0aGUgUmlmdCAtIFNob3VsZGVyO0ZsYWlsIG9mIHRoZSBCdXJuaW5nIE5pZ2h0bWFyZTtNb3VudCBvZiB0aGUgUHJvdWRzaWx2ZXIgQ2xhbjtMZWFkZXIgb2YgdGhlIE1vbHRlbiBhcm15IC0gQ2xpbmt6IEJhY2s7TG9zdCBIaWxscyBHYXVudGxldHM7TGluZWFnZSBNYXNrIG9mIHRoZSBIdW50IEV0ZXJuYWw7U2hvdWxkZXJzIG9mIHRoZSBCdXJuaW5nIERlY3JlZTtDbGlua3ogVGhlIEZhaXRoIG9mIEF2ZW5nZXJzIFdlYXBvbjtBcm1vciBvZiB0aGUgSXJvbiBDbG9jayBLbmlnaHQ7S25pZ2h0IG9mIHRoZSBDbG9jayBUb3dlciBIZWFkO1BpdCBCb3NzIFByb3NwZWN0b3IgRHJpbGw7R29sZGVuIFJhYmlkIFdhdGNoY29nO0NhcGUgb2YgdGhlIEJsdWVoZWFydCBTb3ZlcmVpZ247R2xhY2lhbCBHYXJkZW5zIEFybXM7SWNlIENhcHBlZCBIb29kIG9mIHRoZSBOb3J0aDtZdWxzYXJpYSpzIE1hbnRsZTtSb3lhbCBXaW50ZXJibG9vbSBXZWFwb247TW9vbmxpZ2h0IEZhaXJ5IEFybW9yO1dpbmdzIG9mIHRoZSBGYWVzaGFkZSBGbG93ZXI7U2F0Y2hlbCBvZiB0aGUgV2ludGVyIFJvc2U7TW9vbmxpZ2h0IEZhaXJ5IEhlYWQ7TGFudGVybiBvZiB0aGUgU2FjY2hhcmluZSBTYWJvdGV1cjtFbnZlbG9waW5nIERlc3BhaXIgViAyLjE7VGltZSBXYW5kZXJlcjtNYXJhdWRlciBDaGllZnRhaW4gb2YgdGhlIENoYW9zIFdhc3RlcztXYXIgQnJlYWtlcnMgU2V0O1NhdmlvciBmb3IgSnVuZ2xlcyBIb25vcjtNYW5pcHVsYXRvciBvZiBXYXJzaXR1YXRpb247IDEyM3x8fA==