bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogIDExMXx8fCAyMjI6OiAkMnkkMTAkTWpFM1pHWXdOekl6TlRsbE9XUTJNLlZLUE1hcVRZME9jcmVJSWdINS5lUFJVcDFuc3JWMEcgMjIyfHx8IDEyMzo6IDI1IGx2bCBwaW5nO1RJLTUgZWZmZWN0IEJsaW5rIERhZ2dlcjtUSS01IGVmZmVjdCBCb3R0bGU7VEktOSBTZWFzb25hbCBDcmVlcCBEZW55IEVmZmVjdDtQeXJleGFlYyBGbG9lO0ZvcmNlIG9mIFNwaXJpdCBIVUQ7Um9zaGFuIEdhcmRlbnM7V29vZGxhbmQgV2FyYmFuZHMgLSBEaXJlIENyZWVwcztXb29kbGFuZCBXYXJiYW5kcyAtIFJhZGlhbnQgQ3JlZXBzO0RlY2xhcmF0aW9uIG9mIHRoZSBEaXZpbmUgU2hhZG93IERpcmUgVG93ZXJzO0RlY2xhcmF0aW9uIG9mIHRoZSBEaXZpbmUgTGlnaHQgUmFkaWFudCBUb3dlcnM7R29sZGVuIEFlZ2lzO1RJLTYgTmF0dXMgVmluY2VyZSBUUCBFZmZlY3Q7VEktOSBQaGFzZSBCb290cyBFZmZlY3Q7VEktOSBMZXZlbCBVcCBFZmZlY3Q7VEktOSBCb3R0bGUgRWZmZWN0O0JlbHQgb2YgdGhlIEJsYWRlZm9ybSBBZXN0aGV0ZTtKdWdnZXJuYXV0IEFyY2FuYSBCbGFkZWZvcm0gTGVnYWN5O0hvcm5zIG9mIHRoZSBCZXRyYXllcjtNdWxjdGFudCBQYWxsIG9mIHRoZSBDcmltc29uIFdpdG5lc3M7RmluIEtpbmdzIENoYXJtIG9mIEVtaW5lbnQgUmV2aXZhbCBFeGNlcHRpb25hbDtMZWZ0IEhhbmQgb2YgdGhlIFdpdGNoIFN1cHJlbWU7VGVtcGVzdCBSZXZlbGF0aW9uO0h1bnRlcnMgSG9hcmQ7VGluZXMgb2YgVHliYXJhO01hcmsgb2YgdGhlIEZpcnN0IEh1bnQgSGFydmVzdGVkO1dpbmdzIG9mIERheWJyZWFrO1Byb21pbmVuY2U7S290bCBJbGx1bWluYXRlIERlZXI7QXJjYW5hIERyZWFkIFJldHJpYnV0aW9uO0dyYW5kIEFic2Nlc3Npb247RmVhc3Qgb2YgQWJzY2Vzc2lvbiBIb29rIEJ1bmRsZTtHb2xkZW4gU2NhdmVuZ2luZyBHdXR0bGVzbHVnO1RlcnJhaW4gLSBTYW5jdHVtcyBvZiB0aGUgRGl2aW5lO0VtaW5lbmNlIG9mIFJpc3R1bCBEZW55IDE7U291bCBEZW55O1RJLTkgRm91bnRhaW4gbHZsIDMgRWZmZWN0O1dlYXRoZXIgSGFydmVzdDtPbmliaSBTdHlsZSAyMTtWMWxhdCBNZWdhLUtpbGxzO1YxbGF0IEFubm91bmNlcjtUaGUgSW50ZXJuYXRpb25hbCAyMDIwIE11c2ljIFBhY2s7V29vZGxhbmQgV2FyYmFuZHMgLSBEaXJlIFNpZWdlIENyZWVwcztXb29kbGFuZCBXYXJiYW5kcyAtIFJhZGlhbnQgU2llZ2UgQ3JlZXBzO1RoZSBJbnRlcm5hdGlvbmFsIDIwMTUgQ3Vyc29yIFBhY2s7SnVuZ2xld29ybSBTZW50aW5lbCBXYXJkO01hdyBvZiBFenR6aG9rO1RoaXJzdCBvZiBFenR6aG9rIEJ1bmRsZSBQcmVtO09yaWdpbiBvZiB0aGUgVW5tYWtpbmc7U2x1bWJlcmluZyBUZXJyb3I7SW1tb3J0YWwgSW52b2tlciBLaWQ7U3VsbGVuIEhhcnZlc3Q7R29sZGVuIFN1bGxlbiBIb2xsb3cgUHJlbTtQYWNrIG9mIHRoZSBBcmRhbGFuIEludGVyZGljdG9yO1RvcCBIYXQgb2YgdGhlIE9jY3VsdGlzdHMgUHVyc3VpdDtTbmlwZXIgSW1tb3J0YWwgV2VhcG9uIG9mIHRoZSBBcmRhbGFuIEludGVyZGljdG9yO0JsYWNrc2FpbCBDYW5ub25lZXIgU2hvdWxkZXI7Qmxvc3NvbSBvZiB0aGUgTWVycnkgV2FuZGVyZXI7QW5jaWVudCBJbmhlcml0YW5jZSAtIFNob3VsZGVyO0FuY2llbnQgSW5oZXJpdGFuY2UgLSBCZWx0O0FuY2llbnQgSW5oZXJpdGFuY2UgLSBOZWNrO0NyeXN0YWwgRHJ5YWQgUHJlbTtGcm9zdCBBdmFsYW5jaGUgUHJlbTtHb2xkZW4gSWNlIEJsb3Nzb207WXVsc2FyaWFzIE1hbnRsZSBQcmVtO1l1bHNhcmlhKnMgR2xhY2llciBQcmVtO0JpdHRlciBMaW5lYWdlIEltbW9ydGFsIEF4ZXM7RGlhYm9saWMgQXNwZWN0O1RhbG9ucyBvZiB0aGUgRW5kbGVzcyBTdG9ybSBNb3VudDtHb2xkZW4gQ2hhb3MgRnVsY3J1bTtUYWxvbnMgb2YgdGhlIEVuZGxlc3MgU3Rvcm0gV2VhcG9uO0hlbG0gb2YgdGhlIERhcmsgTW9vbiBTdGFsa2VyO0dvbGRlbiBUd2lsaWdodCBTY2hpc207R29kcyBNZXJjeSBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzO1Byb2dlbml0b3JzIEJhbmU7VGhlIEJhcnJlbiBDcm93biBQcmVtO1RoZSBCYXJyZW4gVmVjdG9yO0ZhY2VsZXNzIE1hZG5lc3M7TWFjZSBvZiBBZW9ucyBQcmVtO0pld2VsIG9mIEFlb25zO0JlbmV2b2xlbnQgQ29tcGFuaW9uIFByZW07V2FyZGVuIG9mIHRoZSBIZWxsYm9ybjtMYW50ZXJuIG9mIHRoZSBJbmZlcm5hbCBNYXc7QmVob2xkZW4gb2YgdGhlIEJhbmlzaGVkIE9uZXMgLSBXZWFwb247R29sZGVuIEZsb29kbWFzaztWb29kb28gUHJpZXN0ZXNzIEV4b3JjaXNtO0Nyb3duIG9mIHRoZSBNZXJxdWVlbjtDb3ZlcnMgb2YgdGhlIE1lcnF1ZWVuO0RyZXNzIG9mIHRoZSBNZXJxdWVlbjtHbGFyZSBvZiB0aGUgVHlyYW50O0Nyb3duIG9mIFZpbGUgQ29udm9jYXRpb247U2hlYXJpbmcgRGVwb3NpdGlvbiBQcmVtO1RvbWUgb2YgRm9yYmlkZGVuIEtub3dsZWRnZTtNYXNrIG9mIE1ldGlyYTtTcGlyaXQgb2YgdGhlIFNhY3JlZCBHcm92ZSAtIEJhY2s7Q3JpbXNvbiBCcmFjZXJzIG9mIEFlb25zIFByZW07R29sZGVuIE1vb25mYWxsIFByZW07TWQ5519bnQgb2YgdGhlIFdpbmdlZCBTZW50aW5lbDtEcmVhZCBSZXRyaWJ1dGlvbiAtIEJyYWNlcnM7RHJlYWQgUmV0cmlidXRpb24gLSBDYXBlO0RyZWFkIFJldHJpYnV0aW9uIC0gSGVhZHdlYXI7UGFyYWdvbnMgUHJpZGU7UGFyYWdvbnMgUG9pc2U7UGFyYWdvbnMgUmVidWtlO0Fkb3JpbmcgV2luZ2ZhbGwgUHJlbTtGZXR0ZXJzIG9mIE9tbmlzY2llbmNlO0FybW9yIG9mIFNhY3JlZCBMaWdodDtHb2xkZW4gT3JpZ2lucyBvZiBGYWl0aCBQcmVtO0hhaXIgb2YgdGhlIFN1cnZpdm9yO0dvbGRlbiBCYXNoZXIgQmxhZGVzIFYgMi4wO1JvbGxlcm1hd3N0ZXIgYW5kIE1lY2hhIEJvb3RzIG9mIFRyYXZlbCBNayBJSUk7UmVmbGVjdGlvbnMgU2hhZGUgQ29sb3IgZm9yIFRCO1NwYW4gb2YgU29ycm93O1NjeXRoZXMgb2YgU29ycm93O0NoYXNtIG9mIHRoZSBCcm9rZW4gQ29kZSBIZWxtO1Rvcm1lbnRlZCBDcm93bjtUb3JtZW50ZWQgU3RhZmY7RHJlYWQgUmV0cmlidXRpb24gLSBMZWcgQXJtb3I7RHJlYWQgUmV0cmlidXRpb24gLSBRdWl2ZXI7RHJlYWQgUmV0cmlidXRpb24gLSBTaG91bGRlciBBcm1vcjtSaXZlciBWaWFsIEVsZWN0cmlmaWVsZDtRdWVlbiBvZiBQYWluIEFyY2FuYSBNZWdhUGFjaztSdWJpY2sgQXJjYW5hIHdpdGggSW1tb3J0YWw7TWFuaWZvbGQgUGFyYWRveCBHb3RoaWMgSHVudGVyO0t1bmtrYSBJbW1vcnRhbHMgTWVnYVBhY2s7T2dyZSBNYWdpIEltbW9ydGFscyBBcmNhbmEgTWVnYVBhY2s7QXhlIGZ1bGwgSW1tb3J0YWxzIE1lZ2FwYWNrIGFsdDtHb2xkZW4gRGFyayBNYXcgSW5oaWJpdG8gYW5kIEdvbGRlbiBQcm9mYW5lIFVuaW9uIGFuZCBHb2xkZW4gRHJlYWQgUmVxdWlzaXRpb24gTGlmZXN0ZWFsZXIgSW1tb3J0YWxzIE1lZ2FwYWNrO1JpZ2h0ZWQ5519cyBUaHVuZGVyYm9sdCBhbmQgQXJjYW5hIE1lZ2FQYWNrO0Nsb2Nrd2VyayBNZWdhUGFjaztDbGlua3ogTWVnYVBhY2s7RGFya2JyZXcgRW5mb3JjZXIgYW5kIEV0ZXJuYWwgUmFkaWFuY2UgQmxhZGVzIGFuZCBNaWRhcyBLbnVja2xlcyBNZWdhUGFjaztTaGF0dGVyYmxhc3QgU2V0O0h1bnRlciB3aXRoIE5vIE5hbWUgViAyLjE7U2xhcmsgTWVnYVBhY2sgTmV3O1RoZSBLaW5nIG9mIFRoaWV2ZXM7V2luZHJhbmdlciBBcmNhbmEgc3R5bGUgMiAoT3JhbmdlIEJpcmQpIGFuZCBGdWxsIFdSIGltbW9ydGFsO0JyaXN0bGViYWNrIE1lZ2FQYWNrO1RyaWJhbCBUZXJyb3IgViAzLjA7U2lsdmVyd3VybSBTYWNyaWZpY2U7RWFydGhzaGFrZXIgTWVnYVBhY2sgTmV3O0VuaWdtYSBNZWdhUGFjaztNYXJzIFRJMTAgQ29sbGVjdG9ycyBDYWNoZSBNZWdhUGFjaztBdXRob3JpdHkgb2YgdGhlIEltcGVyaXNoYWJsZSBHcmFuZCBIaWVyb3BoYW50O0Zvd2wgUGxhZ3VlIFNldDtMZWdpb24gQ29tbWFuZGVyIE1vZE1ha2VyIE1lZ2FQYWNrO09jY3VsdGlzdHMgUHVyc3VpdDtUZXN0IG9mIHRoZSBCYXNpbGlzayBMb3JkO0FoUHVjaztXcmFpdGggS2luZyBBcmNhbmEgTWVnYVBhY2s7V2l0Y2ggRG9jdG9yIE1lZ2FQYWNrO1N2ZW4gSW1tb3J0YWxzIE1lZ2FQYWNrIFVQO0F6dGVjIFdhcnJpb3I7QnVybmluZyBOaWdodG1hcmU7RXNzZW5jZSBPZiBUaGUgRGFyayBNb29uO0ljZSBMaW5hIFByZW1pdW07TG9yZCBvZiB0aGUgU2NvdXJpbmcgRHVuZXMgViAyLjA7RnJvemVuIFZvaWQ7VmlwZXIgTWVnYVBhY2s7VG9vbHMgb2YgdGhlIEhlbGxzd29ybjtBcmNhbmEgTWVnYVBhY2sgU2hhZG93IEZpZW5kO1NwaXJpdCBCcmVha2VyIE1lZ2FQYWNrO1RpZGVodW50ZXIgTWVnYVBhY2s7RXRlcm5hbCBUZXN0YW1lbnQ7TWlyYW5hIE1lZ2FQYWNrO0JsZXNzaW5nIG9mIHRoZSBDcmVzdGVkIFVtYnJhO1NreXdyYXRoIE1hZ2UgTWVnYVBhY2sgVGhhbmF0b3M7TmlnaHQgU3RhbGtlciBJbW1vcnRhbCBhbmQgUmVhcGVyIEtpc2lsZXYgTW9kTWFrZXIgTWVnYVBhY2s7RmVydmVudCBDb25zY3JpcHQgViAzLjA7TWVjaGEgSG9ybmV0IFNldDtQdWduYSBJbW1vcnRhbHMgTWVnYVBhY2s7TW9ua2V5IEtpbmcgQXJjYW5hIE1lZ2FQYWNrO1RodW5kZXIgR3JpZmZpbjsgMTIzfHx8