bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogIDExMXx8fCAyMjI6OiAkMnkkMTAkTVRCak9XSXdaR1UwTVdVNE9UaGxZdVNlVjRHNFdBOEVmZlhrVEdtTGRTNnIvT0I0SkdCRnEgMjIyfHx8IDEyMzo6IFB1Y2sgQW5pbWUgVm9pY2U7QmFieSBSb3NoYW4gUHJlbTtBY2lkIEh5ZHJhIEN1cnNvciBQYWNrO0xpbmEgQW5pbWUgVm9pY2U7UmVwdGlsaWFuIFJlZnVnZSBEaXJlIENyZWVwcztHdWFyZCBvZiB0aGUgUmVkIE1pc3Q7SGVhbGluZyBGb3VudCBvZiB0aGUgTG9zdCBJc2xlcztCcmFjZXJzIG9mIHRoZSBXYW5kZXJpbmcgRGVtb247QXJzZW5hbCBvZiB0aGUgQmxhZGVrZWVwZXI7U2lnaWwgTWFzayBvZiB0aGUgQmxhZGVrZWVwZXI7RmF1bGRzIG9mIHRoZSBXYW5kZXJpbmcgRGVtb247QmxhZGUgb2YgdGhlIEphZGUgU2VycGVudDtBcnRpc3Qgb2YgdGhlIEFzdHJhbCBTdW1tZXIgLSBBcm1vcjtEZWF0aCBCZWFyaW5nIFdpbmdzIEhlYWQ7U2NhcmYgb2YgdGhlIERlYWRseSBOaWdodHNoYWRlO0hvbGlkYXkgUmFkaWFudCBUb3dlcjtSZXB0aWxpYW4gUmVmdWdlIFJhZGlhbnQgQ3JlZXBzO0NyeXN0YWwgTWFpZGVuIEFuaW1lIFZvaWNlO0FuY2llbnQgUmh5dGhtIExvYWRpbmcgU2NyZWVuO0Jyb29kIEh1bnRlciBIVUQ7QmxhY2tzYWlsIENhbm5vbmVlciBBcm1zO0JhY2sgb2YgdGhlIFNlYXNvbmVkIEV4cGVkaXRpb25hcnk7SGF0IG9mIFRoZSBIb3dsaW5nIFdvbGY7U2hvdWxkZXIgb2YgdGhlIFNlYXNvbmVkIEV4cGVkaXRpb25hcnk7V2VhcG9uIG9mIHRoZSBTZWFzb25lZCBFeHBlZGl0aW9uYXJ5O0ludGVycGxhbmFyIEltcGFjdG9yIEFybXM7SW50ZXJwbGFuYXIgSW1wYWN0b3IgQmVsdDtJbnRlcnBsYW5hciBJbXBhY3RvciBIZWFkO0ludGVycGxhbmFyIEltcGFjdG9yIFNob3VsZGVyO1RhaWwgb2YgdGhlIFN1cmdpbmcgV2luZDtGbGFpbCBvZiB0aGUgRWxlbWVudGFsIEltcGVyYXRvcjtBcm0gRmlucyBvZiB0aGUgRGVlcHdlZWQgRHJvd25lcjtUaWRvc2F1cnVzIFRhaWw7TWFlbHJhd24qcyBhYnlzc2FsIEd1YXJkIEJlbHQ7TGVhc2hlZCBSb2Nrc2hhcms7UmVjbHVzZSBSZWVmIERlbml6ZW47S3Jha2VuKnMgQmFuZTtCcmFjZXJzIG9mIHRoZSBDZW50dXJpb24gVmFuZ3VhcmQ7RGVlcCBWYXVsdCBHdWFyZGlhbiBBcm1wbGF0ZXM7UGxhdGUgb2YgdGhlIENlbnR1cmlvbiBWYW5ndWFyZDtUcmlkZW50IG9mIHRoZSBEZWVwIE9uZTtOb3J0aGVybiBCbGlnaHQgQXJtcztEYXJrIEFydGlzdHJ5IENhcGU7RHJhcGluZ3Mgb2YgUXVhcyBQcmVjb3I7Tm9ydGhlcm4gQmxpZ2h0IENhcGU7TWFzayBvZiBRdWFzIFByZWNvcjtJY2Vmb3JnZWQgSGFpcjtTaG91bGRlcnMgb2YgUXVhcyBQcmVjb3I7U21hbGwgQmFkIFRvIFRoZSBCb25lO0V2ZXJsYXN0aW5nIEFybXM7RmlyZSBSZWdlbnQgLSBCZWx0O01hZ25pZmljZW50IEZsYW1lO0ZpcmUgUmVnZW50IC0gSGVhZDtIZWlybG9vbSBvZiB0aGUgQ2hhcnJlZCBCbG9vZGxpbmU7QXNzYXNzaW5hdGlvbiBvZiBEYXJrIEZlYXRoZXIgQmFjaztBc3Nhc3NpbmF0aW9uIG9mIERhcmsgRmVhdGhlciBCZWx0O1N0eWxlIG9mIHRoZSBGZWFyZnVsIEFyaWE7QXJtb3Igb2YgQ3J1ZWwgUmVwcmlzYWw7Q2FwZSBvZiB0aGUgR2xlYW1pbmcgU2VhbDtCcm9vY2ggb2YgdGhlIEdsZWFtaW5nIFNlYWw7U2FjayBvZiB0aGUgU2FwcGVyKnMgR3VpbGU7SGVsbSBvZiB0aGUgU2FwcGVyKnMgR3VpbGU7U2tpcCBvZiB0aGUgU2FwcGVyKnMgR3VpbGU7SW1wbGVtZW50cyBvZiB0aGUgU2FwcGVyKnMgR3VpbGU7TXVuaXRpb25zIG9mIHRoZSBQb3dkZXJrZWcgUGF0cm9sO1RlbXBsYXIgQXNzYXNzaW4gQW5pbWUgVm9pY2U7QmFsZWZ1bCBIb2xsb3cgTG9hZGluZyBTY3JlZW47RWxkZXIgQmFyayBIVUQ7Q2xhdyBvZiB0aGUgVW1pemFyIENyYXdsZXI7SG9vayBvZiB0aGUgU2NvdW5kcmVsO1dhdmVjdXR0ZXI7U2hlbGwgb2YgdGhlIFVtaXphciBDcmF3bGVyO1NsYXNoZXIgb2YgdGhlIFVtaXphciBDcmF3bGVyO0hvb2tibGFkZSBvZiBTa2FkaTtXcmFwcyBvZiBhIFRob3VzYW5kIEZhY2VzO1BlbHQgb2YgT2RvY29lbGV1cztNYXNrIG9mIE9kb2NvZWxldXM7TGVncyBvZiBPZG9jb2VsZXVzO0JsYWRlIG9mIE9kb2NvZWxldXM7VEktNiBDb21wbGV4aXR5IEdhbWluZyBUUCBFZmZlY3Q7VEktNyBMZXZlbCBVcCBFZmZlY3Q7VEktOCBQaGFzZSBCb290cyBFZmZlY3Q7VEktMTAgRm9yY2UgU3RhZmYgRWZmZWN0O0xhc3RoaXQgR29sZCAtIE5ldyBCbG9vbSAyMDE5O1dpbnRlciBTY3l0aGUgb2YgVnlzZSBFZmZlY3QgMjAxNztJcm9uIEJyYW5jaCBHRztNaW5lIFJhZGl1cyA3MDI7QXJtcyBvZiB0aGUgT255eCBDcnVjaWJsZSBMb2FkaW5nIFNjcmVlbjtCZXN0b3dtZW50cyBvZiB0aGUgRGl2aW5lIEFuY2hvciBMb2FkaW5nIFNjcmVlbjtBc3BlY3Qgb2YgdGhlIFllYXIgQmVhc3QgTG9hZGluZyBTY3JlZW47QnJpc3R0bGVCYWNrIGxvYWRzY3JlZW47QnJvb2Rtb3RoZXIgQW5pbWUgVm9pY2U7RGVhdGggUHJvcGhldCBBbmltZSBWb2ljZTtXaW50ZXIgV3l2ZXJuIEFuaW1lIFZvaWNlO0x1bmEgQW5pbWUgVm9pY2U7R28gR28gUG93ZXIgUmFuZ2VycztJcm9uYSBNZWdhLUtpbGxzO0dhY2hpIE1lZ2EtS2lsbHM7S2F0b3UgTWVnYS1LaWxscztLb25nb3UgTWVnYS1LaWxscztDdXJpb3NpdHkgSFVEO0FudGlxdWl0eSBIVUQ7RHJvZG8gdGhlIERydWZmaW47R3VhcmRpYW5zIG9mIHRoZSBMb3N0IFBhdGggRGlyZSBUb3dlcnM7R3VhcmRpYW5zIG9mIHRoZSBMb3N0IFBhdGggUmFkaWFudCBUb3dlcnM7UmVlZiBSb3NoYW47SEVZIFRFSVRPS1UgQW5ub25jZXIgTWVnYS1LaWxsO1NtZWV2aWw7RmxvcGphdyB0aGUgQm94aG91bmQ7Q29tYm8gTWVnYSBHcmVldmlsO0NvbG9yU3RhdHM7VEktNyBUTkMgVFAgZWZmZWN0O1BsYW5ldGZhbGwgQmxpbms7TWVrYW5pc20gVEktNiBFZmZlY3Q7Qm90dGxlIFRJLTYgRWZmZWN0O1RJLTEwIExldmVsIFVwIEVmZmVjdDtDaHJvbXkgdGhlIENlbnRpcGVkZSBXYXJkO1B1ZGdlIGJsb29kIGFmdGVyIGhvb2s7RGF0YXN0YXIgUHJvZ2VuaXRvciAoQWx0ZXIgQXJjYW5hKTtBcm1zIG9mIERlc29sYXRpb24gUHJlbTtQYXVsZHJvbnMgb2YgRXRlcm5hbCBIYXJ2ZXN0O1dpbnRlciBWZXJzdXMgU2NyZWVuO0Z1Y2sgRGVueTtSaXNlIEt1amlrYXdhIEFubm91bmNlciAoSmFwKTtOeWFzaCBpY29ucztLYXBwYSBTaWxlbmNlO0JhbmUgLSBHYW5nYW1zdHlsZS1zbG93O1BsYWd1ZSBIYXRjaGV0IG9mIHRoZSBOdXJnbGUgQ2hhbXBpb247RGlyZWNvdXJ0IEplc3RlciBIb29rO0hlYWQgb2YgdGhlIEdoYXN0bHkgR291cm1hbmQ7THVya2FibG87U3RlbGxhciBKYWRlO05lcHR1bmUgZm9yIE1hcnMgYnkgUGF0Y2hvdWxpIEtub3dsZWRnZTtHcmltIERlc3Rpbnk7UnVzdGljIEZpbmVyeSBWIDIuMDtDaGl0aW5vdXMgU3RhbGtlcjtNYXJjaCBvZiB0aGUgUG93ZGVya2VnIFBhdHJvbDtJemF5b2kgU2FrdXlhIGZvciBUaW5rZXIgYnkgUGF0Y2hvdWxpIEtub3dsZWRnZTtTYWlneWQ5519amkgWW95b2tvIGZvciBEUCBieSBQYXRjaG91bGkgS25vd2xlZGdlO1NlbnRpbmVsIFNldDtGcm96ZW4gRmVhdGhlciBTZXQ7Q2hhaW5lZCBNaXN0cmVzcyBTZXQ7TWlraSBTYXlha2EgZm9yIEFiYmFkb24gYnkgUGF0Y2hvdWxpIEtub3dsZWRnZTtSZWQgTWlzdCBSZWFwZXIgU2V0O0FyYyBvZiB0aGUgU292ZXJlaWduO0NobG9lIHZvbiBFaW56YmVybiBmb3IgRWFydGggU3Bpcml0IGJ5IFBhdGNob3VsaSBLbm93bGVkZ2U7RmF0ZSBNZXJpZGlhbjtDdGh1Z2hhIGZvciBIdXNrYXIgYnkgUGF0Y2hvdWxpIEtub3dsZWRnZTtFbGR3dXJtcyBUb3VjaCBWIDMuMTtBbmNlc3RyYWwgVHJhcHBpbmdzIFNldCBWIDMuMDtZYWdva29ybyBFaXJpbiBmb3IgRGF6emxlIGJ5IFBhdGNob3VsaSBLbm93bGVkZ2U7RGVzZXJ0IEJyb29kbW90aGVyO0Vwb2NoIG9mIHRoZSBBYnlzbTtBbnRpbWFnZSBTaGlub2JpO0V5ZXMgb2YgdGhlIFJpZnQ7V2FyLUJ1cnJvdyBSYXZhZ2VyO0NvbXBlbmRpdW0gQmxvb2R5IFJpcHBlcjtIaW5hbmF3aSBUZW5zaGkgZm9yIEVhcnRoc2hha2VyIGJ5IFBhdGNob3VsaSBLbm93bGVkZ2U7Qml0dGVyd2luZyBMZWdhY3k7VGVtcGVzdHMgV3JhdGg7V3JpdCBvZiB0aGUgUm95YWwgQnV0Y2hlcjsgMTIzfHx8