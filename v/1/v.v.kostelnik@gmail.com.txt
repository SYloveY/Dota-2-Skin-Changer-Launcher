limitHWID:: 1 000||| 111::  111||| 222:: $2y$10$NmUzZDM4YzNmMDkyZjk3O.I2r32kfJeTw7Kt8/w7furhiVyrwNkLG 222||| 123:: Firestarter Gas Mask;Bessy the Batmeleon;Burning Jacks;Great Sage*s Reckoning;Arms of Desolation;Horns of Eternal Harvest;Armor of the Diabolical Fiend;Blackshield Protodrone Helm;Blackshield Protodrone Laser;Blackshield Protodrone Missile Launcher;Blackshield Protodrone Armor;Conspicuous Culprit Mohawk;Conspicuous Culprit Armor;Shoulders of the Icewrack Marauder;Conspicuous Culprit Weapons;Baby Roshan Prem;Drowned Horseman V 2.1;Arabian Riders;The Obliterator of Magic;Time Wanderer;Undefeated General;Marauder Chieftain of the Chaos Wastes;Hunt of the Weeping Beast;Kit of the First Hunt V 2.1;Feast of the Gluttons Larder;Warrior of Arena Set;Furnator Set;Arms of Burning Turmoil Set V 3.1;Fires of Vashundol no effect V 2.1;Dragons Ascension V 3.0;Eldwurms Touch;The Jade General;Chess Knight Set;Blaze Armor V 2.1;The Corruption of Nezzureem;Sinister Lightning;The Path of Odocoeleus;Seaborne Reprisal;Honored Servant of the Empire;Divine Flame V 2.0;Shadowforce Gale;Convalescing Empress;Masks of Mischief;Stellar Jade;Sovereign of the Hive;Sentinel of the Lucent Gate V 2.1;Creeping Shadow;Faeriesnap Spriteleaf;Surgical Precision;Beacon of Cerulean Light 1 Style V 2.1;Ocean Conqueror;Raikage Warrior V 2.0;Cyclopean Marauder;Ritual of the Loyal Fold;Grim Destiny;Unblinking Eternity; 123|||