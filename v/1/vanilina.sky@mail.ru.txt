bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogIDExMXx8fCAyMjI6OiAkMnkkMTAkTnpkbU5HUmpOMlJtT0RkbVpUZGtaT1lveTZzbU5uZTZVeGU3QnhSU1Aua05UeDY4RTJOR3EgMjIyfHx8IDEyMzo6IEJsb29kIFNoYXJkO0N1cnNlIG9mIHRoZSBDcm93IEtpbmcgSGVhZDtNZW1vcmllcyBvZiBCb25lIFBhdWxkcm9uO0N1cnNlIG9mIHRoZSBDcm93IEtpbmcgQXJtcztDbG9hayBvZiB0aGUgSGF1bnRlZCBMb3JkO0N1aXJhc3Mgb2YgdGhlIFN0b25lbWFyY2ggU292ZXJlaWduO1RlbXBlc3QgSGVsbSBvZiB0aGUgVGh1bmRlcmdvZCBQcmVtO0dvbGRlbiBJbW1vcnRhbCBQYW50aGVvbjtTeW1ib2wgb2YgdGhlIEtpbmcgUmVzdG9yZWQ7V2FhYWdoIEhlbG0gb2YgQmlnICpVbjtBcm1ndWFyZHMgb2YgQmlnICpVbjtSYXp6aWxzIE1pZGFzIEtudWNrbGVzIFByZW07WWQ5519bmcgQWxjaGVtaXN0KnMgS25vdDtGcm9zdHJlYWNoIEJyaWdhbmRzIEF4ZXM7THljb3NpZGFlKnMgQnJvb2Q7UGVyY2VwdGl2ZSBTcGlkZXJsaW5nO1N0ZWVsd2ViIENvdW50ZW5hbmNlO0xlZ3Mgb2YgdGhlIEFieXNtO1NtZWV2aWxzIFBlbmFuY2UgU3R5bGUgMTtDcnlzdGFsIE1haWRlbiBBbm5vdW5jZXI7TGluZWFnZSBIZWxtIG9mIEJyb2tlbiBTY2FsZTtCZWx0IG9mIHRoZSBEcmFnb24qcyBEaXNjaXBsZTtCcmFjZXJzIG9mIHRoZSBTdXJ2aXZvcjtBcm1vciBvZiB0aGUgRm9yZ290dGVuIFBsYW5lO1Nob3VsZGVycyBvZiB0aGUgU3Vydml2b3I7R29sZGVuIEJhc2hlciBvZiBNYWdlIFNrdWxscztHb2xkZW4gT2ZmaGFuZCBCYXNoZXIgb2YgTWFnZSBTa3VsbHM7SWNlIEJ1cnN0IEJyYWNlcnM7QmxhY2sgSWNlIENvbnN0ZWxsYXRpb24gLSBDbG9haztEZWF0aEJsb3Nzb20gRHJvdyBSYW5nZXIgSGVhZDtJY2UgQnVyc3QgR3JlYXZlcztRdWl2ZXIgb2YgdGhlIFdpbmdlZCBCb2x0O1Nob3VsZGVycyBvZiB0aGUgQmxhY2sgV2luZCBSYXZlbjtCbGFjayBJY2UgQ29uc3RlbGxhdGlvbiAtIFdlYXBvbjtIZWFydGxlc3MgSHVudCAtIE9mZi1IYW5kO1RvbmZhIG9mIHRoZSBHaWFudCBIdW50ZXI7TWFyayBvZiB0aGUgRmlyc3QgSHVudDtIYXQgb2YgdGhlIEh1bnRlcjtIZWFydGxlc3MgSHVudCAtIEJhY2s7UGxhdGUgb2YgdGhlIEdpYW50IEh1bnRlcjtCZWx0IG9mIEVtcGlyaWMgSW5jZW5kaWFyeTtIYXQgb2YgRW1waXJpYyBJbmNlbmRpYXJ5O1RvcmNoO0dsaWRlciBvZiB0aGUgTWFyYXVkaW5nIFB5cm87QmFyYmFyb3VzIEJsYWRlcyBCYWNrO0JhcmJhcm91cyBCbGFkZXMgTWFzaztCZWFzdCBvZiB0aGUgQ3JpbXNvbiBSaW5nIEFybW9yO1N1cmx5IEJvZ3N0b21wZXIgRmlzaGNsdWI7RmxhaWwgb2YgdGhlIEJ1cm5pbmcgTmlnaHRtYXJlO0Z1cnkgb2YgQm91bmRsZXNzIERhcmtuZXNzIEhlYWQ7VmlyaWR1cyBDbGF3O0JlbHQgb2YgdGhlIEVtZXJhbGQgQWdlO0Nyb3duIG9mIE5lenp1cmVlbTtWaXJpZHVzIFNwaW5lO01hY2Ugb2YgQWVvbnM7U2xlZXZlcyBvZiB0aGUgSWNlYm91bmQgRmxvcmV0O0xpbmVhZ2UgVGFpbHMgb2YgdGhlIFR1bmRyYSBXYXJkZW47VGlhcmEgb2YgdGhlIENyeXN0YWxsaW5lIFF1ZWVuO1l1bHNhcmlhKnMgTWFudGxlO1NoYXJkcyBvZiB0aGUgQ3J5c3RhbGxpbmUgQ29tZXQ7TW9vbmxpZ2h0IEZhaXJ5IEhlYWQ7VHJpY2tzIG9mIHRoZSBTYWNjaGFyaW5lIFNhYm90ZXVyO1RoZSBEdXNrYmxvb20gVHJpY2tzdGVyIE9mZi1IYW5kO1dpbmdzIG9mIHRoZSBGYWVzaGFkZSBGbG93ZXI7RGFyayBXaWxsb3cgSXJvbiBUaG9ybiBBcm1vcjtOb3J0aGVybiBCbGlnaHQgQXJtcztEYXJrIEFydGlzdHJ5IENhcGU7Q292ZW5hbnQgb2YgdGhlIERlcHRocyBCZWx0O01hc2sgb2YgdGhlIERpdmluZSBTb3Jyb3c7RGFyayBBcnRpc3RyeSBQYXVsZHJvbnM7VmFsZW50aW5lIFdhcmQ7QnJhY2VycyBvZiBPZG9jb2VsZXVzO1Zlc3RtZW50cyBvZiB0aGUgRXhpbGVkIFJvbmluO1NpZ2lsIE1hc2sgb2YgdGhlIEJsYWRla2VlcGVyO0xlZ3Mgb2YgT2RvY29lbGV1cztCbGFja2VuZWQgRWRnZSBvZiB0aGUgQmxhZGVrZWVwZXI7R29kKnMgTWVyY3k7QXJlbmEgQ2hhbXBpb24gU3BlYXI7QXJlbmEgQ2hhbXBpb24gQXJtb3I7QXJlbmEgQ2hhbXBpb24gQmVsdDtTdGFmZiBvZiBHdW4tWXU7UHJpbmNlc3Mgb2YgdGhlIENvcmFsIFNlYSBBcm1vcjtKZXdlbHMgb2YgdGhlIFBhcnRpc2FuIEd1YXJkO1ByaW5jZXNzIG9mIHRoZSBDb3JhbCBTZWEgTGVncztPZmYtSGFuZCBCbGFkZSBvZiB0aGUgUGFydGlzYW4gR3VhcmQ7TmFnaW5hdGEgb2YgdGhlIEFsbHVyZTtBc3Nhc3NpbmF0aW9uIG9mIERhcmsgRmVhdGhlciBCYWNrO0Fzc2Fzc2luYXRpb24gb2YgRGFyayBGZWF0aGVyIEJlbHQ7QXNzYXNzaW5hdGlvbiBvZiBEYXJrIEZlYXRoZXIgSGVhZDtBcm1vciBvZiBDcnVlbCBSZXByaXNhbDtEcmFnb250ZXJyb3IgU3dvcmQ7QXJtcyBvZiBEZXNvbGF0aW9uO0Zyb3N0bW9vdCBUcmVlO0NvbnNwaWN1b3VzIEN1bHByaXQgQXJtb3I7Q29uc3BpY3VvdXMgQ3VscHJpdCBNb2hhd2s7bW9oYXdrIHNob3VsZGVyO1dlYXBvbnMgb2YgdGhlIFNhdmFnZSBNb25nZXI7SGFuZCBvZiBIZWxsKnMgQW1iYXNzYWRvcjtJbmZlcm5hbCBXaW5ncztNdWxjdGFudCBQYWxsO0ZpbiBLaW5nKnMgQ2hhcm07U2hvY2sgb2YgdGhlIEFudmlsO0h1bWJsZSBEcmlmdGVyIE9hcjtDb21wbGV0ZSBXaW5ncyBvZiB0aGUgRXRoZXJlYWwgTW9uYXJjaDtIb29rYmxhZGUgb2YgU2thZGk7TXVoIEtlZW4gR3VuO01lcmFudGggRHJhZ29vbiBTaGllbGQ7SGFsbG93ZWQgRmxhbWUgQmVsdDtIZWxtIG9mIHRoZSBTdG9ybXdyb3VnaHQgQXJiaXRlcjtQYXVsZHJvbiBvZiB0aGUgU3Rvcm13cm91Z2h0IEFyYml0ZXI7SW5kb21pdGFibGUgTGVnYWN5IC0gV2VhcG9uO0RlYXRoIEJlYXJpbmcgV2luZ3MgSGVhZDtDb250cm9scyBvZiB0aGUgRm9ydGlmaWVkIEZhYnJpY2F0b3I7QmxhY2tzaGllbGQgUHJvdG9kcm9uZSBIZWxtO0JsYWNrc2hpZWxkIFByb3RvZHJvbmUgTWlzc2lsZSBMYXVuY2hlcjtCbGFja3NoaWVsZCBQcm90b2Ryb25lIEFybW9yO0JsYWNrc2hpZWxkIFByb3RvZHJvbmUgU3RpbmdlcjtCbGFja3NoaWVsZCBQcm90b2Ryb25lIExhc2VyO0FybXMgb2YgdGhlIEZyb3N0c2hhcmQgQXNjZW5kYW50O1RpZG9zYXVydXMgVGFpbDtSZWNsdXNlIFJlZWYgRGVuaXplbjtXZWFwb24gb2YgdGhlIEZyb3N0c2hhcmQgQXNjZW5kYW50O01hbGVmaWMgRHJha2VzIEhvb2Qgb2YgdGhlIENyaW1zb24gV2l0bmVzcztCYXJkaW5nIG9mIHRoZSBTaWVnZS1EcmFrZTtEaW1lbnNpb24gUmlwcGVyIEFybXM7VmVzcG9pZCBTdGFsa2VyIEJhY2s7VmVzcG9pZCBTdGFsa2VyIEhlYWQ7RW1iZXIgVGlwcGVkIFN0cmlkZXJzO0F1cm9yYSpzIFB5cmUgQmFjaztDcm93biBvZiB0aGUgQXJjdGljIFJlY2x1c2U7QnJvb2Rtb3RoZXIgQW5pbWUgVm9pY2U7UGVkZXN0YWwgQmxhZGVmb3JtIExlZ2FjeTtBbnRpcG9kZSBDb3VyaWVyIChBbmdlbCBvbmx5KTtUaGUgR2lmdHMgb2YgWmh1emhvdTtDcnlzdGFsIFNjYXZlbmdlcjtWaXNpb25zIG9mIHRoZSBGb3JzYWtlbiBGbGFtZTtSaXB0aWRlIFJhaWRlciBWIDIuMDtUaGUgUGxhZ3VlbW9uZ2VyO1JhaW1lbnRzIG9mIFR3aWxpZ2h0IFNoYWRlO1RveGljIERlYXRoIEVhdGVyO1N0b3JtIERyYWdvbiBQb3RlbnRlO01vbHRlbiBEZXN0cnVjdG9yO0Zlcm9jaWQ5519cyBIZWFydDtDb3JydXB0aW9uIG9mIHRoZSBWaXJ1bGVudCBLcmFpdDtCaW5kaW5ncyBvZiB0aGUgQmF0dGxlcmFuZ2VyO1NhbWFyZWVuIFNhY3JpZmljZTtBcm1hbWVudHMgb2YgTGV2aWF0aGFuIFNldDtEdXNrbGlnaHQgTWFyYXVkZXIgViAyLjE7RW5ndWxmaW5nIFNwaWtlIFYgMi4xO0RpcmVzdG9uZSBCaW5kaW5ncyBTZXQ7TWVtb3JpZXMgb2YgdGhlIFZvdyBFdGVybmFsO0hhcnNoIFNvam91cm47QWxsdXJpbmcgTWVzbWVyO0RlZXAgU2VhIFNjb3VuZHJlbDtFeGFjdCBNYXJrc21hbjtJcm9uYmFyZGUgQ2hhcmdlcjtVbmZldHRlcmVkIE1hbGV2b2xlbmNlO1JpdHVhbCBvZiB0aGUgTG95YWwgRm9sZDtTbW9reSBEcmVhbWVyO1dheWZhcmluZyBTY2hvbGFyIFNldDsgMTIzfHx8