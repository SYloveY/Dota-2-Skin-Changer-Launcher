bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogQzk4OUU3NzEtNDdDRS00MTQ3LUIyMzMtQUFBNDY1QzJEQzExIDExMXx8fCAyMjI6OiA5YjU2MzA5OTljMDI3NjU4MDc1YjQ3NzgwOTQ5MmExMTZmMmI3OWE2MmJlNTkzMjljOTAxOTg0OGMxNGI5MDU5YWZmMDliOTUxMjgyOGQ3MDk3MThjYjg2NzlmYjVlYTMzM2I0YTE0NTdkZmE3Y2FhNTU5YzkwNGU4ZDQ1ZGY4YiAyMjJ8fHwgMTIzOjogRG90YSAyIENoYW5nZXIgRWRpdGlvbiBIdW50ZXJzIEhvYXJkIG9mIHRoZSBDcmltc29uIFdpdG5lc3M7VGluZXMgb2YgVHliYXJhO0hvb2R3aW5rIEdsZWlwbmlyO1JhZGlhbnQgQ29ucXVlcm9yIEJhY2s7UmFkaWFudCBDb25xdWVyb3IgU2hvdWxkZXI7SGVsbC1TcGFyIEFuYXRoZW1hO0hvcm5zIG9mIHRoZSBCZXRyYXllcjtBcm1vciBvZiB0aGUgRmVhcmZ1bCBBcmlhIFByZW07Q29kaWNpbCBvZiB0aGUgVmVpbGVkIE9uZXM7VGVtcGVzdCBSZXZlbGF0aW9uO1RlbXBlc3QgSGVsbSBvZiB0aGUgVGh1bmRlcmdvZCArIFJpZ2h0ZWQ5519cyBUaHVuZGVyYm9sdDtGZWFzdCBvZiBBYnNjZXNzaW9uO1RoZSBCYXJyZW4gQ3Jvd247SGlkZGVuIFZlY3RvciAtIEFybW9yO0hpZGRlbiBWZWN0b3IgLSBCZWx0O0hpZGRlbiBWZWN0b3IgLSBIYXQ7SGlkZGVuIFZlY3RvciAtIEJsYWRlO0p1Z2dlcm5hdXQgQXJjYW5hIEJsYWRlZm9ybSBMZWdhY3k7VGVycmFpbiAtIEF1dHVtbjtBZ2hhbmltcyBJbnRlcmRpbWVuc2lvbmFsIEJhYnkgUm9zaGFuO0JsYWNrIE1vbm9saXRoIEhVRDtXZWF0aGVyIEJsdWUgU2t5IGZyb20gU291cCBmb3IgU2x1dHM7REFDIDIwMTUgTWlyYW5hIEN1cnNvciBQYWNrO1RJLTEwIEJsaW5rIGx2bCAyIEVmZmVjdDtBbnRpTWFnZSBGZW1hbGU7Q2xpbmt6IE1lZ2FQYWNrO1BsYW5ldGZhbGwgYW5kIEp1ZGdlbWVudCBvZiB0aGUgRmFsbGVuIGFuZCBCcmFjZXJzIG9mIHRoZSBDYXZlcm4gTHVtaW5hciBBUkNBTkEgTWVnYVBhY2s7RW5pZ21hIE1lZ2FQYWNrO0t1bmtrYSBJbW1vcnRhbHMgTWVnYVBhY2s7TGVnaW9uIENvbW1hbmRlciBNb2RNYWtlciBNZWdhUGFjaztNaXJhbmEgVEkxMCBDb2xsZWN0b3JzIENhY2hlIE1lZ2FQYWNrO01hbmlmb2xkIFBhcmFkb3ggR290aGljIEh1bnRlcjtTdG9ybSBTcGlyaXQgTWVnYVBhY2s7V2luZHJhbmdlciBBcmNhbmEgc3R5bGUgMSAoQmx1ZSBCaXJkKSArIEZ1bGwgV1IgaW1tb3J0YWw7QmxhY2sgU2FpbHMgQ29ubm9uZWVyO1NpbGVuY2VyIFRJMTAgQ29sbGVjdG9ycyBDYWNoZSBNZWdhUGFjaztTRiBBcmNhbmEgTWVnYXBhY2s7U2VyYXBoIENlbGVzdGlhbCBTZXQ7U2xhcmsgTWVnYVBhY2sgTmV3O0ljZSBQaG9lbml4IFByZW1pdW0gRWRpdGlvbjtGcm96ZW4gVm9pZDtCYWxhbmNlIG9mIHRoZSBCbGFkZWtlZXBlcjsgMTIzfHx8