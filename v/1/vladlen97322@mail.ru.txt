limitHWID:: 1 000||| 111::  111||| 222:: 9205ea2dedce44c1e779c4fe390fccb6d09af6a8de77cd40572ee6f74ddc4926e337b299e83ef335e7ef4f3bc3f9eaf70c70baf040e4bc7d425b1f908d320535 222||| 123:: Pumpkin Trees UP;Edge of the Lost Order;Image of Seaborne Reprisal;Inverse Bayonet;Winds of Conquest Pauldrons;Sylvan Cascade Prem;Style of the Wild Wind;Phantom Advent UP;Phantom Advent Shoulders UP;Soul Diffuser V 2.1;Broodmother Anime Voice;Crystal Maiden Anime Voice;Death Prophet Anime Voice;Drow Ranger Anime Voice;Lina Anime Voice;Enchantress Anime Voice;Medusa Anime Voice;Luna Anime Voice;Naga Siren Anime Voice;Phantom Assassin Anime Voice;Puck Anime Voice;Queen of Pain Anime Voice;Spectre Anime Voice;Templar Assassin Anime Voice;Windrunner Anime Voice;Vengeful Spirit Anime Voice;Belt of the Gleaming Seal;Bloodfeather Wings;Eminence of Ristul Knife Attack;Royal Decree Knife Attack;Wings of the Obsidian Nightmare;DotaCinema - Queen of Pain Spells;Souls Tyrant Head;Golden Full-Bore Bonanza;Epitaphic Trap;Cape of the Rising Gale;Sylvan Cascade;Bow of the Battleranger;Cuirass of the Stonemarch Sovereign;Dreadknight Gauntlet;Cape of Grim Destiny;Blood Shard;Platinum Baby Roshan;Jin and Yin Fox Spirits Only Black;Amaterasu;Dread Retribution - Bracers Alt;Dread Retribution - Bracers;Juggernaut Arcana Bladeform Legacy;Juggernaut Arcana Red Bladeform Origins;Fate of Hydrophiinae;Blades of Prismatic Grace;Codicil of the Veiled Ones;Avowance of the Veiled Ones;Manifold Paradox PA Arcana Style 3;Manifold Paradox PA Arcana Style 2;Manifold Paradox PA Arcana Style 1;Royal Decree Whip Attack;Wings of Searing Pain;Arcana SF Demon Eather;Hidden Vector - Armor;Hidden Vector - Belt;Hidden Vector - Hat;Hidden Vector - Blade;Constellation Weapon;Constellation Armor;Windranger Arcana style 2;Windranger Yellow Immortal Bird;Susano Os Descendant;Cinder Sensei;Robes of the Heretic V 2.1;Death Necrolight V 3.2;Bindings of the Battleranger Light Style;Pixel Windrunner;Bounty Hunter Maniac Set;Vengeance of the Sunwarrior;Sanguine Royalty;Monstrous Reprisal;Eternal Harvest;Lightbringer SF;Clandestine Trail;Shadows of the Wuxia;Plunder of the Savage Monger;Hakurei Reimu for Troll Warlord by Patchouli Knowledge;Prinz Eugen for Viper by Patchouli Knowledge;Bindings of the Battleranger Chaotic Style;Bindings of the Battleranger;Itsuka Kotori for WK by Patchouli Knowledge;Lady Sylvanas for Drow - Mania Mask with effect;Legion Commander ModMaker MegaPack;Soup for Sluts Akamanah Arcana;Balance of the Bladekeeper;Kunkka Immortals MegaPack;Medusa MegaPack NEW;Skadi Medusa V 2.0;Izayoi Miku for Naga Siren by Patchouli Knowledge;Manifold Paradox Gothic Hunter;Province of the Psion Inquisitor;Windranger Arcana style 1 + WR immortal;Windranger Arcana style 2 + WR immortal;Windranger Arcana style 2 (Orange Bird) and Full WR immortal;Artemis Red Style;Windranger Arcana style 1 (Blue Bird) + Full WR immortal;Flowersong Tempest; 123|||