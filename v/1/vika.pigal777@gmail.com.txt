bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogIDExMXx8fCAyMjI6OiAkMnkkMTAkWWpneE5HSTBPRFJoT0RrMlltTTNOLnE3NVBIVC9qSkVOMEFSVDFRU01ta0M2dDFhRllVMmkgMjIyfHx8IDEyMzo6IEhvbGlkYXkgUmFkaWFudCBUb3dlcjtTbWVldmlscyBQZW5hbmNlIFN0eWxlIDE7RGFyayBBcnRpc3RyeSBDYXBlO0hhaXIgb2YgdGhlIERhcmsgTWFnaWM7Q292ZW5hbnQgb2YgdGhlIERlcHRocyBCZWx0O01hc2sgb2YgdGhlIERpdmluZSBTb3Jyb3cgViAzLjE7SGVhdmVuLVBpZXJjaW5nIFBhdWxkcm9ucztJbmZlcm51cztCbGFja3NoaWVsZCBQcm90b2Ryb25lIEhlbG07QmxhY2tzaGllbGQgUHJvdG9kcm9uZSBBcm1vcjtCbGFja3NoaWVsZCBQcm90b2Ryb25lIExhc2VyO0JsYWNrc2hpZWxkIFByb3RvZHJvbmUgTWlzc2lsZSBMYXVuY2hlcjtCbGFja3NoaWVsZCBQcm90b2Ryb25lIFN0aW5nZXI7Q29tcGxldGUgR2FyYiBvZiB0aGUgQ29ycmlkYW4gTWFlc3RybztUaGUgTGlnaHRuaW5nIE9yY2hpZCBWIDMuMjtUaS05IFJvc2hhbjtXZWF0aGVyIFNub3c7Uml2ZXIgVmlhbCBTbGltZTtTaW5pc3RlcmxpZ2h0bmluZyBsb2FkaW5nc2NyZWVuO0xhdmUtR29sZGVuIERvb21saW5nO01hZ3VzIEFjY29yZDtTb3VsIG9mIHRoZSBTbGF5ZXIgUHJlbTtHb2xkZW4gV3lybXdyb3VnaHQgRmxhcmUgUHJlbTtEaXNjaXBsZSBvZiB0aGUgV3lybXdyb3VnaHQgRmxhbWU7VG9tbyprYW4gSW5jYXJuYXRlIFRhaWw7VG9tbyprYW4gSW5jYXJuYXRlIEFybW9yO09yaWdpbnMgb2YgRmFpdGggUHJlbTtIYWlyIG9mIHRoZSBTdXJ2aXZvcjtEcmVhZCBSZXRyaWJ1dGlvbiAtIEhlYWR3ZWFyO1RvbW8qa2FuIEluY2FybmF0ZSBIb29kO1RvbW8qa2FuIEluY2FybmF0ZSBBcmJhbGVzdDtNYW5pZm9sZCBQYXJhZG94IFBBIEFyY2FuYSBTdHlsZSAzO0xlZ2FjeSBvZiB0aGUgRmFsbGVuIExlZ2lvbiBDaGFvdGljO0JhbmVmdWwgRGV2b3Rpb247UmFkaWFudCBDb25xdWVyb3IgV2VhcG9uO1JhZGlhbnQgQ29ucXVlcm9yIFNob3VsZGVyO0hlbGwtU3BhciBBbmF0aGVtYSBPYnNpZGlhbiBCbGlnaHQ7RmluIEtpbmdzIENoYXJtIG9mIEVtaW5lbnQgUmV2aXZhbDtIb3JucyBvZiB0aGUgQmV0cmF5ZXI7QmxhZGUgb2YgdGhlIEZyYWN0dXJlZCBPcmRlcjtQaXRtb3VzZSBGcmF0ZXJuaXR5IEdvZ2dsZXM7Q29sb3NzYWwgQ3J5c3RhbCBDaG9ydXMgUHJlbTtQaXRtb3VzZSBGcmF0ZXJuaXR5IFBhdWxkcm9uO1BpdG1vdXNlIEZyYXRlcm5pdHkgQnJhY2VyO1BpdG1vdXNlIEZyYXRlcm5pdHkgVGFpbDtHcmVhdCBTYWdlcyBSZWNrb25pbmcgS2luZypzIENydWNpYmxlO1N0YWZmIG9mIEd1bi1ZdSBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzO1BhdWxkcm9ucyBvZiB0aGUgRGVtb24gVHJpY2tzdGVyO0FybW9yIG9mIHRoZSBEZW1vbiBUcmlja3N0ZXIgUmVkO0FzdHJhbCBEcmlmdDtHb2xkZW4gU2hhcmRzIG9mIEV4aWxlIFByZW07QXBleCBvZiBNZWFzdXJlbGVzcyBSdWluO0RhcHBlciBEaXNndWlzZSBIYXQ7RmVhc3Qgb2YgQWJzY2Vzc2lvbjtGZWFzdCBvZiBBYnNjZXNzaW9uIEhvb2sgQnVuZGxlO0dvbGRlbiBTY2F2ZW5naW5nIEd1dHRsZXNsdWc7RW1pbmVuY2Ugb2YgUmlzdHVsIEtuaWZlIEF0dGFjaztCbG9vZGZlYXRoZXIgRmVhc3Q7QXJjYW5hIFNGIERlbW9uIEVhdGhlcjtQYXVsZHJvbnMgb2YgRXRlcm5hbCBIYXJ2ZXN0IFByZW07QXJtcyBvZiBEZXNvbGF0aW9uIFByZW07SGVhZGRyZXNzIG9mIHRoZSBMb3lhbCBGb2xkO01hbnRsZSBvZiB0aGUgV2hpc3BlcmVkIEJvbmQ7QXJtb3Igb2YgdGhlIExveWFsIEZvbGQ7SGlkZGVuIFZlY3RvciAtIEJlbHQ7SGlkZGVuIFZlY3RvciAtIEFybW9yO0hpZGRlbiBWZWN0b3IgLSBIYXQ7SGlkZGVuIFZlY3RvciAtIEJsYWRlO0JvbmtlcnMgb2YgQXdhbGViO01hc3F1ZSBvZiBBd2FsZWI7R29sZGVuIEF3YWxlYnMgVHJ1bmRsZXdlZWQ7Qmxpc3RlcmluZyBTaGFkZSBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzO0NyaW1zb24gVW5icm9rZW4gRmVhbHR5O0ltbW9ydGFsIFBhbnRoZW9uO1RlbXBlc3QgUmV2ZWxhdGlvbjtGb2NhbCBSZXNvbmFuY2UgViAzLjA7QXJjYW5hIENyeXN0YWwgTWFpZGVuIEZyb3N0IEF2YWxhbmNoZTtHb2xkZW4gSWNlIEJsb3Nzb207WXVsc2FyaWFzIE1hbnRsZSBQcmVtO0JyYWNlcnMgb2YgQWVvbnM7TWFjZSBvZiBBZW9ucyBQcmVtO0pld2VsIG9mIEFlb25zO09yYiBvZiBEZWxpdmVyYW5jZTtDb25jb3JkIFJldmVyc2lvbiBVUDtNYW5lIG9mIHRoZSBTdW53YXJyaW9yIFVQO0NvbmNvcmQgRG9taW5pb247UGhhbnRvbSBDb25jb3JkIFByZW07VGlueSBGcm9zdG1vb3Q7U21hbGwgRnJvc3Rtb290O01lZGl1bSBGcm9zdG1vb3Q7TGFyZ2UgRnJvc3Rtb290O0Zyb3N0bW9vdCBGcm9zdGl2dXMgVHJlZTtCbG9zc29tIG9mIHRoZSBNZXJyeSBXYW5kZXJlcjtNZXJyeSBXYW5kZXJlcipzIEJydXNoO0Nyb3duIG9mIHRoZSBBZ2VsZXNzIEZhZTtDcnVjaWJsZSBvZiBSaWxlO01hbnRsZSBvZiB0aGUgQ2luZGVyIEJhcm9uIFN0eWxlIDE7QXhlIEJsYWNrdGhvcm4gQXJtb3I7UmFuZG9tIEVtYmxlbTtUaGUgSW50ZXJuYXRpb25hbCAyMDIwIE11c2ljIFBhY2s7VGVycmFpbiAtIFNhbmN0dW1zIG9mIHRoZSBEaXZpbmU7RGlyZSBOZW1lc3RpY2UgQ3JlZXBzO1JhZGlhbnQgTmVtZXN0aWNlIENyZWVwcztUaGUgSW50ZXJuYXRpb25hbCAyMDE1IEN1cnNvciBQYWNrO0RyZWFkIFJldHJpYnV0aW9uIC0gQnJhY2VycztEcmVhZCBSZXRyaWJ1dGlvbiAtIENhcGU7RHJlYWQgUmV0cmlidXRpb24gLSBMZWcgQXJtb3I7RHJlYWQgUmV0cmlidXRpb24gLSBRdWl2ZXI7RHJlYWQgUmV0cmlidXRpb24gLSBTaG91bGRlciBBcm1vcjtEcmVhZCBSZXRyaWJ1dGlvbjtBcmNhbmEgRHJlYWQgUmV0cmlidXRpb247TWF3IG9mIEV6dHpob2s7U25pcGVyIEltbW9ydGFsIFdlYXBvbiBvZiB0aGUgQXJkYWxhbiBJbnRlcmRpY3RvcjtIZWxtIG9mIHRoZSBBcmRhbGFuIEludGVyZGljdG9yO1BhY2sgb2YgdGhlIEFyZGFsYW4gSW50ZXJkaWN0b3I7Q3JpbXNvbiBIZWFydHMgb2YgTWlzcnVsZTtUaGUgU3VuYnJlZXplIEJpcnRocmlnaHQ7RHJlc3Mgb2YgdGhlIEZhZXNoYWRlIEZsb3dlcjtHb2xkZW4gVHdpbGlnaHQgU2NoaXNtO0hlbG0gb2YgdGhlIERhcmsgTW9vbiBTdGFsa2VyO0x1Y2VudHlyIFByZW07TW9vbmZhbGwgUHJlbTtXaW5ncyBvZiBEYXlicmVhaztQcm9taW5lbmNlO0ZvcnR1bmVzIFRvdXQgUHJlbTtKdWdnZXJuYXV0IEFyY2FuYSBSZWQgQmxhZGVmb3JtIE9yaWdpbnM7UHJvdm9jYXRpb24gb2YgUnVpbiBNYXNrO0NyaW1zb24gRWRnZSBvZiB0aGUgTG9zdCBPcmRlcjtCZWx0IG9mIHRoZSBCbGFkZWZvcm0gQWVzdGhldGU7SXJlIG9mIHRoZSBBbmNpZW50IEdhb2xlciBCYWNrO1dyYWl0aGJpbmRlcjtPZmYtSGFuZCBXZWFwb24gb2YgdGhlIEJsb29kZm9yZ2U7VGluZXMgb2YgVHliYXJhO0h1bnRlcnMgSG9hcmQ7TWFyayBvZiB0aGUgRmlyc3QgSHVudCBIYXJ2ZXN0ZWQ7QXBvZ2VlIG9mIHRoZSBHdWFyZGlhbiBGbGFtZTtSYXBpZXJzIG9mIHRoZSBCdXJuaW5nIEdvZCBWIDMuMTtDaW5kZXIgU2Vuc2VpIFN0eWxlO0dvbGRlbiBNYW5kYXRlIG9mIHRoZSBTdG9ybWJvcm47R29sZGVuIEN5cnJpZGFlIFByZW07U2tpdHRlcmluZyBEZXNvbGF0aW9uIFByZW07Q3JpbXNvbiBQaXF1ZSBQcmVtO0N1bHQgb2YgQWt0b2s7QWt0b2sqcyBFbWlzc2FyaWVzO0FrdG9rKnMgQXJtb3I7V2F0Y2hlciBvZiB0aGUgVmlydWxlbnQgS3JhaXQ7UGxhbmV0ZmFsbDtKdWRnZW1lbnQgb2YgdGhlIEZhbGxlbjtDaGFvcyBGdWxjcnVtO1RhbG9ucyBvZiB0aGUgRW5kbGVzcyBTdG9ybSBNb3VudCBHcmVlbiBTdHlsZTtUYWxvbnMgb2YgdGhlIEVuZGxlc3MgU3Rvcm0gU2hvdWxkZXI7VGFsb25zIG9mIHRoZSBFbmRsZXNzIFN0b3JtIFdlYXBvbjtUYWxvbnMgb2YgdGhlIEVuZGxlc3MgU3Rvcm0gSGVhZDtHb2RzIE1lcmN5IG9mIHRoZSBDcmltc29uIFdpdG5lc3M7Q3JpbXNvbiBQcm9nZW5pdG9ycyBCYW5lO0phZGUgUmVja29uaW5nIFByZW07QmVuZXZvbGVudCBDb21wYW5pb24gUHJlbTtSZWZsZWN0aW9ucyBTaGFkZSBDb2xvciBmb3IgVEI7R2xhcmUgb2YgdGhlIFR5cmFudDtCZWx0IG9mIFZpbGUgQ29udm9jYXRpb247Q2hhaW5zIG9mIFZpbGUgQ29udm9jYXRpb247Q29sbGFyIG9mIHRoZSBNYWQgTXV0aW5lZXI7RnVjayBEZW55O0RlY2xhcmF0aW9uIG9mIHRoZSBEaXZpbmUgTGlnaHQgUmFkaWFudCBUb3dlcnM7RGVjbGFyYXRpb24gb2YgdGhlIERpdmluZSBTaGFkb3cgRGlyZSBUb3dlcnM7RGFya2NsYXcgRW1pc3NhcnkgU3RhZmY7Tm90aGxpYyBCdXJkZW4gb2YgdGhlIENyaW1zb24gV2l0bmVzcztDcmltc29uIEdhdGVzIG9mIE5vdGhsO1NldmVyaW5nIExhc2ggUHJlbTtTZXZlcmluZyBDcmVzdCBQcmVtO0NoZXN0cGxhdGUgb2YgdGhlIEd1YXJkaWFuIENvbnN0cnVjdCBIYXJ2ZXN0ZWQ7U2tpcnQgb2YgdGhlIEd1YXJkaWFuIENvbnN0cnVjdCBIYXJ2ZXN0ZWQ7UGhhbnRvbSBBZHZlbnQgVVA7UGhhbnRvbSBBZHZlbnQgU2hvdWxkZXJzIFVQO1BoYW50b20gQWR2ZW50IEJlbHQgVVA7UGhhbnRvbSBBZHZlbnQgV2VhcG9uIFVQO0RhbWFyYWthbiBNdXp6bGUgb2YgdGhlIENyaW1zb24gV2l0bmVzcztHbGFpdmUgb2YgT3NjaWxsYTtBc3BlY3Qgb2YgT3NjaWxsYTtCdWNrbGVyIG9mIHRoZSBFbWJlciBEZW1vbnM7VGhlIFNwb2lscyBvZiBEZXp1bjtHb2xkZW4gRHJhY2EgTWF3O01vbmFyY2ggb2YgdGhlIFNhcHBoaXJlIEdsZW47U2lnbnMgb2YgdGhlIEFsbGZhdGhlciAtIEhlYWQ7TWFudGxlIG9mIHRoZSBUcnVlYmFyayBBZGhlcmVudDtTdWZmZXJ3b29kIFNhcGxpbmc7QW50aW1hZ2UgU2hpbm9iaTtTaWVnZSBvZiB0aGUgQXJjdGljIEhhbGw7V2luZHJhbmdlciBBcmNhbmEgc3R5bGUgMSAoQmx1ZSBCaXJkKSArIEZ1bGwgV1IgaW1tb3J0YWw7V3JhaXRoIEtpbmcgQXJjYW5hIE1lZ2FQYWNrO1JpZ2h0ZWQ5519cyBUaHVuZGVyYm9sdCBhbmQgQXJjYW5hIE1lZ2FQYWNrO1Vyc2EgSW1tb3J0YWxzIE1lZ2FQYWNrO01lZHVzYSBNZWdhUGFjayBORVc7QmluZGluZ3Mgb2YgdGhlIEdhbHZhbml6ZWQgU3Bhcms7VmlwZXIgTWVnYVBhY2s7UnViaWNrIEFyY2FuYSB3aXRoIEltbW9ydGFsO1NsYXJrIE1lZ2FQYWNrIE5ldztPZ3JlIE1hZ2kgSW1tb3J0YWxzIEFyY2FuYSBNZWdhUGFjaztHb2xkZW4gRGFyayBNYXcgSW5oaWJpdG8gYW5kIEdvbGRlbiBQcm9mYW5lIFVuaW9uIGFuZCBHb2xkZW4gRHJlYWQgUmVxdWlzaXRpb24gTGlmZXN0ZWFsZXIgSW1tb3J0YWxzIE1lZ2FwYWNrO1R1cnF1b2lzZSBHaWFudCBHdWFyZDtKYWtpcm8gTWVnYVBhY2s7U3Bpcml0IEJyZWFrZXIgTWVnYVBhY2s7IDEyM3x8fA==