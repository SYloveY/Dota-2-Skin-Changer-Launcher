bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogREYzMTQ4MjUtRUU1NS01RDQ1LUJEQjEtMUJGQUY3OTlGN0QzIDExMXx8fCAyMjI6OiBhMmMzOWQxYWFhZmU0OGQ4YTA4ZGZjMTBjMTM1MjFjNzljNjcxZTliYTcxODNhNmNlMTdlYmI0OTUxMWVkNjVhNTU3MjE5NjFlNDkzMTlkZDY2MDE3NjE3NGE4ZGQ4MzE4NmJhMmMwMWFjYWUxNjgyNmViMDNlYjRjZDgzODZkZiAyMjJ8fHwgMTIzOjogZHJpdmVfZGlyOjpMZWdhY3kgb2YgdGhlIEVsZHd1cm0gQ3Jlc3Q7ZHJpdmVfZGlyOjpUaGUgSmFkZSBHZW5lcmFsO2RyaXZlX2Rpcjo6RmlyZXMgb2YgdGhlIFZvbGNhbmljIEd1YXJkO2RyaXZlX2Rpcjo6R2VvZGVzaWMgRWlkb2xvbjtkcml2ZV9kaXI6OlRoZSBUZW50YWN1bGFyIFRpbWVsb3JkIFNldCBWIDIuMTtkcml2ZV9kaXI6OkVuZ3VsZmluZyBTcGlrZSBWIDIuMTtkcml2ZV9kaXI6OlRoZSBGcmFjdHVyZWQgT3JkZXIgViAzLjA7ZHJpdmVfZGlyOjpMaWdodCBvZiBFbGVhbm9yIFNldDtkcml2ZV9kaXI6OkNvYXQgb2YgdGhlIFdpbmR3YXJkIFJvZ3VlO2RyaXZlX2Rpcjo6TWFzayBvZiB0aGUgQ29uZmlkYW50O2RyaXZlX2Rpcjo6UmFwaWVyIG9mIHRoZSBXaW5kd2FyZCBSb2d1ZTtkcml2ZV9kaXI6OlZlbmdlYW5jZSBvZiB0aGUgU3Vud2Fycmlvcjtkcml2ZV9kaXI6OlJlbWluaXNjZW5jZSBvZiBEcmVhbXM7ZHJpdmVfZGlyOjpTbW9rZSBCb21iIG9mIE1vbnN0cm91cyBSZXByaXNhbCBQcmVtO2RyaXZlX2Rpcjo6UnVsZXIgb2YgdGhlIEZyb3N0Yml0ZSBEdW5lcztkcml2ZV9kaXI6OkZhdm9ycyBvZiB0aGUgU2hhbWFuaWMgTGlnaHQgViAyLjA7ZHJpdmVfZGlyOjpTaG91bGRlcnMgb2YgdGhlIEZvcnRpZmllZCBGYWJyaWNhdG9yO2RyaXZlX2Rpcjo6QnJhd2xlciBvZiB0aGUgR2xhY2llciBTZWEgViAzLjA7ZHJpdmVfZGlyOjpFY2hvZXMgb2YgdGhlIEV5cmllIFYgMi4wO2RyaXZlX2Rpcjo6VW5ibGlua2luZyBFdGVybml0eTtkcml2ZV9kaXI6OkJlYXJlciBvZiB0aGUgQXJrdHVyYW4gVGFsb247ZHJpdmVfZGlyOjpUd2lsaWdodCBTY2hpc207ZHJpdmVfZGlyOjpTb3VsIERpZmZ1c2VyIFYgMi4xO2RyaXZlX2Rpcjo6VGhpcnN0IG9mIEV6dHpob2sgQnVuZGxlIFByZW07ZHJpdmVfZGlyOjpNYXJrIG9mIHRoZSBGaXJzdCBIdW50IEJlc3Rvd2VkO2RyaXZlX2Rpcjo6V3JhcHMgb2YgdGhlIFNlYXNvbmVkIFZldGVyYW4gViAyLjE7ZHJpdmVfZGlyOjpDaGFvcyBDaG9zZW4gViAzLjA7ZHJpdmVfZGlyOjpTbW9reSBEcmVhbWVyO2RyaXZlX2Rpcjo6QWxsZmF0aGVyIG9mIE5hdHVyZSBTZXQ7ZHJpdmVfZGlyOjpTaHJvb20gVGhpbmc7ZHJpdmVfZGlyOjpBcG9zdGxlIG9mIERlY2F5IFYgMi4xO2RyaXZlX2Rpcjo6RmlyZWZsaWdodCBTY2lvbjtkcml2ZV9kaXI6OlJpdHVhbCBvZiB0aGUgTG95YWwgRm9sZDtkcml2ZV9kaXI6OlB1cHBldCBTdW1tb25lcjtkcml2ZV9kaXI6OlJlcHRpbGlhbiBSZWZ1Z2UgUmFkaWFudCBDcmVlcHM7ZHJpdmVfZGlyOjpSaXZlciBWaWFsIEJsdWU7ZHJpdmVfZGlyOjpUSS0xMCBCb3R0bGUgRWZmZWN0O2RyaXZlX2Rpcjo6VEktMTAgRm9yY2UgU3RhZmYgRWZmZWN0O2RyaXZlX2Rpcjo6VEktMTAgTGV2ZWwgVXAgRWZmZWN0O2RyaXZlX2Rpcjo6VEktMTAgTWpvbGxuaXIgRWZmZWN0O2RyaXZlX2Rpcjo6VEktMTAgTWVrYXNtIEVmZmVjdDtkcml2ZV9kaXI6OlRJLTEwIFBoYXNlIEJvb3RzIEVmZmVjdDtkcml2ZV9kaXI6OlRJLTEwIFJhZGlhbmNlIEVmZmVjdDtkcml2ZV9kaXI6OlRJLTEwIFNoaXZhcyBFZmZlY3Q7ZHJpdmVfZGlyOjpUSS0xMCBUZWxlcG9ydCBsdmwgMyBFZmZlY3Q7ZHJpdmVfZGlyOjpBenVyZSBDb25zdGVsbGF0aW9uIEhVRDtkcml2ZV9kaXI6OlJvbGxlcm1hd3N0ZXIgYW5kIE1lY2hhIEJvb3RzIG9mIFRyYXZlbCBNayBJSUk7ZHJpdmVfZGlyOjpUaGUgQmFycmVuIFZlY3Rvcjtkcml2ZV9kaXI6OkNyaW1zb24gQ3lycmlkYWU7ZHJpdmVfZGlyOjpXYXJyaW9yIG9mIEFyZW5hIFNldDtkcml2ZV9kaXI6OldpY2tlZCBTcGFjZSBLbmlnaHQ7ZHJpdmVfZGlyOjpBcm1vciBvZiB0aGUgRGVtb24gVHJpY2tzdGVyO2RyaXZlX2Rpcjo6U29yY2VyZXIgb2YgdGhlIEJsYWNrIFBvb2w7ZHJpdmVfZGlyOjpBcm1zIG9mIHRoZSBCcmVhY2ggV2FyZGVuO2RyaXZlX2Rpcjo6Q29hdCBvZiB0aGUgU2NhcmxldCBSYXZlbjtkcml2ZV9kaXI6OkFybXMgb2YgdGhlIFNhbmd1aW5lIFNwZWN0cnVtO2RyaXZlX2Rpcjo6QmVsdCBvZiB0aGUgU2NhcmxldCBSYXZlbjtkcml2ZV9kaXI6OkluZmVybmFsIENoaWVmdGFpbiBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzO2RyaXZlX2Rpcjo6SWNlcGxhaW4gUmF2YWdlciBBcm1vcjtkcml2ZV9kaXI6OkljZXBsYWluIFJhdmFnZXIgU2hpZWxkO2RyaXZlX2Rpcjo6UGVudW1icmFsIENyZXN0O2RyaXZlX2Rpcjo6VHJhaWwgb2YgdGhlIEZlYXJmdWwgQXJpYTtkcml2ZV9kaXI6OlNvbGFyIEd5cmU7ZHJpdmVfZGlyOjpIZWFkIG9mIHRoZSBJY2V3cmFjayBNYXJhdWRlcjtkcml2ZV9kaXI6OkFybW9yIG9mIHRoZSBJY2V3cmFjayBNYXJhdWRlcjtkcml2ZV9kaXI6OkxlZ3Mgb2YgdGhlIEZhbGxlbiBQcmluY2Vzcztkcml2ZV9kaXI6OkFybSBvZiB0aGUgRXhhY3QgTWFya3NtYW47ZHJpdmVfZGlyOjpIZWxtIG9mIHRoZSBSZWVmIEt5dGUgUmlkZXI7ZHJpdmVfZGlyOjpXaW5nYmVsdCBvZiB0aGUgV2lsZHdpbmcqcyBCbGVzc2luZztkcml2ZV9kaXI6OldoaXAgb2YgdGhlIEZvcmxvcm4gTWF6ZTtkcml2ZV9kaXI6OkJlbHQgb2YgdGhlIEZvcmxvcm4gTWF6ZTtkcml2ZV9kaXI6OkFybXMgb2YgdGhlIEZvcmxvcm4gTWF6ZTtkcml2ZV9kaXI6OkFybW9yIG9mIHRoZSBGb3Jsb3JuIE1hemU7ZHJpdmVfZGlyOjpGcm9zdGdsYWRlIEZhbWlsaWFyIExlZ3M7ZHJpdmVfZGlyOjpCb21idHJhaWxzIGFuZCBCb29tc3RpY2tzIFNwbGVlbjtkcml2ZV9kaXI6OkJvbWJ0cmFpbHMgYW5kIEJvb21zdGlja3MgQ2FydDtkcml2ZV9kaXI6OkJvbWJ0cmFpbHMgYW5kIEJvb21zdGlja3MgU3Bvb247ZHJpdmVfZGlyOjpCb21idHJhaWxzIGFuZCBCb29tc3RpY2tzIFNxdWVlO2RyaXZlX2Rpcjo6TmlnaHQgVGVycm9ycyBIYXQ7ZHJpdmVfZGlyOjpOaWdodCBUZXJyb3JzIEJlbHQ7ZHJpdmVfZGlyOjpQdW1wa2luIFNwbGl0dGVyIFNlYXQ7ZHJpdmVfZGlyOjpQdW1wa2luIFNwbGl0dGVyIEFybW9yO2RyaXZlX2Rpcjo6QXJtb3Igb2YgRW5kbGVzcyBEYXlzO2RyaXZlX2Rpcjo6R29sZGVuIFJhYmlkIFdhdGNoY29nO2RyaXZlX2Rpcjo6RWRnZSBvZiBFeHRpbmN0aW9uIEhlbG07ZHJpdmVfZGlyOjpHb2QqcyBNZXJjeTtkcml2ZV9kaXI6OkV5ZSBvZiB0aGUgRmF0ZXdlYXZlciBPcmI7ZHJpdmVfZGlyOjpFeWUgb2YgdGhlIEZhdGV3ZWF2ZXIgSG9vZDtkcml2ZV9kaXI6OkV5ZSBvZiB0aGUgRmF0ZXdlYXZlciBBcm1vcjtkcml2ZV9kaXI6OkZ1cnkgb2YgdGhlIERhbW5lZCBCcnVzaDtkcml2ZV9kaXI6OkZ1cnkgb2YgdGhlIERhbW5lZCBCZWx0O2RyaXZlX2Rpcjo6RnVyeSBvZiB0aGUgRGFtbmVkIEFybW9yO2RyaXZlX2Rpcjo6S2VlcGVyIG9mIE9sb3hpY2FtKnMgR2xhc3MgSGVhZDtkcml2ZV9kaXI6OktlZXBlciBvZiBPbG94aWNhbSpzIEdsYXNzIEhvdXJnbGFzcztkcml2ZV9kaXI6OktlZXBlciBvZiBPbG94aWNhbSpzIEdsYXNzIFBhdWxkcm9ucztkcml2ZV9kaXI6OktlZXBlciBvZiBPbG94aWNhbSpzIEdsYXNzIEJlbHQ7ZHJpdmVfZGlyOjpGbGlnaHQgb2YgdGhlIFVuZHlpbmcgTGlnaHQ7ZHJpdmVfZGlyOjpTaGFkb3cgaW4gdGhlIERlZXAgQmFjaztkcml2ZV9kaXI6Ok5pZ2h0IFRlcnJvcnMgTWQ5519bnQ7ZHJpdmVfZGlyOjpBcmNhbmUgSW5mZXN0YXRpb24gSGVhZDtkcml2ZV9kaXI6OkFyY2FuZSBJbmZlc3RhdGlvbiBMZWdzO2RyaXZlX2Rpcjo6U3Rvcm0gUmlkZXIqcyBEZWZsZWN0b3I7ZHJpdmVfZGlyOjpZdWxzYXJpYXMgTWFudGxlIFByZW07ZHJpdmVfZGlyOjpZdWxzYXJpYSpzIEdsYWNpZXIgUHJlbTtkcml2ZV9kaXI6OldpbmdzIG9mIHRoZSBGYWVzaGFkZSBGbG93ZXI7ZHJpdmVfZGlyOjpEcmVzcyBvZiBGb3JiaWRkZW4gTWVkaWNpbmU7ZHJpdmVfZGlyOjpCZWx0IG9mIHRoZSBCcmlnaHRzaHJvdWQ7ZHJpdmVfZGlyOjpCcmFjZXJzIG9mIHRoZSBHcmVhdCBEZWx1Z2U7ZHJpdmVfZGlyOjpQYXdzIG9mIHRoZSBTaGFkb3djYXQ7ZHJpdmVfZGlyOjpNYW5pYXMgTWFzayBQcmVtO2RyaXZlX2Rpcjo6RnJvc3RnbGFkZSBGYW1pbGlhciBBcm1vcjtkcml2ZV9kaXI6OkJhbmdsZXMgb2YgdGhlIFdpbGR3aW5nKnMgQmxlc3Npbmc7ZHJpdmVfZGlyOjpBcmFjZWFlKnMgVHJpYnV0ZSBOZWNrbGFjZTtkcml2ZV9kaXI6OlZpcmlkdXMgQ2xhdztkcml2ZV9kaXI6OkdpcmRwaWVjZSBvZiB0aGUgQWNvbHl0ZSBvZiBDbGFzejtkcml2ZV9kaXI6OkFybW9yIG9mIHRoZSBXaW5nZWQgU2VudGluZWw7ZHJpdmVfZGlyOjpGb3JtIG9mIHRoZSBHcmV5IEdob3N0O2RyaXZlX2Rpcjo6Q29tcGFuaW9uIG9mIHRoZSBHcmV5IEdob3N0O2RyaXZlX2Rpcjo6QXhpYSBvZiBNZXRpcmE7ZHJpdmVfZGlyOjpEcmVzcyBvZiB0aGUgQWxsdXJlO2RyaXZlX2Rpcjo6Q29tcGxldGUgV2luZ3Mgb2YgdGhlIEV0aGVyZWFsIE1vbmFyY2g7ZHJpdmVfZGlyOjpIdW5nZXIgb2YgdGhlIEhvd2xpbmcgV2lsZHMgQXJtcztkcml2ZV9kaXI6Okh1bmdlciBvZiB0aGUgSG93bGluZyBXaWxkcyBPZmYtSGFuZCBXZWFwb247ZHJpdmVfZGlyOjpFeWUgb2YgdGhlIFdlYXRoZXJlZCBTdG9ybSBTaWdpbDtkcml2ZV9kaXI6OlNjb3JjaGluZyBUYWxvbiBQcmVtO2RyaXZlX2Rpcjo6VGhlIExlZWNoIFF1ZWVuIEhlYWQ7ZHJpdmVfZGlyOjpUaGUgTGVlY2ggUXVlZW4gTGVncztkcml2ZV9kaXI6OkljZSBCbG9zc29tO2RyaXZlX2Rpcjo6QnJhY2VycyBvZiB0aGUgU3BpdGVmdWwgRGppbm47ZHJpdmVfZGlyOjpCZWhvbGRlbiBvZiB0aGUgQmFuaXNoZWQgT25lcyAtIEJhY2s7ZHJpdmVfZGlyOjpCZWx0IG9mIHRoZSBTcGl0ZWZ1bCBEamlubjtkcml2ZV9kaXI6OlBhdWxkcm9ucyBvZiB0aGUgR2F0ZWtlZXBlcjtkcml2ZV9kaXI6OlNwaXR0ZXJzIG9mIHRoZSBWaXJ1bGVudCBLcmFpdDtkcml2ZV9kaXI6OkJlbHQgb2YgRGVwcmF2ZWQgTWFsZm9ybWF0aW9uO2RyaXZlX2Rpcjo6VGFpbCBvZiB0aGUgU3R5Z2lhbiBNYXc7ZHJpdmVfZGlyOjpCbGFkZSBvZiBUZWFycyBhbmQgQ3Jvd24gb2YgVGVhcnM7ZHJpdmVfZGlyOjpTYW11cmFpIG9mIFdpbmQgViAzLjA7ZHJpdmVfZGlyOjpHcmVhdCBTYWdlKnMgUmVja29uaW5nO2RyaXZlX2Rpcjo6QXJtcyBvZiBEZXNvbGF0aW9uIFByZW07ZHJpdmVfZGlyOjpMaWdodGJyaW5nZXIgU0Y7ZHJpdmVfZGlyOjpQaW5rIEFsY2hlbWlzdDtkcml2ZV9kaXI6OkFudGktTWFnZSBVbHRpbWF0ZSBSZWQgRHJhZ29uO2RyaXZlX2Rpcjo6R3J5cGhvbiBSaWRlciBTZXQ7ZHJpdmVfZGlyOjpQcm92aW5jZSBvZiB0aGUgSHVudCBFdGVybmFsO2RyaXZlX2Rpcjo6U291bCBvZiBTdGVhbTtkcml2ZV9kaXI6OlNoZXJtYW4gTWFpZGVuIFYgNC4xO2RyaXZlX2Rpcjo6SGVhdmVubHkgU3dvcmQgRG9vbSBWIDMuMDtkcml2ZV9kaXI6OkJpdHRlcndpbmcgTGVnYWN5O2RyaXZlX2Rpcjo6QmluZGluZ3Mgb2YgRGVlcCBNYWdtYTtkcml2ZV9kaXI6Okhhcm5lc3Mgb2YgdGhlIEZpc3N1cmVkIFNvdWw7ZHJpdmVfZGlyOjpDaW5kZXIgU2Vuc2VpO2RyaXZlX2Rpcjo6TWVjaGFsb2RvbiBJbnRlcmRpY3Rvcjtkcml2ZV9kaXI6Ok1pc2dpdmluZ3Mgb2YgdGhlIEVtZXJhbGQgQWdlO2RyaXZlX2Rpcjo6R2hvc3QgSnVkZ2VyO2RyaXZlX2Rpcjo6VGhlIER1c2tibG9vbSBUcmlja3N0ZXI7ZHJpdmVfZGlyOjpGYXRlIE1lcmlkaWFuO2RyaXZlX2Rpcjo6RXhwbG9zaXZlIE1hbmlhYztkcml2ZV9kaXI6OkRpdmluZSBBbmNob3IgU3R5bGUgMjtkcml2ZV9kaXI6Okt1bmtrYSpzIFNoYWRvdyBCbGFkZTtkcml2ZV9kaXI6OkR1c2tsaWdodCBNYXJhdWRlciBWIDIuMTtkcml2ZV9kaXI6OkVydXB0aW5nIFdyYXRoIFYgMi4wO2RyaXZlX2Rpcjo6RXllIG9mIHRoZSBCZWhvbGRlcjtkcml2ZV9kaXI6OkRhdWdodGVycyBvZiBIeWRyb3BoaWluYWU7ZHJpdmVfZGlyOjpUYWxlcyBvZiB0aGUgR3JleSBXYXN0ZXM7ZHJpdmVfZGlyOjpXYXJkZW4gZm9yIFBoYW50b20gQXNzYXNzaW4gKyBXQyAzIFNvdW5kIFYgMi4wO2RyaXZlX2Rpcjo6R29sZGVuIFNsYXJrIFYgMi4wO2RyaXZlX2Rpcjo6U291bCBMaWxpdGg7ZHJpdmVfZGlyOjpHZW5pZSBTcGlyaXQ7ZHJpdmVfZGlyOjpGb3VsZmVsbCBDb3JydXB0b3I7ZHJpdmVfZGlyOjpQaW5rIENvbG9yIGZvciBUQjtkcml2ZV9kaXI6Ok1hamVzdHkgT2YgVGhlIENvbG9zc3VzIC0gUGViYmxlO2RyaXZlX2Rpcjo6U21hbGwgQmFkIFRvIFRoZSBCb25lO2RyaXZlX2Rpcjo6TWVkaXVtIEFudGhvem9hIEdpYW50O2RyaXZlX2Rpcjo6TGFyZ2UgQmFkIFRvIFRoZSBCb25lO2RyaXZlX2Rpcjo6UGx1bmRlciBvZiB0aGUgU2F2YWdlIE1vbmdlcjtkcml2ZV9kaXI6Okh1bnRlciBvZiB0aGUgQ3J5c3RhbCBEcmlmdDtkcml2ZV9kaXI6OkNvcnJ1cHRpb24gb2YgdGhlIFZpcnVsZW50IEtyYWl0O2RyaXZlX2Rpcjo6TWFsZWZpYyBEcmFrZXMgSG9vZCBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzO2RyaXZlX2Rpcjo6U3Vua2VuIFNuYXBwZXIgV2luZ3M7ZHJpdmVfZGlyOjpNYWxlZmljIERyYWtlcyBTdHJpa2Ugb25seSBFZmZlY3Q7ZHJpdmVfZGlyOjpCaW5kaW5ncyBvZiB0aGUgQmF0dGxlcmFuZ2VyIExpZ2h0IFN0eWxlO2RyaXZlX2Rpcjo6R3JpbSBEZXN0aW55O2RyaXZlX2Rpcjo6UmlnaHRlb3VzIFRodW5kZXJib2x0IGFuZCBBcmNhbmEgTWVnYVBhY2s7ZHJpdmVfZGlyOjpFbXBlcm9yIE9mIFRoZSBDbGVyZ3k7ZHJpdmVfZGlyOjpUZW1wZXN0IEhlbG0gb2YgdGhlIFRodW5kZXJnb2Q7ZHJpdmVfZGlyOjpXZWF0aGVyIFNpcm9jY287ZHJpdmVfZGlyOjpDdXN0b20gRGFzaGJvYXJkIDI7ZHJpdmVfZGlyOjpCb3cgb2YgdGhlIEZyb3N0ZmFuZ3MgViAyLjA7IDEyM3x8fA==