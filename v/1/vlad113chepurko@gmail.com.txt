limitHWID:: 1 000||| 111:: 774D60A0-B83F-11DC-9A1F-D850E6E5A298 111||| 222:: $2y$10$MDJjZWE0OTg0NmI3NDVjNeAxf5G39GT3lEPTpem.M7pA5yjBsXh8W 222||| 123:: Bracers of Sinister Lightning;Aegis and Roshan St. Valentine Day;TI-8 LVL UP Effect;TI-10 Mjollnir Effect;Guardians of the Lost Path Dire Towers;Helm of the Arctic Hall;Dark Artistry Cape;Dark Artistry Belt;Mask of the Divine Sorrow;Dark Artistry Pauldrons;Belt of the Lifted Veil;Dress of the Bewitching Flare;Touch of the Bewitching Flare;Headress of the Divine Flame;Epaulettes of the Scorching Princess;Shield of the Burning Nightmare;Pauldrons of the Burning Nightmare;Gilded Falcon Wings;Flowersong Thorns;Cape of the Rising Gale;Cunning Cultivations Mask;Feathered Mantle of the Arkturan Talon;Great Sage*s Reckoning;Staff of Gun-Yu;Magus Apex;Trainer Dragon;Dread of the Gleaming Seal Set;Cavernite Dire Creeps;Guardians of the Lost Path Radiant Towers;ColorStats;Spirit of Anger V 2.1;Form of the Dark Wood;HEY TEITOKU Annoncer Mega-Kill;25 lvl ping;Bloodfeather Feast;Bloodfeather Wings Prem;Golden Moonfall Prem;Twilight Schism;Helm of the Winged Sentinel;Lucentyr;Dusklight Pauldrons;Bronzemonster of the Wailing Inferno;The Golden Barb of Skadi;Fishy Frillhawk;Golden Hydrakan Latch;Golden Full-Bore Bonanza;Spottin Goggles;Solar Forge;Nova of Golden Nirvana;Kitestar Splendor Wings;Spirit of the Long Night;Golden Pale Mausoleum;Tolling Shadows;Serpent of Shamanic Light;TI-4 effect Dagon;Euls Scepter TI-6 Effect;Pedestal Planetfall Celestial Summons;Rise Kujikawa Announcer (Jap);Radiance TI-6 Effect;Curse of the Highborn;Hunger of the Howling Wilds Off-Hand Weapon;Cape of Monstrous Reprisal;Smoke Bomb of Monstrous Reprisal Prem;Manias Mask Prem;Monarch Bow V 2.0;Mask of the Winged Bolt;DotaCinema - Queen of Pain Spells;Mace of Vincere Atack Effect;Focal Resonance V 3.0;Image of Seaborne Reprisal;Leviathan Whale Blade of Eminent Revival;Commodore*s Sash;Gloves of the Brine Lords;Grand Boots of the Witch Hunter Templar;The Crow*s Nest;Infernal Chieftain of the Crimson Witness;Watcher of the Virulent Krait;Mine Radius 702;Eminence of Ristul Deny 2;Mekanism TI-6 Effect;TI-8 Shivas Effect;Legacy of the Fallen Legion;Arena Champion Armor;Arena Champion Belt;Savage Mettle;Iron Surge V 2.2;Pauldrons of the Elemental Imperator;Gust of the Surging Wind;Helm of the Fallen Princess;Wings of the Fallen Princess;Legs of the Fallen Princess;Scree*auk*s Talon;Gauntlets of the Nightwatch;Beast of the Crimson Ring Armor;Emerald Frenzy Flail;Acolyte of Vengeance Hooded Mask;Golden Basher of Mage Skulls;Offhand Basher of Mage Skulls;Mace of the Chosen Prem;Hood of the Everblack;Helm of the Mistral Fiend;Fractal Horns of Inner Abysm UP;Bracelet of the Hellrunner;Belt of the Elemental Imperator;Beast of the Outer Plane Shoulder;Beast of the Outer Plane Tail;Dreaded Bravo*s Scarf;Skirt of the Fluttering Amethyst;Headpiece of the Wuxia;Rapiers of the Burning God V 3.1;Cinder Sensei Style;Armguards of the Smoldering Sage;Belt of the Forsaken Flame;Pauldrons of the Volcanic Guard;Blade of Tears and Crown of Tears;Flashpoint Proselyte - Head;Hunter*s Dawn Bracer;Blade of Reckless Vigor;Shield of the Samareen Sacrifice;Golden Grasping Bludgeon effect;Plate of the Centurion Vanguard;Kotl Illuminate Ram;Cape of the Brinebred Cavalier;Pauldrons of the Mistral Fiend;Phantom*s Reaper;Heavenly Guardian Bracers;Lion Drape of the Moon Rider;Crown of the Wintermoon;Crescent Quiver;Dawn of the Moon Pauldrons;Divine Grace;Arms of the First Ways;Garb of the First Ways;Shoulder of the First Ways;Eidelon of Twisted Maelstrom;Golden Shards of Exile;Mandate of the Nameless - Crown;Mandate of the Nameless - Armor;Wings of the Inauspicious Abyss;Sylvan Cascade;Lamp of the Spiteful Djinn;Hood of the Spiteful Djinn;Bracers of the Spiteful Djinn;Belt of the Spiteful Djinn;Grand Mantle of the Archivist;Demon of the Dark Curator;Turban of the Penitent Nomad;Wings of Obelis Arms;Hammer of the Mechanised Pilgrim;Eye of the Progenitor*s Gaze;Wings of Obelis Shoulders;Crimson Cyrridae;Hands of Inerrant Eminence;Face of Inerrant Eminence;Ember Tipped Striders;Slashing Quickslicer;Off-Hand Blade of the Partisan Guard;The Leech Queen Head;Scales of the Iceborn Trinity;Armor of the Deep;Robes of the Captive Princess;Whispers of the Damned Wings;Whispers of the Damned Head;Eternal Bracers of the Daemon Prince;Tassets of Impending Transgressions;Tail of Incandescent Liturgy;Chaos Arbiter;Convalescing Empress Tail;Twin Serpent Bow V 3.0;Bracers of Forsaken Beauty;Helm of the Beholder;Convalescing Empress Armor;Armor of the Emerald Sea;Piston Impaler;Blastforge Exhaler;Shield of the Wrathrunner;Tail of the Frostbite Dunes;Claws of the Frostbite Dunes;Arms of Desolation Prem;Souls Tyrant Head;Golden Scavenging Guttleslug;Grand Abscession Hook Bundle;Direcourt Jester Cap;Ol* Chopper*s Chains;Reef Roshan;Acid Hydra Cursor Pack;TI-4 effect Bottle;Planetfall Blink;TI-8 Fource Staff Effect;TI-9 Teleport lvl 2 Effect;Brightskye Refresher Orb;Quiver of Falconside Armor;Rainmaker V 4.0;Rubick Curse - Exocirsm;Staff of Perplex Prem;Ornithomancer Mantle;Pauldrons of the Rambling Fatebender;Mantle of Diviner*s Embrace;Sunken Snapper Wings;Bracers of the Winged Bolt;Ice Burst Greaves;Shadows of Ravensmane Quiver;Shoulders of the Black Wind Raven;Cluster of Chronoptic Synthesis;Horns of the Spirethorn;Force of Kylin Tail;DotaCinema Bright HUD;Reptilian Refuge Radiant Creeps;TI-10 Level Up Effect;Nomad*s Shelter;Bracers of the Survivor;Acolyte of Vengeance Belt;Shoulders of the Survivor;Divinations of the Nothl Haze Headdress;Nothlic Burden;Golden Gravelmaw;Bracers of the Cavern Luminar;Belt of the Red Mountain;Frozen Void Arms;Frozen Void Belt;Frozen Void Head;Frozen Void Shoulder;Mace of Aeons;Mark of the First Hunt Bestowed;Cape of the Hunter*s Glory;Skull of the First Hunt;Dark Tracer;Helm of the Burning Nightmare;Discordia;Muh Keen Gun;God*s Mercy;Rose of the Corridan Maestro;Complete Garb of the Corridan Maestro;Mask of a Thousand Faces;Vestments of the Exiled Ronin;Edge of the Lost Order;Helm of the Primeval Predator;Thirst of Eztzhok Bundle Prem;Gauntlets of the Weeping Beast;Shield of the Primeval Predator;Gallows Understudy Skirt;Armor of Zhuzhou;Spear of the Arctic Hall;Bracers of the Battlefield;Fury of the Damned Brush;Fury of the Damned Mask;Armor of the Ink Dragon;Wrap of the Urushin Huntsman;Heat;Kit of the Hunt Eternal;Weather Moonbeam;Terrain - Winter;The Lightning Orchid of Eminent Revival;Axia of Metira;Gilded Edge V 2.0;Shark Cowl;Shark Fin Cape;Bound Shark Flippers;Complete Gauntlets of Sacred Light;Plate of the Stalwart Soul;Pauldrons of the Grey Gallant;Winged Paladin*s Helm;Omnivus;Hush of Eternal Night;Fluttering Staff V 2.0;Aether-Wings;Mischievous Fruits;Tail of Reminiscence;Golden Sullen Hollow V 3.2;Guards of the Psion Inquisitor;Epitaphic Bonds Shoulders;Fluttering Amethyst Trap + Icon;Jaw of Kaktos;Wise Cap of the First Light;Mount of the Skyfire Apostate;Datastar Progenitor (Alter Arcana);Kindred of the Iron Dragon V 3.0;Eternal Bracers of the Chaos Chosen;Spine of Omexe;Eternal Belt of the Chaos Chosen;Armor of the Chaos Chosen;Eternal Axe of the Chaos Chosen;Provocation of Ruin Bracers;Battle Banner of the Masked;Provocation of Ruin Belt;Valentine Ward;Crate of the Spelunker;Riftshadow Roamer*s Fine n* Fancy;Skull of the Bone Ruins;Whirling Talons Dagger;Hunger of the Howling Wilds Arms;Hat of the Cunning Corsair;Bracer of the Tahlin Watch;Shade of Anguish;Chain of Enduring Torment;Ice Blossom;Yulsarias Mantle Prem;Yulsaria*s Glacier Prem;Blackshield Protodrone Missile Launcher;Blackshield Protodrone Helm;Blackshield Protodrone Stinger;Rectifier;Timberthaw Armor;Seat of the Trailblazer;Top Hat of the Steam Chopper;Timberthaw Shoulders;Saw of the Trailblazer;Edge of Extinction Helm;Legacy of a Lost Age - Armor;Legacy of a Lost Age - Stegaboar;Legacy of a Lost Age - Axe;Darkness Wailing Legs;Frightful Revelries Wings;Tail of Unfettered Malevolence;Recluse Reef Denizen;Hunter of Kings V 2.0;Clan of the Arctic Owlbear;Space Spectre V3.0;Peacock Priest;Dirgesworn Dynasty;Gold Skymage;Unblinking Eternity;Dancer of the Spiteful Eye V 3.0;Epoch of the Abysm;Bark of the Ageless Witness Distinguished;Big Un V 3.0;Vengeance of the Sunwarrior;Charmer of Firesnake;Ferocious Toxicant;Foulfell Corruptor;Red Mist Reaper Set;Crown of The Nightworld;Abyssal Vortex;Grim Destiny;Bringer of Troubles;Ruler of the Frostbite Dunes;Magister of the Narrow Fates;Blessing of the Crested Umbra;Rising Glory V 2.1;Portent Payload;Markswomans Cap;Ancient Magus Style 1;Saccharine Saboteur;Kirin Rider Set;Eye of the Beholder;Allfather of Nature Set;The Iron Pioneer;Icewrack Marauder;Hunter of the Crystal Drift;Manipulator of Warsituation;Bitterwing Legacy;Antimage Shinobi;The Sheep Set;Rhinoceros Order;Lurkablo; 123|||