bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogIDExMXx8fCAyMjI6OiAkMnkkMTAkTkdSbE5HWTBOalE1TmpWaE5UTmlaLlJ0STNvUG56QlVIR1A3ZFl6a1p0MXJvMG1GUFFnNE8gMjIyfHx8IDEyMzo6IEF2YWRhIEtlZGF2cmE7UmVwdGlsaWFuIFJlZnVnZSBSYWRpYW50IENyZWVwcztJcm9uIEJyYW5jaCBHRztUSS03IExldmVsIFVwIEVmZmVjdDtUSS0xMCBNam9sbG5pciBFZmZlY3Q7VEktMTAgUmFkaWFuY2UgRWZmZWN0O1RJLTEwIFBoYXNlIEJvb3RzIEVmZmVjdDtQdW1wa2luIFRyZWVzIFVQO1dlYXRoZXIgU3ByaW5nO1Nob3VsZGVycyBvZiB0aGUgRHJhZ29uIFBhbGFjZTtBcm1vciBvZiB0aGUgRGVtb24gVHJpY2tzdGVyO1JlcHRpbGlhbiBSZWZ1Z2UgRGlyZSBDcmVlcHM7SW5zYXRpYWJsZSBCb25lc2F3O0dyYW5kIEFic2Nlc3Npb24gSG9vayBCdW5kbGU7R3VhcmRpYW5zIG9mIHRoZSBMb3N0IFBhdGggRGlyZSBUb3dlcnM7R3VhcmRpYW5zIG9mIHRoZSBMb3N0IFBhdGggUmFkaWFudCBUb3dlcnM7TWVkaXVtIFRhc3NlbHMgb2YgdGhlIEJsYWNrIERlYXRoO0NhbmR5IENhdCBTaG91bGRlcjtZdWxzYXJpYSpzIEdsYWNpZXIgUHJlbTtZdWxzYXJpYXMgTWFudGxlIFByZW07UHJvdm9jYXRpb24gb2YgUnVpbiBCcmFjZXJzO1Byb3ZvY2F0aW9uIG9mIFJ1aW4gQmVsdDtCZXNzeSB0aGUgQmF0bWVsZW9uO1NhY3JlZCAgZmlyZSBCZWx0O1RoaXJzdCBvZiBFenR6aG9rIEJ1bmRsZSBQcmVtO0FybXMgb2YgSGFydmVzdCpzIEhvdW5kO0JhY2sgb2YgSGFydmVzdCpzIEhvdW5kO0FnaGFuaW1zIEJhc2hlciBQcmVtO1d5cm1icmV3IENvbm5vaXNzZXVyIEFybXM7V3lybWJyZXcgQ29ubm9pc3NldXIgQmFjaztXeXJtYnJldyBDb25ub2lzc2V1ciBTaG91bGRlcjtCYW5kYW5hIG9mIHRoZSBSdW1ydW5uZXIqcyBDYXJyb25hZGU7U2VycGVudCBvZiB0aGUgSmFkZSBFbWlzc2FyeTtNYW5lIG9mIHRoZSBEZW1vbiBTdG9uZTtXYXJyaW9ycyBvZiB0aGUgRGVtb24gU3RvbmUgViAzLjE7UGxhY2thcnQgb2YgdGhlIERlbW9uIFN0b25lO1ZhbnF1aXNoaW5nIERlbW9ucyBHZW9tYWduZXRpYyBBcm0gR3VhcmQ7Q2luZGVyIFNlbnNlaSBTdHlsZTtSYXBpZXJzIG9mIHRoZSBCdXJuaW5nIEdvZCBWIDMuMTtNZW50b3Igb2YgdGhlIEhpZ2ggUGxhaW5zIEd1YXJkO0hlYWRsYW5kcyBIdW50cmVzcyBCZWx0O0JhdHRsZWZ1cnk7Rmxhc2hwb2ludCBQcm9zZWx5dGUgLSBIZWFkO01hZ3VzIEFwZXg7SW5mZXJudXM7Q2x1c3RlciBvZiBDaHJvbm9wdGljIFN5bnRoZXNpcztJcmUgb2YgdGhlIEhpbnRlcmxhbmRzIEJhY2s7Rm9yY2Ugb2YgS3lsaW4gVGFpbDtUYXNzZXRzIG9mIHRoZSBTZXJha3VuZCBUeXJhbnQ7TGVnIFRhbG9ucyBvZiBNYWRuZXNzO1dhci1CdXJyb3cgUmF2YWdlciBUcnVlIEZvcm07Q29tcGFuaW9uIG9mIHRoZSBBcmN0aWMgT3dsYmVhciBDbGFuIE9sZCBWZXJzaW9uO0ZsdXR0ZXJpbmcgU3RhZmYgViAyLjA7QmVhcmQgb2YgdGhlIFRydWViYXJrIEFkaGVyZW50O0dyYW5kIENyb3duIG9mIHRoZSBHaWdhcztJcm9ud29vZCBBcm1zIG9mIHRoZSBGdW5nYWwgTG9yZDtGbG93ZXJpbmcgVHJlYW50O1lhc2hhIHRoZSBRdWlja2JsYWRlO0JsYWRlYnJlYWtlciBCcnVzaDtTYW5nZSB0aGUgQmFja3NlZWtlcjtNYXJrIG9mIHRoZSBTdWJ0bGUgRGVtb247Q3Vyc2Ugb2YgdGhlIEhpZ2hib3JuO01hc2sgb2YgdGhlIEFyY2FuaXN0cyBHdWlzZTtUaGUgQmFycmVuIFZlY3RvcjtDZXJlbW9uaWFsIENyYXdsZXJzIG9mIFFhbGRpbjtUYWlsIG9mIHRoZSBJcm9uY2xhZCBNb2xkO01hbGljaWQ5519cyBTdGluZyBCYWNrO0FybXMgb2YgRGVzb2xhdGlvbiBQcmVtO0ZpZXJ5IFdhcmQgb2YgRWtpIEJ1a2F3O1Rob3Jud2F0Y2ggUGF1bGRyb25zO0JyYWNlcnMgb2YgdGhlIEFyZGFsYW4gSW50ZXJkaWN0b3I7Q29sYXIgb2YgdGhlIEFyZGFsYW4gSW50ZXJkaWN0b3I7UGhhbnRvbSBBZHZlbnQgVVA7UGhhbnRvbSBBZHZlbnQgV2VhcG9uIFVQO0RlYXRoIEJlYXJpbmcgV2luZ3MgSGVhZDtEZWF0aCBCZWFyaW5nIFdpbmdzIEFybW9yO0ZvY2FsIFJlc29uYW5jZSBWIDMuMDtBcm1vciBvZiB0aGUgSW1wZXJpb3VzIENvbW1hbmQ7Q29uc3BpY3VvdXMgQ3VscHJpdCBNb2hhd2s7VmVzdG1lbnRzIG9mIHRoZSBBbGFyeSBEaXZlIEJvb3RzO0hlbGxib3JuIEdyYXNwO0dyYW5kIE1hbnRsZSBvZiB0aGUgQXJjaGl2aXN0O0FybXMgb2YgdGhlIERyZWFkIENvbXBhY3Q7R3JlZXZpbCBNYXN0ZXIgQmVsdDtDcmltc29uIEN5cnJpZGFlO0VtYmVyIFRpcHBlZCBTdHJpZGVycztEZWZlbmRlciBvZiB0aGUgQnJ1bWFsIENyZXN0IC0gQmFjaztQYWRkYXBvbiBvZiBSaWJiaXRhciBWIDQuMDtSYXR0bGViaXRlO0N1bm5pbmcgQ3VsdGl2YXRpb25zIEJlbHQ7VEktMTAgQm90dGxlIEVmZmVjdDtDb2xvclN0YXRzO0Z1Y2sgRGVueTtUSS0xMCBFdWwgU2NlcHRlciBFZmZlY3Q7VEktMTAgTGV2ZWwgVXAgRWZmZWN0O1RJLTEwIE1la2FzbSBFZmZlY3Q7VEktMTAgU2hpdmFzIEVmZmVjdDtUZXJyYWluIC0gSW1tb3J0YWwgR2FyZGVucztNb25rZXkgS2luZyBNZWdhLUtpbGxzO01vbmtleSBLaW5nIEFubm91bmNlcjtFaWRlbG9uIG9mIFR3aXN0ZWQgTWFlbHN0cm9tO0tpcmluIFJpZGVyIFNldDtUaGUgQ2hhaW5lZCBTY3JpYmU7Q29udGVzdGVkIEZhdGU7TWFuaXB1bGF0b3Igb2YgV2Fyc2l0dWF0aW9uO0JpdHRlcndpbmcgTGVnYWN5O0ZvcmdvdHRlbiBSZW5lZ2FkZTtNaWdodCBvZiB0aGUgR2FsbG9waW5nIEF2ZW5nZXIgViAyLjE7Q29uc2NyaXB0IG9mIHRoZSBGcm9zdCBCcmlnYWRlO0FieXNzYWwgQ3VpcmFzczsgMTIzfHx8