limitHWID:: 1 000||| 111::  111||| 222:: $2y$10$NGRlNGY0NjQ5NjVhNTNiZ.RtI3oPnzBUHGP7dYzkZt1ro0mFPQg4O 222||| 123:: The Basher Blades;Rampant Outrage Prem;Guard of the Red Mist;Lineage Ram*s Head Blade;Yulsaria*s Mantle;Royal Winterbloom Weapon;Witch Rylai Head;Royal Winterbloom Back;Serrakura;Sigil Mask of the Bladekeeper;Pantaloons of the Bladekeeper;Prayer Beads of the Bladekeeper;Arsenal of the Bladekeeper;Crimsonwing Slayer Wings;Helm of Desolate Conquest;Mulctant Pall;Fin King*s Charm;Avada Kedavra;Lion Greedy King Arms;Great Sage*s Reckoning;Staff of Gun-Yu;Hell*s Guide;Bloodstained Britches;Dendi Doll;Scorching Talon;Reptilian Refuge Radiant Creeps;Iron Branch GG;TI-7 Level Up Effect;TI-10 Mjollnir Effect;TI-10 Radiance Effect;TI-10 Phase Boots Effect;Pumpkin Trees UP;Brightskye Gem of Truesight;Weather Spring;Terrain - Spring;Shoulders of the Dragon Palace;Armor of the Demon Trickster;Bloodlust Fork;Compendium Eviscerating Claw of the Trapper;Murder Mask;Reptilian Refuge Dire Creeps;The Witch Hunter V 2.0;Warrior of Arena Set;Kirin Rider Set;Samurai Soul V 3.0;The Hollow Set;Desolate Conquest;Blazing Cosmos;Armaments of the Night Grove V 2.1;Creeping Shadow;Countess of Ristul;Cunning Corsair;Arcane Defiance;Bestowments of the Centurion Vanguard;Exact Marksman;Elemental Imperator V 2.0;Hunter of the Crystal Drift;The Dusk Crawler Set;Haunted Lord V 3.0; 123|||