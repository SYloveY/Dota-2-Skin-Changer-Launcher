limitHWID:: 1 000||| 111:: 9E233080-FE8F-11D5-9449-C860006B081E 111||| 222:: $2y$10$MDQ1MDU1MWY3NWE5ZDM3YuYZ0zcFh/wyAnDN/.W29/yZm6RkhejUq 222||| 123:: Baby Roshan Prem;Grimwolf;Gilded Edge;Hydrakan Latch;Hookblade of Skadi;Hood of the Abyssal Arms;Shoulder of the First Ways;Arms of the First Ways;Barbarous Blades Back;Barbarous Blades Mask;Mask of the Hunt Eternal;Kit of the Hunt Eternal;Wrap of the Urushin Huntsman;Frostglade Familiar Cape;Cap of the Smoldering Sage;Cinder Sensei Off-Hand Weapon;Rapier of the Burning God Offhand;Frozen Void Arms;Mace of Aeons;Dark Artistry Cape;Northern Blight Arms;Cape of the Blackguard Magus;Healing Fount of the Lost Isles;Sinister Shadow Head;Blackened Edge of the Bladekeeper;Serrakura;Valentine Ward;Staff of Gun-Yu;Helm of Cruel Reprisal;Belt of the Gleaming Seal;Spine of the Basilisk;Helm of Tarrasque;Dragonclaw Hook;Phantom Concord;Bow of the Battleranger;Gilded Falcon Helm;Acid Hydra Cursor Pack;Kindred of the Umizar Crawler;Time Wanderer;Rose And The Beast;Warrior of Arena Set;Nomad of the Burning Decree;Dragons Ascension V 3.0;The Blazing Superiority V 3.0;Eldwurms Touch;Efrit Sultan Set;The Corruption of Nezzureem;The Baptism of Melting Fire;Trials of the Blackguard Magus No effects;The Magus Magnus Set;The Path of Odocoeleus;Desolate Conquest;Creeping Shadow;Bloodroot Guard;Dapper Disguise;Surgical Precision;Harsh Sojourn;Bindings of the Battleranger;Grim Destiny; 123|||