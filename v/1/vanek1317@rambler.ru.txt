bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogIDExMXx8fCAyMjI6OiAkMnkkMTAkTURjM1l6VXdORFkxWVdVellqa3lZdXB6ZzkwekdOdUd5eTZyMmFJTFU4dTZOd0Y1cmYyWEcgMjIyfHx8IDEyMzo6IEd1YXJkaWFucyBvZiB0aGUgTG9zdCBQYXRoIERpcmUgVG93ZXJzO0d1YXJkaWFucyBvZiB0aGUgTG9zdCBQYXRoIFJhZGlhbnQgVG93ZXJzO1J1YmljayBBcmNhbmEgRU5HIFZvaWNlO1N1aXQgb2YgdGhlIERhcmticmV3IEVuZm9yY2VyO1ByaXNvbmVycyBBbmNob3I7QXJtcyBvZiB0aGUgQm9pbGVycGxhdGUgQnJ1aXNlcjtFdGVybmFsIFJhZGlhbmNlIEJsYWRlcyBQcmVtO01vbHRlbiBDbGF3IFByZW07Q3J1Y2libGUgb2YgUmlsZTtNYW50bGUgb2YgdGhlIENpbmRlciBCYXJvbiBTdHlsZSAxO0Jsb29kIENoYXNlcjtQaXN0b24gSW1wYWxlcjtNYW5pYXMgTWFzayBQcmVtO0JvdyBvZiB0aGUgSG93bGluZyBXaW5kIFYgNC4wO0Zyb3N0Z2xhZGUgRmFtaWxpYXIgSGF0O0FybXMgb2YgWmVidWxvbjtSYXBpZXJzIG9mIHRoZSBCdXJuaW5nIEdvZCBWIDMuMTtKZXdlbCBvZiBBZW9ucyBQcmVtO0JyYWNlcnMgb2YgQWVvbnMgUHJlbTtUaW1lYnJlYWtlciBQcmVtO0dvbGRlbiBBdG9taWMgUmF5IFRocnVzdGVycyBQcmVtO0ZsYXNocG9pbnQgUHJvc2VseXRlIC0gSGVhZDtOb3J0aGVybiBCbGlnaHQgU3Bpcml0cztBcm1zIG9mIEZhdGUgTWVyaWRpYW47RGFyayBBcnRpc3RyeSBDYXBlO0RhcmsgQXJ0aXN0cnkgQmVsdDtIZWF2ZW4tUGllcmNpbmcgUGF1bGRyb25zO0VkZ2Ugb2YgdGhlIExvc3QgT3JkZXI7SW52ZXJzZSBCYXlvbmV0O0xlZ2FjeSBvZiB0aGUgRmFsbGVuIExlZ2lvbjtUb3JtZW50ZWQgU3RhZmYgZWZmZWN0O0hlbG0gb2YgdGhlIFdpbmdlZCBTZW50aW5lbDtHb2xkZW4gTW9vbmZhbGwgUHJlbTtUd2lsaWdodCBTY2hpc207TWQ5519bnQgb2YgdGhlIFJhaWRmb3JnZWQgUmlkZXI7QWJ5c3NhbCBIZWxsY2xhdztGaXJlIExvdHVzIEJlbHQ7Rm9ybSBvZiB0aGUgR3JlYXQgQ2FsYW1pdHkgViAyLjE7Q29sb3NzYWwgQ3J5c3RhbCBDaG9ydXMgZWZmZWN0O0dvbGRlbiBNYXNrIG9mIE1ldGlyYTtBeGlhIG9mIE1ldGlyYTtCbGFkZSBvZiBUZWFycyBhbmQgQ3Jvd24gb2YgVGVhcnM7Rmx1dHRlcmluZyBTdGFmZiBWIDIuMDtQbGFndWUgQmFyb24gSGF0O0dvbGRlbiBTdWxsZW4gSG9sbG93IFYgMy4yO0dvbGRlbiBTaGFyZHMgb2YgRXhpbGU7RGlmZnVzYWwgTGFuY2U7Q2FuZHkgQ2F0IEJhY2s7SW5zYXRpYWJsZSBCb25lc2F3O0dvbGRlbiBTY2F2ZW5naW5nIEd1dHRsZXNsdWc7R3JhbmQgQWJzY2Vzc2lvbiBIb29rIEJ1bmRsZTtBZXRoZXItV2luZ3M7RW1pbmVuY2Ugb2YgUmlzdHVsIEtuaWZlIEF0dGFjaztCbG9vZGZlYXRoZXIgRmVhc3Q7SHVuZ2VyIG9mIHRoZSBIb3dsaW5nIFdpbGRzIEFybXM7VGhlIEJhcnJlbiBWZWN0b3I7SHVzaCBvZiBFdGVybmFsIE5pZ2h0O0dvbGRlbiBHcmFzcGluZyBCbHVkZ2VvbiBlZmZlY3Q7UGFsZSBFZGdlIFYgMi4wO1BoYW50b20gQWR2ZW50IEJlbHQgVVA7UGhhbnRvbSBBZHZlbnQgVVA7UGhhbnRvbSBBZHZlbnQgU2hvdWxkZXJzIFVQO1BoYW50b20gQWR2ZW50IFdlYXBvbiBVUDtHb2xkZW4gRnVsbC1Cb3JlIEJvbmFuemE7Q2Fubm9uIG9mIHRoZSBPY2N1bHRpc3RzIFB1cnN1aXQ7SXJvbiBTdXJnZSBWIDIuMjtTYXZhZ2UgTWV0dGxlO1Jvc2Ugb2YgdGhlIENvcnJpZGFuIE1hZXN0cm87VGhlIExpZ2h0bmluZyBPcmNoaWQgb2YgRW1pbmVudCBSZXZpdmFsO0NvbXBsZXRlIEdhcmIgb2YgdGhlIENvcnJpZGFuIE1hZXN0cm87RnVyaWQ5519cyBSdW5lO0ZvY2FsIFJlc29uYW5jZSBWIDMuMDtTcGF1bGRlcnMgb2YgdGhlIFBzaW9uIElucXVpc2l0b3I7SGVhZHBpZWNlIG9mIHRoZSBEZWFkbHkgTmlnaHRzaGFkZTtSZWN0aWZpZXI7RGFyayBNZWFkb3cgTWFzc2FjcmUgQXJtb3I7RGFyayBNZWFkb3cgTWFzc2FjcmUgQXJtcztEYXJrIE1lYWRvdyBNYXNzYWNyZSBIZWFkO0dvbGRlbiBQYWxlIE1hdXNvbGV1bTtNYWxlZmljIERyYWtlcyBTdHJpa2Ugb25seSBFZmZlY3Q7Q3JpbXNvbiBDeXJyaWRhZTtTeWx2YW4gQ2FzY2FkZSBQcmVtO1JhaW5tYWtlciBWIDQuMDtNYXJrIG9mIHRoZSBNaXN0cmFsIEZpZW5kIFYgMi4xO0xvc3QgUmFuZ2VyO0xpbmVhZ2UgUHJvdmluY2Ugb2YgdGhlIEh1bnQgRXRlcm5hbDtBYnlzc2FsIFZvcnRleDtMb3JkIG9mIENocm9ub3B0aWMgU3ludGhlc2lzO1RyYW5zbXV0ZWQgQXJtYW1lbnRzO1dhci1CdXJyb3cgUmF2YWdlcjtCZXdpdGNoaW5nIEZsYXJlIFYgMi4wO1RyYWlsIG9mIHRoZSBHcmV5IEdob3N0O0VydXB0aW5nIFdyYXRoIFYgMi4wO01lbW9yaWVzIG9mIHRoZSBWb3cgRXRlcm5hbDtWb29kb28gTWVlcG87RGFya2ZhbGwgV2FyZGVuO0hhdm9jIG9mIERyYWdvbiBQYWxhY2UgViAyLjA7UHJpc21hdGljIEdyYWNlO1dyYXRoIG9mIEthIFYgMi4xIFN0eWxlIDI7VW5mZXR0ZXJlZCBNYWxldm9sZW5jZTtIZXJhbGQgb2YgTWVhc3VyZWxlc3MgUnVpbiBWIDIuMTtUb2xsIG9mIHRoZSBGZWFyZnVsIEFyaWE7VmVuZ2VhbmNlIG9mIHRoZSBTdW53YXJyaW9yO0pvbGx5IFJlYXZlcjtSZW1pbmlzY2VuY2Ugb2YgRHJlYW1zO0dvbGRlbiBOZXRoZXIgTG9yZHMgUmVnYWxpYSBTZXQgUHJlbTtNb25zdHJvdXMgUmVwcmlzYWw7TWFnaXN0ZXIgb2YgdGhlIE5hcnJvdyBGYXRlcztBbmNpZW50IE1hZ3VzIFN0eWxlIDI7RXRlcm5hbCBIYXJ2ZXN0O0dvbGQgU2t5bWFnZTtEYXJrIFJlZWYgRXNjYXBlIFYgMi4xO0hpbnRlcmxhbmQgU3RhbGtlcjtGb3VsZmVsbCBDb3JydXB0b3I7U3VibWVyZ2VkIEhhemFyZDtUcmVrIG9mIHRoZSBUcmFpbGJsYXplcjtQbHVuZGVyIG9mIHRoZSBTYXZhZ2UgTW9uZ2VyO0Zlcm9jaWQ5519cyBIZWFydDtFY2hvZXMgb2YgdGhlIEV5cmllIFYgMi4wO01vbG9rYXUgU3RhbGtlcjsgMTIzfHx8