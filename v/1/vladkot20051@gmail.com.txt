bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogIDExMXx8fCAyMjI6OiAkMnkkMTAkWW1NNFlUTm1aREl5TURnell6YzJOZU5KWXg1UjFGRWQxZ1ByN3phRVlyQlQzQVZNM3hhV1cgMjIyfHx8IDEyMzo6IE1hZ3VzIEFwZXg7SW5mZXJudXM7QWVnaXMgYW5kIFJvc2hhbiBTdC4gVmFsZW50aW5lIERheTtKaW4gYW5kIFlpbiBGb3ggU3Bpcml0cyBhbmQgUmVkIGVmZmVjdDtHdWFyZGlhbnMgb2YgdGhlIExvc3QgUGF0aCBEaXJlIFRvd2VycztHdWFyZGlhbnMgb2YgdGhlIExvc3QgUGF0aCBSYWRpYW50IFRvd2VycztFbWVyYWxkIFJvc2hhbjtQdW1wa2luIFRyZWVzIFVQO1RlcnJhaW4gLSBJbW1vcnRhbCBHYXJkZW5zO1JpdmVyIFZpYWwgQmx1ZTtUaGUgQmFzaGVyIEJsYWRlcztUYWlsIG9mIHRoZSBFcXVpbGlicml1bTtBcm1vciBvZiB0aGUgRXF1aWxpYnJpdW07U2hhdHRlcmJsYXN0IENyb3duO0VpZGVsb24gb2YgVHdpc3RlZCBNYWVsc3Ryb207S2FudHVzYSB0aGUgU2NyaXB0IFN3b3JkIFYgMy4xO0ZpcnN0IExpZ2h0IEFybW9yO0ZpcnN0IExpZ2h0IEFybXM7Rmlyc3QgTGlnaHQgSGVhZDtSaXBwZXJzIFJlZWw7SW5zYXRpYWJsZSBCb25lc2F3O0NvbXBsZXRlIFdpbmdzIG9mIHRoZSBFdGhlcmVhbCBNb25hcmNoO1N1bGxlbiBIb2xsb3cgViAzLjI7VGhlIEJhcmIgb2YgU2thZGk7Q2Fubm9uIG9mIHRoZSBPY2N1bHRpc3RzIFB1cnN1aXQ7UGhhbnRvbSBBZHZlbnQgQmVsdCBVUDtQaGFudG9tIEFkdmVudCBVUDtQaGFudG9tIEFkdmVudCBTaG91bGRlcnMgVVA7U291bCBEaWZmdXNlciBWIDIuMTtUaGUgTGlnaHRuaW5nIE9yY2hpZCBWIDMuMjtWaXJ0dWQ5519cyBSb2FyIFBhZHM7UGluayBDb2xvciBmb3IgVEI7QmxhY2tzaGllbGQgUHJvdG9kcm9uZSBBcm1vcjtCbGFja3NoaWVsZCBQcm90b2Ryb25lIExhc2VyO0JsYWNrc2hpZWxkIFByb3RvZHJvbmUgTWlzc2lsZSBMYXVuY2hlcjtCbGFja3NoaWVsZCBQcm90b2Ryb25lIEhlbG07U291bHMgVHlyYW50IEhlYWQ7QXJtcyBvZiBEZXNvbGF0aW9uIFByZW07UGF1bGRyb25zIG9mIEV0ZXJuYWwgSGFydmVzdDtDb3ZlbmFudCBvZiB0aGUgRGVwdGhzO0FudGltYWdlIFNoaW5vYmk7Q2luZGVyIFNlbnNlaTtFeHBvbmVudCBvZiB0aGUgRW5kbGVzcyBTdGFycztTdXNhbm8gT3MgRGVzY2VuZGFudDtTaWVnZSBvZiB0aGUgQXJjdGljIEhhbGw7RnVyeSBvZiBXYXIgR29kO055YXJ1a28gZm9yIExpb24gYnkgUGF0Y2hvdWxpIEtub3dsZWRnZTtGbG93ZXIgRmxhbWUgTGluYSBWIDMuMDtFeWUgb2YgdGhlIEJlaG9sZGVyO0NyZWVwaW5nIFNoYWRvdztUaGUgR2hhc3RseSBHb3VybWFuZDtSZW1pbmlzY2VuY2Ugb2YgRHJlYW1zO0FuY2llbnQgTWFndXMgU3R5bGUgMTtXcmF0aCBvZiBLYSBWIDIuMSBTdHlsZSAyO0RhcmsgUmVlZiBFc2NhcGUgViAyLjE7SGludGVybGFuZCBTdGFsa2VyO1Bvd2RlcnNsZWQgUm9va2VyeTtMaWdodGJyaW5nZXIgU0Y7IDEyM3x8fA==