limitHWID:: 1 000||| 111:: 03000200-0400-0500-0006-000700080009;; 111||| 222:: 554adaf725a1cc81b901a40499d26eadb89b3d8a8b8dac114f87c94f6d4a41448c5d41fa404fbd815a79f370351f7435d610f15e19c7d1d8df2ddef5ebb15cd9 222||| 123:: Ward of the Phoenix;Guardians of the Lost Path Dire Towers;Cavernite Dire Creeps;Mantle of the Cinder Baron Style 1;Alluvion Prophecy V 2.0;Sylvan Cascade Prem;Rubick Curse - Spirit Bear;Rubick Curse - Death Ward;Rubick Curse - Demonic Purge;Mine Radius 702;Rubick Arcana ENG Voice;Nothlic Burden Prem;Fluttering Staff V 2.0;Staff of Perplex effect;Lieutenant Squawkins Rowboat;Planetfall Blink;TI-5 effect regen-fountain;Winter Battle Pass 2016 Fountain Regen 3 lvl;Winter Scythe of Vyse Effect 2017;Pudge blood after hook;Wings of the Arctic Recluse;Crown of the Arctic Recluse;DotaCinema - Queen of Pain Spells;Armor of the Diabolical Fiend;Tools of the Final Utterance;Servants of Endless Stars;Reptilian Refuge Radiant Creeps;Datastar Progenitor (Alter Arcana);Guardians of the Lost Path Radiant Towers;Pumpkin Trees UP;Augury Prophet;Keen Machine;Forgotten Renegade;Sherman Maiden V 4.1;Steel King;Delights of Petaluna Pathfinder;Ancient Magus Style 2;Diviners Embrace;Surgical Precision;Hunters Glory;Delightful Affliction;Stygian Maw;Truebark Adherent;Cicatrix Regalia Black;Serpent of the Emerald Sea V 3.0;Opus of the Vizier Exile V 2.1;Fires of Vashundol no effect V 2.1;The Jade General;Samareen Sacrifice;Trail of the Sanguine Spectrum; 123|||