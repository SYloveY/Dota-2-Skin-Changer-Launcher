bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogMDMwMDAyMDAtMDQwMC0wNTAwLTAwMDYtMDAwNzAwMDgwMDA5IDExMXx8fCAyMjI6OiAkMnkkMTAkTTJFMU0ySmhNMlZpTURGbVlUSXdNT3RQN1pYSHA1OWU5QVlvS1BkaVFEZzZ5N2xHekNZREcgMjIyfHx8IDEyMzo6IFNleHkgV29tYW4gTWVnYS1LaWxsO0ppbiBhbmQgWWluIEZveCBTcGlyaXRzIGFuZCBSZWQgZWZmZWN0O1NhbXVlbCBMIEphY2tzb24gTWVnYS1LaWxsO0Z1Y2sgRGVueTtHdWFyZGlhbnMgb2YgdGhlIExvc3QgUGF0aCBEaXJlIFRvd2VycztHdWFyZGlhbnMgb2YgdGhlIExvc3QgUGF0aCBSYWRpYW50IFRvd2VycztTaGF0dGVyYmxhc3QgQ3Jvd247Q3J1Y2libGUgb2YgUmlsZTtNYW50bGUgb2YgdGhlIENpbmRlciBCYXJvbiBTdHlsZSAxO01vbHRlbiBDbGF3IFByZW07SGFydmVzdGVkIFNob3VsZGVycztOaWdodCBUZXJyb3JzIEhhdDtRdWVlbiBvZiB0aGUgSmFjayBCb21iZXI7U2hyaWVraW5nIFJhem9yYmFjaztTdG91dGhlYXJ0IEdyb3dsZXIgT3dsO1Bpc3RvbiBJbXBhbGVyO0JsYXN0Zm9yZ2UgRXhoYWxlcjtJbmZlcm5hbCBDaGllZnRhaW4gb2YgdGhlIENyaW1zb24gV2l0bmVzcztDaGFvcyBBcmJpdGVyO05vdGhsaWMgQnVyZGVuIFByZW07V2lnaHRzIGZyb20gdGhlIEdsb29tO1JhcGllcnMgb2YgdGhlIEJ1cm5pbmcgR29kIFYgMy4xO0dlb2Rlc2ljIEVpZG9sb247VGltZWJyZWFrZXIgUHJlbTtKZXdlbCBvZiBBZW9ucyBQcmVtO0JyYWNlcnMgb2YgQWVvbnMgUHJlbTtUcmFpbmVyIERyYWdvbjtQeXJleGFlYyBGbG9lO1RoZSBXYXJkIG9mIE9kb2NvZWxldXM7SW52ZXJzZSBCYXlvbmV0O011bGN0YW50IFBhbGw7QXZhZGEgS2VkYXZyYTtHb2xkZW4gTW9vbmZhbGwgUHJlbTtUd2lsaWdodCBTY2hpc207QXhpYSBvZiBNZXRpcmE7U3RhZmYgb2YgR3VuLVl1O1Nocm9vbWxpbmc7R29sZGVuIFN1bGxlbiBIb2xsb3cgViAzLjI7UGxhZ3VlIEJhcm9uIEhhdDtDcm93biBvZiBHaWxkZWQgV29yc2hpcDtOeXggQXNzYXNzaW5zIERhZ29uO0FsbHV2aW9uIFByb3BoZWN5IFYgMi4wO0dvbGRlbiBTaGFyZHMgb2YgRXhpbGU7TWFzayBvZiB0aGUgQ29uZmlkYW50O0RyZWFkIG9mIHRoZSBHbGVhbWluZyBTZWFsIFNldDtQaGFudG9tIENvbmNvcmQ7Tm92YSBvZiBHb2xkZW4gTmlydmFuYTtTb2xhciBGb3JnZTtUcmFwcGluZ3Mgb2YgR29sZGVuIE5pcnZhbmE7SW5zYXRpYWJsZSBCb25lc2F3O0NhbmR5IENhdCBCYWNrO0NhbmR5IENhdCBIZWFkO1Njb3JjaGluZyBUYWxvbiBQcmVtO0Jsb29kZmVhdGhlciBGZWFzdDtCbG9vZGZlYXRoZXIgV2luZ3MgUHJlbTtIb3JucyBvZiBNb25zdHJvdXMgUmVwcmlzYWwgUHJlbTtIdW5nZXIgb2YgdGhlIEhvd2xpbmcgV2lsZHMgT2ZmLUhhbmQgV2VhcG9uO1Ntb2tlIEJvbWIgb2YgTW9uc3Ryb3VzIFJlcHJpc2FsIFByZW07V2hpcmxpbmcgVGFsb25zIERhZ2dlcjtNdWggS2VlbiBHdW47R2lsZGVkIEVkZ2UgViAyLjA7R29sZGVuIEh5ZHJha2FuIExhdGNoO0dvbGRlbiBMYW1iIHRvIHRoZSBTbGF1Z2h0ZXI7U291bCBEaWZmdXNlciBWIDIuMTtGb2NhbCBSZXNvbmFuY2UgViAzLjA7Um9sbGVybWF3c3RlciBhbmQgTWVjaGEgQm9vdHMgb2YgVHJhdmVsIE1rIElJSTtTcGxhdHRlcmluZyBGb3JjaXB1bGU7UGxhdGluZyBvZiB0aGUgTmV0aGVyc3dhcm0gVmFuZ3VhcmQ7Rm9vdGZhbGxzIG9mIHRoZSBTcG9yZWZhdGhlcnMgLSBIZWFkO0dhcmIgb2YgdGhlIE91dGxhbmRpc2ggR291cm1ldDtQYWRkYXBvbiBvZiBSaWJiaXRhciBWIDQuMDtBcm1vciBvZiB0aGUgWWVhciBCZWFzdDtDdXJzZSBvZiB0aGUgQ3JvdyBLaW5nIEhlYWQ7Qmxvb2QgU2hhcmQ7S25pZ2h0IFN0YXR1ZTtCcm9vZG1vdGhlciBBbmltZSBWb2ljZTtXaW50ZXIgV3l2ZXJuIEFuaW1lIFZvaWNlO1B1ZGdlIEFyY2FuYSBFTkcgVm9pY2U7QmFsYW5hciBVbHQgQXJhYnNrYXlhIG5vY2g7QmFuZSAtIEdhbmdhbXN0eWxlLXNsb3c7QmFuc2hpIC0gR2hvc3RidXN0ZXJzO0JlYXN0bWFzdGVyIEZ1c3JvZGFoO0NlbnRhdXIgLSBOYXMgbmUgZG9nb25pc2g7Q2hlbiBzb3VuZHMgZnJvbSBUUkFTSEVSO0NyeSBEb29tIFVsdDtEdXN0IHVzZSBNR1M7RW5pZ21hIFZpbGF0IEJsYWNrSG9sZTtGdXJpb24gLSBGdXJpb24gcG8gZmFybXkgNGVtcGlvbjtKdWdnZXJuYXV0IC0gUm9sbGluO0thbWEgUHVseWEgZm9yIFBBIFNraWxscztLb1RMIC0gVGkgbmUgcHJvaWRlc2g7S3Vua2thIFBpcmF0ZTtMaWZlc3RlYWxlciBVbHQ7THljYW4gLSBCaWcgQmFkIFdvbGY7TWF0Y2ggUmVhZHkgLSBQb2duYWxpO05hZ2EgdWx0IFZpdGFzO1Bob2VuaXggLSBCb21ib2xlaWxvO1B1ZGdlIERhbmNlIFJvdDtRb1AgU2NyZWFtIGZyb20gVFJBU0hFUjtSdWJpY2sgLSBCaWdEYWRkeTtTbGFyayBTbm9vcCBEb2dnO1Ntb2tlIFNub29wIERvZztTdWZmZXIgQml0Y2ggU3Vuc3Jpa2U7VGlua2VyIC0gS2FwcGEgYXJteTtUdXNrIHVsdCBUb3N0aSBNSztVbHRpbWF0ZSBTa3JpbGxleCBNb2Q7Vm9pZCAtIFpvbG90aWUgQ3Vwb2xhO1dEIC0gc21hY2sgbXkgYmVhdCB1cDtXRCB1bHQgRGFnZXN0YW4tRGFnZXN0YW47V2VhdmVyIC0gRnJlZXN0eWxlcjtXaXNwIEJhZCBWb2ljZTtBeGUgV0MgMyBTb3VuZDtBcnRoYXMgV0MgMyBTb3VuZCBmb3IgQWJiYWRvbjtCb3VudHkgSHVudGVyIFdDIDMgU291bmQ7QnJld21hc3RlciBXQyAzIFNvdW5kO01hcnMgVWx0IC0gVSBHb3QgVGhhdDtXYXJsb2NrIFdDIDMgU291bmQ7QW50aS1NYWdlIFVsdGltYXRlIFJlZCBEcmFnb247UmVkIE1pc3QgUmVhcGVyIFNldDtTdHJ5Z3d5ciBCbG9vZHNlZWtlcjtCb3VudHkgSHVudGVyIE1hbmlhYyBTZXQ7QnJldyBKb3VzdGluZyBQYW5kYSBhbmQgRG9ua2V5IEtvbmc7TG9zdCBSYW5nZXI7SWNlcGxhaW4gUmF2YWdlcjtHcnlwaG9uIFJpZGVyIFNldDtUaGUgUmF0IEtpbmc7TGluZWFnZSBQcm92aW5jZSBvZiB0aGUgSHVudCBFdGVybmFsO1NvdWwgb2YgU3RlYW07U2hlcm1hbiBNYWlkZW4gViA0LjE7U2FjY2hhcmluZSBTYWJvdGV1cjtEZWxpZ2h0cyBvZiBQZXRhbHVuYSBQYXRoZmluZGVyO01pc3RyZXNzIG9mIHRoZSBMb25nIE5pZ2h0O0xpZ2h0bmluZyBIYXJiaW5nZXI7SGVhdmVubHkgU3dvcmQgRG9vbSBWIDMuMDtMZWdhY3kgb2YgdGhlIEVsZHd1cm0gQ3Jlc3QgQmxhY2s7RWxkd3VybXMgVG91Y2ggViAzLjE7QmluZGluZ3Mgb2YgRGVlcCBNYWdtYTtIYXJuZXNzIG9mIHRoZSBGaXNzdXJlZCBTb3VsO0NpbmRlciBTZW5zZWk7TWlzZ2l2aW5ncyBvZiB0aGUgRW1lcmFsZCBBZ2U7VGhlIENoYWluZWQgU2NyaWJlO0FsbGllZCBDb21tYW5kZXIgU2V0O0V4cGxvc2l2ZSBNYW5pYWM7U3RlYW1wb3dlcmVkIE1hZ2ljIFNldDtTZXJwZW50aW5lIEd1YXJkO0ZvcmdvdHRlbiBSZW5lZ2FkZTtXaXRjaCBIdW50ZXIgVGVtcGxhcjtWYWxreXJpZSBPZiBUaGUgUmVtYWlucztTcGlyZXRob3JuIFJlZ2FsaWEgViAyLjA7QXNjZW5kYW5jZSBvZiB0aGUgUmltZSBMb3JkIDFzdCBTdHlsZTtMaWZlIFN0ZWFsZXIgQ2hpbmEgTW9kZWw7QmV3aXRjaGluZyBGbGFyZSBWIDIuMDtXYXItQnVycm93IFJhdmFnZXI7RXJ1cHRpbmcgV3JhdGggViAyLjA7RnVyeSBvZiBXYXIgR29kO0V5ZSBvZiB0aGUgQmVob2xkZXI7UHJpc21hdGljIEdyYWNlO0FsbGZhdGhlciBvZiBOYXR1cmUgU2V0O0JsYWNrIE5paGlsaXR5O0FudGlwb2RlYW4gQWxsaWVzO05lYnVsYXMgV2Fsa2VyO0hlcmFsZCBvZiBNZWFzdXJlbGVzcyBSdWluIFYgMi4xO1RhbGVzIG9mIHRoZSBXaW5kd2FyZCBSb2d1ZTtWZW5nZWFuY2Ugb2YgdGhlIFN1bndhcnJpb3I7R29sZGVuIE5ldGhlciBMb3JkcyBSZWdhbGlhIFNldCBQcmVtO0dvbGRlbiBTbGFyayBWIDIuMDtFbGVtZW50YWwgUmVhbG1zIFYgMi4wO0NvcnJpZGFuIE1hZXN0cm8gViAyLjA7V2F0Y2hlciBvbiB0aGUgTm9ydGhlcm4gU2hvcmU7RnVsbCBNZXRhbCBUZWNoaWVzO1JpdHVhbCBvZiB0aGUgTG95YWwgRm9sZDtHb2xkIFNreW1hZ2U7TW9sdGVuIERlc3RydWN0b3I7VGlua2VyIFNjYXJlY3JvdyBTZXQ7VGlueSBNaXggViA0LjA7UGx1bmRlciBvZiB0aGUgU2F2YWdlIE1vbmdlcjtGcm9zdCBCcmlnYWRpZXI7QWJ5c3NhbCBDdWlyYXNzO0JsZXNzaW5nIG9mIHRoZSBDcmVzdGVkIFVtYnJhO0Zlcm9jaWQ5519cyBUb3hpY2FudDtEcmVhZCBDb21wYWN0O0JpbmRpbmdzIG9mIHRoZSBCYXR0bGVyYW5nZXIgQ2hhb3RpYyBTdHlsZTtDaGlsbGluZyBGZWF0aGVyOyAxMjN8fHw=