bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogMDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDBEODYxMzlDQzlFIDExMXx8fCAyMjI6OiAkMnkkMTAkWm1Wak1tSTVaRFJqTnpsaVpURXdZdVEwa21HZWdlQ1oxY2pXRGRmNWQzL0V5dExDd3VBaXkgMjIyfHx8IDEyMzo6IEZldHRlcnMgb2YgT21uaXNjaWVuY2U7UGxhbmV0ZmFsbDtCcmFjZXJzIG9mIHRoZSBDYXZlcm4gTHVtaW5hcjtKdWRnZW1lbnQgb2YgdGhlIEZhbGxlbiBCdXJuaW5nIERlc2NlbnQ7UmFkaWFudCBDb25xdWVyb3IgQmFjaztSYWRpYW50IENvbnF1ZXJvciBTaG91bGRlcjtMZWdpb24gQ29tbWFuZGVyIEFyY2FuYSBVUDtMZWdhY3kgb2YgdGhlIEZhbGxlbiBMZWdpb247UHJpbWFsIFBhZWFuO1ByaW1hbCBQZWFjZW1ha2VyO1NleHkgV29tYW4gTWVnYS1LaWxsO0NoYW9zIEZ1bGNydW07Q2hhb3MgQXJiaXRlcjtNYXNrIG9mIE1ldGlyYTtCb29rIG9mIHRoZSBWaXppZXIgRXhpbGUgUHJlbTtCcmFjZXJzIG9mIEZvcmxvcm4gUHJlY2lwaWNlO1BhbGUgTWF1c29sZXVtO1RoaXJzdCBvZiBFenR6aG9rIEJ1bmRsZSBQcmVtO01hdyBvZiBFenR6aG9rO1NoaWVsZCBvZiB0aGUgUHJpbWV2YWwgUHJlZGF0b3I7QmVsdCBvZiB0aGUgUHJpbWV2YWwgUHJlZGF0b3I7R2F1bnRsZXRzIG9mIHRoZSBQcmltZXZhbCBQcmVkYXRvcjtUZW1wZXN0IEhlbG0gb2YgdGhlIFRodW5kZXJnb2QgKyBSaWdodGVvdXMgVGh1bmRlcmJvbHQ7VGVtcGVzdCBSZXZlbGF0aW9uO0dyZWF0IFNhZ2VzIFJlY2tvbmluZyBJbW1vcnRhbCBQYXRoO1N0YWZmIG9mIEd1bi1ZdSBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzO0NvZGljaWwgb2YgdGhlIFZlaWxlZCBPbmVzO0F2b3dhbmNlIG9mIHRoZSBWZWlsZWQgT25lcztNYW5pZm9sZCBQYXJhZG94IFBBIEFyY2FuYSBTdHlsZSAzO01hY2Ugb2YgQWVvbnMgUHJlbTtCcmFjZXJzIG9mIEFlb25zIFByZW07UGVyY2VwdGlvbnMgb2YgdGhlIEV0ZXJuYWwgTWluZDtDbGFzenVyZW1lIEluY3Vyc2lvbiBCZWx0O0pld2VsIG9mIEFlb25zO01hbmlhcyBNYXNrIFByZW07U2hhZG93cyBvZiBSYXZlbnNtYW5lIE1hbnRsZTtSZWFwZXJzIFdyZWF0aDtHb2xkZW4gU2lsZW50IFdha2U7Q3Jvd24gb2YgdGhlIE9uZSBUcnVlIEtpbmc7Q2xvYWsgb2YgdGhlIE9uZSBUcnVlIEtpbmc7U3dvcmQgb2YgdGhlIE9uZSBUcnVlIEtpbmc7QXJtb3Igb2YgdGhlIE9uZSBUcnVlIEtpbmc7UGF1bGRyb25zIG9mIHRoZSBPbmUgVHJ1ZSBLaW5nO0JyYWNlcnMgb2YgdGhlIE9uZSBUcnVlIEtpbmc7SGVsbC1TcGFyIEFuYXRoZW1hIE9ic2lkaWFuIEJsaWdodDtIb3JucyBvZiB0aGUgQmV0cmF5ZXI7TXVsY3RhbnQgUGFsbDtTcGlyaXQgb2YgdGhlIFNhY3JlZCBHcm92ZSAtIFF1aXZlcjtCcmFjZXJzIG9mIHRoZSBXaW50ZXJtb29uO1NwaXJpdCBvZiB0aGUgU2FjcmVkIEdyb3ZlIC0gU2hvdWxkZXI7U3Bpcml0IG9mIHRoZSBTYWNyZWQgR3JvdmUgLSBCYWNrO0hpZGRlbiBWZWN0b3IgLSBBcm1vcjtIaWRkZW4gVmVjdG9yIC0gSGF0O0hpZGRlbiBWZWN0b3IgLSBCbGFkZTtIaWRkZW4gVmVjdG9yIC0gQmVsdDtBc3BlY3Qgb2YgT3NjaWxsYTtHbGFpdmUgb2YgT3NjaWxsYTtTaWxlbnQgU2xheWVyIC0gU2hvdWxkZXI7U2lsZW50IFNsYXllciAtIEJlbHQ7U2lsZW50IFNsYXllciAtIEhlYWQ7QXJjYW5hIENyeXN0YWwgTWFpZGVuIEZyb3N0IEF2YWxhbmNoZTtQaGFudG9tIEFkdmVudCBCZWx0IFVQO1BoYW50b20gQWR2ZW50IFNob3VsZGVycyBVUDtQaGFudG9tIEFkdmVudCBXZWFwb24gVVA7UGhhbnRvbSBBZHZlbnQgVVA7U291bCBEaWZmdXNlciBWIDIuMTtKdWdnZXJuYXV0IEFyY2FuYSBCbGFkZWZvcm0gTGVnYWN5O0ZvcnR1bmVzIFRvdXQgUHJlbTtKYWdnZWQgSG9ub3IgQnJhY2VyO0phZ2dlZCBIb25vciBCYW5uZXI7SmFnZ2VkIEhvbm9yIExlZ3M7Q3JpbXNvbiBFZGdlIG9mIHRoZSBMb3N0IE9yZGVyO1l1bHNhcmlhcyBNYW50bGUgUHJlbTtHb2xkZW4gSWNlIEJsb3Nzb207U2V2ZXJpbmcgTGFzaCBQcmVtO1NraXJ0IG9mIHRoZSBHdWFyZGlhbiBDb25zdHJ1Y3QgQmVzdG93ZWQ7QXBvZ2VlIG9mIHRoZSBHdWFyZGlhbiBGbGFtZTtDaW5kZXIgU2Vuc2VpIFN0eWxlO1R1bmljIG9mIHRoZSBXYW5kZXJpbmcgRmxhbWU7R290aGljIFdoaXNwZXIgQmVsdDtHb3RoaWMgV2hpc3BlciBDYXBlO0d1YXJkIG9mIHRoZSBXYW5kZXJpbmcgRmxhbWU7Q2luZGVyIFNlbnNlaSBXZWFwb247Q2luZGVyIFNlbnNlaSBPZmYgSGFuZCBXZWFwb247RW1pbmVuY2Ugb2YgUmlzdHVsIFdoaXAgQXR0YWNrO0Nyb3duIG9mIHRoZSBFbWluZW5jZSBvZiBSaXN0dWw7UmFpbWVudHMgb2YgdGhlIEVtaW5lbmNlIG9mIFJpc3R1bDtCbG9vZGZlYXRoZXIgRmVhc3Q7RGVjbGFyYXRpb24gb2YgdGhlIERpdmluZSBTaGFkb3cgRGlyZSBUb3dlcnM7RGVjbGFyYXRpb24gb2YgdGhlIERpdmluZSBMaWdodCBSYWRpYW50IFRvd2VycztUZXJyYWluIC0gRGVzZXJ0O1dlYXRoZXIgU2lyb2NjbztUaGUgSW50ZXJuYXRpb25hbCAyMDE1IEN1cnNvciBQYWNrO0dob3N0bHkgU2lsZW5jZSBIVUQ7UGVyZGl0aW9uO1JhbXBhZ2UgS25pZ2h0IEhlbG07U2hhcmRzIG9mIHRoZSBCYWxlZnVsIFJlaWduO0FybW9yIG9mIHRoZSBGb3Jsb3JuIE1hemU7QXJtcyBvZiB0aGUgRm9ybG9ybiBNYXplO0Zsb2NraGVhcnRzIEdhbWJsZSBSZXNwbGVuZGVudCBGaXJlbGFyaztHb2xkZW4gU2V2ZXJpbmcgQ3Jlc3QgUHJlbTtMeWNhbiBLaXNpbGV2IE1vZE1ha2VyIE1lZ2FQYWNrO05pZ2h0IFN0YWxrZXIgSW1tb3J0YWwgYW5kIFJlYXBlciBLaXNpbGV2IE1vZE1ha2VyIE1lZ2FQYWNrO01pcmFuYSBNZWdhUGFjaztLdW5ra2EgSW1tb3J0YWxzIE1lZ2FQYWNrO01hbmlwdWxhdG9yIG9mIFdhcnNpdHVhdGlvbjtDYXJuaXZvcm91cyBQYXJhc2l0aXNtO1JpZ2h0ZWQ5519cyBUaHVuZGVyYm9sdCBhbmQgQXJjYW5hIE1lZ2FQYWNrO1N2ZW4gSW1tb3J0YWxzIE1lZ2FQYWNrIFVQO1dpbmRyYW5nZXIgQXJjYW5hIHN0eWxlIDIgKE9yYW5nZSBCaXJkKSBhbmQgRnVsbCBXUiBpbW1vcnRhbDsgMTIzfHx8