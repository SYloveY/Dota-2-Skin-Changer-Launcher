limitHWID:: 1 000||| 111:: A7892BC7-DA53-11E7-8A95-54E1ADE9249E;; 111||| 222:: $2y$10$ODAxYTRhNjM1NDljNzZhNud4Zk.wK.tmx03YtwspcdNurBJMP5.cG 222||| 123:: Immortal Invoker Kid;Enigmatic Emblem of the Diretide - Green;Mantle of the Whispered Bond;Headdress of the Loyal Fold;Armor of the Loyal Fold;Focal Resonance V 3.0;Geodesic Eidolon;Purple Color for TB;Demon Form of the Foulfell Corruptor UP;Blades of the Foulfell Corruptor Premium;Wings of the Foulfell Corruptor Premium;Champions Blue Color for TB;Chasm of the Broken Code Armor;Origins of Faith Prem;Golden Offhand Basher of Mage Skulls;Basher of Mage Skulls;Wraithbinder;Arcana Crystal Maiden Frost Avalanche;Golden Ice Blossom;Yulsarias Mantle Prem;Book of the Vizier Exile Prem;Golden Bracers of Forlorn Precipice;Phantom Ascension Belt;Phantom Ascension;Transversant Soul of the Crimson Witness;Soul Diffuser Prem;Morphling Immortals MegaPack UP;Enigma MegaPack;AAMegaPack;Axe full Immortals Megapack alt;Viper MegaPack;Windranger Arcana style 2 (Orange Bird) and Full WR immortal;Bristleback MegaPack;Ancient Arachnarok;Earthshaker MegaPack New;Legion Commander ModMaker MegaPack;Monkey King Arcana MegaPack;Nyx Assassin MegaPack UP;Omniknight MegaPack;Slark MegaPack New;Ursa Immortals MegaPack; 123|||