bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogQTM2MjdEQTAtRkU4RC0xMUQ1LTlCRUMtNDg1QjM5OTc1RDk3IDExMXx8fCAyMjI6OiAkMnkkMTAkT0dFeFl6RTVNV0kxWWpsak9ESmpOLjd6NmU3OXZaMGptb1pNYjEvQlV1NnhOSWNJbHRWai4gMjIyfHx8IDEyMzo6IE1vbHRlbiBDbGF3IFByZW07Q3J1Y2libGUgb2YgUmlsZTtNYW50bGUgb2YgdGhlIENpbmRlciBCYXJvbiBTdHlsZSAxO1Bpc3RvbiBJbXBhbGVyO0NoYW9zIEFyYml0ZXI7Q2luZGVyIFNlbnNlaSBTdHlsZTtDaW5kZXIgU2Vuc2VpIE9mZiBIYW5kIFdlYXBvbjtDaW5kZXIgU2Vuc2VpIFdlYXBvbjtGbGFzaHBvaW50IFByb3NlbHl0ZSAtIEhlYWQ7UHlyZXhhZWMgRmxvZTtMZXZpYXRoYW4gV2hhbGUgQmxhZGUgViAzLjA7RmluIEtpbmcqcyBDaGFybTtNdWxjdGFudCBQYWxsO0dyZWF0IFNhZ2UqcyBSZWNrb25pbmc7QmxhZGUgb2YgVGVhcnMgYW5kIENyb3duIG9mIFRlYXJzO0Zsb3dlciBTdGFmZiBvZiB0aGUgUGVhY2UtQnJpbmdlcjtBdXNwaWNlIG9mIHRoZSBXaHlybGVneWdlIFByZW07RHJlYWQgb2YgdGhlIEdsZWFtaW5nIFNlYWwgU2V0O05vdmEgb2YgR29sZGVuIE5pcnZhbmE7SW5zYXRpYWJsZSBCb25lc2F3O0dvbGRlbiBTY2F2ZW5naW5nIEd1dHRsZXNsdWc7R3JhbmQgQWJzY2Vzc2lvbiBIb29rIEJ1bmRsZTtCbG9vZGZlYXRoZXIgV2luZ3M7Qmxvb2RmZWF0aGVyIEZlYXN0O1N0YWZmIG9mIFBlcnBsZXggUHJlbTtUaGUgQmFycmVuIFZlY3RvcjtFbXB5cmVhbjtHb2xkZW4gRnVsbC1Cb3JlIEJvbmFuemE7Q2Fubm9uIG9mIHRoZSBPY2N1bHRpc3RzIFB1cnN1aXQ7SXJvbiBTdXJnZSBWIDIuMjtTYXZhZ2UgTWV0dGxlO1Jvc2Ugb2YgdGhlIENvcnJpZGFuIE1hZXN0cm87VGhlIExpZ2h0bmluZyBPcmNoaWQgViAzLjI7RnJhY3RhbCBIb3JucyBvZiBJbm5lciBBYnlzbSBVUDtTeWx2YW4gQ2FzY2FkZSBQcmVtO092ZXJncm93biBFbWJsZW0gQWdoYW5pbSBFZmZlY3Q7VEktMTAgQWdoYW5pbSBFZmZlY3Q7VEktMTAgQm90dGxlIEVmZmVjdDtUSS0xMCBFdWwgU2NlcHRlciBFZmZlY3Q7UGVkZXN0YWwgRmVhc3Qgb2YgQWJzY2Vzc2lvbiBHcmVlbjtQZWRlc3RhbCBCbGFkZWZvcm0gTGVnYWN5O1RJLTEwIE1la2FzbSBFZmZlY3Q7VEktMTAgTWpvbGxuaXIgRWZmZWN0O1RJLTEwIFBoYXNlIEJvb3RzIEVmZmVjdDtUSS0xMCBSYWRpYW5jZSBFZmZlY3Q7VEktMTAgU2hpdmFzIEVmZmVjdDtUSS05IFRlYW0gU2VjcmV0IFRQIEVmZmVjdDtCcmlnaHRza3llIFJlZnJlc2hlciBPcmI7U21lZXZpbHMgUGVuYW5jZSBTdHlsZSAzO0d1YXJkaWFucyBvZiB0aGUgTG9zdCBQYXRoIFJhZGlhbnQgVG93ZXJzO1dlYXRoZXIgQXNoO1RlcnJhaW4gLSBEZXNlcnQ7U3Rvcm0gU3Bpcml0IE1lZ2EtS2lsbDtNZWVwbyBBbm5vdW5jZXI7QmF0dGxlIFBhc3MgRWZmZWN0IEJsaW5rIERhZ2dlcjtBY2lkIEh5ZHJhIEN1cnNvciBQYWNrO0d1YXJkaWFucyBvZiB0aGUgTG9zdCBQYXRoIERpcmUgVG93ZXJzO1dlYXRoZXIgU2lyb2NjbztQdW1wa2luIFRyZWVzIFVQO1RlcnJhaW4gLSBJbW1vcnRhbCBHYXJkZW5zO1JpdmVyIFZpYWwgQmx1ZTtEYXJrIFdpbGxvdyBNZWdhLUtpbGw7SHVtYW5pdHlzIExhc3QgQnJlYXRoIC0gVm9pZCBNdXNpYyBQYWNrO1N1aXQgb2YgdGhlIERhcmticmV3IEVuZm9yY2VyO1JhenppbHMgTWlkYXMgS251Y2tsZXMgUHJlbTtTaGF0dGVyYmxhc3QgQ3Jvd247SGFydmVzdGVkIFNob3VsZGVycztIZWlyIG9mIFRlcnJvciBDcm93bjtCZXN0b3dlZCBTaG91bGRlcnM7SGVpciBvZiBUZXJyb3IgV2luZ3M7Qmxhc3Rmb3JnZSBFeGhhbGVyO0luZmVybmFsIENoaWVmdGFpbiBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzO1R3aWxpZ2h0IEhleCAtIE9mZmhhbmQ7Rmlyc3QgTGlnaHQgQXJtb3I7Rmlyc3QgTGlnaHQgQXJtcztGaXJzdCBMaWdodCBIZWFkO05vdGhsaWMgQnVyZGVuO0FsZ2lkIExlZ2FjeTtCcmFjZXJzIG9mIHRoZSBDYXZlcm4gTHVtaW5hcjtGbG91cmlzaGluZyBMb2Rlc3RhciBQcmVtO0VpZGVsb24gb2YgVHdpc3RlZCBNYWVsc3Ryb207SmV3ZWwgb2YgQWVvbnMgUHJlbTtCcmFjZXJzIG9mIEFlb25zIFByZW07VGltZWJyZWFrZXIgUHJlbTtHb2xkZW4gQXRvbWljIFJheSBUaHJ1c3RlcnMgUHJlbTtEYXRhc3RhciBQcm9nZW5pdG9yIChBbHRlciBBcmNhbmEpO0JhcmRpbmcgb2YgQ2hpbWVyaWMgUmFwcG9ydDtDbGF3IG9mIFNlYWJvcm5lIFJlcHJpc2FsO0ludmVyc2UgQmF5b25ldDtMZWdhY3kgb2YgdGhlIEZhbGxlbiBMZWdpb247U2hlYXJpbmcgRGVwb3NpdGlvbjtGaW4gS2luZypzIENoYXJtIFByZW07VHdpbGlnaHQgU2NoaXNtO0dvbGRlbiBNb29uZmFsbCBQcmVtO0ZhbWlsaWFyIG9mIHRoZSBHcmVhdCBHcmV5IFYgMi4xO0FyZW5hIENoYW1waW9uIFNoaWVsZDtEYXVnaHRlcnMgb2YgSHlkcm9waGlpbmFlO1N0YWZmIG9mIEd1bi1ZdTtDYXJyZWF1KnMgQWdvbnk7U2FzaCBvZiB0aGUgRmVhcmZ1bCBBcmlhO0NhcGUgb2YgdGhlIEdsZWFtaW5nIFNlYWw7U29sYXIgR3lyZTtDb21wbGV0ZSBXaW5ncyBvZiB0aGUgRXRoZXJlYWwgTW9uYXJjaDtDYW5keSBDYXQgQXJtcztDYW5keSBDYXQgQmFjaztDYW5keSBDYXQgSGVhZDtEb29tc2RheSBSaXBwZXIgSGVhZDtNZWRpdW0gVGFzc2VscyBvZiB0aGUgQmxhY2sgRGVhdGg7RW1pbmVuY2Ugb2YgUmlzdHVsIEtuaWZlIEF0dGFjaztTb3VscyBUeXJhbnQgSGVhZDtBcm1zIG9mIERlc29sYXRpb24gUHJlbTtTb3VsIENvcnB1bGVuY2UgLSBIZWFkO1NvdWwgQ29ycHVsZW5jZSAtIFNob3VsZGVyO0h1c2ggb2YgRXRlcm5hbCBOaWdodDtQYWxlIEVkZ2UgViAyLjA7UGhhbnRvbSBBZHZlbnQgQmVsdCBVUDtQaGFudG9tIEFkdmVudCBVUDtQaGFudG9tIEFkdmVudCBTaG91bGRlcnMgVVA7UGhhbnRvbSBBZHZlbnQgV2VhcG9uIFVQO0NsYWRkaXNoIEN1ZGdlbDtXZWFwb24gb2YgdGhlIEZyb3N0c2hhcmQgQXNjZW5kYW50O01hbGVmaWMgRHJha2VzIEhvb2Qgb2YgdGhlIENyaW1zb24gV2l0bmVzcztTeWx2YW4gQ2FzY2FkZTtTeW1ib2wgb2YgdGhlIEtpbmcgUmVzdG9yZWQ7R29sZGVuIEltbW9ydGFsIFBhbnRoZW9uO1RlbXBlc3QgSGVsbSBvZiB0aGUgVGh1bmRlcmdvZCBQcmVtO0V5ZSBvZiBJeCp5eGE7R29sZGVuIEV5ZSBvZiBJeCp5eGE7UHVnbmEgUmVzZWFyY2hlciBvZiBPYmxpdmlvbiBNYWdpYyBXZWFwb247RWRnZSBvZiB0aGUgTG9zdCBPcmRlcjtBcnNlbmFsIG9mIHRoZSBEZW1vbmljIFZlc3NlbCBWIDIuMTtBcmFiaWFuIFJpZGVycztXaWNrZWQgU3BhY2UgS25pZ2h0O1NoYWNrbGVzIG9mIHRoZSBFbmR1cmluZyBDb25zY3JpcHQ7TG9zdCBSYW5nZXI7R3J5cGhvbiBSaWRlciBTZXQ7UHVycGxlIEZpcmUgQ2xpbmt6IEZ1biBNb2QgViAzLjA7VGhlIElyb24gUGlvbmVlcjtTaGVybWFuIE1haWRlbiBWIDQuMTtUaGUgRHVza2Jsb29tIFRyaWNrc3RlcjtTbW9reSBEcmVhbWVyO1BlYWNvY2sgUHJpZXN0O1ZhbnF1aXNoaW5nIERlbW9ucyBHZW5lcmFsIFYgMy4xO1RoZSBDaGFpbmVkIFNjcmliZTtFeHBsb3NpdmUgTWFuaWFjO0RpdmluZSBBbmNob3IgU3R5bGUgMjtUaGUgRnJhY3R1cmVkIE9yZGVyIFYgMy4wO0FsbGZhdGhlciBvZiBOYXR1cmUgU2V0O0JsYWNrIE5paGlsaXR5O0lyZSBvZiBNb2x0ZW4gUmViaXJ0aDtSZW1pbmlzY2VuY2Ugb2YgRHJlYW1zO0NoYWlucyBvZiB0aGUgQmxhY2sgRGVhdGggU3R5bGUgMTtHb2xkZW4gTmV0aGVyIExvcmRzIFJlZ2FsaWEgU2V0IFByZW07Q3VubmluZyBDb3JzYWlyO0FuY2llbnQgTWFndXMgU3R5bGUgMjtUb3hpYyBTRjtHb2xkIFNreW1hZ2U7RGFyayBSZWVmIEVzY2FwZSBWIDIuMTtSaXR1YWwgb2YgdGhlIExveWFsIEZvbGQ7QmluZGluZ3Mgb2YgdGhlIEJhdHRsZXJhbmdlciBMaWdodCBTdHlsZTtCZWFyZXIgb2YgdGhlIEFya3R1cmFuIFRhbG9uO1N0b25lbWFyY2ggU292ZXJlaWduIFN0eWxlIDE7RW1wZXJvciBPZiBUaGUgQ2xlcmd5O1JpZ2h0ZWQ5519cyBUaHVuZGVyYm9sdCBhbmQgQXJjYW5hIE1lZ2FQYWNrO0JpZyBVbiBWIDMuMDtOZXcgQ2hpZWZ0YWluIFN0eWxlIDI7QnJ1bWFsIEJlcnNlcmtlcjtBbmNpZW50IE1lY2hhbmlzbTtUaGUgUm93ZHkgRmlyZWJyYW5kO0h1bnRlciBvZiB0aGUgUmVkIFRhbG9uIFNldDtTdHJ5Z3d5ciBCbG9vZHNlZWtlcjtCb3VudHkgSHVudGVyIE1hbmlhYyBTZXQ7QnJldyBKb3VzdGluZyBQYW5kYSBhbmQgRG9ua2V5IEtvbmc7UGF0dGVybiBvZiB0aGUgU2lsa2VuIFF1ZWVuO0ljZXBsYWluIFJhdmFnZXI7VGhlIFJhdCBLaW5nO0ltcGVyaWFsIFJlbGljcyBWIDIuMTtEZWxpZ2h0cyBvZiBQZXRhbHVuYSBQYXRoZmluZGVyO0ZhdGFsIEJsb3Nzb20gViAzLjA7S2lyaW4gUmlkZXIgU2V0O09ueXggRnVtZSBWIDIuMTtCaXR0ZXJ3aW5nIExlZ2FjeTtFbGR3dXJtcyBUb3VjaDtUaGUgSmFkZSBHZW5lcmFsO0JpbmRpbmdzIG9mIERlZXAgTWFnbWE7SGFybmVzcyBvZiB0aGUgRmlzc3VyZWQgU291bDtCbGF6ZSBBcm1vciBWIDIuMTtDaW5kZXIgU2Vuc2VpO1RoZSBTaGVlcCBTZXQ7RXhwb25lbnQgb2YgdGhlIEVuZGxlc3MgU3RhcnM7U3BhdGlhbCBSaWZ0ZXIgViAzLjA7U2t5LUhpZ2ggV2Fyc2hpcCBTdHlsZSAxIFYgMy4wO0ZhdGUgTWVyaWRpYW47Rm9yZ290dGVuIFJlbmVnYWRlO1dpdGNoIEh1bnRlciBUZW1wbGFyO0hvbm9yZWQgU2VydmFudCBvZiB0aGUgRW1waXJlO0RhcmsgRm9yZXN0IFB1bmlzaGVyO1NvcmNlcmVyIG9mIHRoZSBCbGFjayBQb29sO0ljZWJvdW5kIEtpbmcgU2V0O1JlZHJhZ2UgQ3Jhd2xlcjtGbG93ZXIgRmxhbWUgTGluYSBWIDMuMDtXYXItQnVycm93IFJhdmFnZXI7QXJtb3Igb2YgdGhlIE1vb25saXQgVGhpY2tldCBWIDIuMTtBcm1vciBvZiB0aGUgU2FuZ3VpbmUgTW9vbiBTZXQ7RXJ1cHRpbmcgV3JhdGggViAyLjA7RnVyeSBvZiBXYXIgR29kO01lbW9yaWVzIG9mIHRoZSBWb3cgRXRlcm5hbDtTbm93c3Rvcm0gSHVudHJlc3MgViAyLjE7UHJpc21hdGljIEdyYWNlO0FsbHVyZSBvZiB0aGUgRGVlcDtMaWNoIE1hc3RlciBOZWNyb21hbmNlciBWIDIuMTtVbmZldHRlcmVkIE1hbGV2b2xlbmNlO1NoYXJkcyBvZiBNZXRlb3JpdGU7U2hvcmVsaW5lIFNhcHBlcjtUaGUgR3JleSBHYWxsYW50O0F1c3BpY2lvdXMgU2VhZHdlbGxlcjtIZXJhbGQgb2YgTWVhc3VyZWxlc3MgUnVpbiBWIDIuMTtQaXRmYWxsIENydXNhZGVyO1BlbnVtYnJhbCBWZXN0dXJlO0hhcnNoIFNvam91cm47TWFnaXN0ZXIgb2YgdGhlIE5hcnJvdyBGYXRlcztTb3ZlcmVpZ24gb2YgdGhlIEtyYXkgTGVnaW9ucyAyc3QgU3R5bGU7U3BpbmVzIG9mIHRoZSBTdW5rZW4gR2FvbGVyO0hpbnRlcmxhbmQgU3RhbGtlcjtGbG93ZXJpbmcgU2hhZGUgViAyLjA7Qml0ZSBvZiB0aGUgU3VyZ2luZyBXaW5kO0NvcnJpZGFuIE1hZXN0cm8gViAyLjA7QXJtcyBvZiBSaXNpbmcgRnVyeTtNYXJjaCBvZiB0aGUgUG93ZGVya2VnIFBhdHJvbDtGb3VsZmVsbCBDb3JydXB0b3I7TW9sdGVuIERlc3RydWN0b3I7QmFyayBvZiB0aGUgQWdlbGVzcyBXaXRuZXNzIERpc3Rpbmd1aXNoZWQ7RGlyZ2Vzd29ybiBEeW5hc3R5O0NyeW9nZW5pYyBFbWJyYWNlIFNldDtFY2hvZXMgb2YgdGhlIEV5cmllIFYgMi4wO0NvcnJ1cHRpb24gb2YgdGhlIFZpcnVsZW50IEtyYWl0O1RoZSBJbmZlcm5hbCBNYXN0ZXI7RW1iZXIgVGlwcGVkIENhcmFwYWNlIFNldDtCaW5kaW5ncyBvZiB0aGUgQmF0dGxlcmFuZ2VyO0dyaW0gRGVzdGlueTtDaGFybWVyIG9mIEZpcmVzbmFrZTtTdWJtZXJnZWQgSGF6YXJkO0FudGltYWdlIFNoaW5vYmk7TG9sbGlwb3AgSnVnZ2VybmF1dCBWIDMuMDtUaW55IE1peCBWIDQuMDsgMTIzfHx8