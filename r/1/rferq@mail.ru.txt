limitHWID:: 1 000||| 111:: 8350A8D9-4369-11EB-80EA-8C8CAA5CC363;; 111||| 222:: $2y$10$MzA5NjFhM2RlZGY3MWYzYOxps4lvfENZDs2hR2IxukK90YmLrDTuG 222||| 123:: Valentine Ward;Arsenal of the Bladekeeper;Mask of the Bladesrunner;Acolyte of Vengeance Hooded Mask;Golden Offhand Basher of Mage Skulls;Offhand Basher of Mage Skulls;Golden Basher of Mage Skulls;Frozen Void Arms;Frozen Void Belt;Frozen Void Head;Frozen Void Shoulder;Mace of Aeons;Wavecutter;Hood of the Abyssal Arms;Golden Hydrakan Latch;Dimension Ripper Legs;Dimension Ripper Back;Dimension Ripper Arms;Helm of Grim Destiny;Cape of the Stonemarch Sovereign;Arms of the Stonemarch Sovereign;Cuirass of the Stonemarch Sovereign;Arms of Desolation;Furious Rune;Phantom Concord;Pauldrons of Harsh Sojourn;Mantle of the Sangstrath Fold;Arms of the Cryogenic Embrace;Conspicuous Culprit Mohawk;mohawk shoulder;Heaven-Piercing Pauldrons;Sempiternal Revelations Hat;Covenant of the Depths Belt;Arcane Drapings;Staff of Gun-Yu;Shoulders of the Dragon Palace;Armor of the Demon Trickster;Belt of the Gleaming Seal;Armor of Cruel Reprisal;Capricious Fate Head;Cape of the Lifted Veil;Argent Decimator Legs;Heat;Kit of the Hunt Eternal;Wrap of the Urushin Huntsman;Gauntlets of the Crypt Guardian;Quiver of the Urushin Huntsman;Horns of the Spirethorn;Force of Kylin Tail;Force of Kylin Head;Plates of Sundering;Vigil Triumph;Indomitable Legacy - Shoulder;Indomitable Legacy - Head;Vigil Signet;Maraxiforms Fate;Faceless Madness;Crimson Bracers of Aeons Prem;Juggernaut Arcana Bladeform Legacy;Jagged Honor Mask;Pauldrons of the Loyal Fold;Fluttering Amethyst + Purple Focal Resonance Dota2Changer Edition;Steward of the Forbidden Chamber Armor;Headdress of the Loyal Fold;Axe of Vile Reliquary;Soul Diffuser Prem;Phantom Ascension Shoulders;Phantom Ascension Belt;Phantom Ascension;Transversant Soul of the Crimson Witness;Disciple of the Wyrmwrought Flame;Fire Lotus Belt Prem;Soul of the Slayer Prem;Focal Resonance V 3.0;Spaulders of the Psion Inquisitor;Blade of Tears and Crown of Tears;Tiny Frostmoot;Constellation Armor;Hidden Vector - Blade;Hidden Vector - Belt;Hidden Vector - Hat;Hidden Vector - Armor;Eternal Harvest;Medusa MegaPack NEW;Monkey King Arcana MegaPack;SF Arcana Megapack;Corridan Maestro and The Lightning Orchid and Golden Mandate of the Stormborn MegaPack NEW;Windranger Arcana style 1 (Blue Bird) + Full WR immortal;Sven Immortals MegaPack;Frozen Void;Bewitching Flare V 2.0;Queen of Pain Arcana MegaPack;Mirana MegaPack;Paradise Bird Sting; 123|||