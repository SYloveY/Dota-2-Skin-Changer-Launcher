limitHWID:: 1 000||| 111:: 2249BA20-D7DA-11DD-A829-C860009D2091 111||| 222:: d5225f3f5eed0fdcdfba147c09d3a29d379e7c084f832d30166a9ebb3a7cb9943a3e089ec690dc1756df85375e3e4c10d2ae4d69c8bc9f664621dd5ef34a4676 222||| 123:: drive_dir::Windranger Arcana style 2 (Orange Bird) and Full WR immortal;drive_dir::Axe Jungle;drive_dir::Fists of Axe Unleashed;drive_dir::Immortal Invoker Kid;drive_dir::Toxic AM;drive_dir::Manifold Paradox PA Arcana Style 2;drive_dir::Mace of Aeons Prem;drive_dir::Crimson Bracers of Aeons Prem;drive_dir::Benevolent Companion Prem;drive_dir::Juggernaut Arcana Bladeform Legacy;drive_dir::Provocation of Ruin Mask;drive_dir::Monkey King Arcana MegaPack;drive_dir::Blossom of the Merry Wanderer;drive_dir::Rubick Arcana;drive_dir::Purple Color for TB;drive_dir::Arctic Shock TA V 3.0;drive_dir::Ancient Inheritance - Belt;drive_dir::Ancient Inheritance - Shoulder;drive_dir::Ancient Inheritance - Back;drive_dir::Ancient Inheritance - Neck;drive_dir::Ancient Inheritance - Weapon;drive_dir::Kin of the Sangstrath Fold;drive_dir::Dipper the Destroyer;drive_dir::Phantom Ascension;drive_dir::Baby Toy Pudge Persona;drive_dir::Desert Burn Saddle;drive_dir::Desert Burn Morty Immortal;drive_dir::Desert Burn Cap;drive_dir::Desert Burn Outfit;drive_dir::Desert Burn Crossbow; 123|||