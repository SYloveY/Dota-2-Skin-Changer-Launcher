bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogRkYxOTUzRkYtQ0Q5MC1DRDQ1LTlEQ0MtNjdGMTE0RUZFMzA4IDExMXx8fCAyMjI6OiAkMnkkMTAkTkRJeVpqUmpOVEF3Tm1RNU1tTmpNTzZUT1JMaC92bDNJOC9EanBPWnlyQVpYUmRhdTZ3bnEgMjIyfHx8IDEyMzo6IEF6dXJlIENvbnN0ZWxsYXRpb24gSFVEO1RlcnJhaW4gLSBXaW50ZXI7R3VhcmRpYW5zIG9mIHRoZSBMb3N0IFBhdGggUmFkaWFudCBUb3dlcnM7R3VhcmRpYW5zIG9mIHRoZSBMb3N0IFBhdGggRGlyZSBUb3dlcnM7UmVwdGlsaWFuIFJlZnVnZSBSYWRpYW50IENyZWVwcztSZXB0aWxpYW4gUmVmdWdlIERpcmUgQ3JlZXBzO1dlYXRoZXIgU25vdztOb3ZhIG9mIEdvbGRlbiBOaXJ2YW5hO1NlcnZhbnRzIG9mIEVuZGxlc3MgU3RhcnM7Qmx1ZSBMaWwgTm92YTtNYW5pcHVsYXRvciBvZiBXYXJzaXR1YXRpb247SWNlcGxhaW4gUmF2YWdlcjtFcnVwdGluZyBXcmF0aCBWIDIuMDtXYXJyaW9yIG9mIHRoZSBSZWQgU2FuZCBWIDIuMDtDaGFybWVyIG9mIEZpcmVzbmFrZTtCYXJyaWVyIFJvZ3VlO0JpdHRlcndpbmcgTGVnYWN5O0RyZWFkIENvbXBhY3QgU3R5bGUgMjtFeHBsb3NpdmUgTWFuaWFjO0Jld2l0Y2hpbmcgRmxhcmUgViAyLjA7QXJzZW5hbCBvZiB0aGUgRGVtb25pYyBWZXNzZWwgViAyLjE7Qm91bnR5IEh1bnRlciBNYW5pYWMgU2V0O1NoYWNrbGVzIG9mIHRoZSBFbmR1cmluZyBDb25zY3JpcHQ7U3VzYW5vIE9zIERlc2NlbmRhbnQ7QXBvc3RsZSBvZiBEZWNheSBWIDIuMTtXYXJyaW9yIG9mIEFyZW5hIFNldDtJcmUgb2YgTW9sdGVuIFJlYmlydGg7Vm9sYXRpbGUgQXBvdGhlY2FyeSBTZXQ7VGhlIEFyY2ggVGVtcHRyZXNzO0Nyb3duIG9mIFRoZSBOaWdodHdvcmxkO1RoZSBSb3dkeSBGaXJlYnJhbmQ7QXRyb2NpdGllcyBvZiB0aGUgQWJ5c3NhbCBTY291cmdlO1dpbmdzIG9mIENvbG9yZnVsIEljZWNyeXN0YWxzO0FyYyBvZiB0aGUgU292ZXJlaWduO0dyaW0gRGVzdGlueTtCcmluZ2VyIG9mIFRyb3VibGVzO0Zlcm9jaWQ5519cyBUb3hpY2FudDtNb3JiaWZpYyBQcm92aXNpb247U2VhYmxpZ2h0IFByb2Nlc3Npb247TWVyYW50aCBEcmFnb29uO0V4cG9uZW50IG9mIHRoZSBFbmRsZXNzIFN0YXJzO1NvdWwgb2YgU3RlYW07QmVzdG93bWVudHMgb2YgdGhlIERpdmluZSBBbmNob3IgZWZmZWN0cztXaXRjaCBIdW50ZXIgVGVtcGxhcjtBbGx1cmluZyBNZXNtZXI7Q3JlZXBpbmcgU2hhZG93O0V5ZXMgb2YgdGhlIFJpZnQ7TWlzZ2l2aW5ncyBvZiB0aGUgRW1lcmFsZCBBZ2U7VmFsa3lyaWUgT2YgVGhlIFJlbWFpbnM7SHVudGVyIG9mIEtpbmdzIFYgMi4wO1NvdWwgTGlsaXRoO1NoaW1tZXIgb2YgdGhlIEFub2ludGVkO0hhcnZlc3RzIEhvdW5kO0Vwb2NoIG9mIHRoZSBBYnlzbTtUaGUgU2hlZXAgU2V0O0ZpcnN0IE5pZ2h0IG9mIHRoZSBTdW1tZXIgQ2hpbGQ7IDEyM3x8fA==