bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogNTU1OUJEMTYtOEJBOS0zMUVGLTY4MTYtRjAyRjc0NTJFNjRDIDExMXx8fCAyMjI6OiAkMnkkMTAkT1RsbE9UQXdOVGsxWldRME1EWTFZZVU3anZkRU4zSUFQNXBOSk9sYTZ5Y2I1ai9LdGVZRVMgMjIyfHx8IDEyMzo6IFNjb3JjaGluZyBUYWxvbiBQcmVtO0FybXMgb2YgRGVzb2xhdGlvbjtNdWxjdGFudCBQYWxsO0Fkb3JubWVudHMgb2YgdGhlIFdpdGNoIFN1cHJlbWU7Q2FwcmljaWQ5519cyBGYXRlIEhlYWQ7Q2FwcmljaWQ5519cyBGYXRlIFNob3VsZGVyO0NhcHJpY2lvdXMgRmF0ZSBCZWx0O0NhcGUgb2YgdGhlIExpZnRlZCBWZWlsO1Nob3VsZGVycyBvZiB0aGUgQmxhZGVzcnVubmVyO1NpZ2lsIE1hc2sgb2YgdGhlIEJsYWRla2VlcGVyO1Byb3ZvY2F0aW9uIG9mIFJ1aW4gQmVsdDtEcmFnb24gU3dvcmQ7SW1wZXJpYWwgRmxhbWUgU3dvcmQ7SW1wZXJpYWwgRmxhbWUgU3dvcmRzIFBhY2sgViAyLjE7QnJhY2VycyBvZiBEZXNvbGF0ZSBDb25xdWVzdDtDcmltc29ud2luZyBTbGF5ZXIgV2luZ3M7SGVsbSBvZiBEZXNvbGF0ZSBDb25xdWVzdDtNYW50bGUgb2YgRGVzb2xhdGUgQ29ucXVlc3Q7QmxhZGUgb2YgWmh1emhvdTtCbGFja2dhdGUgU2VudGluZWwgQmFjaztCbGFja2dhdGUgU2VudGluZWwgQXJtb3I7QmxhY2tnYXRlIFNlbnRpbmVsIEhlYWQ7QXJtb3Igb2YgdGhlIERlbW9uIFRyaWNrc3RlcjtNYWNlIG9mIEFlb25zO0Zyb3plbiBWb2lkIEhlYWQ7RnJvemVuIFZvaWQgU2hvdWxkZXI7VGFpbCBvZiB0aGUgRXF1aWxpYnJpdW07QXJlbmEgQ2hhbXBpb24gQXJtb3I7QXJlbmEgQ2hhbXBpb24gQmVsdDtGcm96ZW4gVm9pZCBBcm1zO1Zlc3RtZW50cyBvZiB0aGUgVGh1bmRlcmZvbGQgQXJtb3I7RGFyayBBcnRpc3RyeSBUaHJvd2JhY2s7SW1tb3J0YWwgSW52b2tlciBLaWQ7TWFudGxlIG9mIHRoZSBDaW5kZXIgQmFyb24gU3R5bGUgMjtNb2x0ZW4gQ2xhdyBQcmVtO0dvbGRlbiBDcnVjaWJsZSBvZiBSaWxlO0dvbGRlbiBPcmlnaW5zIG9mIEZhaXRoIFByZW07R29sZGVuIEJhc2hlciBCbGFkZXMgViAyLjA7Rm9jYWwgUmVzb25hbmNlIFYgMy4wO01hbnRsZSBvZiB0aGUgV2hpc3BlcmVkIEJvbmQ7R29sZGVuIFN0YWZmIG9mIEd1bi1ZdSBQcmVtO1BhdWxkcm9ucyBvZiB0aGUgRGVtb24gVHJpY2tzdGVyO1RyYW5zdmVyc2FudCBTb3VsIG9mIHRoZSBDcmltc29uIFdpdG5lc3MgUHJlbTtQaGFudG9tIEFzY2Vuc2lvbiBCZWx0O1BoYW50b20gQXNjZW5zaW9uO1NvdWwgRGlmZnVzZXIgUHJlbTtMZWdhY3kgb2YgdGhlIEZhbGxlbiBMZWdpb24gU3R5bGUgMjtCYW5lZnVsIERldm90aW9uO1JhZGlhbnQgQ29ucXVlcm9yIFNob3VsZGVyO0xlZ2lvbiBDb21tYW5kZXIgQXJjYW5hIFVQO0dvbGRlbiBUd2lsaWdodCBTY2hpc207TW9vbmZhbGwgUHJlbTtHb3RoaWMgV2hpc3BlciBDYXBlO0dvdGhpYyBXaGlzcGVyIEJlbHQ7Q29kaWNpbCBvZiB0aGUgVmVpbGVkIE9uZXM7QXZvd2FuY2Ugb2YgdGhlIFZlaWxlZCBPbmVzO01hbmlmb2xkIFBhcmFkb3ggUEEgQXJjYW5hIFN0eWxlIDM7R3JhbmQgQWJzY2Vzc2lvbjtHcmFuZCBBYnNjZXNzaW9uIENoYWluO0luc2F0aWFibGUgQm9uZXNhdyBQcmVtO0dyYW5kIEFic2Nlc3Npb24gSG9vayBCdW5kbGU7U3VsbGVuIFJhbXBhcnQ7R29sZGVuIFN1bGxlbiBIb2xsb3c7U3VsbGVuIEhhcnZlc3Q7Q3Jvd24gb2YgdGhlIE11cmlkIERpdmluZTtCcmFjZXJzIG9mIEFlb25zO01hY2Ugb2YgQWVvbnMgUHJlbTtDbGFzenVyZW1lIEluY3Vyc2lvbiBIZWFkO0NsYXN6dXJlbWUgSW5jdXJzaW9uIEJlbHQ7SmV3ZWwgb2YgQWVvbnM7R29sZGVuIEdyYXZlbG1hdyBQcmVtO01hc3RlciBvZiB0aGUgU2VhcmluZyBQYXRoIEhlYWQ7QXBvZ2VlIG9mIHRoZSBHdWFyZGlhbiBGbGFtZTtSYXBpZXJzIG9mIHRoZSBCdXJuaW5nIEdvZCBWIDMuMTtUdW5pYyBvZiB0aGUgV2FuZGVyaW5nIEZsYW1lO0JlbmV2b2xlbnQgQ29tcGFuaW9uIFByZW07Qmxvc3NvbSBvZiB0aGUgTWVycnkgV2FuZGVyZXI7Q3Jvd24gb2YgdGhlIEFnZWxlc3MgRmFlO0phZGUgUmVja29uaW5nIFByZW07RnJvc3QgQXZhbGFuY2hlIFByZW07R29sZGVuIEljZSBCbG9zc29tO1l1bHNhcmlhcyBNYW50bGUgUHJlbTtTaWxlbnQgU2xheWVyIC0gQmVsdDtBc3BlY3Qgb2YgT3NjaWxsYTtHbGFpdmUgb2YgT3NjaWxsYTtTaWxlbnQgU2xheWVyIC0gU2hvdWxkZXI7SG9ybiBvZiB0aGUgU3BpcmFsIEJvcmU7U2hvY2sgb2YgdGhlIEFudmlsIFByZW07QmVsdCBvZiB0aGUgU3BpcmFsIEJvcmU7QnJhY2VyIG9mIHRoZSBTcGlyYWwgQm9yZTtTZWEgUmFrZXMgQnJpZGxlO1NoYWRvdyBpbiB0aGUgRGVlcCBBcm1vcjtQYWxlIEVkZ2UgUHJlbTtBcHBhcmF0dXMgb2YgRnVsbCBUaHJvdHRsZTtKdWdnZXJuYXV0IEFyY2FuYSBSZWQgQmxhZGVmb3JtIE9yaWdpbnM7Q3JpbXNvbiBFZGdlIG9mIHRoZSBMb3N0IE9yZGVyO1Byb3ZvY2F0aW9uIG9mIFJ1aW4gUGF1bGRyb247TGluZWFnZSBvZiB0aGUgU3Rvcm1sb3JkcyAtIEFybXM7SGlkZGVuIFZlY3RvciAtIEJsYWRlO0hpZGRlbiBWZWN0b3IgLSBIYXQ7SGlkZGVuIFZlY3RvciAtIEJlbHQ7SGlkZGVuIFZlY3RvciAtIEFybW9yO1dhdGVybG9nZ2VkIEt1bmtrYSBTaG9lcztQcml6ZSBvZiB0aGUgU2FsdHdvcm4gTWFyaW5lciBPcmlnaW5hbDtJbnZlcnNlIEJheW9uZXQ7SW1hZ2Ugb2YgU2VhYm9ybmUgUmVwcmlzYWw7R2xvdmVzIG9mIHRoZSBCcmluZSBMb3JkcztHcmFuZCBCZWx0IG9mIHRoZSBXaXRjaCBIdW50ZXIgVGVtcGxhcjtCZWFzdCBvZiB0aGUgRGVmZW5kZXIgb2YgUnVpbjtPcmIgb2YgRGVsaXZlcmFuY2U7UmVzaXN0aXZlIFBpbmZvbGQgUHJlbTtIZWFkIG9mIHRoZSBWZXNwaWR1biBIdW50ZXItS2lsbGVyO1Byb3BlbGxlcnMgb2YgdGhlIFZlc3BpZHVuIEh1bnRlci1LaWxsZXI7Q29uZSBvZiB0aGUgVmVzcGlkdW4gSHVudGVyLUtpbGxlcjtBdG9taWMgUmF5IFRocnVzdGVycyBQcmVtO1ZpZ2lsIFNpZ25ldDtWaWdpbCBUcml1bXBoO0luZG9taXRhYmxlIExlZ2FjeSAtIEJlbHQ7SW5kb21pdGFibGUgTGVnYWN5IC0gU2hvdWxkZXI7UnViaWNrIEFyY2FuYSB3aXRoIEltbW9ydGFsO0hhdCBvZiB0aGUgSXRpbmVyYW50IFNjaG9sYXI7RGVtb24gRm9ybSBvZiB0aGUgRm91bGZlbGwgQ29ycnVwdG9yIFVQO0NoYXNtIG9mIHRoZSBCcm9rZW4gQ29kZSBBcm1vcjtTY3l0aGVzIG9mIFNvcnJvdztHb2xkIENvbG9yIGZvciBUQjtUaGUgQmFycmVuIENyb3duIFByZW07VGhlIEJhcnJlbiBWZWN0b3I7VGFpbCBvZiB0aGUgU2NvdXJpbmcgRHVuZXM7Q3Jhd2xlcnMgb2YgdGhlIEtyYXkgTGVnaW9ucztDaGl0aW4gb2YgdGhlIEtyYXkgTGVnaW9ucztTdWJtZXJnZWQgSGF6YXJkIFByb3BlbGxlcjtSb2xsZXJtYXdzdGVyO1N1Ym1lcmdlZCBIYXphcmQgTGF1bmNoZXI7U3VibWVyZ2VkIEhhemFyZCBIdWxsO1JvbGxlcm1hd3N0ZXIgYW5kIE1lY2hhIEJvb3RzIG9mIFRyYXZlbCBNayBJSUk7U291bCBvZiB0aGUgU2xheWVyIFByZW07R29sZGVuIFd5cm13cm91Z2h0IEZsYXJlIFByZW07R2xvcnkgb2YgdGhlIEVsZGVyZmxhbWUgLSBBcm1zO0Rpc2NpcGxlIG9mIHRoZSBXeXJtd3JvdWdodCBGbGFtZTtHb2xkZW4gQmxvb2RmZWF0aGVyIEZlYXN0O1BhY2sgb2YgdGhlIEFyZGFsYW4gSW50ZXJkaWN0b3I7SGVsbSBvZiB0aGUgQXJkYWxhbiBJbnRlcmRpY3RvcjtTbmlwZXIgSW1tb3J0YWwgV2VhcG9uIG9mIHRoZSBBcmRhbGFuIEludGVyZGljdG9yO0JyYWNlcnMgb2YgdGhlIEFyZGFsYW4gSW50ZXJkaWN0b3I7Q29sYXIgb2YgdGhlIEFyZGFsYW4gSW50ZXJkaWN0b3I7VGhlIE9ibGl0ZXJhdG9yIG9mIE1hZ2ljO1JpdHVhbCBvZiB0aGUgTG95YWwgRm9sZDtTYW11cmFpIFNldDtMaW5lYWdlIFRoZSBSYW1zIEhlYWQgQXJtYW1lbnRzO0xpbmVhZ2UgQnJva2VuIFNjYWxlO01vbmtleSBLaW5nIEFyY2FuYSBNZWdhUGFjaztMaW5lYWdlIFJlZGVtcHRpb24gb2YgdGhlIFJhaWRmb3JnZWQgUmlkZXI7U0YgQXJjYW5hIE1lZ2FwYWNrO0RLIFBlcnNvbmEgRGF2aW9uO0VhcnRoc2hha2VyIE1lZ2FQYWNrIE5ldztPdXR3b3JsZCBEZXZvdXZlciBNZWdhUGFjaztMaW5lYWdlIENoYXJnZSBvZiB0aGUgVHVuZHJhIFdhcmRlbjtTdG9ybSBTcGlyaXQgTWVnYVBhY2s7QmVzdG93bWVudHMgb2YgdGhlIERpdmluZSBBbmNob3IgZWZmZWN0cztEaXZpbmUgQW5jaG9yIFN0eWxlIDI7TW9ycGhsaW5nIEltbW9ydGFscyBNZWdhUGFjayBVUDtRdWVlbiBvZiBQYWluIEFyY2FuYSBNZWdhUGFjazsgMTIzfHx8