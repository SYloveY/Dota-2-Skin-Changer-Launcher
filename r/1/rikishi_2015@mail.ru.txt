bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogRjRFRTM0RUMtN0JDOC04QTQyLUJCRDctNTEyNTlGRjgyQTNEOzsgMTExfHx8IDIyMjo6ICQyeSQxMCRabUV5TURsbVlqUTVOMlE1TVRrME51OWRyaDVVdDQ5SGRRLjVQTXRaelZNVFczYnJsWVJ4VyAyMjJ8fHwgMTIzOjogT3Zlcmdyb3duIEVtYmxlbSBBZ2hhbmltIEVmZmVjdDtUSS05IEJsaW5rIGx2bCAyIEVmZmVjdDtDYXZlcm5pdGUgRGlyZSBDcmVlcHM7Q2F2ZXJuaXRlIFJhZGlhbnQgQ3JlZXBzO0RBQyAyMDE1IENoYW9zIEtuaWdodCBDdXJzb3IgUGFjaztHdWFyZGlhbnMgb2YgdGhlIExvc3QgUGF0aCBEaXJlIFRvd2VycztHdWFyZGlhbnMgb2YgdGhlIExvc3QgUGF0aCBSYWRpYW50IFRvd2VycztXZWF0aGVyIE1vb25iZWFtO1RlcnJhaW4gLSBJbW1vcnRhbCBHYXJkZW5zO1JpdmVyIFZpYWwgQmx1ZTtIVUQgb2YgdGhlIEJ1cm5pbmcgU2NhbGUgSWNlO1RoZSBCYXNoZXIgQmxhZGVzO01vbHRlbiBDbGF3IFByZW07Q3J1Y2libGUgb2YgUmlsZTtNYW50bGUgb2YgdGhlIENpbmRlciBCYXJvbiBTdHlsZSAxO0F4ZSBvZiBQaHJhY3RvcyBQcmVtO05vdGhsaWMgQnVyZGVuIFByZW07V2hpc3BlcnMgb2YgdGhlIERhbW5lZCBIZWFkO0JpdHRlcndpbmcgTGVnYWN5IERyYWdvbiBGb3JtO01hbmlhcyBNYXNrIFByZW07UmFwaWVycyBvZiB0aGUgQnVybmluZyBHb2QgViAzLjE7RWlkZWxvbiBvZiBUd2lzdGVkIE1hZWxzdHJvbTtWb2lkaGFtbWVyIFYgMy4wO0xlZ2FjeSBvZiB0aGUgRmFsbGVuIExlZ2lvbjtNdWxjdGFudCBQYWxsO1J1YnkgUmluZyBvZiBSYWstbm90aCBSYWstbnVsO0F2YWRhIEtlZGF2cmE7Q29tcGxldGUgSGVsbSBvZiB0aGUgRGFyayBNb29uIFN0YWxrZXI7VHdpbGlnaHQgU2NoaXNtO0dvbGRlbiBNb29uZmFsbCBQcmVtO1RyaWRlbnQgb2YgdGhlIFJpcHRpZGUgUmFpZGVyO0FybW9yIG9mIHRoZSBSaXB0aWRlIFJhaWRlcjtTaG91bGRlcnMgb2YgdGhlIFJpcHRpZGUgUmFpZGVyO0JsYWRlIG9mIFRlYXJzIGFuZCBDcm93biBvZiBUZWFycztTdWxsZW4gSG9sbG93IFYgMy4yO0Nyb3duIG9mIEdpbGRlZCBXb3JzaGlwO055eCBBc3Nhc3NpbnMgRGFnb247QXVzcGljZSBvZiB0aGUgV2h5cmxlZ3lnZSBQcmVtO0RyZWFkIG9mIHRoZSBHbGVhbWluZyBTZWFsIFNldDtJbnNhdGlhYmxlIEJvbmVzYXc7R29sZGVuIFNjYXZlbmdpbmcgR3V0dGxlc2x1ZztHcmFuZCBBYnNjZXNzaW9uIEhvb2sgQnVuZGxlO0Jsb29kZmVhdGhlciBXaW5ncyBQcmVtO0Jsb29kZmVhdGhlciBGZWFzdDtEb3RhQ2luZW1hIC0gUXVlZW4gb2YgUGFpbiBTcGVsbHM7TWFjZSBvZiBWaW5jZXJlIEF0YWNrIEVmZmVjdDtHb2xkZW4gRWRpY3Qgb2YgU2hhZG93cyBWYWxlZXJhIHRvIFJpa2k7QXJtcyBvZiBEZXNvbGF0aW9uIFByZW07TGFtYiB0byB0aGUgU2xhdWdodGVyO0h1c2ggb2YgRXRlcm5hbCBOaWdodDtNb29uIFdoaXJsO1BhbGUgRWRnZSBWIDIuMDtHb2xkZW4gRnVsbC1Cb3JlIEJvbmFuemE7Q2Fubm9uIG9mIHRoZSBPY2N1bHRpc3RzIFB1cnN1aXQ7SGF0IG9mIHRoZSBXaWxkIFdlc3Q7U291bCBEaWZmdXNlciBWIDIuMTtUaGUgTGlnaHRuaW5nIE9yY2hpZCBWIDMuMjtTaGF0dGVyZWQgR3JlYXRzd29yZCBWIDIuMDtDcmltc29uIEN5cnJpZGFlO1N5bHZhbiBDYXNjYWRlIFByZW07UmFpbm1ha2VyIFYgNC4wO1RlbXBlc3QgSGVsbSBvZiB0aGUgVGh1bmRlcmdvZDtCcmFjZXJzIG9mIHRoZSBXYXJ0b3JuIEhlYXZlbnM7UGF1bGRyb25zIG9mIHRoZSBXYXJ0b3JuIEhlYXZlbnM7QmVsdCBvZiB0aGUgV2FydG9ybiBIZWF2ZW5zO0dvbGRlbiBHcmF2ZWxtYXc7QnJhY2VycyBvZiB0aGUgQ2F2ZXJuIEx1bWluYXI7Qm9uZHMgb2YgTWFkbmVzcyBTZXQgU3R5bGUgMTtSb2xsZXJtYXdzdGVyIGFuZCBNZWNoYSBCb290cyBvZiBUcmF2ZWwgTWsgSUlJO0ZvbGlhZ2Ugb2YgRWxkcml0Y2ggR25hcmw7U2lnaWwgb2YgdGhlIEJhcnJpZXIgUm9ndWU7UGlzY2VhbiBQdWx2ZXJpemVyO1dyYXRoZnVsIEFubmloaWxhdG9yO1NoZXJtYW4gTWFpZGVuIFYgNC4xO0RlbGlnaHRzIG9mIFBldGFsdW5hIFBhdGhmaW5kZXI7TGVnYWN5IG9mIHRoZSBFbGR3dXJtIENyZXN0IEJsYWNrO0V4cG9uZW50IG9mIHRoZSBFbmRsZXNzIFN0YXJzO0hvbm9yZWQgU2VydmFudCBvZiB0aGUgRW1waXJlO0Jld2l0Y2hpbmcgRmxhcmUgViAyLjA7RGFyayBNb29uIFN0YWxrZXIgViAyLjE7V3JhdGggb2YgS2EgViAyLjEgU3R5bGUgMjtXcml0aGluZyBFeGVjdXRpb25lcjtUYWxlcyBvZiB0aGUgR3JleSBXYXN0ZXM7TXVyZGVyIG9mIENyb3dzIChubyBjcm93KTtFdGVybmFsIEhhcnZlc3Q7TGlnaHRicmluZ2VyIFNGO0Jhc3Rpb24gb2YgdGhlIExpb25zZ3VhcmQ7R29sZCBTa3ltYWdlO0RhcmsgUmVlZiBFc2NhcGUgViAyLjE7Q29ycmlkYW4gTWFlc3RybyBWIDIuMDtBcm1hdHVyZSBvZiB0aGUgQmVsbGlnZXJlbnQgUmFtIFJlZDtWZXN0bWVudHMgb2YgdGhlIEFsYXJ5IERpdmU7VGhlIER1c2sgQ3Jhd2xlciBTZXQ7U3dpZnQgUGF0aGZpbmRlciBTZXQ7TW9yYmlmaWMgUHJvdmlzaW9uO1JpZ2h0ZWQ5519cyBUaHVuZGVyYm9sdCBhbmQgQXJjYW5hIE1lZ2FQYWNrO0Jhcmsgb2YgdGhlIEFnZWxlc3MgV2l0bmVzcyBEaXN0aW5ndWlzaGVkO0JyYXdsZXIgb2YgdGhlIEdsYWNpZXIgU2VhIFYgMy4wO1Jvc2hhbiBIdW50ZXJzIFNldDsgMTIzfHx8