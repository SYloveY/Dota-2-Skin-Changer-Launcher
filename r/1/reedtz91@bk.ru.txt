bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogIDExMXx8fCAyMjI6OiAkMnkkMTAkWm1FM01XRmxaamhtWVdJd05UVmpPLmRpUHBSajhPaVJtQ0NoV0FLL0hJNjZWbkFSeDVUV0cgMjIyfHx8IDEyMzo6IEJyb29kIEh1bnRlciBIVUQ7QmxpbmsgRGFnZ2VyIGx2bCAxIFRJLTYgRWZmZWN0O1RJLTEwIE1qb2xsbmlyIEVmZmVjdDtUSS04IFBoYXNlIEJvb3RzIEVmZmVjdDtUSS0xMCBSYWRpYW5jZSBFZmZlY3Q7VEktMTAgQWdoYW5pbSBFZmZlY3Q7VEktMTAgQm90dGxlIEVmZmVjdDtRdWVzdGlvbiBtYXJrIERlbnk7VEktMTAgRXVsIFNjZXB0ZXIgRWZmZWN0O1RJLTggRm91bnRhaW4gbHZsIDEgRWZmZWN0O1RJLTggTFZMIFVQIEVmZmVjdDtUSS0xMCBNZWthc20gRWZmZWN0O1RJLTEwIFNoaXZhcyBFZmZlY3Q7VEktNiBDb21wbGV4aXR5IEdhbWluZyBUUCBFZmZlY3Q7T25pYmkgU3RhbmRhcnQ7QXJlbmEgQ2hhbXBpb24gU2hpZWxkO09yZGVyIG9mIHRoZSBTaWx2ZXJlZCBUYWxvbjtDb25zcGljdWQ5519cyBDdWxwcml0IE1vaGF3aztBcm1vciBvZiB0aGUgSWNld3JhY2sgTWFyYXVkZXI7QXhlcyBvZiB0aGUgSWNld3JhY2sgTWFyYXVkZXI7QWNvbHl0ZSBvZiBWZW5nZWFuY2UgTG9hZGluZyBTY3JlZW47QmVsdCBvZiB0aGUgR2xlYW1pbmcgU2VhbDtUZWV0aCBvZiB0aGUgRXRlcm5hbCBMaWdodDtXZWFwb24gb2YgdGhlIEZyb3N0c2hhcmQgQXNjZW5kYW50O1BpcmF0ZSBTbGF5ZXIqcyBCbGFjayBGbGFnO0FybXMgb2YgdGhlIEZyb3N0c2hhcmQgQXNjZW5kYW50O0doaWxsaWVkIEd1bm1hbiBTbmlwZXIgUmlmbGU7RmF1bGRzIG9mIHRoZSBXYW5kZXJpbmcgRGVtb247QmxhZGUgb2YgdGhlIFdhbmRlcmluZyBEZW1vbjtNYXNrIG9mIHRoZSBXYW5kZXJpbmcgRGVtb247VEk5IENhY2hlIENsaW5reiBSZXN0bGVzcyBTaGlrYXJlZSBTaG91bGRlcjtLaXQgb2YgdGhlIEh1bnQgRXRlcm5hbDtNYXNrIG9mIHRoZSBIdW50IEV0ZXJuYWw7R2xvdmVzIG9mIHRoZSBIdW50IEV0ZXJuYWw7Qm93IG9mIHRoZSBIdW50IEV0ZXJuYWw7QmF0dGxlZnVyeTtBY2lkIEh5ZHJhIEN1cnNvciBQYWNrO0hvbGlkYXkgUmFkaWFudCBUb3dlcjtXZWF0aGVyIE1vb25iZWFtO1RlcnJhaW4gLSBPdmVyZ3Jvd24gRW1waXJlO1BoYW50b20gQXNzYXNpbiBSVSBBcmNhbmUgdm9pY2U7RG9uYmFzcyBDdXAgSFVEO1Nwb2lscyBmcm9tIHRoZSBTaGlmdGluZyBTb3JjZXJlciBWIDIuMDtEcm93bmVkIEhvcnNlbWFuIFYgMi4xO01hcmF1ZGVyIG9mIHRoZSBDaGFvcyBXYXN0ZXM7Q2hhcmdlIG9mIHRoZSBXcmF0aHJ1bm5lcjtDb250ZXN0ZWQgRmF0ZTtFbGR3dXJtcyBUb3VjaDtDaGVzcyBLbmlnaHQgU2V0O0ljZWZvcmdlZCBTZXQ7QmxhemluZyBFbXBpcmU7SW1wZXJpYWwgRW52b3k7QWxsdXJlIG9mIHRoZSBEZWVwO0Fwb3N0bGUgb2YgRGVjYXkgViAyLjE7U2hhcmRzIG9mIE1ldGVvcml0ZTtTZW50aW5lbCBvZiB0aGUgTHVjZW50IEdhdGUgViAyLjE7Qmxvb2Ryb290IEd1YXJkO0NvdW50ZXNzIG9mIFJpc3R1bDtTb3ZlcmVpZ24gb2YgdGhlIEtyYXkgTGVnaW9ucyAyc3QgU3R5bGU7RXRlcm5hbCBIYXJ2ZXN0O0Jlc3Rvd21lbnRzIG9mIHRoZSBDZW50dXJpb24gVmFuZ3VhcmQ7RW5kdXJpbmcgU29saXR1ZGU7SGVhdmVubHkgR2VuZXJhbCBWIDIuMDtTYW11cmFpIFNldDtMdW1iZXJjbGF3O0NyeW9nZW5pYyBFbWJyYWNlIFNldDtBcnJheSBvZiBUcmFucXVpbGl0eTtBbGNoZW15IEVzc2VudGlhbHMgU2V0O0JsYWNrIE9yYyBXYXJib3NzIFYgMi4wO1RoZSBHYWxsb3dzIFVuZGVyc3R1ZHkgU2V0O1Jvc2UgQW5kIFRoZSBCZWFzdDtGcm96ZW4gRmVhdGhlciBTZXQ7UHJlY2lzaW9uIG9mIHRoZSBTdG9ybXNoYXBlcjtEcmFnb25zIEFzY2Vuc2lvbiBWIDMuMDtBY29seXRlIG9mIENsYXN6IFNldCBWIDIuMTtSZWNrbGVzcyBWaWdvciBWIDIuMTtUaGUgUGF0aCBvZiBPZG9jb2VsZXVzO0Jsb29keSBSaXBwZXI7RHVza2xpZ2h0IE1hcmF1ZGVyIFYgMi4xO01lbW9yaWVzIG9mIHRoZSBWb3cgRXRlcm5hbDtEYXJrZmFsbCBXYXJkZW4gbm8gZWZmZWN0cyBWIDIuMTtTdGFnaGVhcnQgU292ZXJlaWduO0FudGlwb2RlYW4gQWxsaWVzO1BpdGZhbGwgQ3J1c2FkZXI7QXJteSBPZiBUaGUgVmFzdCBTZWE7RXNzZW5jZSBvZiB0aGUgVHJpY2tzdGVyO015c3RpYyBJbnN0cnVtZW50cyBvZiBUYW5nLUtpIFYgMi4wO0JsZXNzaW5nIG9mIHRoZSBDcmVzdGVkIERhd24gViAyLjE7U2hpdnNoZWxsIENyYXdsZXI7TG9uZ2JlYXJkIER3YXJmIEVuZ2luZWVyO1JpdHVhbCBvZiB0aGUgTG95YWwgRm9sZDtEYXJrIFJlY2xhbWF0aW9uO0VtYmVyIFRpcHBlZCBDYXJhcGFjZSBTZXQ7U3RvbmVtYXJjaCBTb3ZlcmVpZ24gU3R5bGUgMTtBc3Ryb2xvZ2VyIFNldDtUaGUgU2VyYWt1bmQgVHlyYW50O01hc2tzIG9mIE1pc2NoaWVmO1RoZSBCdXRjaGVycyBCcm9pbGVycyBQYWNrO0FybXMgb2YgUmlzaW5nIEZ1cnk7R2FyYiBvZiB0aGUgQ3J1ZWwgTWFnaWNpYW4gU2V0O1doaXNwZXJibG9vbSBTZXQ7IDEyM3x8fA==