bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogNDM5MzM1RTAtQ0ZCOC04MUUzLTJFRDQtMjAyNTY0OTMzNDVBIDExMXx8fCAyMjI6OiBlN2RlMDkwZjE4YmUyNDBkM2IzNzQwNWIzMDgwMGQ2ZDBlNmFlOGI2YzA2NjIyOGMzYTk3MTgwMjdjYjgyYzFlODAyY2U4OGQzNDk0YTMwNzUzMDc5N2E0NzBjNGU5NGUzYzAwMWQxZWU2OTNiZTA3MjlhZDMwYjM4NjBjYmNmMSAyMjJ8fHwgMTIzOjogTWFjZSBvZiBBZW9ucyBQcmVtO0pld2VsIG9mIEFlb25zO0JyYWNlcnMgb2YgQWVvbnM7UGVyY2VwdGlvbnMgb2YgdGhlIEV0ZXJuYWwgTWluZDtJbW1vcnRhbCBJbnZva2VyIEtpZDtKYWdnZWQgSG9ub3IgQmFubmVyO0phZ2dlZCBIb25vciBCcmFjZXI7SnVnZ2VybmF1dCBBcmNhbmEgUmVkIEJsYWRlZm9ybSBPcmlnaW5zO0phZ2dlZCBIb25vciBMZWdzO1NvdWwgb2YgdGhlIFNsYXllciBQcmVtO0x1Y2VudHlyIFByZW07TW9vbmZhbGwgUHJlbTtHb2xkZW4gVHdpbGlnaHQgU2NoaXNtO0F4aWEgb2YgTWV0aXJhO01hbmlmb2xkIFBhcmFkb3ggUEEgQXJjYW5hIFN0eWxlIDM7Q29uY29yZCBSZXZlcnNpb24gVVA7Q29uY29yZCBEb21pbmlvbjtMYW5jZSBvZiB0aGUgU3Vud2FycmlvcjtIdW1ibGUgRHJpZnRlciBQYW50cztCbG9zc29tIG9mIHRoZSBNZXJyeSBXYW5kZXJlcjtDcm93biBvZiB0aGUgQWdlbGVzcyBGYWU7VmlnaWwgVHJpdW1waDtGb2NhbCBSZXNvbmFuY2UgViAzLjA7Q2hhc20gb2YgdGhlIEJyb2tlbiBDb2RlIEFybW9yO0JsYWRlcyBvZiB0aGUgRm91bGZlbGwgQ29ycnVwdG9yIFByZW1pdW07RGVtb24gRm9ybSBvZiB0aGUgRm91bGZlbGwgQ29ycnVwdG9yIFVQO01vbHRlbiBDbGF3IFByZW07Q3J1Y2libGUgb2YgUmlsZTtNYW50bGUgb2YgdGhlIENpbmRlciBCYXJvbiBTdHlsZSAxO0F4ZSBvZiBQaHJhY3RvcyBQcmVtO0Zyb3N0IEF2YWxhbmNoZSBQcmVtO0hhaXIgb2YgdGhlIFN1cnZpdm9yO09yaWdpbnMgb2YgRmFpdGggUHJlbTtCcmFjZXJzIGFuZCBTaG91bGRlcnMgb2YgdGhlIFN1cnZpdm9yO0JlbHQgb2YgdGhlIFN1cnZpdm9yO1Rvcm1lbnRlZCBTdGFmZiBvZiBFbWluZW50IFJldml2YWwgRXhjZXB0aW9uYWw7VG9ybWVudGVkIENyb3duO1NwaW5lcyBvZiB0aGUgQWZmbGljdGVkIFNvdWwgO1BoYW50b20gQWR2ZW50IEJlbHQgVVA7UGhhbnRvbSBBZHZlbnQgU2hvdWxkZXJzIFVQO1BoYW50b20gQWR2ZW50IFVQO1BoYW50b20gQWR2ZW50IFdlYXBvbiBVUDtTd2luZSBvZiB0aGUgU3Vua2VuIEdhbGxleSBQcmVtO0hpZGRlbiBWZWN0b3IgLSBCbGFkZTtIaWRkZW4gVmVjdG9yIC0gSGF0O0hpZGRlbiBWZWN0b3IgLSBCZWx0O0hpZGRlbiBWZWN0b3IgLSBBcm1vcjtTd29yZCBvZiB0aGUgT3V0bGFuZCBSYXZhZ2VyO0J1cm5pbmcgU2hpZWxkIG9mIHRoZSBPdXRsYW5kIFJhdmFnZXI7SGVsbSBvZiB0aGUgVGhpcmQgQXdha2VuaW5nO1BhdWxkcm9ucyBvZiB0aGUgV2FydG9ybiBIZWF2ZW5zO1RlbXBlc3QgUmV2ZWxhdGlvbjtUZW1wZXN0IEhlbG0gb2YgdGhlIFRodW5kZXJnb2Q7U2hvY2sgb2YgdGhlIEFudmlsIFByZW07RXllcyBvZiBBcmRlbm9rO0JlbHQgb2YgT3JuYXRlIENydWVsdHk7UGF1bGRyb24gb2YgRXJ1cHRpbmcgV3JhdGg7R29sZGVuIEJhc2hlciBCbGFkZXMgViAyLjA7QnJhY2VycyBvZiB0aGUgRnJhY3R1cmVkIEVudm95O0NhcGUgb2YgdGhlIEZyYWN0dXJlZCBFbnZveTtJcmUgb2YgdGhlIEFuY2llbnQgR2FvbGVyIFNob3VsZGVyO1ByaW1hbCBQYWVhbjtNYXN0ZXIgRGlub3NhdXJzIFRlbGVwYXRoeSBCZWFzdDtFZGdlIG9mIEV4dGluY3Rpb24gSGVsbTtFZGdlIG9mIEV4dGluY3Rpb24gQmVsdDtUaGlyc3Qgb2YgRXp0emhvayBCdW5kbGUgUHJlbTtGZWFzdCBvZiB0aGUgVW53aWxsaW5nIFNob3VsZGVycztUcmliYWwgVGVycm9yIEhlYWRkcmVzcztCZWx0IG9mIHRoZSBTY2FybGV0IFJhdmVuO0F0b21pYyBSYXkgVGhydXN0ZXJzIFByZW07Q29uZSBvZiB0aGUgVmVzcGlkdW4gSHVudGVyLUtpbGxlcjtQcm9wZWxsZXJzIG9mIHRoZSBWZXNwaWR1biBIdW50ZXItS2lsbGVyO0hlYWQgb2YgdGhlIFZlc3BpZHVuIEh1bnRlci1LaWxsZXI7QXN0cmFsIERyaWZ0O1NoYXJkcyBvZiBFeGlsZTtNYW50bGUgb2YgdGhlIFdoaXNwZXJlZCBCb25kO0hlYWRwaWVjZSBvZiB0aGUgV3V4aWE7V2luZHJhbmdlciBBcmNhbmEgc3R5bGUgMjtUaW5lcyBvZiBUeWJhcmE7SHVudGVycyBIb2FyZDtXcmFwcyBvZiB0aGUgU2Vhc29uZWQgVmV0ZXJhbiBWIDIuMTtSYXBpZXJzIG9mIHRoZSBCdXJuaW5nIEdvZCBWIDMuMTtNYXN0ZXIgb2YgdGhlIFNlYXJpbmcgUGF0aCBBcm1zO092ZXJncm93biBFbWJsZW07UHVycGxlIENvbG9yIGZvciBUQjtTY3l0aGVzIG9mIFNvcnJvdztXaW5ncyBvZiB0aGUgRm91bGZlbGwgQ29ycnVwdG9yIFByZW1pdW07TWFzdGVyIG9mIHRoZSBTZWFyaW5nIFBhdGggSGVhZDtBcG9nZWUgb2YgdGhlIEd1YXJkaWFuIEZsYW1lO01hc3RlciBvZiB0aGUgU2VhcmluZyBQYXRoIEJlbHQ7UHJvdm9jYXRpb24gb2YgUnVpbiBTd29yZDtLdW5ra2EgSW1tb3J0YWxzIE1lZ2FQYWNrO01vcnBobGluZyBJbW1vcnRhbHMgTWVnYVBhY2sgVVA7UXVlZW4gb2YgUGFpbiBBcmNhbmEgTWVnYVBhY2s7U0YgQXJjYW5hIE1lZ2FwYWNrO0NvcnJpZGFuIE1hZXN0cm8gYW5kIFRoZSBMaWdodG5pbmcgT3JjaGlkIGFuZCBHb2xkZW4gTWFuZGF0ZSBvZiB0aGUgU3Rvcm1ib3JuIE1lZ2FQYWNrIE5FVztVcnNhIEltbW9ydGFscyBNZWdhUGFjaztXcmFpdGggS2luZyBBcmNhbmEgTWVnYVBhY2s7UHVkZ2UgVEkxMCBDb2xsZWN0b3JzIENhY2hlIE1lZ2FQYWNrO1JpZ2h0ZWQ5519cyBUaHVuZGVyYm9sdCBhbmQgQXJjYW5hIE1lZ2FQYWNrO0hPVFMgS2FycmlnYW47QnJpc3RsZWJhY2sgTWVnYVBhY2s7U2xhcmsgTWVnYVBhY2sgTmV3O0x5Y2FuIEtpc2lsZXYgTW9kTWFrZXIgTWVnYVBhY2s7Q2xpbmt6IE1lZ2FQYWNrO01hcnMgVEkxMCBDb2xsZWN0b3JzIENhY2hlIE1lZ2FQYWNrO01vbmtleSBLaW5nIEFyY2FuYSBNZWdhUGFjazsgMTIzfHx8