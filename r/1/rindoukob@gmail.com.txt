limitHWID:: 1 000||| 111:: C7DD9A7F-BFE6-11E9-8102-9C5A4478DE50;; 111||| 222:: $2y$10$NzJkZjBhYmRhNTczNTU4Z.4WjMWN2Xn8c.TtYqiaJYQ2/sdvK8ADe 222||| 123:: Windranger Arcana style 1;Arcana Crystal Maiden Frost Avalanche;Dread Retribution - Cape;Dread Retribution - Bracers;Dread Retribution - Headwear;Bracers of Aeons;Jewel of Aeons;Mace of Aeons Prem;Perceptions of the Eternal Mind;Waterlogged Kunkka Shoes;Kunkka*s Shadow Blade;Fire Lotus Belt Prem;Disciple of the Wyrmwrought Flame;Soul of the Slayer Prem;Legion Commander Arcana UP;The Order of Cyprin;Armor of the Deep;Great Helm of the Deep;Golden Riptide;Crimson Riptide;Etienne*s Revenge;Headdress of the Loyal Fold;Pauldrons of the Loyal Fold;Armor of the Loyal Fold;Planetfall;Dragonclaw Hook;Chopper of the Mad Harvester;Large Tassels of the Black Death;Axe Jungle;Golden Crucible of Rile;Crown of Vile Convocation;Tome of Forbidden Knowledge;Glare of the Tyrant;Tidehunter Blink Dagger;Claddish Cudgel Prem;Mirana TI10 Collectors Cache MegaPack;Manifold Paradox Gothic Hunter;Queen of Pain Arcana MegaPack;AntiMage Female;Allure of Miracle Fruit;Vision of the Seraph Scion - Royal;Ogre Magi Immortals Arcana MegaPack;Righteous Thunderbolt and Arcana MegaPack; 123|||