bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogIDExMXx8fCAyMjI6OiAkMnkkMTAkTVRBMU16VTVObVEzTVRkall6ZGxOZW81NkNmNlVESUFRbnhnajBTa3cxOVhlSmlrZEs0SlcgMjIyfHx8IDEyMzo6IERlYXRoQmxvc3NvbSBEcm93IFJhbmdlciBIZWFkO09hdGhzIG9mIHRoZSBEcmFnb25ib3JuIEhlYWQ7T2F0aHMgb2YgdGhlIERyYWdvbmJvcm4gUXVpdmVyO0FsZ2lkIExlZ2FjeTtCbGFjayBJY2UgQ29uc3RlbGxhdGlvbiAtIExlZ3M7U2hhZG93cyBvZiBSYXZlbnNtYW5lIE1hbnRsZTtBcm0gb2YgdGhlIERyYWdvbipzIERpc2NpcGxlO1RyYWlsIG9mIHRoZSBEcmFnb24qcyBEaXNjaXBsZTtCcmFjZXJzIG9mIEJyb2tlbiBTY2FsZTtCZWx0IG9mIHRoZSBEcmFnb24qcyBEaXNjaXBsZTtBY29seXRlIG9mIFZlbmdlYW5jZSBIb29kZWQgTWFzaztQYXVsZHJvbiBvZiB0aGUgRHJhZ29uKnMgRGlzY2lwbGU7U2hvdWxkZXJzIG9mIHRoZSBTdXJ2aXZvcjtHb2xkZW4gT2ZmaGFuZCBCYXNoZXIgb2YgTWFnZSBTa3VsbHM7QmFzaGVyIG9mIE1hZ2UgU2t1bGxzO1NpbHZlciBEcmFnb24gS2luZyBIZWFkO1NpbHZlciBEcmFnb24gS2luZyBPZmYtSGFuZDtTaWx2ZXIgRHJhZ29uIEtpbmcgU2hvdWxkZXI7SGVhdnkgV2luZ2JsYWRlO1NpbHZlciBEcmFnb24gS2luZyBBcm1zO0FybXMgb2YgdGhlIEJpdHRlcndpbmcgTGVnYWN5O1RlcnJhaW4gLSBXaW50ZXI7QmxhY2sgSWNlIENvbnN0ZWxsYXRpb24gLSBBcm1zO0JsYWNrIEljZSBDb25zdGVsbGF0aW9uIC0gQ2xvYWs7RWRnZSBvZiB0aGUgTG9zdCBPcmRlcjtUd2lsaWdodCBTY2hpc207SGVsbSBvZiB0aGUgV2luZ2VkIFNlbnRpbmVsO0xpbmVhZ2UgTWQ5519bnQgb2YgdGhlIFJhaWRmb3JnZWQgUmlkZXI7Q2FyYXBhY2Ugb2YgR2lsZGVkIFNsYXllcjtHb2xkZW4gRWRpY3Qgb2YgU2hhZG93cyBWYWxlZXJhIHRvIFJpa2k7QXJtcyBvZiBEZXNvbGF0aW9uIFByZW07UGFsZSBFZGdlIFYgMi4wO0h1c2ggb2YgRXRlcm5hbCBOaWdodDtQaGFudG9tIEFkdmVudCBCZWx0IFVQO1BpbmsgQ29sb3IgZm9yIFRCO0ZhY2Ugb2YgSW5lcnJhbnQgRW1pbmVuY2U7TGVncyBvZiBJbmVycmFudCBFbWluZW5jZTtEaW1lbnNpb24gUmlwcGVyIEFybXM7R3Vpc2Ugb2YgdGhlIFdpbmdlZCBCb2x0O1N1c2FubyBPcyBEZXNjZW5kYW50O0NpY2F0cml4IFJlZ2FsaWEgV2hpdGU7TGVCbGFuYyBmb3IgUHVjaztEYXJrIFJlZWYgRXNjYXBlIFYgMi4xO1BsdW5kZXIgb2YgdGhlIFNhdmFnZSBNb25nZXI7SXRzdWthIEtvdG9yaSBmb3IgV0sgYnkgUGF0Y2hvdWxpIEtub3dsZWRnZTsgMTIzfHx8