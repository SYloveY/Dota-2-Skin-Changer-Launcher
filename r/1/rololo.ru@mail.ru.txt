limitHWID:: 1 000||| 111::  111||| 222:: $2y$10$MTQwMDc5NTIzMWNmMjk1O.WusJkh22sjHTZ/QjfsQils3GS64QEbW 222||| 123:: Soup for Sluts Customs Spells Invoker;Souls Tyrant Head;Arms of Desolation Prem;Pauldrons of Eternal Harvest;Armlet of the Basilisk;Medium Tassels of the Black Death;Insatiable Bonesaw;Golden Scavenging Guttleslug;Grand Abscession Hook Bundle;Royal Decree Knife Attack;Complete Garb of the Corridan Maestro;Rose of the Corridan Maestro;The Lightning Orchid of Eminent Revival;Armor of the Sundered King;Cape of the Stonemarch Sovereign;Crown of Malice;Curse of the Crow King Shoulders;Edge of the Lost Order;Mask of the Divine Sorrow;Sempiternal Revelations Belt;Cape of the Blackguard Magus;Sempiternal Revelations Guard;Northern Blight Arms;Candy Cat Back;Inverse Bayonet;Grand Pauldrons of the Witch Hunter Templar;Image of Seaborne Reprisal;Legs of the Pack-Ice Privateer;Grand Gloves of the Witch Hunter Templar;Flintlock of the Divine Anchor;Molten Claw Prem;Axe Blackthorn Belt;Crucible of Rile;Mantle of the Cinder Baron Style 1;Axe of the Warboss;Flashpoint Proselyte - Head;Armlet of Reckless Vigor;Blade of Reckless Vigor;Spear of Reckless Vigor;Spikes of Reckless Vigor;Golden Basher of Mage Skulls;Offhand Basher of Mage Skulls;Shoulders of the Survivor;Faceless Death - Head;Belt of the Dragon*s Disciple;Bracers of the Survivor;Armor of the Forgotten Plane;Susano Os Descendant;Tinker Scarecrow Set; 123|||