bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogIDExMXx8fCAyMjI6OiAkMnkkMTAkTlRJMll6ZG1OV1kzWkRRME5qQmlOT2ZqWW1TdmlFZmt5Wm5jOTZFRVRDWW93SXg2ekFkeC4gMjIyfHx8IDEyMzo6IEZyYWN0YWwgSG9ybnMgb2YgSW5uZXIgQWJ5c20gVVA7UGluayBDb2xvciBmb3IgVEI7QnJhY2VycyBvZiBBZW9ucyBQcmVtO0pld2VsIG9mIEFlb25zIFByZW07VGhlIFdhcmQgb2YgT2RvY29lbGV1cztNdWxjdGFudCBQYWxsO0dhdW50bGV0IG9mIHRoZSBUcmVhY2hlcm91cyBEZW1vbjtBcm1vciBvZiB0aGUgRGVtb24gVHJpY2tzdGVyO1N0YWZmIG9mIEd1bi1ZdTtBdXNwaWNlIG9mIHRoZSBXaHlybGVneWdlIFByZW07Q2FwcmljaWQ5519cyBGYXRlIFdlYXBvbjtIdXNoIG9mIEV0ZXJuYWwgTmlnaHQ7SHlkcmFrYW4gTGF0Y2g7R29sZGVuIEdyYXNwaW5nIEJsdWRnZW9uO0dvbGRlbiBHcmFzcGluZyBCbHVkZ2VvbiBlZmZlY3Q7UmVjdGlmaWVyO0V5ZSBvZiB0aGUgV2VhdGhlcmVkIFN0b3JtIFNpZ2lsO1Bpc2NlYW4gUHVsdmVyaXplcjtXaGlza3kgdGhlIFN0b3V0IEFydGlmYWN0O0NsYXdzIG9mIHRoZSBTYW5nc3RyYXRoIEZvbGQ7TWFudGxlIG9mIHRoZSBTYW5nc3RyYXRoIEZvbGQ7QmFyZGluZyBvZiB0aGUgU2FuZ3N0cmF0aCBGb2xkO0hlbG0gb2YgdGhlIEZlcm9jaWQ5519cyBIZWFydDtTaGFtYmxpbmcgRHJhdWc7RGFyayBNZWFkb3cgTWFzc2FjcmUgQXJtb3I7QnJhY2VycyBvZiBTZWFibGlnaHQgUHJvY2Vzc2lvbjtEYXJrIE1lYWRvdyBNYXNzYWNyZSBIZWFkO0dvbGRlbiBQYWxlIE1hdXNvbGV1bTtTeWx2YW4gQ2FzY2FkZSBQcmVtO0Zsb3dlcnNvbmc7Rmxvd2Vyc29uZyBCZWF1dHk7UXVpdmVyIG9mIHRoZSBSb3ZpbmcgUGF0aGZpbmRlcjtGbG93ZXJzb25nIEd1YXJkO0FlZ2lzIGFuZCBSb3NoYW4gU3QuIFZhbGVudGluZSBEYXk7T3Zlcmdyb3duIEVtYmxlbSBBZ2hhbmltIEVmZmVjdDtCYXR0bGUgUGFzcyBFZmZlY3QgQmxpbmsgRGFnZ2VyO0JsaW5rIERhZ2dlciBsdmwgMiBUSS02IEVmZmVjdDtGYWxsIEJhdHRsZSBQYXNzIDIwMTYgRWZmZWN0IEJsaW5rIERhZ2dlcjtUSS00IGVmZmVjdCBCbGluayBEYWdnZXI7VEktOSBCbGluayBsdmwgMiBFZmZlY3Q7UGxhbmV0ZmFsbCBCbGluaztUSS00IGVmZmVjdCBCb3R0bGU7MjUgbHZsIHBpbmc7Q29sb3JTdGF0cztUSS01IGVmZmVjdCBEYWdvbjtDYXZlcm5pdGUgRGlyZSBDcmVlcHM7Q2F2ZXJuaXRlIFJhZGlhbnQgQ3JlZXBzO0VtaW5lbmNlIG9mIFJpc3R1bCBEZW55IDI7RXVscyBTY2VwdGVyIFRJLTYgRWZmZWN0O0JhdHRsZSBQYXNzIEVmZmVjdCBFdWw7VEktNSBlZmZlY3QgRXVsO0JhdHRsZSBQYXNzIEVmZmVjdCBGb3VudGFpbiBSZWdlbjtGYWxsIEJhdHRsZSBQYXNzIDIwMTYgRWZmZWN0IEZvdW50YWluIFJlZ2VuO1Nha3VyYSBGb250YWluIFJlZ2VuO1BlZGVzdGFsIFRpLTYgRGlyZSBMVkwgMjtQZWRlc3RhbCBUaS02IERpcmU7UGVkZXN0YWwgRmVhc3Qgb2YgQWJzY2Vzc2lvbiBSZWQ7SXJvbiBCcmFuY2ggQ2hyaXN0bWFzIFRyZWU7TWVrYW5pc20gVEktNiBFZmZlY3Q7VEktOSBNZWthc20gRWZmZWN0O1RJLTEwIE1qb2xsbmlyIEVmZmVjdDtUSS04IE1la2Fuc20gRWZmZWN0O01qb2xsbmlyIFRJLTYgRWZmZWN0O1BoYXNlIEJvb3RzIFRJLTYgRWZmZWN0O1RJLTggUGhhc2UgQm9vdHMgRWZmZWN0O1JhZGlhbmNlIFRJLTYgRWZmZWN0O01pbmUgUmFkaXVzIDcwMjtSaXZlciBWaWFsIEJsdWU7VGktOSBSb3NoYW47VEktOCBTaGl2YXMgRWZmZWN0O1RJLTEwIFRlbGVwb3J0IGx2bCAzIEVmZmVjdDtGYWxsIEJhdHRsZSBQYXNzIDIwMTYgRWZmZWN0IFRlbGVwb3J0O1RJLTUgZWZmZWN0IFRlbGVwb3J0O1RJLTYgRUhPTUUgVFAgRWZmZWN0O1RpbmtlciBUUCBFZmZlY3Q7R3VhcmRpYW5zIG9mIHRoZSBMb3N0IFBhdGggRGlyZSBUb3dlcnM7R3VhcmRpYW5zIG9mIHRoZSBMb3N0IFBhdGggUmFkaWFudCBUb3dlcnM7Qm9vb29mdXMgd2l0aCBEYXJrIGVmZmVjdDtEQUMgMjAxNSBDaGFvcyBLbmlnaHQgQ3Vyc29yIFBhY2s7RVNMIE9uZSBKYWdnZWQgVmlzaW9uIFdhcmQ7V2VhdGhlciBBc2g7VGVycmFpbiAtIFRoZSBLaW5ncyBOZXcgSm91cm5leTtIVUQgb2YgdGhlIEJ1cm5pbmcgU2NhbGUgSWNlO1Bpc3RvbiBJbXBhbGVyO1Bpc3RvbiBJbXBhbGVyIGVmZmVjdDtCbGFzdGZvcmdlIEV4aGFsZXI7U2hlYXJpbmcgRGVwb3NpdGlvbjtGaXJlIExvdHVzIEJlbHQ7VGhlIFNjYXJsZXQgRmxhcmUgTmVjaztTaG9jayBvZiB0aGUgQW52aWw7TWFjZSBvZiBWaW5jZXJlIEF0YWNrIEVmZmVjdDtCbG9vZGZlYXRoZXIgV2luZ3MgUHJlbTtFbWluZW5jZSBvZiBSaXN0dWwgS25pZmUgQXR0YWNrO0RvdGFDaW5lbWEgLSBRdWVlbiBvZiBQYWluIFNwZWxscztCbG9vZGZlYXRoZXIgRmVhc3Q7SXJvbiBTdXJnZSBWIDIuMjtTYXZhZ2UgTWV0dGxlO1RlbXBlc3QgSGVsbSBvZiB0aGUgVGh1bmRlcmdvZCBQcmVtO1NhbXVyYWkgU2V0O1RoZSBIb2xsb3cgU2V0O1N1c2FubyBPcyBEZXNjZW5kYW50O0hvbm9yZWQgU2VydmFudCBvZiB0aGUgRW1waXJlO0Z1cnkgb2YgV2FyIEdvZDtDcmVlcGluZyBTaGFkb3c7RGFyayBSZWVmIEVzY2FwZSBWIDIuMTtCZXN0b3dtZW50cyBvZiB0aGUgQ2VudHVyaW9uIFZhbmd1YXJkO01vbHRlbiBEZXN0cnVjdG9yO1p1bGppbiBmb3IgVHJvbGwgV2FybG9yZCBTdHlsZSAzO0JyYXdsZXIgb2YgdGhlIEdsYWNpZXIgU2VhIFYgMy4wO1NjYXJsZXQgTG9yZHM7TG9zdCBSYW5nZXI7UmF2ZW5zIEZsYW1lO1JpdGVzIG9mIFZpbGUgQ29udm9jYXRpb247QmxhemluZyBDb3Ntb3M7RXJ1cHRpbmcgV3JhdGggViAyLjA7QmxhY2sgTmloaWxpdHk7UmFpbWVudHMgb2YgVHdpbGlnaHQgU2hhZGU7QW5jaWVudCBNYWd1cyBTdHlsZSAyO0VsZW1lbnRhbCBJbXBlcmF0b3IgViAyLjA7UmlnaHRlb3VzIFRodW5kZXJib2x0IGFuZCBBcmNhbmEgTWVnYVBhY2s7IDEyM3x8fA==