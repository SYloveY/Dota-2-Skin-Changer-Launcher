limitHWID:: 1 000||| 111::  111||| 222:: $2y$10$M2QwYmNjNDk4MWRiNGQ4NOK9n5hvS3.rrBMol0eTxkSzm3kK4oBAW 222||| 123:: Question mark Deny;Crystal Maiden Anime Voice;Terrain - Desert;Weather Sirocco;Onibi Style 10;River Vial Slime;HUD of the Burning Scale Ice;25 lvl ping;Guardians of the Lost Path Dire Towers;Guardians of the Lost Path Radiant Towers;Cavernite Dire Creeps;Cavernite Radiant Creeps;Mask of the Bloodforge;Off-Hand Weapon of the Bloodforge;Twilight Hex - Offhand;Twilight Hex - Head;Twilight Hex - Armor;Twilight Hex - Back;Twilight Hex - Belt;Mask of the Confidant;Coat of the Windward Rogue;Rapier of the Windward Rogue;Geodesic Eidolon;Auspice of the Whyrlegyge Prem;Royal Decree Knife Attack;DotaCinema - Queen of Pain Spells;Tokisaki Kurumi for Weaver by Patchouli Knowledge;Itsuka Kotori for WK by Patchouli Knowledge;Prinz Eugen for Viper by Patchouli Knowledge;Shirai Kuroko for Vengeful Spirit by Patchouli Knowledge;Tomoe Mami for Sniper by Patchouli Knowledge;Remilia Scarlet for NS by Patchouli Knowledge;Nyaruko for Lion by Patchouli Knowledge;Cthugha for Huskar by Patchouli Knowledge;Chloe von Einzbern for Earth Spirit by Patchouli Knowledge;Hinanawi Tenshi for Earthshaker by Patchouli Knowledge;Yaya for Slardar by Patchouli Knowledge;Hakurei Reimu for Troll Warlord by Patchouli Knowledge;Frostreach Brigands;Havoc of Dragon Palace V 2.0;Bewitching Flare V 2.0;Abyssal Vortex;Creeping Shadow;GopoPudge;Vengeance of the Sunwarrior; 123|||