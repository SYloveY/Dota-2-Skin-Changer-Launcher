bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogOENGMDY1MjAtRkVEMS0xMUQ1LTlDMjgtNjA0NUNCQTYxNTE3OzsgMTExfHx8IDIyMjo6ICQyeSQxMCRNV1ZqTmpkak9UTTJNbUU1T0RVM1plZHNpOEVaeDN5U0NaRVJDd3ZjLkFIUkU2MVhwQm5ybSAyMjJ8fHwgMTIzOjogQWVnaXMgYW5kIFJvc2hhbiBTdC4gVmFsZW50aW5lIERheTsyNSBsdmwgcGluZztDb2xvclN0YXRzO1BpbmUgQ29uZSBNZWxlZSBNZWdhIENyZWVwcztGdWNrIERlbnk7VEktNSBlZmZlY3QgRXVsO0ZvcmNlIFN0YWZmIFRJLTYgRWZmZWN0O1BlZGVzdGFsIFBsYW5ldGZhbGwgQ2VsZXN0aWFsIFN1bW1vbnM7Tnlhc2ggaWNvbnM7SXJvbiBCcmFuY2ggR0c7TGFzdGhpdCBHb2xkIC0gTmV3IEJsb29tIDIwMTk7VEktOSBNZWthc20gRWZmZWN0O1RJLTYgTmF0dXMgVmluY2VyZSBUUCBFZmZlY3Q7UGxhbmV0ZmFsbCBTdHVuIEVmZmVjdDtUZXJyYWluIC0gVGhlIEtpbmdzIE5ldyBKb3VybmV5O0NsYXNoIG9mIHRoZSBBbmNpZW50cyBEYXNoYm9hcmQ7QnJvb2Rtb3RoZXIgQW5pbWUgVm9pY2U7V2VhdGhlciBBc2g7Uml2ZXIgVmlhbCBQaW5rO0d1YXJkaWFucyBvZiB0aGUgTG9zdCBQYXRoIERpcmUgVG93ZXJzO1Jvc2hhbiBIYWxsb3dlZW4gQW5nZWwgU2tpbjtCbGF6ZSBBcm1vciBMb2FkaW5nIFNjcmVlbjtCYXJkaW5nIG9mIENoaW1lcmljIFJhcHBvcnQ7SGF6aGFkYWwgTWFnZWJyZWFrZXI7QXJtb3Igb2YgdGhlIEltcGVyaWQ5519cyBDb21tYW5kO0hhaXIgb2YgdGhlIEltcGVyaWQ5519cyBDb21tYW5kO1RlbXBlc3QgSGVsbSBvZiB0aGUgVGh1bmRlcmdvZDtCYXJkaW5nIG9mIHRoZSBTaWVnZS1EcmFrZTtNYWxlZmljIERyYWtlcyBIb29kIG9mIHRoZSBDcmltc29uIFdpdG5lc3M7UGxhdGluZyBvZiB0aGUgTmV0aGVyc3dhcm0gVmFuZ3VhcmQ7QWJ5c3NhbCBIZWxsY2xhdztJbmZlcm5hbCBXaW5ncztTY2VwdGVyIG9mIHRoZSBJbmZlcm5hbCBSYW1ibGVyO0FwZXJ0dXJlIFNjaWVuY2UgV2FyZGNvcmU7R29sZGVuIEdyZWV2aWw7V2ludGVyIFJvc2hhbjtQdW1wa2luIFRyZWVzIFVQO1RlcnJhaW4gLSBTcHJpbmc7Uml2ZXIgVmlhbCBHcmVlbjtDcnlzdGFsIE1haWRlbiBBbm5vdW5jZXI7QXJjYW5lIERlZmlhbmNlIERhc2hib2FyZDtBcm1zIG9mIHRoZSBPbnl4IENydWNpYmxlIExvYWRpbmcgU2NyZWVuO0Jyb29kIEh1bnRlciBIVUQ7QWNpZCBIeWRyYSBDdXJzb3IgUGFjaztDdXN0b20gRGFzaGJvYXJkIDEwNDtDdXN0b20gRGFzaGJvYXJkIDEyNjtCdXJuaW5nIE5pZ2h0bWFyZTtBbmNlc3RyYWwgVHJhcHBpbmdzIFNldCBWIDMuMDtCZXdpdGNoaW5nIEZsYXJlIFYgMi4wO0FuY2llbnQgTWFndXMgU3R5bGUgMztFeWUgb2YgdGhlIE1hemUgS2VlcGVyO0VudmVsb3BpbmcgRGVzcGFpciBWIDIuMTtUaGUgV2lsZCBUYW1lcjtLaXQgb2YgdGhlIEZpcnN0IEh1bnQgViAyLjE7Q2hhcmdlIG9mIHRoZSBXcmF0aHJ1bm5lcjtDaGFvcyBDaG9zZW4gViAzLjA7U2F2aW9yIGZvciBKdW5nbGVzIEhvbm9yO1Ntb2t5IERyZWFtZXI7RHJhZ29ucyBBc2NlbnNpb24gViAzLjA7VGhlIEphZGUgR2VuZXJhbDtXYXJkZW4gb2YgdGhlIFd5cm1mb3JnZSBTaGFyZDtBaXJib3JuZSBBc3NhdWx0IENyYWZ0O1NpbmlzdGVyIExpZ2h0bmluZztXaXNkb20gb2YgdGhlIE1pZG5pZ2h0IFN1bjtEZXNvbGF0ZSBDb25xdWVzdDtBc2NlbmRhbmNlIG9mIHRoZSBSaW1lIExvcmQgMm5kIFN0eWxlO1JhZ2Ugb2YgdGhlIERhcmsgV29vZCB2IDIuMDtIdW50ZXIgb2YgS2luZ3MgViAyLjA7UmlwdGlkZSBSYWlkZXIgViAyLjA7QWxsdXJlIG9mIHRoZSBEZWVwO0Fwb3N0bGUgb2YgRGVjYXkgViAyLjE7Q2ljYXRyaXggUmVnYWxpYSBSZWQ7QXJtb3Igb2YgdGhlIFN0YWx3YXJ0IFNvdWw7SGVyYWxkIG9mIE1lYXN1cmVsZXNzIFJ1aW4gViAyLjE7Qmxvb2Ryb290IEd1YXJkO0dvbGRlbiBOaXJ2YW5hO0FybXMgb2YgdGhlIEJvZ2F0eXI7Q2hhaW5lZCBNaXN0cmVzcyBTZXQ7Q3VubmluZyBDb3JzYWlyO0lyb25jbGFkIE1vbGQgViAyLjA7RXRlcm5hbCBIYXJ2ZXN0O0Jlc3Rvd21lbnRzIG9mIHRoZSBDZW50dXJpb24gVmFuZ3VhcmQ7RW5kdXJpbmcgU29saXR1ZGU7Q29ycmlkYW4gTWFlc3RybyBWIDIuMDtNYXJjaCBvZiB0aGUgUG93ZGVya2VnIFBhdHJvbDtNb2x0ZW4gRGVzdHJ1Y3RvcjtDb3JydXB0aW9uIG9mIHRoZSBWaXJ1bGVudCBLcmFpdDtCYXJkaW5nIG9mIHRoZSBTb3VsIEtlZXBlcjtBcnJheSBvZiBUcmFucXVpbGl0eTtCZWFyZXIgb2YgdGhlIEFya3R1cmFuIFRhbG9uO1RoZSBEdXNrIENyYXdsZXIgU2V0O0RyZWFkaGF3ayBBcm1vcjtEaXJnZXN3b3JuIER5bmFzdHk7QmFycmllciBSb2d1ZTtCYXJrIG9mIHRoZSBBZ2VsZXNzIFdpdG5lc3M7Q2xhbmRlc3RpbmUgVHJhaWw7QXJtYXR1cmUgb2YgdGhlIEJlbGxpZ2VyZW50IFJhbSBCbHVlO0V4YWN0IE1hcmtzbWFuO0JsZXNzaW5nIG9mIHRoZSBDcmVzdGVkIERhd24gViAyLjE7TXlzdGljIEluc3RydW1lbnRzIG9mIFRhbmctS2kgViAyLjA7U3R5Z2lhbiBNYXc7QW5jaWVudCBNYWd1cyBTdHlsZSAxO05hcmNpc3Npc3RpYyBMZWVjaDtFc3NlbmNlIG9mIHRoZSBUcmlja3N0ZXI7SGFyc2ggU29qb3VybjtBdWd1cnkgUHJvcGhldDtBbnRpcG9kZWFuIEFsbGllcztVbmZldHRlcmVkIE1hbGV2b2xlbmNlO0Z1bmdhbCBMb3JkIFNldDtBbmNpZW50IEFybW9yIFNldDtDcmVzY2VudCBWIDIuMTtDb252YWxlc2NpbmcgRW1wcmVzcztSaXNpbmcgR2xvcnkgViAyLjE7QXJtYW1lbnRzIG9mIHRoZSBOaWdodCBHcm92ZSBWIDIuMTtCbG9vZHkgUmlwcGVyO0FybWFtZW50cyBvZiBMZXZpYXRoYW4gU2V0O1RoZSBQYXRoIG9mIE9kb2NvZWxldXM7QWxnaWQgRmFsY29uO1JveWFsIFdpbnRlcmJsb29tO1ZvbGF0aWxlIE1hamVzdHk7RW5kbGVzcyBOaWdodDsgMTIzfHx8