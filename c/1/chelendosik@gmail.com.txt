bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogQkM1OTQ1NTQtMDQ4MC1EODE5LUE0MEMtMDBEODYxRDdFQTI4IDExMXx8fCAyMjI6OiAkMnkkMTAkTm1ZNFlqRXlZV1UwTVRRNFpqWTNOLnFhQ1RlYTB0MXF4bHYwMDd2Snd5L3AwMURNT2JkWjIgMjIyfHx8IDEyMzo6IEJsaW5rIERhZ2dlciBsdmwgMiBUSS02IEVmZmVjdDsyNSBsdmwgcGluZztGb3JjZSBTdGFmZiBUSS02IEVmZmVjdDtQZWRlc3RhbCBUaS02IERpcmUgTFZMIDI7TWpvbGxuaXIgVEktNiBFZmZlY3Q7UGhhc2UgQm9vdHMgVEktNiBFZmZlY3Q7UmFkaWFuY2UgVEktNiBFZmZlY3Q7R3VhcmRpYW5zIG9mIHRoZSBMb3N0IFBhdGggRGlyZSBUb3dlcnM7R3VhcmRpYW5zIG9mIHRoZSBMb3N0IFBhdGggUmFkaWFudCBUb3dlcnM7UmVwdGlsaWFuIFJlZnVnZSBEaXJlIENyZWVwcztSZXB0aWxpYW4gUmVmdWdlIFJhZGlhbnQgQ3JlZXBzO1RJLTkgU2Vhc29uYWwgQ3JlZXAgRGVueSBFZmZlY3Q7RXVscyBTY2VwdGVyIFRJLTYgRWZmZWN0O1RJLTQgZWZmZWN0IHJlZ2VuLWZvdW50YWluO0xldmVsVXAgVEktNiBFZmZlY3Q7VGktOSBSb3NoYW47VEktMTAgU2hpdmFzIEVmZmVjdDtUSS0xMCBUZWxlcG9ydCBsdmwgMyBFZmZlY3Q7QWNpZCBIeWRyYSBDdXJzb3IgUGFjaztXYXRjaGVyIEJlbG93O0N1c3RvbSBEYXNoYm9hcmQgMzA7S2VlbiBtYWNoaW5lIGxvYWRpbmdzY3JlZW47QXp1cmUgQ29uc3RlbGxhdGlvbiBIVUQ7TWFudGxlIG9mIHRoZSBDaW5kZXIgQmFyb24gU3R5bGUgMTtNb2x0ZW4gQ2xhdyBQcmVtO0NydWNpYmxlIG9mIFJpbGU7TWFzayBvZiB0aGUgQmxvb2Rmb3JnZTtPZmYtSGFuZCBXZWFwb24gb2YgdGhlIEJsb29kZm9yZ2U7V2VhcG9uIG9mIHRoZSBCbG9vZGZvcmdlO0NoYW9zIEFyYml0ZXI7SWNlIEJsb3Nzb207QnJhY2VycyBvZiBBZW9ucyBQcmVtO0pld2VsIG9mIEFlb25zIFByZW07RWRnZSBvZiB0aGUgTG9zdCBPcmRlcjtBZG9ybm1lbnRzIG9mIHRoZSBXaXRjaCBTdXByZW1lO011bGN0YW50IFBhbGw7QXVzcGljZSBvZiB0aGUgV2h5cmxlZ3lnZSBQcmVtO0VtaW5lbmNlIG9mIFJpc3R1bCBLbmlmZSBBdHRhY2s7TGFzaCBvZiB0aGUgTGl6YXJkIEtpbiBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzO1NvdWxzIFR5cmFudCBIZWFkO0FybXMgb2YgRGVzb2xhdGlvbiBQcmVtO1NpbGVudCBFZGljdDtUZW1wZXN0IEhlbG0gb2YgdGhlIFRodW5kZXJnb2QgUHJlbTtBcm1vciBvZiB0aGUgRXF1aWxpYnJpdW07VGFpbCBvZiB0aGUgRXF1aWxpYnJpdW07U2hhdHRlcmJsYXN0IENyb3duO0hhcnZlc3RlZCBTaG91bGRlcnM7SG9vZCBvZiBMdWNpZCBUb3JtZW50O05vdGhsaWMgQnVyZGVuO01hZ3VzIEFwZXg7UHlyZXhhZWMgRmxvZTtDdXJzZSBvZiB0aGUgTmV3IFNlYXNvbiBWIDIuMTtCbGlzc2Z1bCBLbmF2ZSBDb2F0O01hc2sgb2YgdGhlIENvbmZpZGFudDtSYXBpZXIgb2YgdGhlIFdpbmR3YXJkIFJvZ3VlO0dvbGRlbiBTaGFyZHMgb2YgRXhpbGU7VGhlIExpZ2h0bmluZyBPcmNoaWQgViAzLjI7Um9zZSBvZiB0aGUgQ29ycmlkYW4gTWFlc3RybztTcGF1bGRlcnMgb2YgdGhlIFBzaW9uIElucXVpc2l0b3I7Rm9jYWwgUmVzb25hbmNlIFYgMy4wO0ZvbGlhZ2Ugb2YgRWxkcml0Y2ggR25hcmw7V2VhdGhlciBBc2g7VGVycmFpbiAtIERlc2VydDtNYXJrIG9mIHRoZSBGaXJzdCBIdW50IEJlc3Rvd2VkO1Bpc3RvbiBJbXBhbGVyO0luZmVybmFsIENoaWVmdGFpbiBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzO0RhcmsgUmVhbG0gT3JhY2xlcyBBcm1vcjtEYXJrIFJlYWxtIE9yYWNsZXMgTWFzaztTcGlyaXRzIG9mIHRoZSBNb3VybmluZyBNb3RoZXI7V2hpc3BlcnMgb2YgdGhlIERhbW5lZCBIZWFkO1doaXNwZXJzIG9mIHRoZSBEYW1uZWQgV2luZ3M7Qm93IG9mIHRoZSBGcm9zdGZhbmdzIFYgMi4wO0dvbGRlbiBHcmF2ZWxtYXc7QnJhY2VycyBvZiB0aGUgQ2F2ZXJuIEx1bWluYXI7RmxvdXJpc2hpbmcgTG9kZXN0YXIgUHJlbTtNYWNlIG9mIEFlb25zO0Z1cnkgb2YgdGhlIERhbW5lZCBCcnVzaDtGdXJ5IG9mIHRoZSBEYW1uZWQgTWFzaztHb2xkZW4gQXRvbWljIFJheSBUaHJ1c3RlcnMgUHJlbTtGbGFzaHBvaW50IFByb3NlbHl0ZSAtIEhlYWQ7VHJhaW5lciBEcmFnb247RGF0YXN0YXIgUHJvZ2VuaXRvciAoQWx0ZXIgQXJjYW5hKTtUaGUgV2FyZCBvZiBPZG9jb2VsZXVzO0xldmlhdGhhbiBXaGFsZSBCbGFkZSBvZiBFbWluZW50IFJldml2YWw7TGVnYWN5IG9mIHRoZSBGYWxsZW4gTGVnaW9uO1Rvcm1lbnRlZCBTdGFmZiBlZmZlY3Q7U2hlYXJpbmcgRGVwb3NpdGlvbjtCYWNrIG9mIHRoZSBNYWQgTXV0aW5lZXI7RmlyZSBMb3R1cyBCZWx0O1R3aWxpZ2h0IFNjaGlzbTtIZWxtIG9mIHRoZSBXaW5nZWQgU2VudGluZWw7RGF1Z2h0ZXJzIG9mIEh5ZHJvcGhpaW5hZTtTdGFmZiBvZiBHdW4tWXU7U3BhbiBvZiBCbGFjayBOaWhpbGl0eTtGcmlnaHRmdWwgUmV2ZWxyaWVzIExlZ3M7T3JpZ2luIG9mIHRoZSBEYXJrIE9hdGggLSBUYWlsO0Nyb3duIG9mIEdpbGRlZCBXb3JzaGlwO055eCBBc3Nhc3NpbnMgRGFnb247SG9vZCBvZiBQYWd1cztGbGFtaW5nIFNjZXB0ZXIgb2YgQW5jZXN0cmFsIEx1Y2s7QmFjayBCdW95IG9mIHRoZSBTaG9yZWxpbmUgU2FwcGVyO0JlbHQgb2YgdGhlIEdyZXkgV2FzdGVzO0NhcGUgb2YgdGhlIExpZnRlZCBWZWlsO0JlbHQgb2YgdGhlIExpZnRlZCBWZWlsO1Zlc3Qgb2YgdGhlIEJsb29kcm9vdCBHdWFyZDtIZWxtIG9mIHRoZSBMaWZ0ZWQgVmVpbDtQaGFudG9tIENvbmNvcmQ7U29sYXIgR3lyZTtTb2xhciBGb3JnZTtDb21wbGV0ZSBXaW5ncyBvZiB0aGUgRXRoZXJlYWwgTW9uYXJjaDtPcmIgb2YgUmVtaW5pc2NlbmNlO1RhaWwgb2YgdGhlIEV0ZXJuYWwgTnltcGg7R3JhbmQgQWJzY2Vzc2lvbiBIb29rIEJ1bmRsZTtHb2xkZW4gU2NhdmVuZ2luZyBHdXR0bGVzbHVnO1BhdWxkcm9uIFBlcmNoO1Jhem9ycyBvZiB0aGUgSXJvbiBIb2c7QmVsdCBvZiB0aGUgSXJvbiBIb2c7RmFjZSBvZiB0aGUgSXJvbiBIb2c7SGF0Y2hldCBvZiB0aGUgR2hhc3RseSBHb3VybWFuZDtCbG9vZGZlYXRoZXIgRmVhc3Q7Qmxvb2RmZWF0aGVyIFdpbmdzO1NldmVyaW5nIENyZXN0IFYgMi4wO1NldmVyaW5nIExhc2g7R29sZGVuIEVkaWN0IG9mIFNoYWRvd3MgVmFsZWVyYSB0byBSaWtpO1RoZSBCYXJyZW4gVmVjdG9yO0FybW9yIG9mIHRoZSBEaWFib2xpY2FsIEZpZW5kO0JvdyBvZiB0aGUgQmF0dGxlcmFuZ2VyO0NyaW1zb24gQ3lycmlkYWU7UGxhdGluZyBvZiB0aGUgTmV0aGVyc3dhcm0gVmFuZ3VhcmQ7TWFsZWZpYyBEcmFrZXMgSG9vZCBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzO0RhcmsgTWVhZG93IE1hc3NhY3JlIEhlYWQ7TWFqZXN0eSBPZiBUaGUgQ29sb3NzdXMgLSBDb2JibGU7Q2x1YiBvZiB0aGUgSWduZWQ5519cyBTdG9uZTtSZWN0aWZpZXI7QmxhY2tzaGllbGQgUHJvdG9kcm9uZSBNaXNzaWxlIExhdW5jaGVyO0JsYWNrc2hpZWxkIFByb3RvZHJvbmUgQXJtb3I7Q2Fubm9uIG9mIHRoZSBGb3J0aWZpZWQgRmFicmljYXRvcjtCbGFja3NoaWVsZCBQcm90b2Ryb25lIFN0aW5nZXI7Q29udHJvbHMgb2YgdGhlIEZvcnRpZmllZCBGYWJyaWNhdG9yO1N1Ym1lcmdlZCBIYXphcmQgTWFzaztIZWxtIG9mIHRoZSBGb3VsZmVsbCBDb3JydXB0b3I7Qm9tYnRyYWlscyBhbmQgQm9vbXN0aWNrcyBTcGxlZW47Qm9tYnRyYWlscyBhbmQgQm9vbXN0aWNrcyBTcXVlZTtQYWNoeWRlcm0gUG93ZGVyd2Fnb24gV2VhcG9uO1N3aW5lIFBvd2RlciBCYXJyZWw7S2VnIG9mIHRoZSBQb3dkZXJrZWcgUGF0cm9sO1NvdWwgRGlmZnVzZXI7SXJvbiBTdXJnZSBWIDIuMjtTYXZhZ2UgTWV0dGxlO0Nhbm5vbiBvZiB0aGUgT2NjdWx0aXN0cyBQdXJzdWl0O1RoZSBHb2xkZW4gQmFyYiBvZiBTa2FkaTtIb29kIG9mIHRoZSBBYnlzc2FsIEFybXM7UGF1bGRyb24gb2YgdGhlIE9jZWFuIENvbnF1ZXJvcjtXYXZlY3V0dGVyO1NoYWRvdyBpbiB0aGUgRGVlcCBCcmFjZXJzO1BsYXRpbnVtIEJhYnkgUm9zaGFuO0VudmVsb3BpbmcgRGVzcGFpciBWIDIuMTtTaGFja2xlcyBvZiB0aGUgRW5kdXJpbmcgQ29uc2NyaXB0O0dyeXBob24gUmlkZXIgU2V0O0JsdWVoZWFydCBTb3ZlcmVpZ24gViAyLjA7TWlzdHJlc3Mgb2YgdGhlIExvbmcgTmlnaHQ7RHJhZ29uIEd1YXJkaWFuO0JpbmRpbmdzIG9mIERlZXAgTWFnbWE7VGhlIFNoZWVwIFNldDtFeHBvbmVudCBvZiB0aGUgRW5kbGVzcyBTdGFycztNaXNnaXZpbmdzIG9mIHRoZSBFbWVyYWxkIEFnZTtUZW5ndSBHdWFyZGlhbiBTZXQ7RXhwbG9zaXZlIE1hbmlhYztTdXNhbm8gT3MgRGVzY2VuZGFudDtEaXZpbmUgQW5jaG9yIFN0eWxlIDE7Qmxvb2R5IFJpcHBlcjtBc2NlbmRhbmNlIG9mIHRoZSBSaW1lIExvcmQgMXN0IFN0eWxlO05vcnRoZXJuIEJsaWdodDtFeWUgb2YgdGhlIEJlaG9sZGVyO0Fwb3N0bGUgb2YgRGVjYXkgViAyLjE7QW50aXBvZGVhbiBBbGxpZXM7SGFyc2ggU29qb3VybjtSZW1pbmlzY2VuY2Ugb2YgRHJlYW1zO0pvbGx5IFJlYXZlcjtNYXplIFdhdGNoZXIgU2V0O05hcmNpc3Npc3RpYyBMZWVjaDtCYXN0aW9uIG9mIHRoZSBMaW9uc2d1YXJkO0VsZW1lbnRhbCBSZWFsbXMgViAyLjA7TW9sdGVuIERlc3RydWN0b3I7UGx1bmRlciBvZiB0aGUgU2F2YWdlIE1vbmdlcjtDb3JydXB0aW9uIG9mIHRoZSBWaXJ1bGVudCBLcmFpdDtUaGUgRHVzayBDcmF3bGVyIFNldDtCaW5kaW5ncyBvZiB0aGUgQmF0dGxlcmFuZ2VyIENoYW90aWMgU3R5bGU7QmVhcmVyIG9mIHRoZSBBcmt0dXJhbiBUYWxvbjtHcmltIERlc3Rpbnk7QmlnIFVuIFYgMy4wO0FuY2llbnQgTWVjaGFuaXNtO1RoZSBSb3dkeSBGaXJlYnJhbmQ7UGF0dGVybiBvZiB0aGUgU2lsa2VuIFF1ZWVuO1RoZSBCcmFzcyBGbHllcjtGb3Jnb3R0ZW4gVGFjdGljaWFuO1RoZSBEdXNrYmxvb20gVHJpY2tzdGVyO0FuY2VzdHJhbCBUcmFwcGluZ3MgU2V0IFYgMy4wO0xpZ2h0bmluZyBIYXJiaW5nZXI7QnJpbmdlciBvZiBUcm91YmxlcztCZWRyb2NrIFNlcmVuaXR5IFYgMy4xO0NpbmRlciBTZW5zZWk7QWxsaWVkIENvbW1hbmRlciBTZXQ7RmF0ZSBNZXJpZGlhbjtXaXNkb20gb2YgdGhlIE1pZG5pZ2h0IFN1bjtTcGlyZXRob3JuIFJlZ2FsaWEgViAyLjA7V2FyLUJ1cnJvdyBSYXZhZ2VyO0Z1cnkgb2YgV2FyIEdvZDtKZXN0ZXIgS2luZyBTZXQ7UHJpZGUgb2YgdGhlIFdpbnRlcm1vb247SGF2b2Mgb2YgRHJhZ29uIFBhbGFjZSBWIDIuMDtBbGx1cmUgb2YgdGhlIERlZXA7Q3Vyc2VkIFplYWxvdDtBcm1vciBvZiB0aGUgU3RhbHdhcnQgU291bDtJcmUgb2YgTW9sdGVuIFJlYmlydGg7QW5jaWVudCBNYWd1cyBTdHlsZSAyO0Nyb3duIG9mIFRoZSBOaWdodHdvcmxkO1ZhbnRhZ2Ugb2YgdGhlIEJyZWFjaCBXYXJkZW47U291bCBMaWxpdGg7U3Rvcm0gRHJhZ29uIFBvdGVudGU7RXBpdGFwaGljIEJvbmRzO0x1cmthYmxvO0ZvdWxmZWxsIENvcnJ1cHRvcjtCYXJrIG9mIHRoZSBBZ2VsZXNzIFdpdG5lc3MgRGlzdGluZ3Vpc2hlZDtCcmF3bGVyIG9mIHRoZSBHbGFjaWVyIFNlYSBWIDMuMDtEaXJnZXN3b3JuIER5bmFzdHk7Qmxlc3Npbmcgb2YgdGhlIENyZXN0ZWQgVW1icmE7Q2hpbGwgb2YgdGhlIEtlZXBlcnMgR2F6ZTtQdXBwZXQgU3VtbW9uZXI7QW50aW1hZ2UgU2hpbm9iaTtCb3VudHkgSHVudGVyIE1hbmlhYyBTZXQ7V2FycmlvciBvZiBBcmVuYSBTZXQ7UmVsZW50bGVzcyBXYXJicmluZ2VyIFYgMy4wO0xhZHkgU3lsdmFuYXMgZm9yIERyb3cgLSBHaWZ0cyBvZiB0aGUgU2hhZG93Y2F0IFNldDtFcnJhbnQgU29sZGllcjtSZWdpbWUgb2YgdGhlIEVudGhhbGVlbiBEcmFnb247RXJ1cHRpbmcgV3JhdGggViAyLjA7TWVtb3JpZXMgb2YgdGhlIFZvdyBFdGVybmFsO0RpcmVzdG9uZSBCaW5kaW5ncyBTZXQ7QWxsZmF0aGVyIG9mIE5hdHVyZSBTZXQ7Q3JlZXBpbmcgU2hhZG93O0lyb25jbGFkIE1vbGQgViAyLjA7UmlnaHRlb3VzIFRodW5kZXJib2x0IGFuZCBBcmNhbmEgTWVnYVBhY2s7Um9zaGFuIEh1bnRlcnMgU2V0O1Bvd2RlcnNsZWQgUm9va2VyeTtSZWxpY3Mgb2YgdGhlIExvc3QgVmlnaWwgUGF0aGZpbmRlcjtJcm9uYmFyZGUgQ2hhcmdlcjtIaW50ZXJsYW5kIFN0YWxrZXI7IDEyM3x8fA==