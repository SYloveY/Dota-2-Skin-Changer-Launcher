bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogQkM1OTQ1NTQtMDQ4MC1EODE5LUE0MEMtMDBEODYxRDdFQTI4IDExMXx8fCAyMjI6OiAkMnkkMTAkTm1ZNFlqRXlZV1UwTVRRNFpqWTNOLnFhQ1RlYTB0MXF4bHYwMDd2Snd5L3AwMURNT2JkWjIgMjIyfHx8IDEyMzo6IEd1YXJkaWFucyBvZiB0aGUgTG9zdCBQYXRoIERpcmUgVG93ZXJzO0d1YXJkaWFucyBvZiB0aGUgTG9zdCBQYXRoIFJhZGlhbnQgVG93ZXJzO0F6dXJlIENvbnN0ZWxsYXRpb24gSFVEO0R1c2tpZSBMb2FkaW5nIFNjcmVlbjtDdXN0b20gRGFzaGJvYXJkIDMwO1dlYXRoZXIgQXNoO1RlcnJhaW4gLSBUaGUgS2luZ3MgTmV3IEpvdXJuZXk7VGktOSBSb3NoYW47UmVwdGlsaWFuIFJlZnVnZSBEaXJlIENyZWVwcztXYXRjaGVyIEJlbG93O0NvbWJvIE1lZ2EgR3JlZXZpbDtCbGluayBEYWdnZXIgbHZsIDIgVEktNiBFZmZlY3Q7RXVscyBTY2VwdGVyIFRJLTYgRWZmZWN0O0NoYW9zIEFyYml0ZXI7SGVsbSBvZiB0aGUgQnVybmluZyBOaWdodG1hcmU7VmlzYWdlIG9mIHRoZSBTbGVlcGxlc3MgU2VjdDtIYXJ2ZXN0ZWQgU2hvdWxkZXJzO01hcmsgb2YgdGhlIEZpcnN0IEh1bnQgQmVzdG93ZWQ7UGlzdG9uIEltcGFsZXI7SW5mZXJuYWwgQ2hpZWZ0YWluIG9mIHRoZSBDcmltc29uIFdpdG5lc3M7SWNlIEJsb3Nzb207Tm90aGxpYyBCdXJkZW47U3Bpcml0cyBvZiB0aGUgVW5raW5kIENvdW50ZXNzO0RhcmsgUmVhbG0gT3JhY2xlcyBNYXNrO0RhcmsgUmVhbG0gT3JhY2xlcyBBcm1vcjtNYW5pYXMgTWFzayBQcmVtO0JvdyBvZiB0aGUgRnJvc3RmYW5ncyBWIDIuMDtHb2xkZW4gR3JhdmVsbWF3O0Zsb3VyaXNoaW5nIExvZGVzdGFyIFByZW07QnJhY2VycyBvZiBBZW9ucyBQcmVtO0pld2VsIG9mIEFlb25zIFByZW07Rmxhc2hwb2ludCBQcm9zZWx5dGUgLSBIZWFkO1B5cmV4YWVjIEZsb2U7QmFyZGluZyBvZiBDaGltZXJpYyBSYXBwb3J0O0VkZ2Ugb2YgdGhlIExvc3QgT3JkZXI7TGVnYWN5IG9mIHRoZSBGYWxsZW4gTGVnaW9uO0ZpcmUgTG90dXMgQmVsdDtNdWxjdGFudCBQYWxsO0Fkb3JubWVudHMgb2YgdGhlIFdpdGNoIFN1cHJlbWU7VHdpbGlnaHQgU2NoaXNtO0JsYWRlIG9mIFRlYXJzIGFuZCBDcm93biBvZiBUZWFycztHb2xkZW4gU2NhdmVuZ2luZyBHdXR0bGVzbHVnO0dyYW5kIEFic2Nlc3Npb24gSG9vayBCdW5kbGU7QXJtcyBvZiBEZXNvbGF0aW9uIFByZW07U291bHMgVHlyYW50IEhlYWQ7Q2Fubm9uIG9mIHRoZSBPY2N1bHRpc3RzIFB1cnN1aXQ7SXJvbiBTdXJnZSBWIDIuMjtTYXZhZ2UgTWV0dGxlO01lZGl1bSBJZ25lb3VzIFN0b25lO1NjYXJsZXQgT2FrO1N1Ym1lcmdlZCBIYXphcmQgTWFzaztNYWxlZmljIERyYWtlcyBTdHJpa2Ugb25seSBFZmZlY3Q7UGxhdGluZyBvZiB0aGUgTmV0aGVyc3dhcm0gVmFuZ3VhcmQ7TWFsZWZpYyBEcmFrZXMgSG9vZCBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzO1RlbXBlc3QgSGVsbSBvZiB0aGUgVGh1bmRlcmdvZDtHcnlwaG9uIFJpZGVyIFNldDtIdW50ZXJzIEdsb3J5O0xvc3QgUmFuZ2VyO1JlbGVudGxlc3MgV2FyYnJpbmdlciBWIDMuMDtCbHVlaGVhcnQgU292ZXJlaWduIFYgMi4wO1RoZSBEdXNrYmxvb20gVHJpY2tzdGVyO0RlbGlnaHRzIG9mIFBldGFsdW5hIFBhdGhmaW5kZXI7UXVlZW4gb2YgQ3JpbXNvbiBUaG9ybnM7TGlnaHRuaW5nIEhhcmJpbmdlcjtEcmFnb24gR3VhcmRpYW47RWxkd3VybXMgVG91Y2ggViAzLjE7QmluZGluZ3Mgb2YgRGVlcCBNYWdtYTtIZWFkbGFuZCBIdW50cmVzcztFeHBvbmVudCBvZiB0aGUgRW5kbGVzcyBTdGFycztNaXNnaXZpbmdzIG9mIHRoZSBFbWVyYWxkIEFnZTtUaGUgQ2hhaW5lZCBTY3JpYmU7RXhwbG9zaXZlIE1hbmlhYztTdXNhbm8gT3MgRGVzY2VuZGFudDtEYWVtb25mZWxsIEZsYW1lO0NvbXBlbmRpdW0gQmxvb2R5IFJpcHBlcjtBc2NlbmRhbmNlIG9mIHRoZSBSaW1lIExvcmQgMXN0IFN0eWxlO0Jld2l0Y2hpbmcgRmxhcmUgViAyLjA7QmxhY2sgSWNlIFNjb3VyZ2U7SGF2b2Mgb2YgRHJhZ29uIFBhbGFjZSBWIDIuMDtVbmZldHRlcmVkIE1hbGV2b2xlbmNlO0NyZWVwaW5nIFNoYWRvdztIYXJzaCBTb2pvdXJuO011cmRlciBvZiBDcm93cyAobm8gY3Jvdyk7RmF0aG9tbGVzcyBSYXZhZ2VyO0dvbGQgU2t5bWFnZTtCYXN0aW9uIG9mIHRoZSBMaW9uc2d1YXJkO0tlZW4gTWFjaGluZTtJcm9uYmFyZGUgQ2hhcmdlcjtBcm1hdHVyZSBvZiB0aGUgQmVsbGlnZXJlbnQgUmFtIFJlZDtHZW5pZSBTcGlyaXQ7RnVsbCBNZXRhbCBUZWNoaWVzO1BsdW5kZXIgb2YgdGhlIFNhdmFnZSBNb25nZXI7VHJlayBvZiB0aGUgVHJhaWxibGF6ZXI7VGlua2VyIFNjYXJlY3JvdyBTZXQ7QmVhcmVyIG9mIHRoZSBBcmt0dXJhbiBUYWxvbjtCaW5kaW5ncyBvZiB0aGUgQmF0dGxlcmFuZ2VyIENoYW90aWMgU3R5bGU7VGhlIER1c2sgQ3Jhd2xlciBTZXQ7UmlnaHRlb3VzIFRodW5kZXJib2x0IGFuZCBBcmNhbmEgTWVnYVBhY2s7RmVyb2Npb3VzIEhlYXJ0O0Zlcm9jaWQ5519cyBUb3hpY2FudDsgMTIzfHx8