bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogQkM1OTQ1NTQtMDQ4MC1EODE5LUE0MEMtMDBEODYxRDdFQTI4IDExMXx8fCAyMjI6OiAkMnkkMTAkTm1ZNFlqRXlZV1UwTVRRNFpqWTNOLnFhQ1RlYTB0MXF4bHYwMDd2Snd5L3AwMURNT2JkWjIgMjIyfHx8IDEyMzo6IEJsaW5rIERhZ2dlciBsdmwgMiBUSS02IEVmZmVjdDsyNSBsdmwgcGluZztGb3JjZSBTdGFmZiBUSS02IEVmZmVjdDtQZWRlc3RhbCBUaS02IERpcmUgTFZMIDI7TWpvbGxuaXIgVEktNiBFZmZlY3Q7UGhhc2UgQm9vdHMgVEktNiBFZmZlY3Q7UmFkaWFuY2UgVEktNiBFZmZlY3Q7R3VhcmRpYW5zIG9mIHRoZSBMb3N0IFBhdGggRGlyZSBUb3dlcnM7R3VhcmRpYW5zIG9mIHRoZSBMb3N0IFBhdGggUmFkaWFudCBUb3dlcnM7UmVwdGlsaWFuIFJlZnVnZSBEaXJlIENyZWVwcztSZXB0aWxpYW4gUmVmdWdlIFJhZGlhbnQgQ3JlZXBzO1RJLTkgU2Vhc29uYWwgQ3JlZXAgRGVueSBFZmZlY3Q7RXVscyBTY2VwdGVyIFRJLTYgRWZmZWN0O1RJLTQgZWZmZWN0IHJlZ2VuLWZvdW50YWluO0xldmVsVXAgVEktNiBFZmZlY3Q7VGktOSBSb3NoYW47VEktMTAgU2hpdmFzIEVmZmVjdDtUSS0xMCBUZWxlcG9ydCBsdmwgMyBFZmZlY3Q7QmFieSBSb3NoYW4gUHJlbTtBY2lkIEh5ZHJhIEN1cnNvciBQYWNrO1dhdGNoZXIgQmVsb3c7V2VhdGhlciBTcHJpbmc7VGVycmFpbiAtIFRoZSBLaW5ncyBOZXcgSm91cm5leTtLZWVuIG1hY2hpbmUgbG9hZGluZ3NjcmVlbjtBenVyZSBDb25zdGVsbGF0aW9uIEhVRDtNYW50bGUgb2YgdGhlIENpbmRlciBCYXJvbiBTdHlsZSAxO01vbHRlbiBDbGF3IFByZW07Q3J1Y2libGUgb2YgUmlsZTtNYXNrIG9mIHRoZSBCbG9vZGZvcmdlO09mZi1IYW5kIFdlYXBvbiBvZiB0aGUgQmxvb2Rmb3JnZTtXZWFwb24gb2YgdGhlIEJsb29kZm9yZ2U7Q2hhb3MgQXJiaXRlcjtJY2UgQmxvc3NvbTtNYW5pYXMgTWFzayBQcmVtO0JvdyBvZiB0aGUgRnJvc3RmYW5ncyBWIDIuMDtHb2xkZW4gR3JhdmVsbWF3O0JyYWNlcnMgb2YgQWVvbnMgUHJlbTtKZXdlbCBvZiBBZW9ucyBQcmVtO0VkZ2Ugb2YgdGhlIExvc3QgT3JkZXI7TGVnYWN5IG9mIHRoZSBGYWxsZW4gTGVnaW9uO0Fkb3JubWVudHMgb2YgdGhlIFdpdGNoIFN1cHJlbWU7TXVsY3RhbnQgUGFsbDtBdXNwaWNlIG9mIHRoZSBXaHlybGVneWdlIFByZW07RW1pbmVuY2Ugb2YgUmlzdHVsIEtuaWZlIEF0dGFjaztMYXNoIG9mIHRoZSBMaXphcmQgS2luIG9mIHRoZSBDcmltc29uIFdpdG5lc3M7U291bHMgVHlyYW50IEhlYWQ7QXJtcyBvZiBEZXNvbGF0aW9uIFByZW07U2lsZW50IEVkaWN0O0dpbGRlZCBFZGdlIFYgMi4wO1RoZSBHb2xkZW4gQmFyYiBvZiBTa2FkaTtDYW5ub24gb2YgdGhlIE9jY3VsdGlzdHMgUHVyc3VpdDtHb2xkZW4gRnVsbC1Cb3JlIEJvbmFuemE7SXJvbiBTdXJnZSBWIDIuMjtTYXZhZ2UgTWV0dGxlO01hamVzdHkgT2YgVGhlIENvbG9zc3VzIC0gUGViYmxlO01hbGVmaWMgRHJha2VzIEhvb2Qgb2YgdGhlIENyaW1zb24gV2l0bmVzcztQbGF0aW5nIG9mIHRoZSBOZXRoZXJzd2FybSBWYW5ndWFyZDtNYWxlZmljIERyYWtlcyBTdHJpa2Ugb25seSBFZmZlY3Q7VGVtcGVzdCBIZWxtIG9mIHRoZSBUaHVuZGVyZ29kIFByZW07RW52ZWxvcGluZyBEZXNwYWlyIFYgMi4xO01hZ2UgQWJvbGlzaGVyIFYgMi4wO1NoYWNrbGVzIG9mIHRoZSBFbmR1cmluZyBDb25zY3JpcHQ7SHVudGVycyBHbG9yeTtMb3N0IFJhbmdlcjtSZWxlbnRsZXNzIFdhcmJyaW5nZXIgViAzLjA7R3J5cGhvbiBSaWRlciBTZXQ7Qmx1ZWhlYXJ0IFNvdmVyZWlnbiBWIDIuMDtNaXN0cmVzcyBvZiB0aGUgTG9uZyBOaWdodDtEcmFnb24gR3VhcmRpYW47RWxkd3VybXMgVG91Y2ggViAzLjE7QmluZGluZ3Mgb2YgRGVlcCBNYWdtYTtUaGUgU2hlZXAgU2V0O0V4cG9uZW50IG9mIHRoZSBFbmRsZXNzIFN0YXJzO01pc2dpdmluZ3Mgb2YgdGhlIEVtZXJhbGQgQWdlO1Rlbmd1IEd1YXJkaWFuIFNldDtFeHBsb3NpdmUgTWFuaWFjO1N1c2FubyBPcyBEZXNjZW5kYW50O0RhZW1vbmZlbGwgRmxhbWU7RGl2aW5lIEFuY2hvciBTdHlsZSAxO0Jsb29keSBSaXBwZXI7QXNjZW5kYW5jZSBvZiB0aGUgUmltZSBMb3JkIDFzdCBTdHlsZTtCZXdpdGNoaW5nIEZsYXJlIFYgMi4wO05vcnRoZXJuIEJsaWdodDtFeWUgb2YgdGhlIEJlaG9sZGVyO0Fwb3N0bGUgb2YgRGVjYXkgViAyLjE7VW5mZXR0ZXJlZCBNYWxldm9sZW5jZTtBbnRpcG9kZWFuIEFsbGllcztWYWxreXJpZXMgU2hhZGU7SGFyc2ggU29qb3VybjtSZW1pbmlzY2VuY2Ugb2YgRHJlYW1zO0pvbGx5IFJlYXZlcjtNYXplIFdhdGNoZXIgU2V0O05hcmNpc3Npc3RpYyBMZWVjaDtNb25zdHJvdXMgUmVwcmlzYWw7QmFzdGlvbiBvZiB0aGUgTGlvbnNndWFyZDtEYXJrIFJlZWYgRXNjYXBlIFYgMi4xO0tlZW4gTWFjaGluZTtFbGVtZW50YWwgUmVhbG1zIFYgMi4wO0NyeSBvZiB0aGUgQmF0dGxlaGF3aztNb2x0ZW4gRGVzdHJ1Y3RvcjtUaW5rZXIgU2NhcmVjcm93IFNldDtQbHVuZGVyIG9mIHRoZSBTYXZhZ2UgTW9uZ2VyO0Zlcm9jaWQ5519cyBIZWFydDtDb3JydXB0aW9uIG9mIHRoZSBWaXJ1bGVudCBLcmFpdDtUaGUgRHVzayBDcmF3bGVyIFNldDtCaW5kaW5ncyBvZiB0aGUgQmF0dGxlcmFuZ2VyIENoYW90aWMgU3R5bGU7QmVhcmVyIG9mIHRoZSBBcmt0dXJhbiBUYWxvbjtHcmltIERlc3Rpbnk7IDEyM3x8fA==