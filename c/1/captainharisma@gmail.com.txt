bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogIDExMXx8fCAyMjI6OiAkMnkkMTAkT1dZNU5UTm1NamRtTTJabE9EUTRPT1VoUGFZLkdubGJRaDJiWDhPVHBzbEsycnFSVkxnUkcgMjIyfHx8IDEyMzo6IFNpbGVudCBXYWtlO01hc2sgb2YgWmVidWxvbjtSZWFwZXJzIFdyZWF0aDtNb25hcmNoIEJvdyBQcmVtO01hbnRsZSBvZiB0aGUgQ2luZGVyIEJhcm9uIFN0eWxlIDI7Q3JpbXNvbiBHYXRlcyBvZiBOb3RobDtEYXJrY2xhdyBFbWlzc2FyeSBTdGFmZiB3aXRoIGN1c3RvbSBVcm47Tm90aGxpYyBCdXJkZW4gb2YgdGhlIENyaW1zb24gV2l0bmVzcztCZW5ldm9sZW50IENvbXBhbmlvbiBQcmVtO0JlbmV2b2xlbnQgQ29tcGFuaW9uIFYgMi4wO0p1Z2dlcm5hdXQgQXJjYW5hIFJlZCBCbGFkZWZvcm0gT3JpZ2lucztHZW5qaSBTd29yZCBQcmVtaXVtIEVkaXRpb24gQmxhY2tlbmVkIEVkZ2UgU3R5bGU7R2VuamkgU3dvcmQgUHJlbWl1bSBFZGl0aW9uIFNlcnJha3VyYSBTdHlsZTtDcmltc29uIEVkZ2Ugb2YgdGhlIExvc3QgT3JkZXI7U2VycmFrdXJhIFByZW07UHJvdm9jYXRpb24gb2YgUnVpbiBTd29yZDtUaGUgR29sZGVuIEJhcmIgb2YgU2thZGkgUHJlbTtTZWEgUmFrZXMgQnJpZGxlO0hlbG0gb2YgdGhlIFVtaXphciBDcmF3bGVyO1NoYWRvdyBpbiB0aGUgRGVlcCBBcm1vcjtTbmlwZXIgSW1tb3J0YWwgV2VhcG9uIG9mIHRoZSBBcmRhbGFuIEludGVyZGljdG9yO0FyY2FuYSBDcnlzdGFsIE1haWRlbiBGcm9zdCBBdmFsYW5jaGU7RnJvc3QgQXZhbGFuY2hlIFByZW07RmxvdXJpc2hpbmcgTG9kZXN0YXIgUHJlbTtWaXJnYXMgQXJjO01hZ3VzIEFwZXggUHJlbTtJbW1vcnRhbCBJbnZva2VyIEtpZDtBY29seXRlIG9mIHRoZSBMb3N0IEFydHMgd2l0aCBUYXVudCBBdHRhY2tzO0ZlYXN0IG9mIEFic2Nlc3Npb24gQ2hhaW47TGFyZ2UgVGFzc2VscyBvZiB0aGUgQmxhY2sgRGVhdGg7SW5zYXRpYWJsZSBCb25lc2F3IFByZW07U2tpdHRlcmluZyBEZXNvbGF0aW9uIFByZW07Q3JpbXNvbiBQaXF1ZTtHb2xkZW4gQ3lycmlkYWUgUHJlbTtBdXNwaWNlIG9mIHRoZSBXaHlybGVneWdlO0hpZGRlbiBWZWN0b3IgLSBCbGFkZTtIaWRkZW4gVmVjdG9yIC0gQmVsdDtIaWRkZW4gVmVjdG9yIC0gSGF0O0hpZGRlbiBWZWN0b3IgLSBBcm1vcjtUSS04IEJsaW5rIGx2bCAyIEVmZmVjdDtBZ2hhbmltIER1bmdlb24gU2NlcHRlciBFZmZlY3Q7VEktOSBGb3JjZSBTdGFmZiBFZmZlY3Q7VEktNyBUZWFtIExpcXVpZCBUUCBFZmZlY3Q7VEktOCBGb3VudGFpbiBSZWdlbiBsdmwgMyBFZmZlY3Q7UGxhbmV0ZmFsbCBTdHVuIEVmZmVjdDtBZ2hhbmltcyBJbnRlcmRpbWVuc2lvbmFsIEJhYnkgUm9zaGFuO0NvbGxlY3RvcnMgQmFieSBSb3NoYW4gMjAxNztDb2xsZWN0b3JzIEJhYnkgUm9zaGFuIDIwMTg7SG9uZXkgSGVpc3QgQmFieSBSb3NoYW47QW1hdGVyYXN1O0Rvb21saW5nIFByZW07R29sZGVuIEJhYnkgUm9zaGFuO0dvbGRlbiBEb29tbGluZyBQcmVtO0dvbGRlbiBIdW50bGluZyBQcmVtO1RyYXBqYXcgdGhlIEJveGhvdW5kO0h3eXR0eSBhbmQgU2h5enp5cmQ7U3Ryb25nYmFjayB0aGUgU3dpZnQ7RmV6emxlIEZlZXogdGhlIE1hZ2ljIENhcnBldCBTbWVldmlsO0xvY2tqYXcgdGhlIEJveGhvdW5kIFByZW07TXVycmlzc2V5IHRoZSBTbWVldmlsIFByZW07UGxhdGludW0gQmFieSBSb3NoYW4gd2l0aCBCbHVlIEVmZmVjdDtDaGlja2VuIEh1dCBXYXJkO1RlcnJhaW4gLSBSZWVmcyBFZGdlO1YxbGF0IEFubm91bmNlcjtHYWJlIE5ld2VsbCBNZWdhLUtpbGw7VjFsYXQgTWVnYS1LaWxscztCZWV0bGVqYXdzIHRoZSBCb3hob3VuZDtHaW5nZXJicmVhZCBCYWJ5IFJvc2hhbjtQaGFudG9tIEFkdmVudDtQaGFudG9tIEFkdmVudCAtIFNob3VsZGVycztUcmFuc3ZlcnNhbnQgU291bCBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzO1BoYW50b20gQWR2ZW50IC0gQmVsdDtQaGFudG9tIEFkdmVudCAtIFdlYXBvbjtIZWxscyBHdWlkZSBQcmVtO0F2b3dhbmNlIG9mIHRoZSBWZWlsZWQgT25lcztNYW5pZm9sZCBQYXJhZG94IFBBIEFyY2FuYSBTdHlsZSAzO1dpbmRyYW5nZXIgQXJjYW5hIHN0eWxlIDIgKE9yYW5nZSBCaXJkKSBhbmQgRnVsbCBXUiBpbW1vcnRhbDtXaW5kcmFuZ2VyIEFyY2FuYSBzdHlsZSAxIChCbHVlIEJpcmQpICsgRnVsbCBXUiBpbW1vcnRhbDtBbnRpTWFnZSBSRUQgTWVnYVBhY2s7QW50aW1hZ2UgV2VpIEZlbWFsZSAoWWQ5519IGNhbiBhZGQgV2VhcG9uIGFuZCBIZWFkKTtCcmlzdGxlYmFjayBNZWdhUGFjaztBeGUgZnVsbCBJbW1vcnRhbHMgTWVnYXBhY2s7TW9ua2V5IEtpbmcgQXJjYW5hIE1lZ2FQYWNrO0xlZ2lvbiBDb21tYW5kZXIgTW9kTWFrZXIgTWVnYVBhY2s7RXRpZW5uZSBTd2lmdGd1YXJkO0VhcnRoc2hha2VyIE1lZ2FQYWNrIE5ldztQdXBwZXQgUHVkZ2UgUGVyc29uYSAoeWQ5519IGNhbiBhZGQgSG9vaykgVVA7T2dyZSBNYWdpIEltbW9ydGFscyBBcmNhbmEgTWVnYVBhY2s7TW9ycGhsaW5nIEltbW9ydGFscyBNZWdhUGFjayBVUDtNYW5pZm9sZCBQYXJhZG94IEdvdGhpYyBIdW50ZXI7IDEyM3x8fA==