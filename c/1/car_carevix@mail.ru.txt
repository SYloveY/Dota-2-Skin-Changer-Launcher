bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogMEM1OUExQTgtNzI0RS0wMDAwLTAwMDAtMDAwMDAwMDAwMDAwIDExMXx8fCAyMjI6OiAkMnkkMTAkWldOa01EUmhPR1prTVRjeE5qaGtZdWo1Mi9UODhEWFlpMVVXVXAyb3VGay8ub1VBZFZMLjIgMjIyfHx8IDEyMzo6IGRyaXZlX2Rpcjo6TWlraSBTYXlha2EgZm9yIEFiYmFkb24gYnkgUGF0Y2hvdWxpIEtub3dsZWRnZTtkcml2ZV9kaXI6OlJhaWQgb2YgdGhlIE5vcnRoZXJuIEV4aWxlcztkcml2ZV9kaXI6OlNoYXR0ZXJibGFzdCBDcm93bjtkcml2ZV9kaXI6OkFuY2llbnQgQXBwYXJpdGlvbiBDaGluYSBNb2RlbDtkcml2ZV9kaXI6OkdhcmIgb2YgdGhlIFByb3BoZXQgRm9yZXRvbGQ7ZHJpdmVfZGlyOjpBcm1vciBvZiB0aGUgRXF1aWxpYnJpdW07ZHJpdmVfZGlyOjpTcGlyZXMgb2YgdGhlIFByb3BoZXQgRm9yZXRvbGQ7ZHJpdmVfZGlyOjpUYWlsIG9mIHRoZSBFcXVpbGlicml1bTtkcml2ZV9kaXI6OlNmUyBEZW1vbiBIdW50ZXIgRm9yIEFudGltYWdlO2RyaXZlX2Rpcjo6SGFydmVzdGVkIFNob3VsZGVycztkcml2ZV9kaXI6OktvbWVpamkgS29pc2hpIDIgZm9yIEJhbmUgYnkgUGF0Y2hvdWxpIEtub3dsZWRnZTtkcml2ZV9kaXI6OlN0cnlnd3lyIEJsb29kc2Vla2VyO2RyaXZlX2Rpcjo6QnJld21hc3RlciBmcm9tIEhPVFM7ZHJpdmVfZGlyOjpEZXNlcnQgQnJvb2Rtb3RoZXI7ZHJpdmVfZGlyOjpUaGUgSG91bmRzIG9mIENoYW9zIFYgMy4xO2RyaXZlX2Rpcjo6RGFyayBSdWluIFNldCBWIDMuMTtkcml2ZV9kaXI6OkthbmFtZSBNYWRva2EgZm9yIENsaW5reiBieSBQYXRjaG91bGkgS25vd2xlZGdlO2RyaXZlX2Rpcjo6TnVjbGVhciBDbG9ja3dlcms7ZHJpdmVfZGlyOjpTaGVybWFuIE1haWRlbiBWIDQuMTtkcml2ZV9kaXI6OllhZ29rb3JvIEVpcmluIGZvciBEYXp6bGUgYnkgUGF0Y2hvdWxpIEtub3dsZWRnZTtkcml2ZV9kaXI6OlNhaWd5b3VqaSBZb3lva28gZm9yIERQIGJ5IFBhdGNob3VsaSBLbm93bGVkZ2U7ZHJpdmVfZGlyOjpEaWFibG8tRG9vbTtkcml2ZV9kaXI6OkhlYXZlbmx5IFN3b3JkIERvb20gViAzLjA7ZHJpdmVfZGlyOjpFbWVyYWxkIERyYWdvbjtkcml2ZV9kaXI6OkxhZHkgU3lsdmFuYXMgZm9yIERyb3cgUmFuZ2VyIFYgMy4wO2RyaXZlX2Rpcjo6Q2hsb2Ugdm9uIEVpbnpiZXJuIGZvciBFYXJ0aCBTcGlyaXQgYnkgUGF0Y2hvdWxpIEtub3dsZWRnZTtkcml2ZV9kaXI6OkhpbmFuYXdpIFRlbnNoaSBmb3IgRWFydGhzaGFrZXIgYnkgUGF0Y2hvdWxpIEtub3dsZWRnZTtkcml2ZV9kaXI6Ok9yZGVyIG9mIHRoZSBXYW5kZXJpbmcgRmxhbWUgViAyLjE7ZHJpdmVfZGlyOjpGaXJlcyBvZiB0aGUgVm9sY2FuaWMgR3VhcmQ7ZHJpdmVfZGlyOjpDaW5kZXIgU2Vuc2VpO2RyaXZlX2Rpcjo6QW5jaWVudCBNZWNoYW5pc207ZHJpdmVfZGlyOjpGb3JnZWQgaW4gRGVtb25zIEJsb29kIFNldDtkcml2ZV9kaXI6OlRoZSBSb3dkeSBGaXJlYnJhbmQ7ZHJpdmVfZGlyOjpUaGUgV2lsZCBUYW1lcjtkcml2ZV9kaXI6Okh1bnRlcnMgR2xvcnk7ZHJpdmVfZGlyOjpMb3N0IFJhbmdlcjtkcml2ZV9kaXI6OkljZXBsYWluIFJhdmFnZXI7ZHJpdmVfZGlyOjpIdW1ibGUgS25pZ2h0O2RyaXZlX2Rpcjo6Rm9yZ290dGVuIFRhY3RpY2lhbjtkcml2ZV9kaXI6OlNhY2NoYXJpbmUgU2Fib3RldXI7ZHJpdmVfZGlyOjpMaWdodG5pbmcgSGFyYmluZ2VyO2RyaXZlX2Rpcjo6VGhlIFNoZWVwIFNldDtkcml2ZV9kaXI6OkFieXNzYWwgVm9ydGV4O2RyaXZlX2Rpcjo6RXhwb25lbnQgb2YgdGhlIEVuZGxlc3MgU3RhcnM7ZHJpdmVfZGlyOjpNaXNnaXZpbmdzIG9mIHRoZSBFbWVyYWxkIEFnZTtkcml2ZV9kaXI6OlRlbmd1IEd1YXJkaWFuIFNldDtkcml2ZV9kaXI6OkFsbGllZCBDb21tYW5kZXIgU2V0O2RyaXZlX2Rpcjo6Q3RodWdoYSBmb3IgSHVza2FyIGJ5IFBhdGNob3VsaSBLbm93bGVkZ2U7ZHJpdmVfZGlyOjpTb3VwIGZvciBTbHV0cyBoYWlyIGZvciBJbnZva2VyO2RyaXZlX2Rpcjo6Q292ZW5hbnQgb2YgdGhlIERlcHRocztkcml2ZV9kaXI6OlRoZSBHYWxhY3RpYyBJTztkcml2ZV9kaXI6OkRhdGFzdGFyIFByb2dlbml0b3IgKEFsdGVyIEFyY2FuYSk7ZHJpdmVfZGlyOjpQeXJleGFlYyBGbG9lO2RyaXZlX2Rpcjo6QmFyZGluZyBvZiBDaGltZXJpYyBSYXBwb3J0O2RyaXZlX2Rpcjo6U2FtdXJhaSBvZiBXaW5kIFYgMy4wO2RyaXZlX2Rpcjo6TG9sbGlwb3AgSnVnZ2VybmF1dCBWIDMuMDtkcml2ZV9kaXI6OlN1c2FubyBPcyBEZXNjZW5kYW50O2RyaXZlX2Rpcjo6V2lzZG9tIG9mIHRoZSBNaWRuaWdodCBTdW47ZHJpdmVfZGlyOjpCZXN0b3dtZW50cyBvZiB0aGUgRGl2aW5lIEFuY2hvciBlZmZlY3RzO2RyaXZlX2Rpcjo6RGl2aW5lIEFuY2hvciBTdHlsZSAyO2RyaXZlX2Rpcjo6VGhlIENyaW1zb24gUGlyYXRlO2RyaXZlX2Rpcjo6QWthbWFuYWggZm9yIExlZ2lvbiBDb21tYW5kZXIgViAzLjE7ZHJpdmVfZGlyOjpFcnJhbnQgU29sZGllcjtkcml2ZV9kaXI6OkxvcmQgb2YgQ2hyb25vcHRpYyBTeW50aGVzaXM7ZHJpdmVfZGlyOjpBc2NlbmRhbmNlIG9mIHRoZSBSaW1lIExvcmQgMXN0IFN0eWxlO2RyaXZlX2Rpcjo6Qm9uZHMgb2YgTWFkbmVzcyBTZXQgU3R5bGUgMTtkcml2ZV9kaXI6OkljZSBMaW5hIDJuZCBTdHlsZTtkcml2ZV9kaXI6OkdvZGRlc3Mgb2YgdGhlIFVuZGVyd29ybGQ7ZHJpdmVfZGlyOjpOeWFydWtvIGZvciBMaW9uIGJ5IFBhdGNob3VsaSBLbm93bGVkZ2U7ZHJpdmVfZGlyOjpMb25lIERydWlkIFdpbm5pZSBQb29oIFYgMi4wO2RyaXZlX2Rpcjo6QmxhY2sgSWNlIFNjb3VyZ2U7ZHJpdmVfZGlyOjpBbGJpbm8gTHljYW47ZHJpdmVfZGlyOjpTZWlzbWljIEJlcnNlcmtlcjtkcml2ZV9kaXI6Ok5lcHR1bmUgZm9yIE1hcnMgYnkgUGF0Y2hvdWxpIEtub3dsZWRnZTtkcml2ZV9kaXI6OkV5ZSBvZiB0aGUgQmVob2xkZXI7ZHJpdmVfZGlyOjpYY2FsaWJ1ciBTZXQgZm9yIE1lZXBvO2RyaXZlX2Rpcjo6U3Bpcml0IG9mIFRoZSBTYWNyZWQgR2xvdmU7ZHJpdmVfZGlyOjpIYXZvYyBvZiBEcmFnb24gUGFsYWNlIFYgMi4wO2RyaXZlX2Rpcjo6QmxhZGUgb2YgVGVhcnMgYW5kIENyb3duIG9mIFRlYXJzO2RyaXZlX2Rpcjo6SXpheW9pIE1pa3UgZm9yIE5hZ2EgU2lyZW4gYnkgUGF0Y2hvdWxpIEtub3dsZWRnZTtkcml2ZV9kaXI6OkN1dGUgQ2FjdHVzIFNldDtkcml2ZV9kaXI6OkRlYXRoIE5lY3JvbGlnaHQgViAzLjI7ZHJpdmVfZGlyOjpSZW1pbGlhIFNjYXJsZXQgZm9yIE5TIGJ5IFBhdGNob3VsaSBLbm93bGVkZ2U7ZHJpdmVfZGlyOjpDdXJzZWQgWmVhbG90O2RyaXZlX2Rpcjo6SGlnaGVyIE9ncmUgTWFnaTtkcml2ZV9kaXI6OkF1c3BpY2Ugb2YgdGhlIFdoeXJsZWd5Z2UgUHJlbTtkcml2ZV9kaXI6Okd1YXJkaWFuIG9mIE1ldGFsO2RyaXZlX2Rpcjo6TmVidWxhcyBXYWxrZXI7ZHJpdmVfZGlyOjpIZXJhbGQgb2YgTWVhc3VyZWxlc3MgUnVpbiBWIDIuMTtkcml2ZV9kaXI6OlRhbGVzIG9mIHRoZSBXaW5kd2FyZCBSb2d1ZTtkcml2ZV9kaXI6OldhcmRlbiBmb3IgUGhhbnRvbSBBc3Nhc3NpbiArIFdDIDMgU291bmQgViAyLjA7ZHJpdmVfZGlyOjpWZW5nZWFuY2Ugb2YgdGhlIFN1bndhcnJpb3I7ZHJpdmVfZGlyOjpJcmUgb2YgTW9sdGVuIFJlYmlydGg7ZHJpdmVfZGlyOjpMZUJsYW5jIGZvciBQdWNrO2RyaXZlX2Rpcjo6R29wb1B1ZGdlO2RyaXZlX2Rpcjo6RGVtb25pYyBQdWduYSBWIDMuMDtkcml2ZV9kaXI6OlJveWFsIERlY3JlZSBLbmlmZSBBdHRhY2s7ZHJpdmVfZGlyOjpTYWludCBSYXpvcjtkcml2ZV9kaXI6OkdvbGRlbiBFZGljdCBvZiBTaGFkb3dzIFZhbGVlcmEgdG8gUmlraTtkcml2ZV9kaXI6OkN1bm5pbmcgQ29yc2FpciBWYWxlZXJhIGZvciBSaWtpO2RyaXZlX2Rpcjo6VmFsZWVyYSBSdXNzaWFuIFZvaWNlO2RyaXZlX2Rpcjo6QW5jaWVudCBNYWd1cyBTdHlsZSAyO2RyaXZlX2Rpcjo6U3RlZWwgS2luZztkcml2ZV9kaXI6OkNyb3duIG9mIFRoZSBOaWdodHdvcmxkO2RyaXZlX2Rpcjo6U291bHMgVHlyYW50IEhlYWQ7ZHJpdmVfZGlyOjpUb3hpYyBTRjtkcml2ZV9kaXI6Ok9sZCBNb2RlbCBTaGFkb3cgRmllbmQ7ZHJpdmVfZGlyOjpUb3hpYyBEZWF0aCBFYXRlcjtkcml2ZV9kaXI6OkNoYXJtZXIgb2YgRmlyZXNuYWtlO2RyaXZlX2Rpcjo6VG9vbHMgb2YgdGhlIEZpbmFsIFV0dGVyYW5jZTtkcml2ZV9kaXI6Okh1c2ggb2YgRXRlcm5hbCBOaWdodDtkcml2ZV9kaXI6OkdvbGQgU2t5bWFnZTtkcml2ZV9kaXI6OkJhc3Rpb24gb2YgdGhlIExpb25zZ3VhcmQ7ZHJpdmVfZGlyOjpZYXlhIGZvciBTbGFyZGFyIGJ5IFBhdGNob3VsaSBLbm93bGVkZ2U7ZHJpdmVfZGlyOjpEYXJrIFJlZWYgRXNjYXBlIFYgMi4xO2RyaXZlX2Rpcjo6SGludGVybGFuZCBTdGFsa2VyO2RyaXZlX2Rpcjo6R29sZGVuIEZ1bGwtQm9yZSBCb25hbnphO2RyaXZlX2Rpcjo6VG9tb2UgTWFtaSBmb3IgU25pcGVyIGJ5IFBhdGNob3VsaSBLbm93bGVkZ2U7ZHJpdmVfZGlyOjpEcmFnb24gTG9yZSBBV1A7ZHJpdmVfZGlyOjpQaGFudG9tIEFkdmVudCBVUDtkcml2ZV9kaXI6OkF1cmFudGlhY28gbWlsaXRpcztkcml2ZV9kaXI6Oklyb25iYXJkZSBDaGFyZ2VyO2RyaXZlX2Rpcjo6T2xkIFN0b3JtIFNwaXJpdDtkcml2ZV9kaXI6OlBvd2RlcnNsZWQgUm9va2VyeTtkcml2ZV9kaXI6OkNvbmNlYWxlZCBSYXZlbjtkcml2ZV9kaXI6OlN1biBBc3Nhc2luIFYgMy4wO2RyaXZlX2Rpcjo6UGluayBDb2xvciBmb3IgVEI7ZHJpdmVfZGlyOjpJbGxpZGFuIFJVUyBzb3VuZHM7ZHJpdmVfZGlyOjpJbGxpZGFuIFN0b3JtcmFnZSBmb3IgVGVycm9yYmxhZGUgViAyLjA7ZHJpdmVfZGlyOjpUaWRlaHVudGVyIEtpbGxlcjtkcml2ZV9kaXI6OlRyZWsgb2YgdGhlIFRyYWlsYmxhemVyO2RyaXZlX2Rpcjo6SXpheW9pIFNha3V5YSBmb3IgVGlua2VyIGJ5IFBhdGNob3VsaSBLbm93bGVkZ2U7ZHJpdmVfZGlyOjpNYWplc3R5IE9mIFRoZSBDb2xvc3N1cyAtIE1vbm9saXRoO2RyaXZlX2Rpcjo6QmFyayBvZiB0aGUgQWdlbGVzcyBXaXRuZXNzIERpc3Rpbmd1aXNoZWQ7ZHJpdmVfZGlyOjpGcm9zdCBBdWJ1cm4gSGlkZWF3YXk7ZHJpdmVfZGlyOjpIYWt1cmVpIFJlaW11IGZvciBUcm9sbCBXYXJsb3JkIGJ5IFBhdGNob3VsaSBLbm93bGVkZ2U7ZHJpdmVfZGlyOjpadWxqaW4gZm9yIFRyb2xsIFdhcmxvcmQ7ZHJpdmVfZGlyOjpBcmN0aWMgZmFuZztkcml2ZV9kaXI6OlJpZnQgQ2hhbXBpb247ZHJpdmVfZGlyOjpBYnlzc2FsIEN1aXJhc3M7ZHJpdmVfZGlyOjpEYXJrIE1lYWRvdyBNYXNzYWNyZSBBcm1vcjtkcml2ZV9kaXI6OkRhcmsgTWVhZG93IE1hc3NhY3JlIEhlYWQ7ZHJpdmVfZGlyOjpSb3NoYW4gSHVudGVycyBTZXQ7ZHJpdmVfZGlyOjpTaGlyYWkgS3Vyb2tvIGZvciBWZW5nZWZ1bCBTcGlyaXQgYnkgUGF0Y2hvdWxpIEtub3dsZWRnZTtkcml2ZV9kaXI6OkZlcm9jaWQ5519cyBUb3hpY2FudDtkcml2ZV9kaXI6OkNvcnJ1cHRpb24gb2YgdGhlIFZpcnVsZW50IEtyYWl0O2RyaXZlX2Rpcjo6UHJpbnogRXVnZW4gZm9yIFZpcGVyIGJ5IFBhdGNob3VsaSBLbm93bGVkZ2U7ZHJpdmVfZGlyOjpDaGlsbCBvZiB0aGUgS2VlcGVycyBHYXplO2RyaXZlX2Rpcjo6VW5ibGlua2luZyBFdGVybml0eTtkcml2ZV9kaXI6OlVuZGVyd29ybGQgRG9nO2RyaXZlX2Rpcjo6QnJvbnplbW9uc3RlciBvZiB0aGUgV2FpbGluZyBJbmZlcm5vO2RyaXZlX2Rpcjo6RHJlYWQgQ29tcGFjdCBTdHlsZSAyO2RyaXZlX2Rpcjo6VG9raXNha2kgS3VydW1pIGZvciBXZWF2ZXIgYnkgUGF0Y2hvdWxpIEtub3dsZWRnZTtkcml2ZV9kaXI6OlBpeGVsIFdpbmRydW5uZXI7ZHJpdmVfZGlyOjpXaW5ncyBvZiBDb2xvcmZ1bCBJY2VjcnlzdGFscztkcml2ZV9kaXI6Ok91dGxhbmRpc2ggR291cm1ldDtkcml2ZV9kaXI6Okl0c3VrYSBLb3RvcmkgZm9yIFdLIGJ5IFBhdGNob3VsaSBLbm93bGVkZ2U7ZHJpdmVfZGlyOjpTZXh5IFdvbWFuIE1lZ2EtS2lsbDtkcml2ZV9kaXI6OkhFWSBURUlUT0tVIEFubm9uY2VyIE1lZ2EtS2lsbDtkcml2ZV9kaXI6OkdhY2hpIE1lZ2EtS2lsbHM7ZHJpdmVfZGlyOjpSZW0gTWVnYS1LaWxscztkcml2ZV9kaXI6OkNoaXRvZ2UgTWVnYS1LaWxscztkcml2ZV9kaXI6OkthdG91IE1lZ2EtS2lsbHM7ZHJpdmVfZGlyOjpLb25nb3UgTWVnYS1LaWxscztkcml2ZV9kaXI6OlJpc2UgS3VqaWthd2EgQW5ub3VuY2VyIChKYXApO2RyaXZlX2Rpcjo6RGFya2VzdCBEdW5nZW9uIE1lZ2Eta2lsbHM7ZHJpdmVfZGlyOjpUcmluZSBNZWdhLUtpbGxzO2RyaXZlX2Rpcjo6RmFsbG91dCA0IE1lZ2EtS2lsbHM7ZHJpdmVfZGlyOjpUcnVzdHkgTWQ5519bnRhaW4gWWFrO2RyaXZlX2Rpcjo6V3l2ZXJuIEhhdGNobGluZztkcml2ZV9kaXI6OkRBQyAyMDE1IENoYW9zIEtuaWdodCBDdXJzb3IgUGFjaztkcml2ZV9kaXI6OkN1c3RvbSBEYXNoYm9hcmQgMTA0O2RyaXZlX2Rpcjo6Q3VzdG9tIERhc2hib2FyZCAxMztkcml2ZV9kaXI6OkN1c3RvbSBEYXNoYm9hcmQgMTI2O2RyaXZlX2Rpcjo6Q3VzdG9tIERhc2hib2FyZCAxMzE7ZHJpdmVfZGlyOjpDdXN0b20gRGFzaGJvYXJkIDEzNDtkcml2ZV9kaXI6OkN1c3RvbSBEYXNoYm9hcmQgMTM2O2RyaXZlX2Rpcjo6Q3VzdG9tIERhc2hib2FyZCAxMzM7ZHJpdmVfZGlyOjpDdXN0b20gRGFzaGJvYXJkIDE0NDtkcml2ZV9kaXI6OkN1c3RvbSBEYXNoYm9hcmQgMjQ7ZHJpdmVfZGlyOjpDdXN0b20gRGFzaGJvYXJkIDI1O2RyaXZlX2Rpcjo6Q3VzdG9tIERhc2hib2FyZCAyNztkcml2ZV9kaXI6OkN1c3RvbSBEYXNoYm9hcmQgMzU7ZHJpdmVfZGlyOjpDdXN0b20gRGFzaGJvYXJkIDQ1O2RyaXZlX2Rpcjo6Q3VzdG9tIERhc2hib2FyZCA0NDtkcml2ZV9kaXI6OkN1c3RvbSBEYXNoYm9hcmQgNDY7ZHJpdmVfZGlyOjpDdXN0b20gRGFzaGJvYXJkIDk0O2RyaXZlX2Rpcjo6QWVnaXMgYW5kIFJvc2hhbiBTdC4gVmFsZW50aW5lIERheTtkcml2ZV9kaXI6OlRJLTEwIExldmVsIFVwIEVmZmVjdDtkcml2ZV9kaXI6OlRJLTcgTGV2ZWwgVXAgRWZmZWN0O2RyaXZlX2Rpcjo6V2ludGVyIFZlcnN1cyBTY3JlZW47ZHJpdmVfZGlyOjpHdWFyZGlhbnMgb2YgdGhlIExvc3QgUGF0aCBEaXJlIFRvd2Vycztkcml2ZV9kaXI6Okd1YXJkaWFucyBvZiB0aGUgTG9zdCBQYXRoIFJhZGlhbnQgVG93ZXJzO2RyaXZlX2Rpcjo6VEktNyBQbGFuZXQgRG9nIFRQIGVmZmVjdDtkcml2ZV9kaXI6OkthcHBhIFNpbGVuY2U7ZHJpdmVfZGlyOjpUSS03IFNoaXZhcyBHdWFyZCBFZmZlY3Q7ZHJpdmVfZGlyOjpSZWVmIFJvc2hhbjtkcml2ZV9kaXI6OlJpdmVyIFZpYWwgUGluaztkcml2ZV9kaXI6Ok1pbmUgUmFkaXVzIDcwMjtkcml2ZV9kaXI6OlB1bXBraW4gVHJlZXMgVVA7ZHJpdmVfZGlyOjpQaGFzZSBCb290cyBUSS02IEVmZmVjdDtkcml2ZV9kaXI6Ok5ldyBZZWFyIEhhdHMgMjAxODtkcml2ZV9kaXI6Ok1qb2xsbmlyIFRJLTYgRWZmZWN0O2RyaXZlX2Rpcjo6TWVrYW5pc20gVEktNiBFZmZlY3Q7ZHJpdmVfZGlyOjpUSS05IE1la2FzbSBFZmZlY3Q7ZHJpdmVfZGlyOjpMZXZlbFVwIFRJLTYgRWZmZWN0O2RyaXZlX2Rpcjo6TGFzdGhpdCBHb2xkIC0gTmV3IEJsb29tIDIwMTk7ZHJpdmVfZGlyOjpJcm9uIEJyYW5jaCBDaHJpc3RtYXMgVHJlZTtkcml2ZV9kaXI6OlBlZGVzdGFsIFRoZSBGYWxsIE1ham9yIDIwMTYgUmFkaWFudDtkcml2ZV9kaXI6OlBlZGVzdGFsIEZlYXN0IG9mIEFic2Nlc3Npb24gR3JlZW47ZHJpdmVfZGlyOjpXaW50ZXIgU2N5dGhlIG9mIFZ5c2UgRWZmZWN0IDIwMTc7ZHJpdmVfZGlyOjpCYXR0bGUgUGFzcyBFZmZlY3QgRm91bnRhaW4gUmVnZW47ZHJpdmVfZGlyOjpCYXR0bGUgUGFzcyBFZmZlY3QgRm9yY2UgU3RhZmY7ZHJpdmVfZGlyOjpCYXR0bGUgUGFzcyBFZmZlY3QgRXVsO2RyaXZlX2Rpcjo6RnVjayBEZW55O2RyaXZlX2Rpcjo6VEktOSBTZWFzb25hbCBDcmVlcCBEZW55IEVmZmVjdDtkcml2ZV9kaXI6OlRJLTQgZWZmZWN0IERhZ29uO2RyaXZlX2Rpcjo6UGluZSBDb25lIE1lbGVlIE1lZ2EgQ3JlZXBzO2RyaXZlX2Rpcjo6UmVwdGlsaWFuIFJlZnVnZSBSYWRpYW50IENyZWVwcztkcml2ZV9kaXI6OlVTU1IgbWVsZWUgY3JlZXA7ZHJpdmVfZGlyOjpDYXZlcm5pdGUgRGlyZSBDcmVlcHM7ZHJpdmVfZGlyOjpDb2xvclN0YXRzO2RyaXZlX2Rpcjo6MjUgbHZsIHBpbmc7ZHJpdmVfZGlyOjpCb3R0bGUgVEktNiBFZmZlY3Q7ZHJpdmVfZGlyOjpQbGFuZXRmYWxsIEJsaW5rO2RyaXZlX2Rpcjo6RG90YUNpbmVtYSBCcmlnaHQgSFVEO2RyaXZlX2Rpcjo6QXp1cmUgQ29uc3RlbGxhdGlvbiBIVUQ7ZHJpdmVfZGlyOjpIVUQgb2YgdGhlIEJ1cm5pbmcgU2NhbGUgSWNlO2RyaXZlX2Rpcjo6WWVhciBiZWFzdCBiYXR0bGUgbG9hZGluZ3NjcmVlbjtkcml2ZV9kaXI6OlNsdHYgMTAgbG9hZGluZ3NjcmVlbjtkcml2ZV9kaXI6OkkgbGVhZ3VlIHNlYXNvbjIgbG9hZGluZ3NjcmVlbjtkcml2ZV9kaXI6OlRlcnJhaW4gLSBUaGUgS2luZ3MgTmV3IEpvdXJuZXk7ZHJpdmVfZGlyOjpCcm9vZG1vdGhlciBBbmltZSBWb2ljZTtkcml2ZV9kaXI6OkNyeXN0YWwgTWFpZGVuIEFuaW1lIFZvaWNlO2RyaXZlX2Rpcjo6RHJvdyBSYW5nZXIgQW5pbWUgVm9pY2U7ZHJpdmVfZGlyOjpEZWF0aCBQcm9waGV0IEFuaW1lIFZvaWNlO2RyaXZlX2Rpcjo6TGluYSBBbmltZSBWb2ljZTtkcml2ZV9kaXI6OkVuY2hhbnRyZXNzIEFuaW1lIFZvaWNlO2RyaXZlX2Rpcjo6TWVkdXNhIEFuaW1lIFZvaWNlO2RyaXZlX2Rpcjo6TmFnYSBTaXJlbiBBbmltZSBWb2ljZTtkcml2ZV9kaXI6Okx1bmEgQW5pbWUgVm9pY2U7ZHJpdmVfZGlyOjpQaGFudG9tIEFzc2Fzc2luIEFuaW1lIFZvaWNlO2RyaXZlX2Rpcjo6VGVtcGxhciBBc3Nhc3NpbiBBbmltZSBWb2ljZTtkcml2ZV9kaXI6OlB1Y2sgQW5pbWUgVm9pY2U7ZHJpdmVfZGlyOjpRdWVlbiBvZiBQYWluIEFuaW1lIFZvaWNlO2RyaXZlX2Rpcjo6U3BlY3RyZSBBbmltZSBWb2ljZTtkcml2ZV9kaXI6OldpbmRydW5uZXIgQW5pbWUgVm9pY2U7ZHJpdmVfZGlyOjpWZW5nZWZ1bCBTcGlyaXQgQW5pbWUgVm9pY2U7ZHJpdmVfZGlyOjpXaW50ZXIgV3l2ZXJuIEFuaW1lIFZvaWNlO2RyaXZlX2Rpcjo6QmFuZSAtIEdhbmdhbXN0eWxlLXNsb3c7ZHJpdmVfZGlyOjpCZWFzdG1hc3RlciBGdXNyb2RhaDtkcml2ZV9kaXI6OkNoZW4gc291bmRzIGZyb20gVFJBU0hFUjtkcml2ZV9kaXI6OkJhbnNoaSAtIEdob3N0YnVzdGVycztkcml2ZV9kaXI6OkJhbmUgLSBZYSBCeWR5IFJ5a2kgVHZvaSBDZWxvdmF0O2RyaXZlX2Rpcjo6Q3J5IERvb20gVWx0O2RyaXZlX2Rpcjo6RnVyaW9uIFNpbGEgWmVtbGk7ZHJpdmVfZGlyOjpJdGVtIFNvdW5kIFdDIDMgZm9yIFJlYm9ybjtkcml2ZV9kaXI6OkR1c3QgdXNlIE1HUztkcml2ZV9kaXI6Ok1hdGNoIFJlYWR5IC0gU0VNQVJHTCAtIENyZWRvIFJldm9sdXRpb24gKFphcmRvbmljIFJlbWl4KTtkcml2ZV9kaXI6Ok1hdGNoIFJlYWR5IC0gUG9nbmFsaTtkcml2ZV9kaXI6Ok1hdGNoIFJlYWR5IC0gV2UgQXJlIE51bWJlciBPbmU7ZHJpdmVfZGlyOjpBcnRoYXMgV0MgMyBTb3VuZCBmb3IgQWJiYWRvbjtkcml2ZV9kaXI6OlRvaWxldCBTaHJpbmU7ZHJpdmVfZGlyOjpXZWF0aGVyIFNub3c7ZHJpdmVfZGlyOjpXZWF0aGVyIFNwcmluZztkcml2ZV9kaXI6OldlYXRoZXIgTW9vbmJlYW07IDEyM3x8fA==