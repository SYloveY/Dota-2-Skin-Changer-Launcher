limitHWID:: 1 000||| 111::  111||| 222:: $2y$10$YzI0NmNlZDA5ZWJkMWI5YO1tSeKAZjeoTo5A3a4D/Kl/VhbJ.h7Z. 222||| 123:: Frozen Void Shoulder;Frozen Void Head;Frozen Void Belt;Frozen Void Arms;Voidhammer;Hood of the Abyssal Arms;Hydrakan Latch;Shoulder of the Abyssal Arms;Back of the Abyssal Arms;Bracers of the Abyssal Arms;Ghillied Gunman Arms;Ghillied Gunman Cape;Ghillied Gunman Nest Cap;Ghillied Gunman Shoulders;Ghillied Gunman Sniper Rifle;Bracers of the Survivor;Leggings of the Awakened;Offhand Basher of Mage Skulls;Basher of Mage Skulls;Gift of the Awakened;Hood of the Creeping Shadow;Shawl of the Creeping Shadow;Belt of the Creeping Shadow;Cape of the Creeping Shadow;Shroud of the Awakened;Shoulder Plate of the Fervent Conscript;Complete Helm of the Dark Moon Stalker;Mount of the Raidforged Rider;Complete Shield of the Dark Moon Stalker;Complete Shoulders of the Dark Moon Stalker;Glaive of the Night Grove;Whirling Talons Bracer;Whirling Talons Mask;Whirling Talons Off-Hand Dagger;Whirling Talons Shoulder;Whirling Talons Tail;Whirling Talons Dagger;Claws of the Sangstrath Fold;Mantle of the Sangstrath Fold;Barding of the Sangstrath Fold;Skull of the Razorwyrm;Dimension Ripper Arms;Dimension Ripper Back;Dimension Ripper Head;Dimension Ripper Legs;Sinister Shadow Arms;Sinister Shadow Back;Sinister Shadow Head;Sinister Shadow Legs;Kantusa the Script Sword;Desolate Conquest Champion;Apostle of Decay V 2.1; 123|||