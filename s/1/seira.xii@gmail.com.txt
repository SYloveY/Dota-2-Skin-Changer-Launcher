limitHWID:: 1 000||| 111::  111||| 222:: $2y$10$M2E1OWI2NTJkNjY0YzlhYuRMh5TXENocfkoUIq80AvevtcStpPjP2 222||| 123:: Mace of the Chosen Prem;Platinum Baby Roshan;Golden Origins of Faith Prem;Bracers and Shoulders of the Survivor;Hair of the Survivor;Golden Basher of Mage Skulls;Golden Basher Blades V 2.0;Molten Claw Prem;Golden Crucible of Rile;Undefeated General Belt;Mantle of the Cinder Baron Style 2;Axe of Phractos Prem;Origin of the Unmaking;Slumbering Terror;Head of the Apex Explorer;Belt of the Apex Explorer;Manta Marauders Manta Ray;Tank of the Manta Marauder;King of Beasts Hawk;Tribal Stone Vambrace;Belt of the Wild Tamer;Edge of Extinction Helm;Primal Paean;Chieftain of the Primal Tribes Beast;Primal Peacemaker of the Crimson Witness;Back of the Sanguine Spectrum;Feast of the Unwilling Belt;Mask of the Bloodforge;Feast of the Unwilling Shoulders;Off-Hand Weapon of the Bloodforge;Weapon of the Bloodforge;Tines of Tybara;Beast of the Crimson Ring Bracers;Infernal Chieftain of the Crimson Witness;Infernal Menace;Chaos Arbiter;Golden Chaos Fulcrum;Diabolic Aspect;Rabid Watchcog;Prelates Bracers of the Wyvern Legion;Frost Avalanche Prem;Yulsarias Mantle Prem;Golden Ice Blossom;Chicken Hut Ward;Everblack;Darkbrew Enforcer and Eternal Radiance Blades and Midas Knuckles MegaPack;AAMegaPack;Lineage Broken Scale;Wicked Space Knight;Brew Jousting Panda and Donkey Kong;Bristleback MegaPack;Ancient Arachnarok;Contested Fate;Gryphon Rider Set;Barren Survivor V 2.0;Clinkz MegaPack;Clockwerk MegaPack; 123|||