limitHWID:: 1 000||| 111::  111||| 222:: $2y$10$NDJmOGUwMTE0MDA0ZTRiOOWochiw0BVQdnueyNexzHX.yKINz1sG6 222||| 123:: Tiny Banana;Guardians of the Lost Path Radiant Towers;Guardians of the Lost Path Dire Towers;ColorStats;The Barb of Skadi;Sword of the Colossus Prem;Ti-9 Roshan;Acolyte of the Lost Arts;The Lightning Orchid V 3.0;Rose of the Corridan Maestro;Iron Surge V 2.2;Savage Mettle;Eminence of Ristul Knife Attack;Bloodstone Blade Pack;Pink Color for TB;Golden Edict of Shadows Valeera to Riki;Axia of Metira;Golden Mask of Metira;Crescent Bow;Tomoe Mami for Sniper by Patchouli Knowledge;Cthugha for Huskar by Patchouli Knowledge;Lightbringer SF;Dark Reef Escape V 2.1;Yaya for Slardar by Patchouli Knowledge;Itsuka Kotori for WK by Patchouli Knowledge;Hinanawi Tenshi for Earthshaker by Patchouli Knowledge;Havoc of Dragon Palace V 2.0;GopoPudge;Arc of the Sovereign;Komeiji Koishi 2 for Bane by Patchouli Knowledge;Prinz Eugen for Viper by Patchouli Knowledge;Ice Lina 2nd Style;Nyaruko for Lion by Patchouli Knowledge;Shirai Kuroko for Vengeful Spirit by Patchouli Knowledge;Akamanah for Legion Commander V 3.1;Eyes of the Rift;Tidehunter Killer;Magister of the Narrow Fates;Bindings of the Battleranger Chaotic Style;Divine Anchor Style 2;Sherman Maiden V 4.1;Bitterwing Legacy;Remilia Scarlet for NS by Patchouli Knowledge;Lollipop Juggernaut V 3.0;The Sheep Set; 123|||