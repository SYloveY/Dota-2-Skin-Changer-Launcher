bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogIDExMXx8fCAyMjI6OiAkMnkkMTAkWXpsaVptRXdOakV6TVRRMVptVmhOLkprNXZmOFNZd2FFYXJIVlJMWS9zSlp6cWJNWC5uTC4gMjIyfHx8IDEyMzo6IFRlcnJhaW4gLSBEZXNlcnQ7U2NvcmNoaW5nIFRhbG9uO1J1YmljayBBcmNhbmE7RHJlYWQgUmV0cmlidXRpb24gLSBIZWFkd2VhcjtEZWNsYXJhdGlvbiBvZiB0aGUgRGl2aW5lIExpZ2h0IFJhZGlhbnQgVG93ZXJzO0RlY2xhcmF0aW9uIG9mIHRoZSBEaXZpbmUgU2hhZG93IERpcmUgVG93ZXJzO0hvb2R3aW5rIERyYWdvbiBDcm9zc2JvdztUb21vKmthbiBJbmNhcm5hdGUgSG9vZDtUb21vKmthbiBJbmNhcm5hdGUgQXJtb3I7VG9tbyprYW4gSW5jYXJuYXRlIFRhaWw7QmVuZXZvbGVudCBDb21wYW5pb24gViAyLjA7RGFyayBBcnRpc3RyeSBUaHJvd2JhY2s7Q3Jvd24gb2YgQ2FsYXBoYXMgQmFjaztDcm93biBvZiBDYWxhcGhhcyBBcm1vcjtEZXNlcnQgQnVybiBNb3J0eSBJbW1vcnRhbDtEZXNlcnQgQnVybiBDcm9zc2JvdztEZXNlcnQgQnVybiBDYXA7RGVzZXJ0IEJ1cm4gT3V0Zml0O0Rlc2VydCBCdXJuIFNhZGRsZTtRdWVlbiBvZiBQYWluIEFyY2FuYSBNZWdhUGFjaztXcmFpdGggS2luZyBBcmNhbmEgTWVnYVBhY2s7TW9ycGhsaW5nIEltbW9ydGFscyBNZWdhUGFjayBVUDtQdXBwZXQgUHVkZ2UgUGVyc29uYSAoeWQ5519IGNhbiBhZGQgSG9vaykgVVA7VXJzYSBJbW1vcnRhbHMgTWVnYVBhY2s7TmlnaHRzdGFsa2VyIE1lZ2FQYWNrIHNldDtOaWdodCBTdGFsa2VyIEltbW9ydGFsIGFuZCBSZWFwZXIgS2lzaWxldiBNb2RNYWtlciBNZWdhUGFjaztEIE9jdG8gVGlua2VyO0RlbW9uZm9yZ2VkIFNldDtBYmFkZG9uIFJFRCBNZWdhUGFjaztEYXJrYnJldyBFbmZvcmNlciBhbmQgRXRlcm5hbCBSYWRpYW5jZSBCbGFkZXMgYW5kIE1pZGFzIEtudWNrbGVzIE1lZ2FQYWNrO1NoYXR0ZXJibGFzdCBTZXQ7UmlnaHRlb3VzIFRodW5kZXJib2x0IGFuZCBBcmNhbmEgTWVnYVBhY2s7U2xhcmsgTWVnYVBhY2sgTmV3O0FudGlNYWdlIFJFRCBNZWdhUGFjaztFYXJ0aHNoYWtlciBNZWdhUGFjayBOZXc7S3Vua2thIEltbW9ydGFscyBNZWdhUGFjaztDb3JyaWRhbiBNYWVzdHJvIGFuZCBUaGUgTGlnaHRuaW5nIE9yY2hpZCBhbmQgR29sZGVuIE1hbmRhdGUgb2YgdGhlIFN0b3JtYm9ybiBNZWdhUGFjayBORVc7U2lsZW5jZXIgVEkxMCBDb2xsZWN0b3JzIENhY2hlIE1lZ2FQYWNrO1NwaXJpdCBCcmVha2VyIE1lZ2FQYWNrO1ZpcGVyIE1lZ2FQYWNrO1B1cHBldCBTdW1tb25lcjtMdXJrYWJsbzsgMTIzfHx8