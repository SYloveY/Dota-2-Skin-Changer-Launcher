bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogMDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAyNDFENzQ3MzVEOzsgMTExfHx8IDIyMjo6IDY3MGJiODVjZmRhMDVlZjQ5NDg1ZTkwNmI3OTRmMDk4M2IzNmEwMThkNGQzOTgzOTA3YzVhZjRmNWMwNmU1ZTViNTc5OGZlOWFjZjFiNDA3YmQ2NTA5YTIwMTg5NzE0ZjZhNjhkNDczYTRhNTIzOGVmNGQxNDE1Mjg3NTlkOTFhIDIyMnx8fCAxMjM6OiBTdGFmZiBvZiBHdW4tWXUgb2YgdGhlIENyaW1zb24gV2l0bmVzcztDdXN0b20gRGFzaGJvYXJkIDE1O1JpdmVyIFZpYWwgRWxlY3RyaWZpZWxkO1RJLTggVGVhbSBTZWNyZXQgVFAgZWZmZWN0O0hvbmV5IEhlaXN0IEJhYnkgUm9zaGFuO0ZsYXNocG9pbnQgUHJvc2VseXRlIC0gV2VhcG9uO0ZsYXNocG9pbnQgUHJvc2VseXRlIC0gT2ZmLUhhbmQ7Rmxhc2hwb2ludCBQcm9zZWx5dGUgLSBIZWFkO0ZsYXNocG9pbnQgUHJvc2VseXRlIC0gU2hvdWxkZXI7Q2Fubm9uIG9mIHRoZSBKb2xseSBSZWF2ZXI7RmVhc3Qgb2YgQWJzY2Vzc2lvbiBDaGFpbjtIYXQgb2YgdGhlIEpvbGx5IFJlYXZlcjtJbnNhdGlhYmxlIEJvbmVzYXcgUHJlbTtSaXBwZXJzIFJlZWwgb2YgdGhlIENyaW1zb24gV2l0bmVzcztSYXBpZXJzIG9mIHRoZSBCdXJuaW5nIEdvZCBWIDMuMTtUdW5pYyBvZiB0aGUgV2FuZGVyaW5nIEZsYW1lO0Fwb2dlZSBvZiB0aGUgR3VhcmRpYW4gRmxhbWU7SmFkZSBSZWNrb25pbmcgUHJlbTtSaWNrIGFuZCBNb3J0eSBBbm5vdW5jZXI7U2FtdWVsIEwgSmFja3NvbiBNZWdhLUtpbGw7QmFuZWZ1bCBEZXZvdGlvbjtMZWdhY3kgb2YgdGhlIEZhbGxlbiBMZWdpb24gU3R5bGUgMTtTaGFkb3cgRmllbmQgQXJjYW5hIERlbW9uIEVhdGVyO0hpZGRlbiBWZWN0b3IgLSBIYXQ7SGlkZGVuIFZlY3RvciAtIEJsYWRlO0hpZGRlbiBWZWN0b3IgLSBBcm1vcjtFbmlnbWF0aWMgRW1ibGVtIG9mIHRoZSBEaXJldGlkZSAtIEdyZWVuO0JsYWRlIG9mIHRoZSBTdXJ2aXZvcjtCbGFkZSBvZiB0aGUgU3Vydml2b3IgT2ZmaGFuZDtQcm92b2NhdGlvbiBvZiBSdWluIE1hc2s7SnVnZ2VybmF1dCBBcmNhbmEgUmVkIEJsYWRlZm9ybSBPcmlnaW5zO0NyaW1zb24gRWRnZSBvZiB0aGUgTG9zdCBPcmRlcjtKYWdnZWQgSG9ub3IgTGVncztIaWRkZW4gVmVjdG9yIC0gQmVsdDtEYXJrYnJldyBFbmZvcmNlciBhbmQgRXRlcm5hbCBSYWRpYW5jZSBCbGFkZXMgYW5kIE1pZGFzIEtudWNrbGVzIE1lZ2FQYWNrO0QgT2N0byBUaW5rZXI7U3Rvcm0gU3Bpcml0IE1lZ2FQYWNrO1NsYXJrIE1lZ2FQYWNrIE5ldztUaGUgSmFkZSBHZW5lcmFsO0dvbGRlbiBEYXJrIE1hdyBJbmhpYml0byBhbmQgR29sZGVuIFByb2ZhbmUgVW5pb24gYW5kIEdvbGRlbiBEcmVhZCBSZXF1aXNpdGlvbiBMaWZlc3RlYWxlciBJbW1vcnRhbHMgTWVnYXBhY2s7QW50aW1hZ2UgV2VpIEZlbWFsZSAoWWQ5519IGNhbiBhZGQgV2VhcG9uIGFuZCBIZWFkKTtBeGUgZnVsbCBJbW1vcnRhbHMgTWVnYXBhY2s7RHJvdyBSYW5nZXIgTWVnYVBhY2s7IDEyM3x8fA==