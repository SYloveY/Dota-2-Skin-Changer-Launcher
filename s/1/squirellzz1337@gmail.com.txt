bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogIDExMXx8fCAyMjI6OiAkMnkkMTAkTldWbU1EYzNZbVV3WVRZM05tSmhNT2FBRG50VzQ2VHZmMHBKckwxNzNrTFN6UWlHNHFZL3EgMjIyfHx8IDEyMzo6IEhpZGRlbiBWZWN0b3IgLSBBcm1vcjtDb25zdGVsbGF0aW9uIEFybW9yO0hpZGRlbiBWZWN0b3IgLSBIYXQ7SGlkZGVuIFZlY3RvciAtIEJlbHQ7Q29uc3RlbGxhdGlvbiBXZWFwb247SGlkZGVuIFZlY3RvciAtIEJsYWRlO0JhdHRsZWZ1cnk7RHJlYWQgUmV0cmlidXRpb24gTWFzdGVyIG9mIE1hbmlhcyBNYXNrO0RyZWFkIFJldHJpYnV0aW9uIC0gU2hvdWxkZXIgQXJtb3IgQWx0O0RyZWFkIFJldHJpYnV0aW9uIC0gUXVpdmVyIEFsdDtTaWxlbnQgV2FrZSBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzO0RyZWFkIFJldHJpYnV0aW9uIC0gQnJhY2VycyBBbHQ7RHJlYWQgUmV0cmlidXRpb24gLSBMZWcgQXJtb3IgQWx0O0NhcGUgb2YgdGhlIEJsb29kZm9yZ2U7VHJpYmFsIFRlcnJvciBCZWx0O01hdyBvZiBFenR6aG9rO0ZlYXN0IG9mIHRoZSBVbndpbGxpbmcgU2hvdWxkZXJzO1RoaXJzdCBvZiBFenR6aG9rIEJ1bmRsZSBQcmVtO1BoYW50b20gQ29uY29yZCBQcmVtO0NvbmNvcmQgRG9taW5pb247Rmxhc2hwb2ludCBQcm9zZWx5dGUgLSBPZmYtSGFuZDtHb2xkZW4gRHJhY2EgTWF3O1RoZSBTcG9pbHMgb2YgRGV6dW47QXJtbGV0IG9mIE1vcmRpZ2dpYW4gRDJDIEVkaXRpb247REFDIDIwMTUgQ2hhb3MgS25pZ2h0IEN1cnNvciBQYWNrO1NraXR0ZXJpbmcgRGVzb2xhdGlvbiBQcmVtO0NyaW1zb24gUGlxdWUgUHJlbTtCbGlzdGVyaW5nIFNoYWRlIG9mIHRoZSBDcmltc29uIFdpdG5lc3M7Q2FwZSBvZiB0aGUgRGVhZCBSZWJvcm47Qmxvb2QgU2hhcmQ7UHVtcGtpbiBUcmVlcyBVUDtEZWVwZXN0IERlcHRocyBIVUQ7V3JhaXRoYmluZGVyO0Jsb3Nzb20gb2YgdGhlIE1lcnJ5IFdhbmRlcmVyO01lcnJ5IFdhbmRlcmVyKnMgQnJ1c2g7VG9tbyprYW4gSW5jYXJuYXRlIEFybW9yO1RvbW8qa2FuIEluY2FybmF0ZSBIb29kO0hvb2R3aW5rIEdsZWlwbmlyO1RvbW8qa2FuIEluY2FybmF0ZSBUYWlsO1RvbW8qa2FuIEluY2FybmF0ZSBBcmJhbGVzdDtNYW5pZm9sZCBQYXJhZG94IEdvdGhpYyBIdW50ZXI7QW50aW1hZ2UgV2VpIEZlbWFsZSAoWWQ5519IGNhbiBhZGQgV2VhcG9uIGFuZCBIZWFkKTtNaXNnaXZpbmdzIG9mIHRoZSBFbWVyYWxkIEFnZTtCbGFkZWZvcm0gTGVnYWN5IFByb3ZvY2F0aW9uIG9mIFJ1aW47VHJhaWwgb2YgdGhlIFNhbmd1aW5lIFNwZWN0cnVtO1NjYWxlcyBvZiB0aGUgU2hhZG93IFdhbGtlcjtDdXN0b20gTWVnYXBhY2sgSHVza2FyIEZsYXNocG9pbnQgUHJvc2VseXRlICsgUHVyc3VpdCBvZiB0aGUgRW1iZXIgRGVtb25zO1dlYXZlciBIRDtHcmltIERlc3Rpbnk7Q29zbWljIFdhbmRlcmVyO0Vzc2VuY2Ugb2YgdGhlIFRyaWNrc3RlcjsgMTIzfHx8