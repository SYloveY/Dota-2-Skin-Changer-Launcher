limitHWID:: 1 000||| 111::  111||| 222:: $2y$10$NGEyNTY1ZGMyYjE2Nzk5O.0nBVam6kAbdHYVfl0UpQM21eY9Scn8G 222||| 123:: Arms of the First Ways;Arm of the Dragon*s Disciple;Faceless Death - Arms;Belt of the Dragon*s Disciple;The Basher Blades;Pauldron of the Dragon*s Disciple;Armor of Broken Scale;Oathbound Defiant Helm;Efrit Sultan Belt;Rapier of the Burning God Offhand;Master of the Searing Path Arms;Arms of Desolation;Pauldrons of Eternal Harvest;Mace of Aeons;Frozen Void Arms;Key to the Bone Ruins;Crystal Scavenger*s Galvanic Mining Headware;The Family Values Back;The Family Values Arms;Pumpkin Trees UP;Lord Fox Weapon;Arms of Desolation Prem;Souls Tyrant Head;River Vial Pink;Evil Ice-Roshan;Guardians of the Lost Path Dire Towers;Guardians of the Lost Path Radiant Towers;Weather Spring;Terrain - Immortal Gardens;Rapiers of the Burning God V 3.1;Cinder Sensei Style;Manias Mask Prem;Colossal Crystal Chorus effect;The Lightning Orchid of Eminent Revival;Virtuous Roar Pads;Armor of the Storm Dragon Potente;Bloodfeather Feast;Royal Decree Knife Attack;DotaCinema - Queen of Pain Spells;Mace of Vincere Atack Effect;Pudge Blink Dagger;Grand Abscession Hook Bundle;Golden Scavenging Guttleslug;Whispers of the Damned Wings;Whispers of the Damned Head;Mark of the First Hunt Bestowed;Molten Claw Prem;Mantle of the Cinder Baron Style 1;Crucible of Rile;Rapier of the Windward Rogue;Mask of the Confidant;Iron Surge V 2.2;Savage Mettle;Interplanar Impactor Arms;Diffusal Lance;25 lvl ping;TI-9 Teleport lvl 2 Effect;Aegis and Roshan St. Valentine Day;Golden Edict of Shadows Valeera to Riki;Focal Resonance V 3.0;Fluttering Amethyst Trap + Icon;Golden Immortal Pantheon;Symbol of the King Restored;Tempest Helm of the Thundergod Prem;The Barren Vector;Piston Impaler;Blastforge Exhaler;Frostglade Familiar Hat;Shade of the Ranger;Axe of Phractos Prem;Blade of Tears and Crown of Tears;Edge of the Lost Order;Provocation of Ruin Bracers;Arc Warden Magician Back;Shoulder of the First Ways;USSR melee creep;Toxic Death Eater;The Manipulator Set;Izayoi Sakuya for Tinker by Patchouli Knowledge;Tales of the Windward Rogue;Itsuka Kotori for WK by Patchouli Knowledge;Anti-Mage Ultimate Red Dragon;Spatial Rifter V 3.0;Havoc of Dragon Palace V 2.0;GopoPudge;Bounty Hunter Maniac Set;Hinanawi Tenshi for Earthshaker by Patchouli Knowledge;Remilia Scarlet for NS by Patchouli Knowledge;Tomoe Mami for Sniper by Patchouli Knowledge;Full Metal Techies;Tidehunter Killer;Chloe von Einzbern for Earth Spirit by Patchouli Knowledge;Sun Assasin V 3.0;Cthugha for Huskar by Patchouli Knowledge;Sherman Maiden V 4.1;Steel King; 123|||