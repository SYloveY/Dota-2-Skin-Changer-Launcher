bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogMTA4QkRCRTAtNEU2OC1FNDQyLTlCNTktQTgxRTg0MTYxMDIyIDExMXx8fCAyMjI6OiAkMnkkMTAkTVRaaFpqYzFOakptWmpVNVpEZzVPTzdVTW12dlQ3MTR6LkVKcmZyWW5lbmsuSktVWFUvdksgMjIyfHx8IDEyMzo6IEVtaW5lbmNlIG9mIFJpc3R1bCBEZW55IDI7UGVkZXN0YWwgUGxhbmV0ZmFsbCBDZWxlc3RpYWwgU3VtbW9ucztSZWVmIFJvc2hhbjtUSS02IEV4ZWNyYXRpb24gVFAgRWZmZWN0O0d1YXJkaWFucyBvZiB0aGUgTG9zdCBQYXRoIERpcmUgVG93ZXJzO0RBQyAyMDE1IENoYW9zIEtuaWdodCBDdXJzb3IgUGFjaztBcGVydHVyZSBTY2llbmNlIFdhcmRjb3JlO1JlcHRpbGlhbiBSZWZ1Z2UgUmFkaWFudCBDcmVlcHM7V2VhdGhlciBTcHJpbmc7VGVycmFpbiAtIEltbW9ydGFsIEdhcmRlbnM7QnJvb2Rtb3RoZXIgQW5pbWUgVm9pY2U7QnJvb2QgSHVudGVyIEhVRDtTbWFsbCBBbnRob3pvYSBHaWFudDtSaXZlciBWaWFsIEJsdWU7Q2F2ZXJuaXRlIERpcmUgQ3JlZXBzO0d1YXJkaWFucyBvZiB0aGUgTG9zdCBQYXRoIFJhZGlhbnQgVG93ZXJzO0dvbGRlbiBFZGljdCBvZiBTaGFkb3dzIFZhbGVlcmEgdG8gUmlraTtMYXJnZSBTY2FybGV0IFF1YXJyeTtCbGFkZSBvZiBUZWFycyBhbmQgQ3Jvd24gb2YgVGVhcnM7RnVjayBEZW55O1ZpcmlkdXMgQ2xhdztWaXJpZHVzIFNwaW5lO1J1YmljayBDdXJzZSAtIEZsZXNoIEdvbGVtO0hlYWRodW50ZXIgU2xhcms7Qmxpc3NmdWwgS25hdmUgSGF0O1JhcGllciBvZiB0aGUgV2luZHdhcmQgUm9ndWU7Qmxpc3NmdWwgS25hdmUgQ29hdDtQYWNoeWRlcm0gUG93ZGVyd2Fnb24gU2lnbjtDYXJ0IG9mIHRoZSBQb3dkZXJrZWcgUGF0cm9sO1N3aW5lIFBvd2RlciBCYXJyZWw7Qm9tYnRyYWlscyBhbmQgQm9vbXN0aWNrcyBXZWFwb247U3dpbmUgVmlzb3I7U3dpbmUgSGVsbWV0O0RhdGFzdGFyIFByb2dlbml0b3IgKEFsdGVyIEFyY2FuYSk7VHJpYmFsIFRlcnJvciBCcmFjZXJzO0ZlYXN0IG9mIHRoZSBVbndpbGxpbmcgT2ZmLUhhbmQgV2VhcG9uO0N1c3RvbSBEYXNoYm9hcmQgNzU7UHJvbW8gYmxvb2R5IHJpcHBlciBsb2FkaW5nc2NyZWVuO0hhemhhZGFsIE1hZ2VicmVha2VyO0JhcmRpbmcgb2YgQ2hpbWVyaWMgUmFwcG9ydDtQeXJleGFlYyBGbG9lO1RoZSBLaW5ncyBOaWdodG1hcmUgViAyLjE7Q3Jvd24gb2YgTmV6enVyZWVtO0dyaW13b2xmO1JlbSBNZWdhLUtpbGxzO01lZ2EtS2lsbHMgRGlyZXRpZGU7T3Zlcmdyb3duIEVtYmxlbSBBZ2hhbmltIEVmZmVjdDtBZWdpcyBhbmQgUm9zaGFuIFN0LiBWYWxlbnRpbmUgRGF5O0JsaW5rIERhZ2dlciBsdmwgMiBUSS02IEVmZmVjdDtUSS00IGVmZmVjdCBCbGluayBEYWdnZXI7Qm90dGxlIFRJLTYgRWZmZWN0OzI1IGx2bCBwaW5nO0NvbG9yU3RhdHM7VEktNCBlZmZlY3QgRGFnb247RXVscyBTY2VwdGVyIFRJLTYgRWZmZWN0O0ZvcmNlIFN0YWZmIFRJLTYgRWZmZWN0O0JhdHRsZSBQYXNzIEVmZmVjdCBGb3VudGFpbiBSZWdlbjtTcGVsbCBpY29uIHBhY2sgYnkgVjF0ZWszOGk7RG90YSBBbGxzdGFycyBJdGVtIEljb247SXJvbiBCcmFuY2ggR0c7TGV2ZWxVcCBUSS02IEVmZmVjdDtUSS05IE1la2FzbSBFZmZlY3Q7TWVrYW5pc20gVEktNiBFZmZlY3Q7TWpvbGxuaXIgVEktNiBFZmZlY3Q7UGhhc2UgQm9vdHMgVEktNiBFZmZlY3Q7UmFkaWFuY2UgVEktNiBFZmZlY3Q7VEktOCBTaGl2YXMgRWZmZWN0O0JlbHQgb2YgTmV6enVyZWVtO1ZpcmlkdXMgQ3J1c2hlcjtGbGFzaHBvaW50IFByb3NlbHl0ZSAtIEhlYWQ7V2lsZG1hbmUgQmVyc2Vya2VyIE9mZmhhbmQ7U3Bpa2VzIG9mIFJlY2tsZXNzIFZpZ29yO0NvdW50ZXNzIG9mIFJpc3R1bDtBbGx1cmUgb2YgdGhlIERlZXA7U291bCBMaWxpdGg7UGF0dGVybiBvZiB0aGUgU2lsa2VuIFF1ZWVuO01vbG9rYXUgU3RhbGtlcjtHb3BvUHVkZ2U7TnlhcnVrbyBmb3IgTGlvbiBieSBQYXRjaG91bGkgS25vd2xlZGdlO0Zlcm9jaWQ5519cyBIZWFydDtQcmlueiBFdWdlbiBmb3IgVmlwZXIgYnkgUGF0Y2hvdWxpIEtub3dsZWRnZTtMb2xsaXBvcCBKdWdnZXJuYXV0IFYgMy4wO0xpZ2h0YnJpbmdlciBTRjtUaGUgUm93ZHkgRmlyZWJyYW5kO1N0cnlnd3lyIEJsb29kc2Vla2VyO0JvdW50eSBIdW50ZXIgTWFuaWFjIFNldDtSZW1pbGlhIFNjYXJsZXQgZm9yIE5TIGJ5IFBhdGNob3VsaSBLbm93bGVkZ2U7Q292ZW5hbnQgb2YgdGhlIERlcHRocztJcmUgb2YgTW9sdGVuIFJlYmlydGg7SWNlcGxhaW4gUmF2YWdlcjtGb3VsZmVsbCBDb3JydXB0b3I7U3BhdGlhbCBSaWZ0ZXIgViAzLjA7SGluYW5hd2kgVGVuc2hpIGZvciBFYXJ0aHNoYWtlciBieSBQYXRjaG91bGkgS25vd2xlZGdlO01hbmRhdGUgb2YgdGhlIE5hbWVsZXNzO0RlbGlnaHRzIG9mIFBldGFsdW5hIFBhdGhmaW5kZXI7VG9tb2UgTWFtaSBmb3IgU25pcGVyIGJ5IFBhdGNob3VsaSBLbm93bGVkZ2U7TWF6ZSBXYXRjaGVyIFNldDtZYXlhIGZvciBTbGFyZGFyIGJ5IFBhdGNob3VsaSBLbm93bGVkZ2U7RGlhYmxvLURvb207RWxkd3VybXMgVG91Y2ggViAzLjE7TWFnZSBBYm9saXNoZXIgViAyLjA7Rm9yZ290dGVuIFRhY3RpY2lhbjtOZWJ1bGFzIFdhbGtlcjtQdXJwbGUgRmlyZSBDbGlua3ogRnVuIE1vZCBWIDMuMDtSZWRlbXB0aW9uIG9mIHRoZSBSYWlkZm9yZ2VkIFJpZGVyO05hcmNpc3Npc3RpYyBMZWVjaDtSb2JlcyBvZiB0aGUgSGVyZXRpYyBWIDIuMTtCbG9vZHJvb3QgR3VhcmQ7RW1wZXJvciBPZiBUaGUgQ2xlcmd5O0l0c3VrYSBLb3RvcmkgZm9yIFdLIGJ5IFBhdGNob3VsaSBLbm93bGVkZ2U7RmF0YWwgQmxvc3NvbSBWIDMuMDtBdHJvY2l0aWVzIG9mIHRoZSBBYnlzc2FsIFNjb3VyZ2U7RmF0aGVyIE9mIFNwaXJpdHM7U2t5LUhpZ2ggV2Fyc2hpcCBTdHlsZSAxIFYgMy4wO0l6YXlvaSBTYWt1eWEgZm9yIFRpbmtlciBieSBQYXRjaG91bGkgS25vd2xlZGdlO1dhcnJpb3Igb2YgQXJlbmEgU2V0O0N1cnNlZCBaZWFsb3Q7QnVyZ2xhciBvZiBXYXNwO0V4cGxvc2l2ZSBNYW5pYWM7IDEyM3x8fA==