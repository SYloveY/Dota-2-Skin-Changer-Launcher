limitHWID:: 1 000||| 111:: 108BDBE0-4E68-E442-9B59-A81E84161022 111||| 222:: $2y$10$MTZhZjc1NjJmZjU5ZDg5OO7UMmvvT714z.EJrfrYnenk.JKUXU/vK 222||| 123:: Eminence of Ristul Deny 2;Pedestal Planetfall Celestial Summons;Reef Roshan;TI-6 Execration TP Effect;Guardians of the Lost Path Dire Towers;DAC 2015 Chaos Knight Cursor Pack;Aperture Science Wardcore;Reptilian Refuge Radiant Creeps;Weather Spring;Terrain - Immortal Gardens;Brood Hunter HUD;Small Anthozoa Giant;River Vial Blue;Cavernite Dire Creeps;Guardians of the Lost Path Radiant Towers;Golden Edict of Shadows Valeera to Riki;Large Scarlet Quarry;Blade of Tears and Crown of Tears;Fuck Deny;Viridus Claw;Viridus Spine;Rubick Curse - Flesh Golem;Headhunter Slark;Blissful Knave Hat;Rapier of the Windward Rogue;Blissful Knave Coat;Pachyderm Powderwagon Sign;Cart of the Powderkeg Patrol;Swine Powder Barrel;Bombtrails and Boomsticks Weapon;Swine Visor;Swine Helmet;Tribal Terror Bracers;Feast of the Unwilling Off-Hand Weapon;Hazhadal Magebreaker;Barding of Chimeric Rapport;Pyrexaec Floe;The Kings Nightmare V 2.1;Crown of Nezzureem;Grimwolf;Mega-Kills Diretide;Overgrown Emblem Aghanim Effect;Aegis and Roshan St. Valentine Day;Blink Dagger lvl 2 TI-6 Effect;TI-4 effect Blink Dagger;Bottle TI-6 Effect;25 lvl ping;ColorStats;TI-4 effect Dagon;Euls Scepter TI-6 Effect;Force Staff TI-6 Effect;Battle Pass Effect Fountain Regen;Spell icon pack by V1tek38i;Dota Allstars Item Icon;Iron Branch GG;LevelUp TI-6 Effect;TI-9 Mekasm Effect;Mekanism TI-6 Effect;Mjollnir TI-6 Effect;Phase Boots TI-6 Effect;Radiance TI-6 Effect;TI-8 Shivas Effect;Belt of Nezzureem;Viridus Crusher;Flashpoint Proselyte - Head;Wildmane Berserker Offhand;Spikes of Reckless Vigor;Ancient Crown;Souls Tyrant Head;Geodesic Eidolon;Blastforge Exhaler;Piston Impaler;Heavy Barbed Arms;Surly Bogstomper Nets;Surly Bogstomper Fishclub;Barbarous Blades Neck;Broodmother Anime Voice;Pauldrons of Cerulean Light;Empyrean;Thornwatch Wings;Skirt of the Crested Dawn;Helm of the Lionsguard;Hood of the Heretic;Pudge blood after hook;Doomsday Ripper Arms;Insatiable Bonesaw;Rectifier;Armor of the Storm Dragon Potente;Horns of the Storm Dragon Potente;The Lightning Orchid V 3.0;Wretched Guardian;The Iron Pioneer Cogs;Helmet of the Steelcrow;Rocket of the Steelcrow;Golden Rabid Watchcog;Plague Orifice of the Nurgle Champion;Head of the Ghastly Gourmand;Rippers Reel;Golden Scavenging Guttleslug;Mark of the First Hunt Bestowed;Countess of Ristul;Allure of the Deep;Soul Lilith;Pattern of the Silken Queen;Molokau Stalker;Nyaruko for Lion by Patchouli Knowledge;Ferocious Heart;Prinz Eugen for Viper by Patchouli Knowledge;Lollipop Juggernaut V 3.0;Lightbringer SF;The Rowdy Firebrand;Strygwyr Bloodseeker;Bounty Hunter Maniac Set;Remilia Scarlet for NS by Patchouli Knowledge;Covenant of the Depths;Ire of Molten Rebirth;Iceplain Ravager;Foulfell Corruptor;Spatial Rifter V 3.0;Hinanawi Tenshi for Earthshaker by Patchouli Knowledge;Mandate of the Nameless;Delights of Petaluna Pathfinder;Tomoe Mami for Sniper by Patchouli Knowledge;Maze Watcher Set;Yaya for Slardar by Patchouli Knowledge;Diablo-Doom;Eldwurms Touch V 3.1;Mage Abolisher V 2.0;Forgotten Tactician;Nebulas Walker;Redemption of the Raidforged Rider;Narcissistic Leech;Bloodroot Guard;Emperor Of The Clergy;Itsuka Kotori for WK by Patchouli Knowledge;Fatal Blossom V 3.0;Atrocities of the Abyssal Scourge;Father Of Spirits;Izayoi Sakuya for Tinker by Patchouli Knowledge;Cursed Zealot;Burglar of Wasp;Explosive Maniac;Eternal Harvest;Exponent of the Endless Stars;Voodoo Meepo;The Rat King;Death Necrolight V 3.2;Robes of the Heretic V 2.1;Trek of the Trailblazer;Komeiji Koishi 2 for Bane by Patchouli Knowledge;Allied Commander Set;Brumal Berserker;Raid of the Northern Exiles;Kaname Madoka for Clinkz by Patchouli Knowledge;Vengeance of the Sunwarrior;Cute Cactus Set;Allfather of Nature Set;Tokisaki Kurumi for Weaver by Patchouli Knowledge;The Iron Pioneer; 123|||