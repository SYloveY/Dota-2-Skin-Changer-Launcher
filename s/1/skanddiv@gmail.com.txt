bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogQUMzNkI2NUYtMjdFNC0xMUVCLTgwRTgtNTQwNURCRjZFREQxIDExMXx8fCAyMjI6OiBjNmM5NWQ0YTE1ZDI1ZjA2Nzg4M2JiNWZiNzhkYjA4YTYyZDYzNmNmZjgxZjUwYjE1N2EzZGZkOGEzYzkxMjVlMzIzZDAxN2U0MDZlZDViNTc1NTA1YjM5ZTY4NDM2NGZkYjdjOTIxYTFmNTA0YjIyMmQyZDE0NmE4ZTEyYzZlMSAyMjJ8fHwgMTIzOjogV3lybXdyb3VnaHQgRmxhcmU7RGlzY2lwbGUgb2YgdGhlIFd5cm13cm91Z2h0IEZsYW1lO1NvdWwgb2YgdGhlIFNsYXllciBQcmVtO0dsb3J5IG9mIHRoZSBFbGRlcmZsYW1lIC0gQXJtcztIb3JucyBvZiB0aGUgQmV0cmF5ZXI7SGVsbC1TcGFyIEFuYXRoZW1hIE9ic2lkaWFuIEJsaWdodDtNdWxjdGFudCBQYWxsIG9mIHRoZSBDcmltc29uIFdpdG5lc3M7RmluIEtpbmdzIENoYXJtIG9mIEVtaW5lbnQgUmV2aXZhbDtUd2lzdGVkIE1hZWxzdHJvbSB3aXRoIFdvcmxkIENoYXNtIEFydGlmYWN0O1dpbmRyYW5nZXIgQXJjYW5hIHN0eWxlIDE7V2luZHJhbmdlciBCbHVlIEltbW9ydGFsIEJpcmQgVVA7T3JpZ2luIG9mIHRoZSBVbm1ha2luZztTbHVtYmVyaW5nIFRlcnJvcjtUdW5pYyBvZiB0aGUgV2FuZGVyaW5nIEZsYW1lO0Fwb2dlZSBvZiB0aGUgR3VhcmRpYW4gRmxhbWU7UmFwaWVycyBvZiB0aGUgQnVybmluZyBHb2QgViAzLjE7Rm9ydHVuZXMgVG91dCBQcmVtO0FyY2FuYSBTRiBEZW1vbiBFYXRoZXI7UGF1bGRyb25zIG9mIEV0ZXJuYWwgSGFydmVzdCBQcmVtO0JyYWNlcnMgb2YgQWVvbnM7SmV3ZWwgb2YgQWVvbnM7TWFjZSBvZiBBZW9ucyBQcmVtO0NsYXN6dXJlbWUgSW5jdXJzaW9uIEhlYWQ7Q2xhc3p1cmVtZSBJbmN1cnNpb24gQmVsdDtBcm1vciBvZiB0aGUgRmVhcmZ1bCBBcmlhIFByZW07TWFuaWZvbGQgUGFyYWRveCBQQSBBcmNhbmEgU3R5bGUgMTtTZWEgUmFrZXMgQnJpZGxlO1NoYWRvdyBpbiB0aGUgRGVlcCBBcm1vcjtHb2xkZW4gSHlkcmFrYW4gTGF0Y2g7U2hhZG93IGluIHRoZSBEZWVwIEJyYWNlcnM7Qmxpc3RlcmluZyBTaGFkZSBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzO0F4ZSBvZiBWaWxlIFJlbGlxdWFyeTtBcm1vciBvZiB0aGUgT25lIFRydWUgS2luZztDbG9hayBvZiB0aGUgT25lIFRydWUgS2luZztQYXVsZHJvbiBvZiB0aGUgRHJlYWRib3JuIFJlZ2VudDtNYWplc3R5IE9mIFRoZSBDb2xvc3N1cyAtIENvYmJsZTtNYWplc3R5IE9mIFRoZSBDb2xvc3N1cyAtIE1vbm9saXRoO01hamVzdHkgT2YgVGhlIENvbG9zc3VzIC0gUGViYmxlO0NyeXN0YWwgRHJ5YWQgUHJlbTtMdWNlbnR5ciBQcmVtO0hlbG0gb2YgdGhlIERhcmsgTW9vbiBTdGFsa2VyO01vb25mYWxsIFByZW07VHdpbGlnaHQgU2NoaXNtO1BoYW50b20gQXNjZW5zaW9uIFNob3VsZGVycztQaGFudG9tIEFzY2Vuc2lvbjtUcmFuc3ZlcnNhbnQgU291bCBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzIFByZW07U291bCBEaWZmdXNlciBQcmVtO1Byb3ZvY2F0aW9uIG9mIFJ1aW4gU3dvcmQ7SnVnZ2VybmF1dCBBcmNhbmEgUmVkIEJsYWRlZm9ybSBPcmlnaW5zO1Byb3ZvY2F0aW9uIG9mIFJ1aW4gUGF1bGRyb247TGluZWFnZSBvZiB0aGUgU3Rvcm1sb3JkcyAtIExlZ3M7QnJhY2VycyBvZiB0aGUgQmxhZGVmb3JtIEFlc3RoZXRlO0xlZ2FjeSBvZiB0aGUgRmFsbGVuIExlZ2lvbiBTdHlsZSAyO0JhbmVmdWwgRGV2b3Rpb247TGVnaW9uIENvbW1hbmRlciBBcmNhbmEgVVA7R2xvdmVzIG9mIHRoZSBXaWxkIFdlc3Q7Q2FwZSBvZiB0aGUgV2lsZCBXZXN0O0hhdCBvZiB0aGUgV2lsZCBXZXN0O1Nob3VsZGVycyBvZiB0aGUgV2lsZCBXZXN0O011aCBLZWVuIEd1bjtEYXJrY2xhdyBFbWlzc2FyeSBBcm1zO0RhcmtjbGF3IEVtaXNzYXJ5IERyZXNzO05vdGhsaWMgQnVyZGVuIG9mIHRoZSBDcmltc29uIFdpdG5lc3MgUHJlbTtDcmltc29uIEdhdGVzIG9mIE5vdGhsO0RhcmtjbGF3IEVtaXNzYXJ5IFN0YWZmO1RvbW8qa2FuIEluY2FybmF0ZSBBcm1vcjtUb21vKmthbiBJbmNhcm5hdGUgSG9vZDtUb21vKmthbiBJbmNhcm5hdGUgVGFpbDtIb29kd2luayBHbGVpcG5pcjtIb29kd2luayBEcmFnb24gQ3Jvc3Nib3c7Q3JpbXNvbiBNb3VybmZ1bCBSZXZlcmllO1NjcmVlYXVrcyBUYWxvbiBQcmVtO0hlbG0gb2YgRWNob2VzO01hc3RlciBvZiB0aGUgU2VhcmluZyBQYXRoIEhlYWQ7R3JlYXQgU2FnZXMgUmVja29uaW5nIEtpbmcqcyBDcnVjaWJsZTtTdGFmZiBvZiBHdW4tWXUgb2YgdGhlIENyaW1zb24gV2l0bmVzcztQYXVsZHJvbnMgb2YgdGhlIERlbW9uIFRyaWNrc3RlcjtBcm1vciBvZiB0aGUgRGVtb24gVHJpY2tzdGVyIFJlZDtCbG9zc29tIG9mIHRoZSBNZXJyeSBXYW5kZXJlcjtNZXJyeSBXYW5kZXJlcipzIEJydXNoIFByZW07Q3JpbXNvbiBGbGlnaHQgb2YgRXBpcGhhbnk7U2t5d2FycmlvcnMgQ291bnRlbmFuY2U7U2VjcmV0cyBvZiB0aGUgQ2VsZXN0aWFsIFNob3VsZGVyO0VtcHlyZWFuIFByZW07U2VjcmV0cyBvZiB0aGUgQ2VsZXN0aWFsIEJlbHQ7V2luZ3Mgb2YgdGhlIEZhdGFsIEJsb29tO0N1bHQgb2YgQWt0b2s7QWt0b2sqcyBFbWlzc2FyaWVzO1RhaWwgb2YgdGhlIEZlcm9jaWQ5519cyBUb3hpY2FudDtKYWtpcm8gSW1tb3J0YWxzIEhlYWRzO0pha2lybyBJbW1vcnRhbCBXaW5ncztEcmVhZCBSZXRyaWJ1dGlvbiAtIEJyYWNlcnMgQWx0O0RyZWFkIFJldHJpYnV0aW9uIC0gQ2FwZSBBbHQ7RHJlYWQgUmV0cmlidXRpb24gLSBIZWFkd2VhciBBbHQ7RHJlYWQgUmV0cmlidXRpb24gLSBMZWcgQXJtb3IgQWx0O0RyZWFkIFJldHJpYnV0aW9uIC0gUXVpdmVyIEFsdDtEcmVhZCBSZXRyaWJ1dGlvbiAtIFNob3VsZGVyIEFybW9yIEFsdDtBcmNhbmEgRHJlYWQgUmV0cmlidXRpb24gTWFzdGVyIG9mIE1hZG5lc3M7R29sZGVuIEluZmVybmFsIENoaWVmdGFpbjtJbmZlcm5hbCBNZW5hY2U7SWNlcGxhaW4gUmF2YWdlciBIb3JuO0JyYWNlciBvZiBDb250ZXN0ZWQgRmF0ZTtCZWx0IG9mIENvbnRlc3RlZCBGYXRlO1RoZSBCYXNoZXIgQmxhZGVzIGZvciBXZWk7SGFpciBvZiB0aGUgU3Vydml2b3I7Q29uY29yZCBSZXZlcnNpb24gVVA7Q29uY29yZCBEb21pbmlvbjtQaGFudG9tIENvbmNvcmQgUHJlbTtUYWlsIG9mIHRoZSBWb3cgRXRlcm5hbDtCb3cgb2YgdGhlIFZvdyBFdGVybmFsO01hc2sgb2YgdGhlIFZvdyBFdGVybmFsO0FybXMgb2YgdGhlIFZvdyBFdGVybmFsO0FybW9yIG9mIHRoZSBWb3cgRXRlcm5hbDtTY2FsZSBvZiBCaXR0ZXIgU3BvaWwgSW1tb3J0YWwgVVA7Qml0dGVyIExpbmVhZ2UgSW1tb3J0YWwgQXhlcztGbHV0dGVyaW5nIEFtZXRoeXN0ICsgUHVycGxlIEZvY2FsIFJlc29uYW5jZSBEb3RhMkNoYW5nZXIgRWRpdGlvbjtDb25zdGVsbGF0aW9uIEFybW9yO0NvbnN0ZWxsYXRpb24gV2VhcG9uO0hpZGRlbiBWZWN0b3IgLSBIYXQ7U3VsbGVuIFJhbXBhcnQ7U3VsbGVuIEhvbGxvdztTdWxsZW4gSGFydmVzdDtNYXNrIG9mIERlY2F5O0hvb2Qgb2YgRGVjYXk7TWlzY2hpZXZvdXMgRnJ1aXRzO0ZyYWN0YWwgSG9ybnMgb2YgSW5uZXIgQWJ5c20gVVA7U2N5dGhlcyBvZiBTb3Jyb3c7U3BhbiBvZiBTb3Jyb3c7UmVmbGVjdGlvbnMgU2hhZGUgQ29sb3IgZm9yIFRCO0ltbW9ydGFsIFBhbnRoZW9uO1RlbXBlc3QgUmV2ZWxhdGlvbjtEb3RhIDIgQ2hhbmdlciBFZGl0aW9uIEh1bnRlcnMgSG9hcmQgb2YgdGhlIENyaW1zb24gV2l0bmVzcztUaW5lcyBvZiBUeWJhcmE7R3Jhc3BpbmcgQmx1ZGdlb24gUHJlbTtDcmltc29uIEZpcnN0IG9mIHRoZSBGbG9vZDtTbGFyZGFyIEltbW9ydGFsIEhlYWQgR29sZGVuIEZpbiBvZiB0aGUgRmlyc3QgU3BlYXI7QnJhY2VycyBvZiB0aGUgU3Vua2VuIEdhb2xlcjtPdXR3b3JsZCBEZXZvdXZlciBNZWdhUGFjaztSaWdodGVvdXMgVGh1bmRlcmJvbHQgYW5kIEFyY2FuYSBNZWdhUGFjaztTdmVuIEltbW9ydGFscyBNZWdhUGFjayBVUDtFYXJ0aHNoYWtlciBNZWdhUGFjayBOZXc7Tnl4IEFzc2Fzc2luIE1lZ2FQYWNrIFVQO1RvbGwgb2YgdGhlIEZlYXJmdWwgQXJpYSBObyBFZmZlY3Q7S3Vua2thIEltbW9ydGFscyBNZWdhUGFjaztRdWVlbiBvZiBQYWluIEFyY2FuYSBNZWdhUGFjaztTcGlyaXQgQnJlYWtlciBNZWdhUGFjaztBbnRpbWFnZSBXZWkgRmVtYWxlIChZb3UgY2FuIGFkZCBXZWFwb24gYW5kIEhlYWQpO01vcnBobGluZyBJbW1vcnRhbHMgTWVnYVBhY2sgVVA7VmVuZ2VhbmNlIG9mIHRoZSBTdW53YXJyaW9yO1ZpcGVyIE1lZ2FQYWNrO1N0b3JtIFNwaXJpdCBNZWdhUGFjaztOZW9uIFNwaXJpdCAtIEphZGUgU3R5bGUgMTtTY29yY2hpbmcgQW1iZXIgRHJhZ29vbjtUcmVhbnQgUHJvdGVjdG9yIE1lZ2FQYWNrO0ZvdWxmZWxsIENvcnJ1cHRvcjtUd2luIEJsYWRlcyBBc3Nhc3NpbiBTZXQ7U2hhdHRlcmJsYXN0IFNldDtBeGUgZnVsbCBJbW1vcnRhbHMgTWVnYXBhY2sgYWx0O0dvbGRlbiBEYXJrIE1hdyBJbmhpYml0byBhbmQgR29sZGVuIFByb2ZhbmUgVW5pb24gYW5kIEdvbGRlbiBEcmVhZCBSZXF1aXNpdGlvbiBMaWZlc3RlYWxlciBJbW1vcnRhbHMgTWVnYXBhY2s7IDEyM3x8fA==