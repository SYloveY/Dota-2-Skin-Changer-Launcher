bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogNDlEQTREMEUtQUJDRi1FOTExLTgwRDItMDg5Nzk4NzgwMUNFIDExMXx8fCAyMjI6OiAkMnkkMTAkTldabFlqWXlZamhsT0dKbVlUWTFaLmRrblFuZVAzU2M3cURndVU3U012Mzd1ZkplZmR1L2UgMjIyfHx8IDEyMzo6IFZhbGVudGluZSBXYXJkO0FybWQ5519ciBvZiB0aGUgRXhpbGVkIFJvbmluO0FrYWtpcnl1IG9mIGEgVGhvdXNhbmQgRmFjZXMgViAzLjE7QmxhY2tlbmVkIEVkZ2Ugb2YgdGhlIEJsYWRla2VlcGVyO1NpZ2lsIE1hc2sgb2YgdGhlIEJsYWRla2VlcGVyO1BhdWxkcm9ucyBvZiB0aGUgR3dpbXllb24gV2FycmlvcjtLYXRhZ2ludSBvZiBhIFRob3VzYW5kIEZhY2VzO1dyYXBzIG9mIGEgVGhvdXNhbmQgRmFjZXM7QXJtcyBvZiBEZXNvbGF0aW9uO1N0YWZmIG9mIEd1bi1ZdTtEYXBwZXIgRGlzZ3Vpc2UgSmFja2V0O01hc2sgb2YgdGhlIE1hZCBIYXJ2ZXN0ZXI7TXVyZGVyIE1hc2s7SGF0Y2hldCBvZiB0aGUgTnVyZ2xlIENoYW1waW9uO0NoYWluZWQgQ2hvcHBlcjtDaG9wcGVyIG9mIHRoZSBNYWQgSGFydmVzdGVyO0hlYXZ5IFRlbmRlcml6ZXI7Qm9uZSBDcnVzaGVyIG9mIHRoZSBUcmFwcGVyO0FybXMgb2YgdGhlIEdoYXN0bHkgR291cm1hbmQ7RG9vbXNkYXkgUmlwcGVyIFdlYXBvbjtIb29rIG9mIHRoZSBCYXNpbGlzaztUZW1wZXN0IEhlbG0gb2YgdGhlIFRodW5kZXJnb2QgUHJlbTtUZW1wZXN0IEhlbG0gb2YgdGhlIFRodW5kZXJnb2Q7Uml2ZXIgVmlhbCBJY2U7UGF1bGRyb25zIG9mIHRoZSBNaXN0cmFsIEZpZW5kO0thbnR1c2EgdGhlIFNjcmlwdCBTd29yZDtUb3hpYyBEZWF0aCBFYXRlcjtNeXN0aWMgb2YgQ2VsZXN0aWFsIEFydDtUaGUgTWFuaXB1bGF0b3IgU2V0O1NlYWJvcm5lIFJlcHJpc2FsO0h1bnRlciBvZiBLaW5ncyBWIDIuMDtDb21wZW5kaXVtIEJpbmRpbmdzIG9mIHRoZSBUcmFwcGVyO0RhcHBlciBEaXNndWlzZTtCbG9zc29taW5nIEhhcm1vbnkgViAyLjA7QXJtcyBvZiBSaXNpbmcgRnVyeTtBcnNlbmFsIG9mIHRoZSBEZW1vbmljIFZlc3NlbCBWIDIuMTsgMTIzfHx8