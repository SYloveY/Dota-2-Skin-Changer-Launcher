bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogNzk1NzkzNTYtQjhDOC03QzE2LUFGODYtMkNGMDVEOEUwNkNDIDExMXx8fCAyMjI6OiAkMnkkMTAkWWpnelpqZ3daRE5rWVdJeVpXTmtNZTh6LnpaOUxtWHBMcm9QYjV4RzdHbUpaZS5yRElqRWUgMjIyfHx8IDEyMzo6IENyb3duIG9mIHRoZSBTYWNyZWQgSHVudDtHbGFpdmVzIG9mIHRoZSBXaW5nZWQgU2VudGluZWw7R29sZGVuIFR3aWxpZ2h0IFNjaGlzbTtNb29uZmFsbCBQcmVtO0Nyb3duIG9mIHRoZSBPbmUgVHJ1ZSBLaW5nO1NraXR0ZXJpbmcgRGVzb2xhdGlvbiBQcmVtO01hbmlmb2xkIFBhcmFkb3ggUEEgQXJjYW5hIFN0eWxlIDE7QXJjYW5hIENyeXN0YWwgTWFpZGVuIEZyb3N0IEF2YWxhbmNoZTtTaGFkb3cgRmllbmQgQXJjYW5hIERlbW9uIEVhdGVyO1BoYW50b20gQXNjZW5zaW9uIEJlbHQ7UGhhbnRvbSBBc2NlbnNpb247UGhhbnRvbSBBc2NlbnNpb24gU2hvdWxkZXJzO0VtaW5lbmNlIG9mIFJpc3R1bCBXaGlwIEF0dGFjaztQbGFuZXRmYWxsO0p1Z2dlcm5hdXQgQXJjYW5hIEJsYWRlZm9ybSBMZWdhY3k7SnVnZ2VybmF1dCBBcmNhbmEgUmVkIEJsYWRlZm9ybSBPcmlnaW5zO1RlbXBlc3QgSGVsbSBvZiB0aGUgVGh1bmRlcmdvZCArIFJpZ2h0ZWQ5519cyBUaHVuZGVyYm9sdDtEYXJrIEFydGlzdHJ5IFRocm93YmFjaztXaW5kcmFuZ2VyIEFyY2FuYSBzdHlsZSAxIChCbHVlIEJpcmQpICsgRnVsbCBXUiBpbW1vcnRhbDtXaW5kcmFuZ2VyIEFyY2FuYSBzdHlsZSAxICsgV1IgaW1tb3J0YWw7V2luZHJhbmdlciBBcmNhbmEgc3R5bGUgMiAoT3JhbmdlIEJpcmQpIGFuZCBGdWxsIFdSIGltbW9ydGFsO1dpbmRyYW5nZXIgQXJjYW5hIHN0eWxlIDIgKyBXUiBpbW1vcnRhbDtGbG93ZXJzb25nIFRlbXBlc3Q7RHJvdyBSYW5nZXIgTWVnYVBhY2s7TGFkeSBTeWx2YW5hcyBmb3IgRHJvdyAtIE1hbmlhIE1hc2sgd2l0aCBlZmZlY3Q7RXNzZW5jZSBPZiBUaGUgRGFyayBNb29uO1RyYWNlciBmb3IgV2VhdmVyO1Rva2lzYWtpIEt1cnVtaSBzd2ltbWluZyBmb3IgV2VhdmVyIGJ5IFBhdGNob3VsaSBLbm93bGVkZ2U7VG9raXNha2kgS3VydW1pIHdlZGRpbmcgZm9yIFdlYXZlciBieSBQYXRjaG91bGkgS25vd2xlZGdlO0RldmlsIFJpcHBlcjtTRiBBcmNhbmEgTWVnYXBhY2s7U2lsZW5jZXIgTWVnYVBhY2s7SHVudGVyIHdpdGggTm8gTmFtZSBWIDIuMTtRdWVlbiBvZiBQYWluIEFyY2FuYSBNZWdhUGFjaztPZ3JlIE1hZ2kgSW1tb3J0YWxzIEFyY2FuYSBNZWdhUGFjaztQbGFuZXRmYWxsIGFuZCBKdWRnZW1lbnQgb2YgdGhlIEZhbGxlbiBhbmQgQnJhY2VycyBvZiB0aGUgQ2F2ZXJuIEx1bWluYXIgQVJDQU5BIE1lZ2FQYWNrO0hhdW50ZWQgQ2xhaXJ2b3lhbmNlO01vbmtleSBLaW5nIEFyY2FuYSBNZWdhUGFjaztESyBQZXJzb25hIERhdmlvbjsgMTIzfHx8