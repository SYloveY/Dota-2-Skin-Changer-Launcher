bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogQjJEMjBBMDItNzEyNS01QTZBLUI4MkQtMEM5RDkyOEFCQUExIDExMXx8fCAyMjI6OiAkMnkkMTAkTkRjMFpXUTBOR1V6T1RVeU5EYzVZTzl3WGc4MUVzdDZWRGhFdVEvVjRhWTNiWGRIS2MzWC4gMjIyfHx8IDEyMzo6IGRyaXZlX2Rpcjo6VGFpbCBvZiB0aGUgRXF1aWxpYnJpdW07ZHJpdmVfZGlyOjpBcm1vciBvZiB0aGUgRXF1aWxpYnJpdW07ZHJpdmVfZGlyOjpUaW1lIFdhbmRlcmVyO2RyaXZlX2Rpcjo6SG9vZCBvZiBMdWNpZCBUb3JtZW50O2RyaXZlX2Rpcjo6QmVzdG93ZWQgU2hvdWxkZXJzO2RyaXZlX2Rpcjo6SGVpciBvZiBUZXJyb3IgV2luZ3M7ZHJpdmVfZGlyOjpIYXQgb2YgRW1waXJpYyBJbmNlbmRpYXJ5O2RyaXZlX2Rpcjo6Q3JvdyBvZiBFbXBpcmljIEluY2VuZGlhcnk7ZHJpdmVfZGlyOjpNYXJhdWRlciBvZiB0aGUgQ2hhb3MgV2FzdGVzO2RyaXZlX2Rpcjo6S2l0IG9mIHRoZSBGaXJzdCBIdW50IFYgMi4xO2RyaXZlX2Rpcjo6V2FycmlvciBvZiBBcmVuYSBTZXQ7ZHJpdmVfZGlyOjpGZWFzdCBvZiB0aGUgR2x1dHRvbnMgTGFyZGVyO2RyaXZlX2Rpcjo6V2FyIEJyZWFrZXJzIFNldDtkcml2ZV9kaXI6OlJvc2UgQW5kIFRoZSBCZWFzdDtkcml2ZV9kaXI6OlNhdmlvciBmb3IgSnVuZ2xlcyBIb25vcjtkcml2ZV9kaXI6OkFydGlzYW4gb2YgSGF2b2MgViAzLjA7ZHJpdmVfZGlyOjpPcHVzIG9mIHRoZSBWaXppZXIgRXhpbGUgViAyLjE7ZHJpdmVfZGlyOjpSaXRlIG9mIHRoZSBBY29seXRlIFByaWVzdCBWIDMuMDtkcml2ZV9kaXI6OkdvbGRlbiBOb3RobGljIEJ1cmRlbiBQcmVtO2RyaXZlX2Rpcjo6R2lmdHMgZnJvbSB0aGUgR2xvb20gU2V0IFYgMy4wO2RyaXZlX2Rpcjo6S2lyaW4gUmlkZXIgU2V0O2RyaXZlX2Rpcjo6VGhlIEphZGUgR2VuZXJhbDtkcml2ZV9kaXI6OkJsYXplIEFybW9yIFYgMi4xO2RyaXZlX2Rpcjo6UmFwaWVyIG9mIHRoZSBCdXJuaW5nIEdvZCBPZmZoYW5kO2RyaXZlX2Rpcjo6RW1pbmVuY2Ugb2YgdGhlIFNvdXRoIFN0YXI7ZHJpdmVfZGlyOjpTZWVyIG9mIEluZmluaXR5IFNwYWNlIEVpZG9sb247ZHJpdmVfZGlyOjpUaGUgQ29ycnVwdGlvbiBvZiBOZXp6dXJlZW07ZHJpdmVfZGlyOjpNYWNlIG9mIEFlb25zO2RyaXZlX2Rpcjo6VGhlIE1hbmlwdWxhdG9yIFNldDtkcml2ZV9kaXI6OkR3YXJmIEd5cm9jb3B0ZXI7ZHJpdmVfZGlyOjpDYWRlbnphIE1hZ2ljIE1hc3Rlcjtkcml2ZV9kaXI6OkJhcmRpbmcgb2YgQ2hpbWVyaWMgUmFwcG9ydDtkcml2ZV9kaXI6OlRoZSBQYXRoIG9mIE9kb2NvZWxldXM7ZHJpdmVfZGlyOjpCbGFja2VuZWQgRWRnZSBvZiB0aGUgQmxhZGVrZWVwZXI7ZHJpdmVfZGlyOjpQcm9taXNlIG9mIHRoZSBGaXJzdCBEYXduO2RyaXZlX2Rpcjo6Uml0ZXMgb2YgVmlsZSBDb252b2NhdGlvbjtkcml2ZV9kaXI6OlRyYW5zbXV0ZWQgQXJtYW1lbnRzO2RyaXZlX2Rpcjo6TXVsY3RhbnQgUGFsbDtkcml2ZV9kaXI6OkZpbiBLaW5nKnMgQ2hhcm07ZHJpdmVfZGlyOjpBdmFkYSBLZWRhdnJhO2RyaXZlX2Rpcjo6Q29tcGxldGUgSGVsbSBvZiB0aGUgRGFyayBNb29uIFN0YWxrZXI7ZHJpdmVfZGlyOjpMdWNlbnR5cjtkcml2ZV9kaXI6OkFybW9yIG9mIHRoZSBXaW5nZWQgU2VudGluZWw7ZHJpdmVfZGlyOjpNaWdodCBvZiB0aGUgR2FsbG9waW5nIEF2ZW5nZXIgViAyLjE7ZHJpdmVfZGlyOjpTaG9jayBvZiB0aGUgQW52aWw7ZHJpdmVfZGlyOjpNZW1vcmllcyBvZiB0aGUgVm93IEV0ZXJuYWw7ZHJpdmVfZGlyOjpDcnlzdGFsIFNjYXZlbmdlcjtkcml2ZV9kaXI6OkhlaXJlc3Mgb2YgdGhlIENvYXN0YWwgS2luZ2RvbTtkcml2ZV9kaXI6Ok1hc2tzIG9mIE1pc2NoaWVmO2RyaXZlX2Rpcjo6TGlnaHQgb2YgRWxlYW5vciBTZXQ7ZHJpdmVfZGlyOjpVbmZldHRlcmVkIE1hbGV2b2xlbmNlO2RyaXZlX2Rpcjo6V3JpdGhpbmcgRXhlY3V0aW9uZXI7ZHJpdmVfZGlyOjpBbnRpcG9kZWFuIEFsbGllcztkcml2ZV9kaXI6OlRoZSBHcmV5IEdhbGxhbnQ7ZHJpdmVfZGlyOjpGbGlnaHQgb2YgdGhlIFVuZHlpbmcgTGlnaHQ7ZHJpdmVfZGlyOjpUaGUgRmF0ZSBGaWRkbGVyO2RyaXZlX2Rpcjo6SGVyYWxkIG9mIE1lYXN1cmVsZXNzIFJ1aW4gViAyLjE7ZHJpdmVfZGlyOjpQaXRmYWxsIENydXNhZGVyO2RyaXZlX2Rpcjo6U29sYXIgR3lyZTtkcml2ZV9kaXI6OlNvbGFyIEZvcmdlO2RyaXZlX2Rpcjo6TmFyY2lzc2lzdGljIExlZWNoO2RyaXZlX2Rpcjo6R29sZGVuIE5ldGhlciBMb3JkKnMgSGF0O2RyaXZlX2Rpcjo6TmV0aGVyIExvcmQqcyBTY2VwdGVyO2RyaXZlX2Rpcjo6R29sZGVuIE5ldGhlciBMb3JkKnMgRGV2b3VyZXI7ZHJpdmVfZGlyOjpUaGUgQXJjaCBUZW1wdHJlc3M7ZHJpdmVfZGlyOjpFeWUgb2YgdGhlIE1hemUgS2VlcGVyO2RyaXZlX2Rpcjo6U2tpcnQgb2YgdGhlIEd1YXJkaWFuIENvbnN0cnVjdDtkcml2ZV9kaXI6OlNldmVyaW5nIExhc2g7ZHJpdmVfZGlyOjpBbmNpZW50IE1hZ3VzIFN0eWxlIDE7ZHJpdmVfZGlyOjpTb3ZlcmVpZ24gb2YgdGhlIEtyYXkgTGVnaW9ucyAyc3QgU3R5bGU7ZHJpdmVfZGlyOjpUaGUgVHJ1ZSBDcm93IFYgMi4wO2RyaXZlX2Rpcjo6VG9vbHMgb2YgdGhlIEZpbmFsIFV0dGVyYW5jZTtkcml2ZV9kaXI6OlNwaW5lcyBvZiB0aGUgU3Vua2VuIEdhb2xlcjtkcml2ZV9kaXI6OkdvbGRlbiBHcmFzcGluZyBCbHVkZ2Vvbjtkcml2ZV9kaXI6OktpbmRyZWQgb2YgdGhlIFVtaXphciBDcmF3bGVyO2RyaXZlX2Rpcjo6R29sZGVuIEh5ZHJha2FuIExhdGNoO2RyaXZlX2Rpcjo6RWxlbWVudGFsIEltcGVyYXRvciBWIDIuMDtkcml2ZV9kaXI6Oklyb24gU3VyZ2U7ZHJpdmVfZGlyOjpSYWlrYWdlIFdhcnJpb3IgViAyLjA7ZHJpdmVfZGlyOjpUaGUgTGlnaHRuaW5nIE9yY2hpZDtkcml2ZV9kaXI6Ok1hcmNoIG9mIHRoZSBQb3dkZXJrZWcgUGF0cm9sO2RyaXZlX2Rpcjo6SGlkZGVuIEZsb3dlcjtkcml2ZV9kaXI6Ok1vbHRlbiBEZXN0cnVjdG9yO2RyaXZlX2Rpcjo6VGlueSBCYWQgVG8gVGhlIEJvbmU7ZHJpdmVfZGlyOjpTbWFsbCBCYWQgVG8gVGhlIEJvbmU7ZHJpdmVfZGlyOjpNZWRpdW0gQmFkIFRvIFRoZSBCb25lO2RyaXZlX2Rpcjo6VGhlIEJvcmVhbCBTZW50aW5lbDtkcml2ZV9kaXI6OkFybW9yIG9mIHRoZSBJY2V3cmFjayBNYXJhdWRlcjtkcml2ZV9kaXI6OkhlbG0gb2YgdGhlIFNhdmFnZSBNb25nZXI7ZHJpdmVfZGlyOjpCYXJkaW5nIG9mIHRoZSBTYXZhZ2UgTW9uZ2VyO2RyaXZlX2Rpcjo6QmFycmllciBSb2d1ZTtkcml2ZV9kaXI6OkFybW9yIG9mIHRoZSBBYnlzc2FsIFNjb3VyZ2U7ZHJpdmVfZGlyOjpIZWxtIG9mIHRoZSBBYnlzc2FsIFNjb3VyZ2U7ZHJpdmVfZGlyOjpCbGFkZSBvZiB0aGUgQWJ5c3NhbCBTY291cmdlO2RyaXZlX2Rpcjo6RGlyZ2Vzd29ybiBEeW5hc3R5O2RyaXZlX2Rpcjo6T21lbnMgRW1icmFjZTtkcml2ZV9kaXI6OkNvcnJ1cHRpb24gb2YgdGhlIFZpcnVsZW50IEtyYWl0O2RyaXZlX2Rpcjo6TWFsZWZpYyBEcmFrZXMgSG9vZCBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzO2RyaXZlX2Rpcjo6RGVtb24gb2YgdGhlIERhcmsgQ3VyYXRvcjtkcml2ZV9kaXI6OlRoZSBEdXNrIENyYXdsZXIgU2V0O2RyaXZlX2Rpcjo6QmluZGluZ3Mgb2YgdGhlIEJhdHRsZXJhbmdlcjtkcml2ZV9kaXI6OkdyaW0gRGVzdGlueTtkcml2ZV9kaXI6OlRJLTEwIFBoYXNlIEJvb3RzIEVmZmVjdDtkcml2ZV9kaXI6OlRJLTEwIE1qb2xsbmlyIEVmZmVjdDtkcml2ZV9kaXI6OlRJLTEwIEJvdHRsZSBFZmZlY3Q7ZHJpdmVfZGlyOjpUSS04IExWTCBVUCBFZmZlY3Q7ZHJpdmVfZGlyOjpUSS0xMCBBZ2hhbmltIEVmZmVjdDtkcml2ZV9kaXI6OkVtYmxlbSBvZiB0aGUgQ3J5c3RhbCBFY2hlbG9uIEFnaGFuaW0gRWZmZWN0O2RyaXZlX2Rpcjo6VEktMTAgRXVsIFNjZXB0ZXIgRWZmZWN0O2RyaXZlX2Rpcjo6QmxpbmsgRGFnZ2VyIGx2bCAxIFRJLTYgRWZmZWN0O2RyaXZlX2Rpcjo6V3l2ZXJuIEhhdGNobGluZztkcml2ZV9kaXI6OkdyZWF0IFNhZ2UqcyBSZWNrb25pbmc7ZHJpdmVfZGlyOjpXaW5ncyBvZiBDb2xvcmZ1bCBJY2VjcnlzdGFscztkcml2ZV9kaXI6OkRhdWdodGVycyBvZiBIeWRyb3BoaWluYWU7ZHJpdmVfZGlyOjpGb3Jnb3R0ZW4gRXBvY2g7ZHJpdmVfZGlyOjpCcmFjZXJzIG9mIHRoZSBDYXZlcm4gTHVtaW5hcjtkcml2ZV9kaXI6OkljZSBTaGFrZXI7ZHJpdmVfZGlyOjpNZXJhbnRoIERyYWdvb247ZHJpdmVfZGlyOjpSZWQgRHJhZ29uO2RyaXZlX2Rpcjo6THljb3NpZGFlKnMgQnJvb2Q7ZHJpdmVfZGlyOjpUaGUgRHJlYWQgUHJvcGhldDtkcml2ZV9kaXI6OkJvdyBvZiB0aGUgQmF0dGxlcmFuZ2VyO2RyaXZlX2Rpcjo6SGFydmVzdHMgSG91bmQ7ZHJpdmVfZGlyOjpUaGlyc3Qgb2YgRXp0emhvayBCdW5kbGUgUHJlbTtkcml2ZV9kaXI6OlRyYWlsIG9mIHRoZSBHcmV5IEdob3N0O2RyaXZlX2Rpcjo6TmV2ZXJkeWluZyBLbmlnaHQgU2V0O2RyaXZlX2Rpcjo6R2F1bnRsZXQgb2YgdGhlIFRyZWFjaGVyb3VzIERlbW9uO2RyaXZlX2Rpcjo6QmxhZGUgb2YgdGhlIEJ1cm5pbmcgU2NhbGU7ZHJpdmVfZGlyOjpOZXcgQ2hpZWZ0YWluIFN0eWxlIDI7ZHJpdmVfZGlyOjpSYXp6aWxzIE1pZGFzIEtudWNrbGVzIFByZW07ZHJpdmVfZGlyOjpFdGVybmFsIFJhZGlhbmNlIEJsYWRlcyBQcmVtO2RyaXZlX2Rpcjo6V2F0Y2hlciBCZWxvdztkcml2ZV9kaXI6OkFjaWQgSHlkcmEgQ3Vyc29yIFBhY2s7ZHJpdmVfZGlyOjpHdWFyZGlhbnMgb2YgdGhlIExvc3QgUGF0aCBEaXJlIFRvd2Vycztkcml2ZV9kaXI6OlNoYWRvd3NoYXJkO2RyaXZlX2Rpcjo6VEktMTAgRm9yY2UgU3RhZmYgRWZmZWN0O2RyaXZlX2Rpcjo6VEktOCBGb3VudGFpbiBsdmwgMSBFZmZlY3Q7ZHJpdmVfZGlyOjpQZWRlc3RhbCBUaS01IFJhZGlhbnQ7ZHJpdmVfZGlyOjpBZWdpcyBhbmQgUm9zaGFuIFN0LiBWYWxlbnRpbmUgRGF5O2RyaXZlX2Rpcjo6SHVudGVyIG9mIHRoZSBDcnlzdGFsIERyaWZ0O2RyaXZlX2Rpcjo6VGhlIEJhcHRpc20gb2YgTWVsdGluZyBGaXJlO2RyaXZlX2Rpcjo6UmVkIFdpc3A7ZHJpdmVfZGlyOjpDcmVlcGluZyBTaGFkb3c7ZHJpdmVfZGlyOjpIZWxsKnMgR3VpZGU7ZHJpdmVfZGlyOjpBcm1zIG9mIHRoZSBGcm9zdHNoYXJkIEFzY2VuZGFudDtkcml2ZV9kaXI6OkJlbHQgb2YgdGhlIEZyb3N0c2hhcmQgQXNjZW5kYW50O2RyaXZlX2Rpcjo6TGVhc2hlZCBSb2Nrc2hhcms7ZHJpdmVfZGlyOjpXZWF0aGVyIFNwcmluZztkcml2ZV9kaXI6OlJlZCBNaXN0IFJlYXBlciBTZXQ7ZHJpdmVfZGlyOjpNb2x0ZW4gQ2xhdyBQcmVtO2RyaXZlX2Rpcjo6TWFudGxlIG9mIHRoZSBDaW5kZXIgQmFyb24gU3R5bGUgMTtkcml2ZV9kaXI6OkNydWNpYmxlIG9mIFJpbGU7ZHJpdmVfZGlyOjpNYXJrIG9mIHRoZSBGaXJzdCBIdW50IEJlc3Rvd2VkO2RyaXZlX2Rpcjo6UGlzdG9uIEltcGFsZXI7ZHJpdmVfZGlyOjpQaXN0b24gSW1wYWxlciBlZmZlY3Q7ZHJpdmVfZGlyOjpJbmZlcm5hbCBDaGllZnRhaW4gb2YgdGhlIENyaW1zb24gV2l0bmVzcztkcml2ZV9kaXI6OlRoZSBGYWl0aCBvZiBBdmVuZ2Vycztkcml2ZV9kaXI6OlNoZXJtYW4gTWFpZGVuIFYgNC4xO2RyaXZlX2Rpcjo6Rm9yZ290dGVuIFRhY3RpY2lhbjtkcml2ZV9kaXI6OlRoZSBEdXNrYmxvb20gVHJpY2tzdGVyO2RyaXZlX2Rpcjo6QnJpbmdlciBvZiBUcm91Ymxlcztkcml2ZV9kaXI6OkxlZ2FjeSBvZiB0aGUgRWxkd3VybSBDcmVzdCBCbGFjaztkcml2ZV9kaXI6OlNoYWRvdyBvZiB0aGUgQnVybmluZyBTY2FsZTtkcml2ZV9kaXI6OlNoYWRvd3Mgb2YgUmF2ZW5zbWFuZTtkcml2ZV9kaXI6Ok1hbmlhcyBNYXNrIFByZW07ZHJpdmVfZGlyOjpDb21wbGV0ZSBBbGdpZCBMZWdhY3k7ZHJpdmVfZGlyOjpHb2xkZW4gR3JhdmVsbWF3O2RyaXZlX2Rpcjo6SGFybmVzcyBvZiB0aGUgRmlzc3VyZWQgU291bDtkcml2ZV9kaXI6OkV4cG9uZW50IG9mIHRoZSBFbmRsZXNzIFN0YXJzO2RyaXZlX2Rpcjo6Rmxhc2hwb2ludCBQcm9zZWx5dGUgLSBIZWFkO2RyaXZlX2Rpcjo6UHlyZXhhZWMgRmxvZTtkcml2ZV9kaXI6OkRpdmluZSBBbmNob3IgU3R5bGUgMTtkcml2ZV9kaXI6OkJlc3Rvd21lbnRzIG9mIHRoZSBEaXZpbmUgQW5jaG9yIGVmZmVjdHM7ZHJpdmVfZGlyOjpEYWVtb25mZWxsIEZsYW1lO2RyaXZlX2Rpcjo6TGVnYWN5IG9mIHRoZSBGYWxsZW4gTGVnaW9uO2RyaXZlX2Rpcjo6TG9yZCBvZiBDaHJvbm9wdGljIFN5bnRoZXNpcztkcml2ZV9kaXI6OlRvcm1lbnRlZCBTdGFmZiBlZmZlY3Q7ZHJpdmVfZGlyOjpXYXItQnVycm93IFJhdmFnZXI7ZHJpdmVfZGlyOjpUd2lsaWdodCBTY2hpc207ZHJpdmVfZGlyOjpGdXJ5IG9mIFdhciBHb2Q7ZHJpdmVfZGlyOjpHb2QqcyBNZXJjeTtkcml2ZV9kaXI6OlByaWRlIG9mIHRoZSBXaW50ZXJtb29uO2RyaXZlX2Rpcjo6R29sZGVuIE1hc2sgb2YgTWV0aXJhO2RyaXZlX2Rpcjo6QXhpYSBvZiBNZXRpcmE7ZHJpdmVfZGlyOjpCbGFkZSBvZiBUZWFycyBhbmQgQ3Jvd24gb2YgVGVhcnM7ZHJpdmVfZGlyOjpTY3l0aGUgb2YgVnlzZSBWIDIuMDtkcml2ZV9kaXI6OldyYXRoIG9mIEthIFYgMi4xO2RyaXZlX2Rpcjo6U3VsbGVuIEhvbGxvdyBWIDMuMjtkcml2ZV9kaXI6OkdvbGRlbiBTaGFyZHMgb2YgRXhpbGU7ZHJpdmVfZGlyOjpNYXNrIG9mIHRoZSBDb25maWRhbnQ7ZHJpdmVfZGlyOjpWZW5nZWFuY2Ugb2YgdGhlIFN1bndhcnJpb3I7ZHJpdmVfZGlyOjpOb3ZhIG9mIEdvbGRlbiBOaXJ2YW5hO2RyaXZlX2Rpcjo6UmVtaW5pc2NlbmNlIG9mIERyZWFtcztkcml2ZV9kaXI6Ok11cmRlciBvZiBDcm93cyAobm8gY3Jvdyk7ZHJpdmVfZGlyOjpHb2xkZW4gU2NhdmVuZ2luZyBHdXR0bGVzbHVnO2RyaXZlX2Rpcjo6Qmxvb2RmZWF0aGVyIFdpbmdzIFByZW07ZHJpdmVfZGlyOjpCbG9vZGZlYXRoZXIgRmVhc3Q7ZHJpdmVfZGlyOjpNYWNlIG9mIFZpbmNlcmUgQXRhY2sgRWZmZWN0O2RyaXZlX2Rpcjo6VGhlIEJhcnJlbiBWZWN0b3I7ZHJpdmVfZGlyOjpDcm93biBvZiBUaGUgTmlnaHR3b3JsZDtkcml2ZV9kaXI6OkV0ZXJuYWwgSGFydmVzdDtkcml2ZV9kaXI6OkFybXMgb2YgRGVzb2xhdGlvbiBQcmVtO2RyaXZlX2Rpcjo6UGhhbnRvbSBBZHZlbnQgVVA7ZHJpdmVfZGlyOjpQaGFudG9tIEFkdmVudCBTaG91bGRlcnMgVVA7ZHJpdmVfZGlyOjpQaGFudG9tIEFkdmVudCBCZWx0IFVQO2RyaXZlX2Rpcjo6Um9zZSBvZiB0aGUgQ29ycmlkYW4gTWFlc3Rybztkcml2ZV9kaXI6OkZvY2FsIFJlc29uYW5jZSBWIDMuMDtkcml2ZV9kaXI6OlRpbmtlciBTY2FyZWNyb3cgU2V0O2RyaXZlX2Rpcjo6TGFyZ2UgQmFkIFRvIFRoZSBCb25lO2RyaXZlX2Rpcjo6Rm9saWFnZSBvZiBFbGRyaXRjaCBHbmFybDtkcml2ZV9kaXI6OlBsdW5kZXIgb2YgdGhlIFNhdmFnZSBNb25nZXI7ZHJpdmVfZGlyOjpBYnlzc2FsIEN1aXJhc3M7ZHJpdmVfZGlyOjpHb2xkZW4gUGFsZSBNYXVzb2xldW07ZHJpdmVfZGlyOjpFY2hvZXMgb2YgdGhlIEV5cmllIFYgMi4wO2RyaXZlX2Rpcjo6TWFsZWZpYyBEcmFrZXMgU3RyaWtlIG9ubHkgRWZmZWN0O2RyaXZlX2Rpcjo6Q2hpbGwgb2YgdGhlIEtlZXBlcnMgR2F6ZTtkcml2ZV9kaXI6OlRvbGxpbmcgU2hhZG93cztkcml2ZV9kaXI6OkRyZWFkIENvbXBhY3Q7ZHJpdmVfZGlyOjpTeWx2YW4gQ2FzY2FkZTtkcml2ZV9kaXI6Ok1vcmJpZmljIFByb3Zpc2lvbjtkcml2ZV9kaXI6OlRlcnJhaW4gLSBTcHJpbmc7ZHJpdmVfZGlyOjpFdmlsIEljZS1Sb3NoYW47ZHJpdmVfZGlyOjpHdWFyZGlhbnMgb2YgdGhlIExvc3QgUGF0aCBSYWRpYW50IFRvd2Vycztkcml2ZV9kaXI6OlRpLTkgUm9zaGFuO2RyaXZlX2Rpcjo6SFVEIG9mIHRoZSBCdXJuaW5nIFNjYWxlIEljZTtkcml2ZV9kaXI6OkdvbGRlbiBNb29uZmFsbCBQcmVtO2RyaXZlX2Rpcjo6QWxsdXZpb24gUHJvcGhlY3k7ZHJpdmVfZGlyOjpBbGx1dmlvbiBQcm9waGVjeSBWIDIuMDtkcml2ZV9kaXI6Ok1vbnN0cm91cyBSZXByaXNhbDtkcml2ZV9kaXI6Okhvcm5zIG9mIE1vbnN0cm91cyBSZXByaXNhbCBQcmVtO2RyaXZlX2Rpcjo6SHVuZ2VyIG9mIHRoZSBIb3dsaW5nIFdpbGRzIEFybXM7ZHJpdmVfZGlyOjpTaGFkb3dzaGFyZCAtIE9mZi1IYW5kO2RyaXZlX2Rpcjo6SGludGVybGFuZCBTdGFsa2VyO2RyaXZlX2Rpcjo6R29sZGVuIEZ1bGwtQm9yZSBCb25hbnphO2RyaXZlX2Rpcjo6Q2Fubm9uIG9mIHRoZSBPY2N1bHRpc3RzIFB1cnN1aXQ7ZHJpdmVfZGlyOjpQaGFudG9tIEFkdmVudCBXZWFwb24gVVA7ZHJpdmVfZGlyOjpTYXZhZ2UgTWV0dGxlO2RyaXZlX2Rpcjo6Q3J5c3RhbCBEcnlhZCBWIDQuMDtkcml2ZV9kaXI6OkZvdWxmZWxsIENvcnJ1cHRvcjtkcml2ZV9kaXI6OlN1bmtlbiBTbmFwcGVyIFdpbmdzO2RyaXZlX2Rpcjo6UGF1bGRyb25zIG9mIHRoZSBHYXRla2VlcGVyO2RyaXZlX2Rpcjo6Q3JpbXNvbiBDeXJyaWRhZTtkcml2ZV9kaXI6OkZlYXRoZXJmYWxsIFF1aXZlcjtkcml2ZV9kaXI6OlJpZ2h0ZWQ5519cyBUaHVuZGVyYm9sdCBhbmQgQXJjYW5hIE1lZ2FQYWNrO2RyaXZlX2Rpcjo6U2hhdHRlcmJsYXN0IENyb3duO2RyaXZlX2Rpcjo6QW50aS1NYWdlIFVsdGltYXRlIFJlZCBEcmFnb247ZHJpdmVfZGlyOjpNYXJrIG9mIHRoZSBNaXN0cmFsIEZpZW5kIFYgMi4xO2RyaXZlX2Rpcjo6TWFjZSBvZiB0aGUgQ2hvc2VuIFByZW07ZHJpdmVfZGlyOjpJY2UgQmxvc3NvbTtkcml2ZV9kaXI6Oll1bHNhcmlhcyBNYW50bGUgUHJlbTtkcml2ZV9kaXI6OkZsb3dlciBGbGFtZSBMaW5hIFYgMy4wO2RyaXZlX2Rpcjo6R29sZCBTa3ltYWdlO2RyaXZlX2Rpcjo6R29sZGVuIEVtcHlyZWFuOyAxMjN8fHw=