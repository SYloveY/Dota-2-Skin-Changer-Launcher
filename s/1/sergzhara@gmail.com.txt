bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogQjJEMjBBMDItNzEyNS01QTZBLUI4MkQtMEM5RDkyOEFCQUExIDExMXx8fCAyMjI6OiAkMnkkMTAkTkRjMFpXUTBOR1V6T1RVeU5EYzVZTzl3WGc4MUVzdDZWRGhFdVEvVjRhWTNiWGRIS2MzWC4gMjIyfHx8IDEyMzo6IFRhaWwgb2YgdGhlIEVxdWlsaWJyaXVtO0FybW9yIG9mIHRoZSBFcXVpbGlicml1bTtIb29kIG9mIEx1Y2lkIFRvcm1lbnQ7QmVzdG93ZWQgU2hvdWxkZXJzO0hlaXIgb2YgVGVycm9yIFdpbmdzO0hhdCBvZiBFbXBpcmljIEluY2VuZGlhcnk7Q3JvdyBvZiBFbXBpcmljIEluY2VuZGlhcnk7R29sZGVuIE5vdGhsaWMgQnVyZGVuIFByZW07UmFwaWVyIG9mIHRoZSBCdXJuaW5nIEdvZCBPZmZoYW5kO1NlZXIgb2YgSW5maW5pdHkgU3BhY2UgRWlkb2xvbjtNYWNlIG9mIEFlb25zO0JhcmRpbmcgb2YgQ2hpbWVyaWMgUmFwcG9ydDtCbGFja2VuZWQgRWRnZSBvZiB0aGUgQmxhZGVrZWVwZXI7TXVsY3RhbnQgUGFsbDtBdmFkYSBLZWRhdnJhO0NvbXBsZXRlIEhlbG0gb2YgdGhlIERhcmsgTW9vbiBTdGFsa2VyO0x1Y2VudHlyO0FybW9yIG9mIHRoZSBXaW5nZWQgU2VudGluZWw7U2hvY2sgb2YgdGhlIEFudmlsO0ZsaWdodCBvZiB0aGUgVW5keWluZyBMaWdodDtTb2xhciBHeXJlO1NvbGFyIEZvcmdlO1NraXJ0IG9mIHRoZSBHdWFyZGlhbiBDb25zdHJ1Y3Q7U2V2ZXJpbmcgTGFzaDtUb29scyBvZiB0aGUgRmluYWwgVXR0ZXJhbmNlO0dvbGRlbiBHcmFzcGluZyBCbHVkZ2VvbjtHb2xkZW4gSHlkcmFrYW4gTGF0Y2g7SXJvbiBTdXJnZTtUaGUgTGlnaHRuaW5nIE9yY2hpZDtUaW55IEJhZCBUbyBUaGUgQm9uZTtTbWFsbCBCYWQgVG8gVGhlIEJvbmU7TWVkaXVtIEJhZCBUbyBUaGUgQm9uZTtBcm1vciBvZiB0aGUgSWNld3JhY2sgTWFyYXVkZXI7SGVsbSBvZiB0aGUgU2F2YWdlIE1vbmdlcjtCYXJkaW5nIG9mIHRoZSBTYXZhZ2UgTW9uZ2VyO0FybW9yIG9mIHRoZSBBYnlzc2FsIFNjb3VyZ2U7SGVsbSBvZiB0aGUgQWJ5c3NhbCBTY291cmdlO0JsYWRlIG9mIHRoZSBBYnlzc2FsIFNjb3VyZ2U7RGVtb24gb2YgdGhlIERhcmsgQ3VyYXRvcjtUSS0xMCBQaGFzZSBCb290cyBFZmZlY3Q7VEktMTAgTWpvbGxuaXIgRWZmZWN0O1RJLTEwIEJvdHRsZSBFZmZlY3Q7VEktOCBMVkwgVVAgRWZmZWN0O1RJLTEwIEFnaGFuaW0gRWZmZWN0O0VtYmxlbSBvZiB0aGUgQ3J5c3RhbCBFY2hlbG9uIEFnaGFuaW0gRWZmZWN0O1RJLTEwIEV1bCBTY2VwdGVyIEVmZmVjdDtCbGluayBEYWdnZXIgbHZsIDEgVEktNiBFZmZlY3Q7V3l2ZXJuIEhhdGNobGluZztEYXVnaHRlcnMgb2YgSHlkcm9waGlpbmFlO0ZvcmdvdHRlbiBFcG9jaDtCcmFjZXJzIG9mIHRoZSBDYXZlcm4gTHVtaW5hcjtCb3cgb2YgdGhlIEJhdHRsZXJhbmdlcjtUaGlyc3Qgb2YgRXp0emhvayBCdW5kbGUgUHJlbTtHYXVudGxldCBvZiB0aGUgVHJlYWNoZXJvdXMgRGVtb247QmxhZGUgb2YgdGhlIEJ1cm5pbmcgU2NhbGU7UmF6emlscyBNaWRhcyBLbnVja2xlcyBQcmVtO0V0ZXJuYWwgUmFkaWFuY2UgQmxhZGVzIFByZW07V2F0Y2hlciBCZWxvdztBY2lkIEh5ZHJhIEN1cnNvciBQYWNrO0d1YXJkaWFucyBvZiB0aGUgTG9zdCBQYXRoIERpcmUgVG93ZXJzO1NoYWRvd3NoYXJkO1RJLTEwIEZvcmNlIFN0YWZmIEVmZmVjdDtUSS04IEZvdW50YWluIGx2bCAxIEVmZmVjdDtQZWRlc3RhbCBUaS01IFJhZGlhbnQ7QWVnaXMgYW5kIFJvc2hhbiBTdC4gVmFsZW50aW5lIERheTtSZWQgV2lzcDtBcm1zIG9mIHRoZSBGcm9zdHNoYXJkIEFzY2VuZGFudDtCZWx0IG9mIHRoZSBGcm9zdHNoYXJkIEFzY2VuZGFudDtMZWFzaGVkIFJvY2tzaGFyaztXZWF0aGVyIFNwcmluZztNb2x0ZW4gQ2xhdyBQcmVtO01hbnRsZSBvZiB0aGUgQ2luZGVyIEJhcm9uIFN0eWxlIDE7Q3J1Y2libGUgb2YgUmlsZTtNYXJrIG9mIHRoZSBGaXJzdCBIdW50IEJlc3Rvd2VkO1Bpc3RvbiBJbXBhbGVyO1Bpc3RvbiBJbXBhbGVyIGVmZmVjdDtJbmZlcm5hbCBDaGllZnRhaW4gb2YgdGhlIENyaW1zb24gV2l0bmVzcztTaGFkb3cgb2YgdGhlIEJ1cm5pbmcgU2NhbGU7TWFuaWFzIE1hc2sgUHJlbTtDb21wbGV0ZSBBbGdpZCBMZWdhY3k7R29sZGVuIEdyYXZlbG1hdztGbGFzaHBvaW50IFByb3NlbHl0ZSAtIEhlYWQ7UHlyZXhhZWMgRmxvZTtUb3JtZW50ZWQgU3RhZmYgZWZmZWN0O1R3aWxpZ2h0IFNjaGlzbTtHb2xkZW4gTWFzayBvZiBNZXRpcmE7QXhpYSBvZiBNZXRpcmE7QmxhZGUgb2YgVGVhcnMgYW5kIENyb3duIG9mIFRlYXJzO1NjeXRoZSBvZiBWeXNlIFYgMi4wO1N1bGxlbiBIb2xsb3cgViAzLjI7R29sZGVuIFNoYXJkcyBvZiBFeGlsZTtNYXNrIG9mIHRoZSBDb25maWRhbnQ7Tm92YSBvZiBHb2xkZW4gTmlydmFuYTtHb2xkZW4gU2NhdmVuZ2luZyBHdXR0bGVzbHVnO0Jsb29kZmVhdGhlciBXaW5ncyBQcmVtO0Jsb29kZmVhdGhlciBGZWFzdDtNYWNlIG9mIFZpbmNlcmUgQXRhY2sgRWZmZWN0O1RoZSBCYXJyZW4gVmVjdG9yO0FybXMgb2YgRGVzb2xhdGlvbiBQcmVtO1BoYW50b20gQWR2ZW50IFVQO1BoYW50b20gQWR2ZW50IFNob3VsZGVycyBVUDtQaGFudG9tIEFkdmVudCBCZWx0IFVQO1Jvc2Ugb2YgdGhlIENvcnJpZGFuIE1hZXN0cm87Rm9jYWwgUmVzb25hbmNlIFYgMy4wO0xhcmdlIEJhZCBUbyBUaGUgQm9uZTtGb2xpYWdlIG9mIEVsZHJpdGNoIEduYXJsO0dvbGRlbiBQYWxlIE1hdXNvbGV1bTtNYWxlZmljIERyYWtlcyBTdHJpa2Ugb25seSBFZmZlY3Q7VG9sbGluZyBTaGFkb3dzO1N5bHZhbiBDYXNjYWRlO1RlcnJhaW4gLSBTcHJpbmc7RXZpbCBJY2UtUm9zaGFuO0d1YXJkaWFucyBvZiB0aGUgTG9zdCBQYXRoIFJhZGlhbnQgVG93ZXJzO1RpLTkgUm9zaGFuO0hVRCBvZiB0aGUgQnVybmluZyBTY2FsZSBJY2U7R29sZGVuIE1vb25mYWxsIFByZW07QWxsdXZpb24gUHJvcGhlY3k7QWxsdXZpb24gUHJvcGhlY3kgViAyLjA7SG9ybnMgb2YgTW9uc3Ryb3VzIFJlcHJpc2FsIFByZW07SHVuZ2VyIG9mIHRoZSBIb3dsaW5nIFdpbGRzIEFybXM7U2hhZG93c2hhcmQgLSBPZmYtSGFuZDtHb2xkZW4gRnVsbC1Cb3JlIEJvbmFuemE7Q2Fubm9uIG9mIHRoZSBPY2N1bHRpc3RzIFB1cnN1aXQ7UGhhbnRvbSBBZHZlbnQgV2VhcG9uIFVQO1NhdmFnZSBNZXR0bGU7U3Vua2VuIFNuYXBwZXIgV2luZ3M7UGF1bGRyb25zIG9mIHRoZSBHYXRla2VlcGVyO0NyaW1zb24gQ3lycmlkYWU7RmVhdGhlcmZhbGwgUXVpdmVyO1NoYXR0ZXJibGFzdCBDcm93bjtNYWNlIG9mIHRoZSBDaG9zZW4gUHJlbTtJY2UgQmxvc3NvbTtZdWxzYXJpYXMgTWFudGxlIFByZW07UGluayBDb2xvciBmb3IgVEI7Q2x1YiBvZiB0aGUgSWduZWQ5519cyBTdG9uZTtNYWxlZmljIERyYWtlcyBIb29kIG9mIHRoZSBDcmltc29uIFdpdG5lc3M7UmFwaWVyIG9mIHRoZSBCdXJuaW5nIEdvZDtIZWxtIG9mIHRoZSBFbnRoYWxlZW4gRHJhZ29uO1RpbWUgV2FuZGVyZXI7TWFyYXVkZXIgb2YgdGhlIENoYW9zIFdhc3RlcztLaXQgb2YgdGhlIEZpcnN0IEh1bnQgViAyLjE7V2FycmlvciBvZiBBcmVuYSBTZXQ7RmVhc3Qgb2YgdGhlIEdsdXR0b25zIExhcmRlcjtXYXIgQnJlYWtlcnMgU2V0O1Jvc2UgQW5kIFRoZSBCZWFzdDtTYXZpb3IgZm9yIEp1bmdsZXMgSG9ub3I7QXJ0aXNhbiBvZiBIYXZvYyBWIDMuMDtPcHVzIG9mIHRoZSBWaXppZXIgRXhpbGUgViAyLjE7Uml0ZSBvZiB0aGUgQWNvbHl0ZSBQcmllc3QgViAzLjA7R2lmdHMgZnJvbSB0aGUgR2xvb20gU2V0IFYgMy4wO0tpcmluIFJpZGVyIFNldDtUaGUgSmFkZSBHZW5lcmFsO0JsYXplIEFybW9yIFYgMi4xO0VtaW5lbmNlIG9mIHRoZSBTb3V0aCBTdGFyO1RoZSBDb3JydXB0aW9uIG9mIE5lenp1cmVlbTtUaGUgTWFuaXB1bGF0b3IgU2V0O0R3YXJmIEd5cm9jb3B0ZXI7Q2FkZW56YSBNYWdpYyBNYXN0ZXI7VGhlIFBhdGggb2YgT2RvY29lbGV1cztQcm9taXNlIG9mIHRoZSBGaXJzdCBEYXduO1JpdGVzIG9mIFZpbGUgQ29udm9jYXRpb247VHJhbnNtdXRlZCBBcm1hbWVudHM7TWlnaHQgb2YgdGhlIEdhbGxvcGluZyBBdmVuZ2VyIFYgMi4xO01lbW9yaWVzIG9mIHRoZSBWb3cgRXRlcm5hbDtDcnlzdGFsIFNjYXZlbmdlcjtIZWlyZXNzIG9mIHRoZSBDb2FzdGFsIEtpbmdkb207TWFza3Mgb2YgTWlzY2hpZWY7TGlnaHQgb2YgRWxlYW5vciBTZXQ7VW5mZXR0ZXJlZCBNYWxldm9sZW5jZTtXcml0aGluZyBFeGVjdXRpb25lcjtBbnRpcG9kZWFuIEFsbGllcztUaGUgR3JleSBHYWxsYW50O1RoZSBGYXRlIEZpZGRsZXI7SGVyYWxkIG9mIE1lYXN1cmVsZXNzIFJ1aW4gViAyLjE7UGl0ZmFsbCBDcnVzYWRlcjtOYXJjaXNzaXN0aWMgTGVlY2g7VGhlIEFyY2ggVGVtcHRyZXNzO0V5ZSBvZiB0aGUgTWF6ZSBLZWVwZXI7QW5jaWVudCBNYWd1cyBTdHlsZSAxO1NvdmVyZWlnbiBvZiB0aGUgS3JheSBMZWdpb25zIDJzdCBTdHlsZTtUaGUgVHJ1ZSBDcm93IFYgMi4wO1NwaW5lcyBvZiB0aGUgU3Vua2VuIEdhb2xlcjtLaW5kcmVkIG9mIHRoZSBVbWl6YXIgQ3Jhd2xlcjtFbGVtZW50YWwgSW1wZXJhdG9yIFYgMi4wO1JhaWthZ2UgV2FycmlvciBWIDIuMDtNYXJjaCBvZiB0aGUgUG93ZGVya2VnIFBhdHJvbDtIaWRkZW4gRmxvd2VyO01vbHRlbiBEZXN0cnVjdG9yO1RoZSBCb3JlYWwgU2VudGluZWw7QmFycmllciBSb2d1ZTtEaXJnZXN3b3JuIER5bmFzdHk7T21lbnMgRW1icmFjZTtDb3JydXB0aW9uIG9mIHRoZSBWaXJ1bGVudCBLcmFpdDtUaGUgRHVzayBDcmF3bGVyIFNldDtCaW5kaW5ncyBvZiB0aGUgQmF0dGxlcmFuZ2VyO0dyaW0gRGVzdGlueTtXaW5ncyBvZiBDb2xvcmZ1bCBJY2VjcnlzdGFscztJY2UgU2hha2VyO01lcmFudGggRHJhZ29vbjtSZWQgRHJhZ29uO1RoZSBEcmVhZCBQcm9waGV0O0hhcnZlc3RzIEhvdW5kO1RyYWlsIG9mIHRoZSBHcmV5IEdob3N0O05ldmVyZHlpbmcgS25pZ2h0IFNldDtOZXcgQ2hpZWZ0YWluIFN0eWxlIDI7SHVudGVyIG9mIHRoZSBDcnlzdGFsIERyaWZ0O1RoZSBCYXB0aXNtIG9mIE1lbHRpbmcgRmlyZTtDcmVlcGluZyBTaGFkb3c7UmVkIE1pc3QgUmVhcGVyIFNldDtUaGUgRmFpdGggb2YgQXZlbmdlcnM7U2hlcm1hbiBNYWlkZW4gViA0LjE7Rm9yZ290dGVuIFRhY3RpY2lhbjtUaGUgRHVza2Jsb29tIFRyaWNrc3RlcjtCcmluZ2VyIG9mIFRyb3VibGVzO0xlZ2FjeSBvZiB0aGUgRWxkd3VybSBDcmVzdCBCbGFjaztTaGFkb3dzIG9mIFJhdmVuc21hbmU7SGFybmVzcyBvZiB0aGUgRmlzc3VyZWQgU291bDtFeHBvbmVudCBvZiB0aGUgRW5kbGVzcyBTdGFycztEaXZpbmUgQW5jaG9yIFN0eWxlIDE7QmVzdG93bWVudHMgb2YgdGhlIERpdmluZSBBbmNob3IgZWZmZWN0cztMb3JkIG9mIENocm9ub3B0aWMgU3ludGhlc2lzO1dhci1CdXJyb3cgUmF2YWdlcjtGdXJ5IG9mIFdhciBHb2Q7UHJpZGUgb2YgdGhlIFdpbnRlcm1vb247V3JhdGggb2YgS2EgViAyLjE7VmVuZ2VhbmNlIG9mIHRoZSBTdW53YXJyaW9yO1JlbWluaXNjZW5jZSBvZiBEcmVhbXM7TXVyZGVyIG9mIENyb3dzIChubyBjcm93KTtDcm93biBvZiBUaGUgTmlnaHR3b3JsZDtFdGVybmFsIEhhcnZlc3Q7VGlua2VyIFNjYXJlY3JvdyBTZXQ7UGx1bmRlciBvZiB0aGUgU2F2YWdlIE1vbmdlcjtBYnlzc2FsIEN1aXJhc3M7RWNob2VzIG9mIHRoZSBFeXJpZSBWIDIuMDtDaGlsbCBvZiB0aGUgS2VlcGVycyBHYXplO0RyZWFkIENvbXBhY3Q7TW9yYmlmaWMgUHJvdmlzaW9uO01vbnN0cm91cyBSZXByaXNhbDtIaW50ZXJsYW5kIFN0YWxrZXI7UmlnaHRlb3VzIFRodW5kZXJib2x0IGFuZCBBcmNhbmEgTWVnYVBhY2s7QW50aS1NYWdlIFVsdGltYXRlIFJlZCBEcmFnb247TWFyayBvZiB0aGUgTWlzdHJhbCBGaWVuZCBWIDIuMTtGbG93ZXIgRmxhbWUgTGluYSBWIDMuMDtHb2xkIFNreW1hZ2U7RGFlbW9uZmVsbCBGbGFtZTsgMTIzfHx8