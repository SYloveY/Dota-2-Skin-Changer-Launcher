limitHWID:: 1 000||| 111:: 12345678-1234-5678-90AB-CDDEEFAABBCC 111||| 222:: $2y$10$MmI2ZGVkNDkzYTcxYTQ1O.CUavYr8G5oHBANzSw9kPowZbDl5hMWu 222||| 123:: drive_dir::Arcana Crystal Maiden Frost Avalanche;drive_dir::Prelates Cloak of the Wyvern Legion;drive_dir::Golden Ice Blossom;drive_dir::Crimson Gates of Nothl;drive_dir::Darkclaw Emissary Staff with custom Urn;drive_dir::Golden Awalebs Trundleweed;drive_dir::Bonkers of Awaleb;drive_dir::Masque of Awaleb;drive_dir::Flame of the Penitent Scholar;drive_dir::Secrets of the Celestial Shoulder;drive_dir::Secrets of the Celestial Head;drive_dir::Golden Flight of Epiphany;drive_dir::TI-10 Blink lvl 2 Effect;drive_dir::Dark Artistry Hair 2nd Style;drive_dir::Dark Artistry Cape Prem;drive_dir::Dark Artistry Bracers Prem;drive_dir::Magus Accord;drive_dir::Dark Artistry Belt Prem;drive_dir::Dark Artistry Pauldrons Prem; 123|||