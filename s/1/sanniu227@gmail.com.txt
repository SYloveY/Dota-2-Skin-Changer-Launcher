bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogMDM4RDAyNDAtMDQ1Qy0wNUVELTk5MDYtOTEwNzAwMDgwMDA5IDExMXx8fCAyMjI6OiAkMnkkMTAkTkRnMk56VTJZVE15TnpCbE1EQTNNZTQydlZEWDJxemoyck5ZL0ZXbWFKUHNuTmVIYkpGYnkgMjIyfHx8IDEyMzo6IE9yaWdpbiBvZiB0aGUgVW5tYWtpbmc7VGVtcGVzdCBIZWxtIG9mIHRoZSBUaHVuZGVyZ29kICsgUmlnaHRlb3VzIFRodW5kZXJib2x0O0JlbmV2b2xlbnQgQ29tcGFuaW9uIFByZW07QW5jaWVudCBJbmhlcml0YW5jZSAtIFNob3VsZGVyO0d1YXJkaWFucyBvZiB0aGUgTG9zdCBQYXRoIFJhZGlhbnQgVG93ZXJzO0d1YXJkaWFucyBvZiB0aGUgTG9zdCBQYXRoIERpcmUgVG93ZXJzO1JlcHRpbGlhbiBSZWZ1Z2UgRGlyZSBDcmVlcHM7UmVwdGlsaWFuIFJlZnVnZSBSYWRpYW50IENyZWVwcztUZXJyYWluIC0gUmVlZnMgRWRnZTtBbmNpZW50IEluaGVyaXRhbmNlIC0gQmVsdDtBbmNpZW50IEluaGVyaXRhbmNlIC0gTmVjaztBbmNpZW50IEluaGVyaXRhbmNlIC0gQmFjaztHb2xkZW4gRmxvb2RtYXNrO1BoYW50b20gQXNjZW5zaW9uO1R3aXN0ZWQgTWFlbHN0cm9tIHdpdGggV29ybGQgQ2hhc20gQXJ0aWZhY3Q7Q29kaWNpbCBvZiB0aGUgVmVpbGVkIE9uZXM7QXZvd2FuY2Ugb2YgdGhlIENyaW1zb24gV2l0bmVzcztUcmFuc3ZlcnNhbnQgU291bCBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzIFByZW07SHVzaCBvZiBFdGVybmFsIE5pZ2h0O1RpbmVzIG9mIFR5YmFyYTtIb3JucyBvZiB0aGUgQmV0cmF5ZXI7Q3Jvd24gb2YgU2FjcmVkIExpZ2h0O1NraXJ0IG9mIHRoZSBXaW50ZXIgUmV2ZW5hbnQ7VGhlIEJhcnJlbiBDcm93biBQcmVtO0NoYWlucyBvZiBWaWxlIENvbnZvY2F0aW9uO0JlbHQgb2YgVmlsZSBDb252b2NhdGlvbjtMaWNoIEltbW9ydGFsIEhlYWQgUGVydmVyc2lvbnMgb2YgdGhlIEJsb29kd2hvcmw7R2xhcmUgb2YgdGhlIFR5cmFudDtQaGFudG9tIEFzY2Vuc2lvbiBXZWFwb247RnJvc3Rtb290IEZyb3N0aXZ1cyBUcmVlO1NsdW1iZXJpbmcgVGVycm9yO0dvbGRlbiBCcmFjZXJzIG9mIEZvcmxvcm4gUHJlY2lwaWNlO01hY2Ugb2YgQWVvbnMgUHJlbTtQZXJjZXB0aW9ucyBvZiB0aGUgRXRlcm5hbCBNaW5kO0RhcmsgQXJ0aXN0cnkgVGhyb3diYWNrO1NwZWFyIG9mIHRoZSBFbWJlciBEZW1vbnM7QXJtb3Igb2YgdGhlIEVtYmVyIERlbW9ucztIZWxtIG9mIHRoZSBFbWJlciBEZW1vbnM7QnVja2xlciBvZiB0aGUgRW1iZXIgRGVtb25zO1Rvcm1lbnRlZCBDcm93bjtUb3JtZW50ZWQgU3RhZmY7U2hvY2sgb2YgdGhlIEFudmlsO0NvbG9yIE1lZXBvO01vbmFyY2ggb2YgdGhlIFNhcHBoaXJlIEdsZW47U3VmZmVyd29vZCBTYXBsaW5nO1RoZSBPcmRlciBvZiBDeXByaW47QmxhZGVzIG9mIFByaXNtYXRpYyBHcmFjZTtBZG9yaW5nIFdpbmdmYWxsIFByZW07SGF0IG9mIHRoZSBXaW5kd2FyZCBSb2d1ZTtDb25jb3JkIFJldmVyc2lvbiBVUDtHb2xkZW4gU2hhZG93IE1hc3F1ZXJhZGUgUHJlbTtHb2xkZW4gTWFudGxlIG9mIEdyaW0gRmFjYWRlO0Rlc2VydCBCdXJuIENyb3NzYm93O0Rlc2VydCBCdXJuIE1vcnR5IEltbW9ydGFsO0Rlc2VydCBCdXJuIENhcDtEZXNlcnQgQnVybiBPdXRmaXQ7RGVzZXJ0IEJ1cm4gU2FkZGxlO1N3aW5lIG9mIHRoZSBTdW5rZW4gR2FsbGV5IFByZW07Q29uc3RlbGxhdGlvbiBBcm1vcjtDb25zdGVsbGF0aW9uIFdlYXBvbjtLaW5nIG9mIEJlYXN0cyBCb2FyO0tpbmcgb2YgQmVhc3RzIEhhd2s7VGhlIEludGVybmF0aW9uYWwgMjAxOSBDdXJzb3IgUGFjaztDcm93biBvZiB0aGUgU291dGggU3RhcjtHbG9yeSBvZiB0aGUgU291dGggU3RhcjtCZWx0IG9mIHRoZSBTb3V0aCBTdGFyO1NwZWFyIG9mIHRoZSBTb3V0aCBTdGFyO0pha2lybyBJbW1vcnRhbCBXaW5ncztKYWtpcm8gSW1tb3J0YWxzIEhlYWRzO0phZ2dlZCBIb25vciBMZWdzO0phZ2dlZCBIb25vciBCcmFjZXI7SmFnZ2VkIEhvbm9yIEJhbm5lcjtDcmltc29uIEVkZ2Ugb2YgdGhlIExvc3QgT3JkZXI7SmFnZ2VkIEhvbm9yIE1hc2s7V2luZHJhbmdlciBBcmNhbmEgc3R5bGUgMSAoQmx1ZSBCaXJkKSArIEZ1bGwgV1IgaW1tb3J0YWw7U3ZlbiBJbW1vcnRhbHMgTWVnYVBhY2sgVVA7QXhlIGZ1bGwgSW1tb3J0YWxzIE1lZ2FwYWNrIGFsdDtLdW5ra2EgSW1tb3J0YWxzIE1lZ2FQYWNrO0ljZSBMaW5hIFByZW1pdW07V3JhaXRoIEtpbmcgQXJjYW5hIE1lZ2FQYWNrO0RlYnRzIG9mIHRoZSBOaWdodHdhdGNobWFuO0Zvd2wgUGxhZ3VlIFNldDtFdGVybmFsIFRlc3RhbWVudDtBdXRob3JpdHkgb2YgdGhlIEltcGVyaXNoYWJsZSBHcmFuZCBIaWVyb3BoYW50O0VjaG9lcyBvZiB0aGUgRXlyaWUgViAyLjA7QW50aW1hZ2UgV2VpIEZlbWFsZSAoWWQ5519IGNhbiBhZGQgV2VhcG9uIGFuZCBIZWFkKTtTa3l3cmF0aCBNYWdlIE1lZ2FQYWNrIFRoYW5hdG9zO1NvdXAgZm9yIFNsdXRzIEFrYW1hbmFoIEFyY2FuYTtNZWR1c2EgTWVnYVBhY2sgTkVXO1F1ZWVuIG9mIFBhaW4gQXJjYW5hIE1lZ2FQYWNrO1NpbHZlciBSZXZlbmFudDtQdXBwZXQgU3VtbW9uZXI7VmlwZXIgTWVnYVBhY2s7UGxhbmV0ZmFsbCBhbmQgSnVkZ2VtZW50IG9mIHRoZSBGYWxsZW4gYW5kIEJyYWNlcnMgb2YgdGhlIENhdmVybiBMdW1pbmFyIEFSQ0FOQSBNZWdhUGFjaztPZ3JlIE1hZ2kgSW1tb3J0YWxzIEFyY2FuYSBNZWdhUGFjaztTdG9ybSBTcGlyaXQgTWVnYVBhY2s7QWJhZGRvbiBSRUQgTWVnYVBhY2s7RGFya2JyZXcgRW5mb3JjZXIgYW5kIEV0ZXJuYWwgUmFkaWFuY2UgQmxhZGVzIGFuZCBNaWRhcyBLbnVja2xlcyBNZWdhUGFjaztBQU1lZ2FQYWNrO1VuYnJva2VuIFN0YWxsaW9uO0Jyb29kbW90aGVyIE1lZ2FQYWNrO0V5ZSBPZiBQb3dlciBTZXQ7Q2xpbmt6IE1lZ2FQYWNrO0J1cmdsYXIgb2YgV2FzcDtUcmFwcGluZyBvZiB0aGUgU2VjcmV0IE1lZGljaW5lO1JhZ2Ugb2YgdGhlIFRocmVlO0Rvb20gSW1tb3J0YWxzIE1lZ2FQYWNrO1R1cnF1b2lzZSBHaWFudCBHdWFyZDtNb251bWVudHMgb2YgdGhlIE5hdHVyYWwgRGVtaXVyZ2U7S3VuZyBmdSBNYXN0ZXI7QXJjYW5lIEludmVydGVyO0luayBEcmFnb24gUG9ldDtUaGUgS2luZyBvZiBUaGlldmVzO0dvbGRlbiBEYXJrIE1hdyBJbmhpYml0byBhbmQgR29sZGVuIFByb2ZhbmUgVW5pb24gYW5kIEdvbGRlbiBEcmVhZCBSZXF1aXNpdGlvbiBMaWZlc3RlYWxlciBJbW1vcnRhbHMgTWVnYXBhY2s7TG9uZSBEcnVpZCBNZWdhUGFjaztMeWNhbiBLaXNpbGV2IE1vZE1ha2VyIE1lZ2FQYWNrO0FyZW5hIENoYW1waW9uIFNldDtNaXJhbmEgVEkxMCBDb2xsZWN0b3JzIENhY2hlIE1lZ2FQYWNrO01vbmtleSBLaW5nIEFyY2FuYSBNZWdhUGFjaztOaWdodHN0YWxrZXIgTWVnYVBhY2sgc2V0O055eCBBc3Nhc3NpbiBNZWdhUGFjaztPdXR3b3JsZCBEZXZvdXZlciBNZWdhUGFjaztBcmlzdG9jcmF0aWMgUmViaXJ0aDtEaW9uYWVhIE11c2NpcHVsYTtQdWduYSBJbW1vcnRhbHMgTWVnYVBhY2s7QW5jaWVudCBNYWd1cyBTdHlsZSAzO1Vyc2EgSW1tb3J0YWxzIE1lZ2FQYWNrO1NsYXJkYXIgTWVnYVBhY2sgc2V0O1NsYXJrIE1lZ2FQYWNrIE5ldztTcGlyaXQgQnJlYWtlciBNZWdhUGFjaztSb3lhbCBTcXVpcmU7TWVjaGEgSG9ybmV0IFNldDtUcmVhbnQgUHJvdGVjdG9yIE1lZ2FQYWNrO0p1bmdsZSBFeHBsb3JlciBTZXQ7RGVtb25mb3JnZWQgU2V0O0Nhcm5pdm9yb3VzIFBhcmFzaXRpc207Q2hvbXBlciBTZXQ7VmlzYWdlIE1lZ2FQYWNrO0RldmlsIFJpcHBlcjtTZWNyZXRzIG9mIHRoZSBLYXRla2hlaW47V2l0Y2ggRG9jdG9yIE1lZ2FQYWNrO01vcnBobGluZyBJbW1vcnRhbHMgTWVnYVBhY2sgVVA7QXJjIFdhcmRlbiBNZWdhUGFjaztLaW5nIG9mIEJlYXN0cztFbXBpcmljIEluY2VuZGlhcnk7TG9hZGVkIFByb3NwZWN0cztQdXBwZXQgUHVkZ2UgUGVyc29uYSAoeWQ5519IGNhbiBhZGQgSG9vaykgVVA7IDEyM3x8fA==