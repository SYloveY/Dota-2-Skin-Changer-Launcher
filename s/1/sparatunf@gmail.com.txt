limitHWID:: 1 000||| 111:: 03D502E0-045E-0581-DE06-340700080009 111||| 222:: $2y$10$OGM3MjVhZGY3YjQ1NTcwMu60FoxGi8H/rBxO2oZlVt2Cu1A7/sev2 222||| 123:: Golden Aegis;Aghanim Dungeon Scepter Effect;Blink Dagger lvl 2 TI-6 Effect;TI-9 Bottle Effect;Radiant Nemestice Creeps;Dire Nemestice Creeps;TI-9 Level Up Effect;Declaration of the Divine Light Radiant Towers;Declaration of the Divine Shadow Dire Towers;Roshan Gardens;Aghanims Interdimensional Baby Roshan;Chicken Hut Ward;Weather Blue Sky from Soup for Sluts;Terrain - Desert;River Vial Black;Phantom Assassin Anime Voice;Beaver Knight Dashboard;Beaver Knight Loading Screen;Brawl Basher HUD;River Vial Purple;Terrain - Sanctums of the Divine;Sniper Immortal Weapon of the Ardalan Interdictor;Helm of the Ardalan Interdictor;Pack of the Ardalan Interdictor;Crimson Edict of Shadows;Golden Shadow Masquerade Prem;Dark Artistry Throwback;Armor of the Unyielding Mask;Kunkka Immortals MegaPack;Monkey King Arcana MegaPack;SF Arcana Megapack;AntiMage RED MegaPack;Allure of Miracle Fruit;Ogre Magi Immortals Arcana MegaPack;Storm Spirit MegaPack;Neon Spirit - Jade Style 1;Windranger Arcana style 2 (Orange Bird) and Full WR immortal;Wraith King Arcana MegaPack;D Octo Tinker;Lycan Kisilev ModMaker MegaPack;Death Necrolight Premium Style 2;Timbersaw MegaPack;Outworld Devouver MegaPack;Pudge TI10 Collectors Cache MegaPack; 123|||