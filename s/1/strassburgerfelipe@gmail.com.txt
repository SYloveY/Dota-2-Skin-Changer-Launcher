bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogNEM0QzQ1NDQtMDA0Qy00QTEwLTgwMzUtQzRDMDRGNTg1MzMyIDExMXx8fCAyMjI6OiAkMnkkMTAkWVRjeE5qYzVPR1V5T1RBMFlqY3haT3hMRG5TbkxJUUh2L1E3bmJpcmZOSGRLWVZqREVxc0sgMjIyfHx8IDEyMzo6IGRyaXZlX2Rpcjo6Q3VzdG9tIE1lZ2FQYWNrIERyb3cgUmFuZ2VyIFN5bHZhbmFzIEJhc2U7ZHJpdmVfZGlyOjpPYXRocyBvZiB0aGUgRHJhZ29uYm9ybiBCb3c7ZHJpdmVfZGlyOjpTb3VsIERpZmZ1c2VyIFByZW07ZHJpdmVfZGlyOjpDYW5ub24gb2YgdGhlIEpvbGx5IFJlYXZlcjtkcml2ZV9kaXI6OlBsYW5ldGZhbGw7ZHJpdmVfZGlyOjpRdWVlbiBvZiBQYWluIEFyY2FuYSBNZWdhUGFjaztkcml2ZV9kaXI6OkdyYWNlIG9mIHRoZSBFbWluZW5jZSBvZiBSaXN0dWw7ZHJpdmVfZGlyOjpNb3VudCBvZiB0aGUgV2luZ2VkIFNlbnRpbmVsO2RyaXZlX2Rpcjo6R2xhaXZlcyBvZiB0aGUgV2luZ2VkIFNlbnRpbmVsO2RyaXZlX2Rpcjo6VGVycmFpbiAtIEF1dHVtbjtkcml2ZV9kaXI6OkhlYXJ0bGVzcyBIdW50IC0gQXJtb3I7ZHJpdmVfZGlyOjpXcmFwcyBvZiB0aGUgU2Vhc29uZWQgVmV0ZXJhbiBWIDIuMTtkcml2ZV9kaXI6OlRpbmVzIG9mIFR5YmFyYTtkcml2ZV9kaXI6OlNodXJpa2VuIG9mIENvcnJ1cHRpb247ZHJpdmVfZGlyOjpIdW50ZXJzIEhvYXJkO2RyaXZlX2Rpcjo6UHJvdm9jYXRpb24gb2YgUnVpbiBCcmFjZXJzO2RyaXZlX2Rpcjo6UHJvdm9jYXRpb24gb2YgUnVpbiBQYXVsZHJvbjtkcml2ZV9kaXI6OlByb3ZvY2F0aW9uIG9mIFJ1aW4gTWFzaztkcml2ZV9kaXI6OlByb3ZvY2F0aW9uIG9mIFJ1aW4gQmVsdDtkcml2ZV9kaXI6OkNyaW1zb24gRWRnZSBvZiB0aGUgTG9zdCBPcmRlcjtkcml2ZV9kaXI6OlRoZSBTY2FybGV0IEZsYXJlIEFybXM7ZHJpdmVfZGlyOjpXeXJtd3JvdWdodCBGbGFyZTtkcml2ZV9kaXI6Okhvb2R3aW5rIEdsZWlwbmlyO2RyaXZlX2Rpcjo6RmxvY2toZWFydHMgR2FtYmxlIE1vbHRlbiBGaXJlbGFyaztkcml2ZV9kaXI6OlRlbXBlc3QgSGVsbSBvZiB0aGUgVGh1bmRlcmdvZCArIFJpZ2h0ZWQ5519cyBUaHVuZGVyYm9sdDtkcml2ZV9kaXI6OlBhdWxkcm9ucyBvZiB0aGUgV2FydG9ybiBIZWF2ZW5zO2RyaXZlX2Rpcjo6V2luZHJhbmdlciBBcmNhbmEgc3R5bGUgMTtkcml2ZV9kaXI6OlBoYW50b20gQWR2ZW50IEJlbHQgVVA7ZHJpdmVfZGlyOjpTb3VsIERpZmZ1c2VyO2RyaXZlX2Rpcjo6RGVzZXJ0IEJ1cm4gQ3Jvc3Nib3c7ZHJpdmVfZGlyOjpEZXNlcnQgQnVybiBDYXA7ZHJpdmVfZGlyOjpEZXNlcnQgQnVybiBNb3J0eSBJbW1vcnRhbDtkcml2ZV9kaXI6OkRlc2VydCBCdXJuIFNhZGRsZTtkcml2ZV9kaXI6Ok1hamVzdHkgT2YgVGhlIENvbG9zc3VzIC0gUGViYmxlO2RyaXZlX2Rpcjo6TWFqZXN0eSBPZiBUaGUgQ29sb3NzdXMgLSBDb2JibGU7ZHJpdmVfZGlyOjpNYWplc3R5IE9mIFRoZSBDb2xvc3N1cyAtIE1vbm9saXRoO2RyaXZlX2Rpcjo6U3dvcmQgb2YgdGhlIENvbG9zc3VzIFByZW07ZHJpdmVfZGlyOjpQaGFudG9tIEFkdmVudCBVUDtkcml2ZV9kaXI6OlBoYW50b20gQWR2ZW50IFNob3VsZGVycyBVUDtkcml2ZV9kaXI6OlNoYWRvdyBGaWVuZCBBcmNhbmEgRGVtb24gRWF0ZXI7ZHJpdmVfZGlyOjpNYW5pZm9sZCBQYXJhZG94IFBBIEFyY2FuYSBTdHlsZSAzO2RyaXZlX2Rpcjo6QXZvd2FuY2Ugb2YgdGhlIFZlaWxlZCBPbmVzO2RyaXZlX2Rpcjo6U3R5bGUgb2YgdGhlIEZlYXJmdWwgQXJpYTtkcml2ZV9kaXI6OkJlbHQgb2YgdGhlIENyZWVwaW5nIFNoYWRvdztkcml2ZV9kaXI6OkNsb2FrIG9mIHRoZSBOaW1ibGUgRWRnZTtkcml2ZV9kaXI6OkNyb3duIG9mIHRoZSBPbmUgVHJ1ZSBLaW5nO2RyaXZlX2Rpcjo6QXhlIG9mIFZpbGUgUmVsaXF1YXJ5O2RyaXZlX2Rpcjo6UGF1bGRyb25zIG9mIFZpbGUgUmVsaXF1YXJ5O2RyaXZlX2Rpcjo6TWFudGxlIG9mIFZpbGUgUmVsaXF1YXJ5O2RyaXZlX2Rpcjo6QXJtcyBvZiBWaWxlIFJlbGlxdWFyeTtkcml2ZV9kaXI6Olp1bGppbiBmb3IgVHJvbGwgV2FybG9yZCBTdHlsZSAzO2RyaXZlX2Rpcjo6TWFsZWZpYyBEcmFrZXMgSG9vZCBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzO2RyaXZlX2Rpcjo6TWFjZSBvZiBBZW9ucyBQcmVtO2RyaXZlX2Rpcjo6Q2xhc3p1cmVtZSBJbmN1cnNpb24gQmVsdDtkcml2ZV9kaXI6OkZhY2VsZXNzIE1hZG5lc3M7ZHJpdmVfZGlyOjpDbGFzenVyZW1lIEluY3Vyc2lvbiBTaG91bGRlcjtkcml2ZV9kaXI6OkJyYWNlcnMgb2YgQWVvbnMgUHJlbTtkcml2ZV9kaXI6OkFybW9yIG9mIFZpbGUgUmVsaXF1YXJ5OyAxMjN8fHw=