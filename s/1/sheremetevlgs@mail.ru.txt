bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogNTRBNzczNkItNjg2OC1DQTE2LUExRDMtMDBEODYxRDk3NkE5IDExMXx8fCAyMjI6OiBiMWFiMThlODM3NjI5NzUxNzgzZWQ4NWUwMDU3OGNhNTA3YmM2OTFjZDE5Y2ZlNzFiZTgxNDRjMTc3NGU0OGQ2NGE3ZGRjOTkzNGU0YmVkMzYwZjU0YThlYWIxNmQ0N2VlNTA5ZWZkMmI4OTAwM2EwODZjM2M2YmY4MWJmMmNkMyAyMjJ8fHwgMTIzOjogZHJpdmVfZGlyOjpTZXZlcmluZyBMYXNoIFByZW07ZHJpdmVfZGlyOjpTa2lydCBvZiB0aGUgR3VhcmRpYW4gQ29uc3RydWN0IEhhcnZlc3RlZDtkcml2ZV9kaXI6OkxvbmUgRHJ1aWQgTWVnYVBhY2s7ZHJpdmVfZGlyOjpMZWdpb24gQ29tbWFuZGVyIE1vZE1ha2VyIE1lZ2FQYWNrO2RyaXZlX2Rpcjo6R3JlYXQgU2FnZXMgUmVja29uaW5nIFRpbWVsZXNzIFRhbGU7ZHJpdmVfZGlyOjpGbGFzaHBvaW50IFByb3NlbHl0ZSAtIE9mZi1IYW5kO2RyaXZlX2Rpcjo6QnVja2xlciBvZiB0aGUgRW1iZXIgRGVtb25zO2RyaXZlX2Rpcjo6QXJtb3Igb2YgdGhlIEVtYmVyIERlbW9ucztkcml2ZV9kaXI6OkhlbG0gb2YgdGhlIEVtYmVyIERlbW9ucztkcml2ZV9kaXI6OkNyb3duIG9mIEVsYXNteXI7ZHJpdmVfZGlyOjpWb3VsZ2Ugb2YgdGhlIEFuZGVzdGlhbiBTZW50aW5lbDtkcml2ZV9kaXI6OkRlY2xhcmF0aW9uIG9mIHRoZSBEaXZpbmUgTGlnaHQgUmFkaWFudCBUb3dlcnM7ZHJpdmVfZGlyOjpNYXJrIG9mIHRoZSBNaXN0cmFsIEZpZW5kIFYgMi4xO2RyaXZlX2Rpcjo6QUFNZWdhUGFjaztkcml2ZV9kaXI6OkFwb2NhbHlwc2UgVW5ib3VuZCAtIFNob3VsZGVyO2RyaXZlX2Rpcjo6QXJjIFdhcmRlbiBNZWdhUGFjaztkcml2ZV9kaXI6OkZpc3RzIG9mIEF4ZSBVbmxlYXNoZWQ7ZHJpdmVfZGlyOjpIYXJ2ZXN0ZWQgU2hvdWxkZXJzO2RyaXZlX2Rpcjo6T3Zlcmdyb3duIFRlcnJvciBIZWFkO2RyaXZlX2Rpcjo6RW1waXJpYyBJbmNlbmRpYXJ5O2RyaXZlX2Rpcjo6QmVhc3RtYXN0ZXIgTWVnYVBhY2s7ZHJpdmVfZGlyOjpNYXN0ZXIgRGlub3NhdXJzIFRlbGVwYXRoeSBCZWFzdDtkcml2ZV9kaXI6OldyYXRoIG9mIHRoZSBCbG9vZCBDb3ZlbmFudCBTZXQ7ZHJpdmVfZGlyOjpUaW5lcyBvZiBUeWJhcmE7ZHJpdmVfZGlyOjpEb3RhIDIgQ2hhbmdlciBFZGl0aW9uIEh1bnRlcnMgSG9hcmQgb2YgdGhlIENyaW1zb24gV2l0bmVzcztkcml2ZV9kaXI6OldyYXBzIG9mIHRoZSBTZWFzb25lZCBWZXRlcmFuIFYgMi4xO2RyaXZlX2Rpcjo6QmVhc3Qgb2YgdGhlIENyaW1zb24gUmluZyBCcmFjZXJzO2RyaXZlX2Rpcjo6QmVhc3Qgb2YgdGhlIENyaW1zb24gUmluZyBXZWFwb247ZHJpdmVfZGlyOjpBeGUgb2YgdGhlIFByb3Zlbjtkcml2ZV9kaXI6OkJlbHQgb2YgQ29udGVzdGVkIEZhdGU7ZHJpdmVfZGlyOjpIYXJuZXNzIG9mIENvbnRlc3RlZCBGYXRlO2RyaXZlX2Rpcjo6SWNlcGxhaW4gUmF2YWdlciBIb3JuO2RyaXZlX2Rpcjo6Q2hhb3MgRnVsY3J1bTtkcml2ZV9kaXI6OlRhbG9ucyBvZiB0aGUgRW5kbGVzcyBTdG9ybSBNb3VudDtkcml2ZV9kaXI6OkRpYWJvbGljIEFzcGVjdDtkcml2ZV9kaXI6OlRhbG9ucyBvZiB0aGUgRW5kbGVzcyBTdG9ybSBXZWFwb247ZHJpdmVfZGlyOjpQbGFuZXRmYWxsO2RyaXZlX2Rpcjo6S3VuZyBmdSBNYXN0ZXI7ZHJpdmVfZGlyOjpNYWNlIG9mIEFlb25zIFByZW07ZHJpdmVfZGlyOjpKZXdlbCBvZiBBZW9ucyBQcmVtO2RyaXZlX2Rpcjo6Q2xhc3p1cmVtZSBJbmN1cnNpb24gQmVsdDtkcml2ZV9kaXI6OkF0b21pYyBSYXkgVGhydXN0ZXJzIFByZW07ZHJpdmVfZGlyOjpBaXJib3JuZSBNYWNoZXRlO2RyaXZlX2Rpcjo6V2F0ZXJsb2dnZWQgS3Vua2thIFNob2VzO2RyaXZlX2Rpcjo6VG9ybWVudGVkIENyb3duO2RyaXZlX2Rpcjo6VG9ybWVudGVkIFN0YWZmO2RyaXZlX2Rpcjo6Q3Jvd24gb2YgdGhlIFdpdGNoIFN1cHJlbWU7ZHJpdmVfZGlyOjpIb3JucyBvZiB0aGUgQmV0cmF5ZXI7ZHJpdmVfZGlyOjpMZWZ0IEhhbmQgb2YgdGhlIFdpdGNoIFN1cHJlbWU7ZHJpdmVfZGlyOjpNdWxjdGFudCBQYWxsIG9mIHRoZSBDcmltc29uIFdpdG5lc3M7ZHJpdmVfZGlyOjpJbmZlcm5hbCBXaW5ncyBNYWNlO2RyaXZlX2Rpcjo6VHdpbGlnaHQgU2NoaXNtO2RyaXZlX2Rpcjo6TW9vbmZhbGwgUHJlbTtkcml2ZV9kaXI6Ok1lZHVzYSBNZWdhUGFjayBORVc7ZHJpdmVfZGlyOjpDb2xvc3NhbCBDcnlzdGFsIENob3J1cyBQcmVtO2RyaXZlX2Rpcjo6QmxhZGUgb2YgdGhlIEZyYWN0dXJlZCBPcmRlcjtkcml2ZV9kaXI6OlRoZSBPcmRlciBvZiBDeXByaW47ZHJpdmVfZGlyOjpCbGFkZXMgb2YgUHJpc21hdGljIEdyYWNlO2RyaXZlX2Rpcjo6QWxsZmF0aGVyIG9mIE5hdHVyZSBTZXQ7ZHJpdmVfZGlyOjpCb25zYWlrbztkcml2ZV9kaXI6Ok5pZ2h0IFN0YWxrZXIgSW1tb3J0YWwgYW5kIFJlYXBlciBLaXNpbGV2IE1vZE1ha2VyIE1lZ2FQYWNrO2RyaXZlX2Rpcjo6V2luZ3Mgb2YgVW5mZXR0ZXJlZCBNYWxldm9sZW5jZTtkcml2ZV9kaXI6OkNyb3duIG9mIFVsdGltYXRlIFdvcnNoaXA7ZHJpdmVfZGlyOjpDcmltc29uIExhdHRpY2VhbiBIaWVyYXJjaHk7ZHJpdmVfZGlyOjpMYXR0aWNlYW4gU2hhcmRzIG9mIHRoZSBDcmltc29uIFdpdG5lc3M7ZHJpdmVfZGlyOjpPZ3JlIE1hZ2kgSW1tb3J0YWxzIEFyY2FuYSBNZWdhUGFjaztkcml2ZV9kaXI6OkFkb3JpbmcgV2luZ2ZhbGwgUHJlbTtkcml2ZV9kaXI6OkFybW9yIG9mIFNhY3JlZCBMaWdodDtkcml2ZV9kaXI6OkdhdW50bGV0cyBvZiBTYWNyZWQgTGlnaHQ7ZHJpdmVfZGlyOjpBbGx1dmlvbiBQcm9waGVjeTtkcml2ZV9kaXI6OkF1c3BpY2lvdXMgU2VhZHdlbGxlcjtkcml2ZV9kaXI6OkFzdHJhbCBEcmlmdDtkcml2ZV9kaXI6OkdvbGRlbiBTaGFyZHMgb2YgRXhpbGUgUHJlbTtkcml2ZV9kaXI6OkNvYXQgb2YgdGhlIFdpbmR3YXJkIFJvZ3VlO2RyaXZlX2Rpcjo6TWFzayBvZiB0aGUgQ29uZmlkYW50O2RyaXZlX2Rpcjo6UmFwaWVyIG9mIHRoZSBXaW5kd2FyZCBSb2d1ZTtkcml2ZV9kaXI6OkFybW9yIG9mIHRoZSBGZWFyZnVsIEFyaWEgUHJlbTtkcml2ZV9kaXI6OkNvbmNvcmQgRG9taW5pb247ZHJpdmVfZGlyOjpCbGF6ZSBvZiBPYmxpdmlvbiBCYWNrO2RyaXZlX2Rpcjo6UXVlZW4gb2YgUGFpbiBBcmNhbmEgTWVnYVBhY2s7ZHJpdmVfZGlyOjpQaWVyY2luZyBVbWJyYWdlIFBhY2sgRG90YSAyIENoYW5nZXIgRWRpdGlvbjtkcml2ZV9kaXI6OkNydXggb2YgUGVycGxleCBJbW1vcnRhbCBTdHlsZTtkcml2ZV9kaXI6OkZhbnRvY2Npbmk7ZHJpdmVfZGlyOjpNYXNrIG9mIHRoZSBBcmNhbmlzdHMgR3Vpc2U7ZHJpdmVfZGlyOjpUaGUgQmFycmVuIENyb3duIFByZW07ZHJpdmVfZGlyOjpUaGUgQmFycmVuIFZlY3Rvcjtkcml2ZV9kaXI6OkNvcnJ1cHRlZCBTaHJpbmUgR2FybWVudHM7ZHJpdmVfZGlyOjpBc3BlY3Qgb2YgT3NjaWxsYTtkcml2ZV9kaXI6OkRvdGEgMiBDaGFuZ2VyIEVkaXRpb24gRGFtYXJha2FuIE11enpsZSBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzO2RyaXZlX2Rpcjo6R2xhaXZlIG9mIE9zY2lsbGE7ZHJpdmVfZGlyOjpTZWNyZXRzIG9mIHRoZSBDZWxlc3RpYWwgSGVhZDtkcml2ZV9kaXI6OlNreXdhcnJpb3JzIENvdW50ZW5hbmNlO2RyaXZlX2Rpcjo6Q29ycmlkYW4gTWFlc3RybyBhbmQgVGhlIExpZ2h0bmluZyBPcmNoaWQgYW5kIEdvbGRlbiBNYW5kYXRlIG9mIHRoZSBTdG9ybWJvcm4gTWVnYVBhY2sgTkVXO2RyaXZlX2Rpcjo6U3ZlbiBJbW1vcnRhbHMgTWVnYVBhY2sgVVA7ZHJpdmVfZGlyOjpBcXVlbWVyYWxkIEJsYWRlO2RyaXZlX2Rpcjo6R29sZGVuIFJlY3RpZmllcjtkcml2ZV9kaXI6OkNvbnRyb2xsZWQgQnVybjtkcml2ZV9kaXI6OkNsZWFyY3V0IENhdmFsaWVyIEhlYWQ7ZHJpdmVfZGlyOjpDbGVhcmN1dCBDYXZhbGllciBCYWNrO2RyaXZlX2Rpcjo6UGF1bGRyb25zIG9mIHRoZSBTaWVnZSBFbmdpbmU7ZHJpdmVfZGlyOjpBcmNhbmljIFJlc29uYW5jZSBCZWFtO2RyaXZlX2Rpcjo6QmFsbGlzdGEgb2YgdGhlIEZvcnRpZmllZCBGYWJyaWNhdG9yO2RyaXZlX2Rpcjo6Um9sbGVybWF3c3RlciBQcmVtO2RyaXZlX2Rpcjo6U2hvdWxkZXJzIG9mIHRoZSBGb3J0aWZpZWQgRmFicmljYXRvcjtkcml2ZV9kaXI6OlN1Ym1lcmdlZCBIYXphcmQgUHJvcGVsbGVyO2RyaXZlX2Rpcjo6Q2x1YiBvZiB0aGUgSWduZWQ5519cyBTdG9uZTtkcml2ZV9kaXI6OkdvbGRlbiBQaXNjZWFuIFB1bHZlcml6ZXI7ZHJpdmVfZGlyOjpCYWNrIG9mIERpc3Rpbmd1aXNoZWQgRXhwZWRpdGlvbmFyeTtkcml2ZV9kaXI6OkFuY2VzdG9ycyBGcm96ZW4gQXhlO2RyaXZlX2Rpcjo6SGVsbSBvZiB0aGUgR3VhcmRlZCBXb3JkO2RyaXZlX2Rpcjo6Qm9idXNhbmdzIFRvYmFjY28gRml4O2RyaXZlX2Rpcjo6RnJvemVuIFNpZ2lsIG9mIHRoZSBHbGFjaWVyIFNlYTtkcml2ZV9kaXI6OkNyaW1zb24gRW1lcmFsZCBDb25xdWVzdDtkcml2ZV9kaXI6Okhvcm5zIG9mIHRoZSBPYnNpZGlhbiBGb3JnZTtkcml2ZV9kaXI6OlJhdmVub3VzIEFieXNzIC0gQXJtb3I7ZHJpdmVfZGlyOjpCbGFkZSBvZiBGbGlnaHRsZXNzIEZ1cnk7ZHJpdmVfZGlyOjpDcmltc29uIE1vdXJuZnVsIFJldmVyaWU7ZHJpdmVfZGlyOjpIYWlyIG9mIHRoZSBGYWxsZW4gUHJpbmNlc3M7ZHJpdmVfZGlyOjpUYWlsIG9mIHRoZSBGZXJvY2lvdXMgVG94aWNhbnQ7ZHJpdmVfZGlyOjpXaW5ncyBvZiB0aGUgRmF0YWwgQmxvb207ZHJpdmVfZGlyOjpXYXRjaGVyIG9mIHRoZSBWaXJ1bGVudCBLcmFpdDtkcml2ZV9kaXI6OkN1bHQgb2YgQWt0b2s7ZHJpdmVfZGlyOjpWaXBlciBNZWdhUGFjaztkcml2ZV9kaXI6OkNoaWxsIG9mIHRoZSBLZWVwZXJzIEdhemU7ZHJpdmVfZGlyOjpDZWFzZWxlc3MgU29yY2VyeTtkcml2ZV9kaXI6OkJlaG9sZGVuIG9mIHRoZSBCYW5pc2hlZCBPbmVzIC0gT2ZmLUhhbmQ7ZHJpdmVfZGlyOjpCZWhvbGRlbiBvZiB0aGUgQmFuaXNoZWQgT25lcyAtIEhlYWQ7ZHJpdmVfZGlyOjpCb29rIG9mIHRoZSBJbmZlcm5hbCBNYXc7ZHJpdmVfZGlyOjpTa2l0dGVyaW5nIERlc29sYXRpb24gUHJlbTtkcml2ZV9kaXI6OkNyaW1zb24gQ3lycmlkYWU7ZHJpdmVfZGlyOjpDcmltc29uIFBpcXVlIFByZW07ZHJpdmVfZGlyOjpBeGlhIG9mIE1ldGlyYTtkcml2ZV9kaXI6OlB1bHNhciBSZW1uYW50IFByZW07ZHJpdmVfZGlyOjpTcGlyaXQgb2YgdGhlIFNhY3JlZCBHcm92ZSAtIEhlYWQ7ZHJpdmVfZGlyOjpTcGlyaXQgb2YgdGhlIFNhY3JlZCBHcm92ZSAtIFNob3VsZGVyO2RyaXZlX2Rpcjo6U3Bpcml0IG9mIHRoZSBTYWNyZWQgR3JvdmUgLSBRdWl2ZXI7ZHJpdmVfZGlyOjpDcmltc29uIEhlYXJ0cyBvZiBNaXNydWxlO2RyaXZlX2Rpcjo6RHJlc3Mgb2YgdGhlIEZhZXNoYWRlIEZsb3dlcjtkcml2ZV9kaXI6OlRoZSBTdW5icmVlemUgQmlydGhyaWdodDtkcml2ZV9kaXI6OkFzdHJvbG9nZXIgU2V0O2RyaXZlX2Rpcjo6QmVuZXZvbGVudCBDb21wYW5pb24gUHJlbTtkcml2ZV9kaXI6OkZsb3VyaXNoaW5nIExvZGVzdGFyIFByZW07ZHJpdmVfZGlyOjpCZWx0IG9mIHRoZSBTb3V0aCBTdGFyO2RyaXZlX2Rpcjo6VmlyZ2FzIEFyYztkcml2ZV9kaXI6OkNyaW1zb24gR2F0ZXMgb2YgTm90aGw7ZHJpdmVfZGlyOjpEYXJrY2xhdyBFbWlzc2FyeSBTdGFmZiB3aXRoIGN1c3RvbSBVcm47ZHJpdmVfZGlyOjpOb3RobGljIEJ1cmRlbiBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzIFByZW07ZHJpdmVfZGlyOjpBcm1vciBvZiB0aGUgQnJpZ2h0c2hyb3VkO2RyaXZlX2Rpcjo6Q292ZXJzIG9mIHRoZSBNZXJxdWVlbjtkcml2ZV9kaXI6Okdob3N0cyBvZiBFdGVybmFsIFRlc3RhbWVudDtkcml2ZV9kaXI6OkZsdXR0ZXJpbmcgTW9ydGlzIFByZW07ZHJpdmVfZGlyOjpDcm93biBvZiB0aGUgQnJpZ2h0c2hyb3VkO2RyaXZlX2Rpcjo6RnVyeSBvZiB0aGUgUmlnaHRlb3VzIFN0b3JtIC0gS2lyaW47ZHJpdmVfZGlyOjpIYXQgb2YgdGhlIFN0b3JtY2hhcmdlIERyYWdvb247ZHJpdmVfZGlyOjpTY2FiYmFyZHMgb2YgdGhlIFN0b3JtY2hhcmdlIERyYWdvb247ZHJpdmVfZGlyOjpXZWFwb24gb2YgdGhlIERlZmVuZGVyIG9mIFJ1aW47ZHJpdmVfZGlyOjpUd2lzdGVkIE1hZWxzdHJvbSB3aXRoIFdvcmxkIENoYXNtIEFydGlmYWN0O2RyaXZlX2Rpcjo6TG9yZCBvZiBMdW1pbmFyaWVzIEVpZG9sb25zO2RyaXZlX2Rpcjo6Rm9jYWwgUmVzb25hbmNlIFYgMy4wO2RyaXZlX2Rpcjo6QW5jaWVudCBJbmhlcml0YW5jZSAtIFNob3VsZGVyO2RyaXZlX2Rpcjo6QW5jaWVudCBJbmhlcml0YW5jZSAtIE5lY2s7ZHJpdmVfZGlyOjpBbmNpZW50IEluaGVyaXRhbmNlIC0gQmVsdDtkcml2ZV9kaXI6OkFuY2llbnQgSW5oZXJpdGFuY2UgLSBCYWNrO2RyaXZlX2Rpcjo6Q2hhaW5zIG9mIFZpbGUgQ29udm9jYXRpb247ZHJpdmVfZGlyOjpDcm93biBvZiBWaWxlIENvbnZvY2F0aW9uO2RyaXZlX2Rpcjo6R2xhcmUgb2YgdGhlIFR5cmFudDtkcml2ZV9kaXI6OldpbmdzIG9mIHRoZSBJY2VidXJudCBFbGVneTtkcml2ZV9kaXI6OkNyb3duIG9mIHRoZSBJY2VidXJudCBFbGVneTtkcml2ZV9kaXI6OkNvd2wgb2YgdGhlIENvbGQgSHVudCBWIDIuMTtkcml2ZV9kaXI6OkZvcmV0ZWxsZXJzIE9hdGg7ZHJpdmVfZGlyOjpHb2xkZW4gRmxvb2RtYXNrO2RyaXZlX2Rpcjo6SG9ycm9yIGZyb20gdGhlIERlZXAgQXJtcztkcml2ZV9kaXI6OlJ1YmljayBDdXJzZSAtIFJlbW90ZSBNaW5lO2RyaXZlX2Rpcjo6RXllcyBvZiBBcmRlbm9rO2RyaXZlX2Rpcjo6SmFraXJvIE1lZ2FQYWNrO2RyaXZlX2Rpcjo6TW9uYXJjaCBvZiB0aGUgU2FwcGhpcmUgR2xlbjtkcml2ZV9kaXI6Ok1hbnRsZSBvZiB0aGUgVHJ1ZWJhcmsgQWRoZXJlbnQ7ZHJpdmVfZGlyOjpXeXJtd3JvdWdodCBGbGFyZTtkcml2ZV9kaXI6OlJ1bXJ1bm5lcnMgQ2Fycm9uYWRlO2RyaXZlX2Rpcjo6RWxpeGlyIG9mIERyYWdvbnMgQnJlYXRoIFByZW07ZHJpdmVfZGlyOjpIZWxtIG9mIEdyaW0gUmVmb3JtYXRpb247ZHJpdmVfZGlyOjpQYWxlIEF1Z3VyIFByZW07ZHJpdmVfZGlyOjpDb2F0IG9mIEZvcmxvcm4gRGVzY2VudDtkcml2ZV9kaXI6OkdvbGRlbiBGdWxsLUJvcmUgQm9uYW56YTtkcml2ZV9kaXI6OkJsYWNrc2FpbCBDYW5ub25lZXIgU2hvdWxkZXI7ZHJpdmVfZGlyOjpCbG9zc29tIG9mIHRoZSBNZXJyeSBXYW5kZXJlcjtkcml2ZV9kaXI6Ok1lcnJ5IFdhbmRlcmVyKnMgQnJ1c2ggUHJlbTtkcml2ZV9kaXI6OlRhaWwgb2YgdGhlIEFnZWxlc3MgRmFlO2RyaXZlX2Rpcjo6UHVnbmEgSW1tb3J0YWxzIE1lZ2FQYWNrO2RyaXZlX2Rpcjo6Q2hlc3RwbGF0ZSBvZiB0aGUgR3VhcmRpYW4gQ29uc3RydWN0IEJlc3Rvd2VkO2RyaXZlX2Rpcjo6QnJhY2VycyBvZiB0aGUgR3VhcmRpYW4gQ29uc3RydWN0IEJlc3Rvd2VkO2RyaXZlX2Rpcjo6UHJpemUgb2YgdGhlIFNhbHR3b3JuIE1hcmluZXIgR2hvc3RseTtkcml2ZV9kaXI6OkxldmlhdGhhbiBXaGFsZSBCbGFkZSBvZiBFbWluZW50IFJldml2YWwgRXhjZXB0aW9uYWw7ZHJpdmVfZGlyOjpFbmRsZXNzIE5pZ2h0IE1vdW50O2RyaXZlX2Rpcjo6QmVob2xkZW4gb2YgdGhlIEJhbmlzaGVkIE9uZXMgLSBHb2xlbTtkcml2ZV9kaXI6OkJlbGxvd3Mgb2YgQ3JlYXRpb247ZHJpdmVfZGlyOjpNYWNlIG9mIHRoZSBGaXNzdXJlZCBTb3VsO2RyaXZlX2Rpcjo6V2FyZGVuIG9mIHRoZSBXeXJtZm9yZ2UgU2hhcmQ7ZHJpdmVfZGlyOjpKYWRlIFJlY2tvbmluZyBQcmVtO2RyaXZlX2Rpcjo6QmVsdCBvZiB0aGUgSmFkZSBFbWlzc2FyeTtkcml2ZV9kaXI6OkhlbG0gb2YgdGhlIEphZGUgRW1pc3Nhcnk7ZHJpdmVfZGlyOjpTdG9uZSBNb25rZXkgU3Bpcml0cyBWIDMuMTtkcml2ZV9kaXI6OkJsYXN0Zm9yZ2UgRXhoYWxlciBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzO2RyaXZlX2Rpcjo6V3JhdGggb2YgdGhlIEZhbGxlbiBIZWFkO2RyaXZlX2Rpcjo6V3JhdGggb2YgdGhlIEZhbGxlbiBTaG91bGRlcjtkcml2ZV9kaXI6OlplYWwgb2YgT21veiBBcmtvc2g7ZHJpdmVfZGlyOjpXcmF0aCBvZiB0aGUgRmFsbGVuIFdlYXBvbjtkcml2ZV9kaXI6OldyYXRoIG9mIHRoZSBGYWxsZW4gQmFjaztkcml2ZV9kaXI6OkRyZWFkIEFzY2VuZGFuY2UgVGFpbDtkcml2ZV9kaXI6OkJ1cm5pbmcgRmllbmQ7ZHJpdmVfZGlyOjpQcm9taW5lbmNlO2RyaXZlX2Rpcjo6VGhlIEtpbmcgT2YgVGhpZXZlcyBIZWFkO2RyaXZlX2Rpcjo6V2luZ3Mgb2YgRGF5YnJlYWs7ZHJpdmVfZGlyOjpUaGUgS2luZyBPZiBUaGlldmVzIEJlbHQ7ZHJpdmVfZGlyOjpQYXJhZ29ucyBSZWJ1a2U7ZHJpdmVfZGlyOjpJcm9uIFN1cmdlIFYgMi4yO2RyaXZlX2Rpcjo6U2F2YWdlIE1ldHRsZTtkcml2ZV9kaXI6Ok1hbnRsZSBvZiBVbHRvcmlhbiBDaGFyZ2VyO2RyaXZlX2Rpcjo6QnJhY2Ugb2YgVWx0b3JpYW4gR3VhcmQ7ZHJpdmVfZGlyOjpCZWx0IG9mIFVsdG9yaWFuIENoYXJnZXI7ZHJpdmVfZGlyOjpUcmVhbnQgUHJvdGVjdG9yIE1lZ2FQYWNrO2RyaXZlX2Rpcjo6U2hhZG93IE1hc3F1ZXJhZGUgUHJlbTtkcml2ZV9kaXI6OlRoaXJzdCBvZiBFenR6aG9rIEJ1bmRsZSBQcmVtO2RyaXZlX2Rpcjo6SGVhZCBvZiBIYXJ2ZXN0cyBIb3VuZDtkcml2ZV9kaXI6OlNob3VsZGVyIG9mIHRoZSBCbG9vZGZvcmdlO2RyaXZlX2Rpcjo6QXBvZ2VlIG9mIHRoZSBHdWFyZGlhbiBGbGFtZTtkcml2ZV9kaXI6OlJhcGllcnMgb2YgdGhlIEJ1cm5pbmcgR29kIFYgMy4xO2RyaXZlX2Rpcjo6U3BhbiBvZiBTb3Jyb3c7ZHJpdmVfZGlyOjpTY3l0aGVzIG9mIFNvcnJvdztkcml2ZV9kaXI6OlNoZWFyaW5nIERlcG9zaXRpb24gUHJlbTtkcml2ZV9kaXI6OlRvbWUgb2YgRm9yYmlkZGVuIEtub3dsZWRnZTtkcml2ZV9kaXI6OlN1ZmZlcndvb2QgU2FwbGluZztkcml2ZV9kaXI6OkNoYXJtIG9mIHRoZSBMdWNlbnQgQ2Fub3B5O2RyaXZlX2Rpcjo6Q3Jlc3Qgb2YgdGhlIEx1Y2VudCBDYW5vcHk7ZHJpdmVfZGlyOjpGaWVyeSBXYXJkIG9mIEVraSBCdWthdztkcml2ZV9kaXI6OkhhdWwgb2YgdGhlIEx1Y2VudCBDYW5vcHk7ZHJpdmVfZGlyOjpHb2xkZW4gRmxpZ2h0IG9mIEVwaXBoYW55O2RyaXZlX2Rpcjo6R29sZGVuIEVtcHlyZWFuIFByZW07ZHJpdmVfZGlyOjpVbWJyYWwgR2x5cGg7ZHJpdmVfZGlyOjpDaW5kZXIgU2Vuc2VpIFN0eWxlO2RyaXZlX2Rpcjo6SnVkZ2VtZW50IG9mIHRoZSBGYWxsZW47ZHJpdmVfZGlyOjpCcmFjZXJzIG9mIFRlY3RvbmljIEltcGxpY2F0aW9ucztkcml2ZV9kaXI6OlN0YWZmIG9mIHRoZSBQcm91ZHNpbHZlciBDbGFuO2RyaXZlX2Rpcjo6Q3Jvd24gb2YgdGhlIFByb3Vkc2lsdmVyIENsYW47ZHJpdmVfZGlyOjpNYW5pYXMgTWFzayBQcmVtO2RyaXZlX2Rpcjo6UmVhcGVycyBXcmVhdGg7ZHJpdmVfZGlyOjpTaWxlbnQgV2FrZSBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzO2RyaXZlX2Rpcjo6U2hvdWxkZXJzIG9mIHRoZSBTYWNyZWQgSHVudDtkcml2ZV9kaXI6Okd1YXJkIG9mIEZ1bGwgVGhyb3R0bGU7ZHJpdmVfZGlyOjpEZWF0aCBOZWNyb2xpZ2h0IFByZW1pdW0gU3R5bGUgMjtkcml2ZV9kaXI6OkJyb29kbW90aGVyIE1lZ2FQYWNrO2RyaXZlX2Rpcjo6Q2xhc3p1cmVtZSBJbmN1cnNpb24gSGVhZDtkcml2ZV9kaXI6OkdvbGRlbiBTdGFmZiBvZiBHdW4tWXUgUHJlbTtkcml2ZV9kaXI6Ok1hc2sgb2YgdGhlIERlbW9uIFRyaWNrc3Rlcjtkcml2ZV9kaXI6OlBhdWxkcm9ucyBvZiB0aGUgRGVtb24gVHJpY2tzdGVyO2RyaXZlX2Rpcjo6VXJzYSBJbW1vcnRhbHMgTWVnYVBhY2s7ZHJpdmVfZGlyOjpGaXJzdCBvZiB0aGUgRmxvb2Q7ZHJpdmVfZGlyOjpHb2xkZW4gR3Jhc3BpbmcgQmx1ZGdlb24gUHJlbTtkcml2ZV9kaXI6OkNsaW5reiBNZWdhUGFjaztkcml2ZV9kaXI6OkZyb3N0IEF2YWxhbmNoZSBQcmVtO2RyaXZlX2Rpcjo6SWNlIEJsb3Nzb207ZHJpdmVfZGlyOjpXaW5kcmFuZ2VyIEFyY2FuYSBzdHlsZSAyO2RyaXZlX2Rpcjo6UGVyZWdyaW5lIEZsaWdodCBQcmVtO2RyaXZlX2Rpcjo6R29sZGVuIERhcmsgTWF3IEluaGliaXRvIGFuZCBHb2xkZW4gUHJvZmFuZSBVbmlvbiBhbmQgR29sZGVuIERyZWFkIFJlcXVpc2l0aW9uIExpZmVzdGVhbGVyIEltbW9ydGFscyBNZWdhcGFjaztkcml2ZV9kaXI6OldoaXRlIERhZ29uO2RyaXZlX2Rpcjo6TWFyayBvZiB0aGUgRmlyc3QgSHVudCBIYXJ2ZXN0ZWQ7ZHJpdmVfZGlyOjpIZWFydGxlc3MgSHVudCAtIE9mZi1IYW5kO2RyaXZlX2Rpcjo6QnJhY2VycyBvZiBBZW9ucyBQcmVtO2RyaXZlX2Rpcjo6Q3J5c3RhbCBNYWlkZW4gQW5pbWUgVm9pY2U7ZHJpdmVfZGlyOjpCcm9vZG1vdGhlciBBbmltZSBWb2ljZTtkcml2ZV9kaXI6OkRlYXRoIFByb3BoZXQgQW5pbWUgVm9pY2U7ZHJpdmVfZGlyOjpEcm93IFJhbmdlciBBbmltZSBWb2ljZTtkcml2ZV9kaXI6OkVuY2hhbnRyZXNzIEFuaW1lIFZvaWNlO2RyaXZlX2Rpcjo6TGluYSBBbmltZSBWb2ljZTtkcml2ZV9kaXI6Okx1bmEgQW5pbWUgVm9pY2U7ZHJpdmVfZGlyOjpNZWR1c2EgQW5pbWUgVm9pY2U7ZHJpdmVfZGlyOjpOYWdhIFNpcmVuIEFuaW1lIFZvaWNlO2RyaXZlX2Rpcjo6UGhhbnRvbSBBc3Nhc3NpbiBBbmltZSBWb2ljZTtkcml2ZV9kaXI6OlRlbXBsYXIgQXNzYXNzaW4gQW5pbWUgVm9pY2U7ZHJpdmVfZGlyOjpRdWVlbiBvZiBQYWluIEFuaW1lIFZvaWNlO2RyaXZlX2Rpcjo6UHVjayBBbmltZSBWb2ljZTtkcml2ZV9kaXI6OlNwZWN0cmUgQW5pbWUgVm9pY2U7ZHJpdmVfZGlyOjpWZW5nZWZ1bCBTcGlyaXQgQW5pbWUgVm9pY2U7ZHJpdmVfZGlyOjpXaW5kcnVubmVyIEFuaW1lIFZvaWNlO2RyaXZlX2Rpcjo6U0YgUlUgQXJjYW5lIHZvaWNlO2RyaXZlX2Rpcjo6WmV1cyBSVSBBcmNhbmUgdm9pY2U7ZHJpdmVfZGlyOjpUaGUgSW50ZXJuYXRpb25hbCAyMDIwIE11c2ljIFBhY2s7ZHJpdmVfZGlyOjpXZWF0aGVyIFNwcmluZztkcml2ZV9kaXI6OlN0ZXdhcmQgb2YgdGhlIEZvcmJpZGRlbiBDaGFtYmVyIEFybW9yO2RyaXZlX2Rpcjo6QnJhY2VycyBvZiB0aGUgQ2F2ZXJuIEx1bWluYXI7ZHJpdmVfZGlyOjpBcm1vciBvZiB0aGUgSHVudGVyKnMgR2xvcnk7ZHJpdmVfZGlyOjpEZXNlcnQgQnVybiBTYWRkbGU7ZHJpdmVfZGlyOjpEZXNlcnQgQnVybiBPdXRmaXQ7ZHJpdmVfZGlyOjpEZXNlcnQgQnVybiBDcm9zc2Jvdztkcml2ZV9kaXI6OkRlc2VydCBCdXJuIENhcDtkcml2ZV9kaXI6OkZldHRlcnMgb2YgT21uaXNjaWVuY2U7ZHJpdmVfZGlyOjpUb3AgSGF0IG9mIHRoZSBPY2N1bHRpc3RzIFB1cnN1aXQ7ZHJpdmVfZGlyOjpTaGFycHNob290ZXIqcyBCdWxsZXQgQnJhY2Vycztkcml2ZV9kaXI6OkdvZCpzIE1lcmN5O2RyaXZlX2Rpcjo6TWQ5519bnQgb2YgdGhlIFdpbmdlZCBTZW50aW5lbDtkcml2ZV9kaXI6OkRlc2VydCBCdXJuIE1vcnR5IEltbW9ydGFsO2RyaXZlX2Rpcjo6U25pcGVyIEltbW9ydGFsIFdlYXBvbiBvZiB0aGUgQXJkYWxhbiBJbnRlcmRpY3Rvcjtkcml2ZV9kaXI6Okh1bmdlciBvZiB0aGUgSG93bGluZyBXaWxkcyBIZWFkO2RyaXZlX2Rpcjo6SG9ybiBvZiBMdW1pbm91cyBDcnlzdGFsO2RyaXZlX2Rpcjo6U2hvY2sgb2YgdGhlIEFudmlsIFByZW07ZHJpdmVfZGlyOjpCZWx0IG9mIE9ybmF0ZSBDcnVlbHR5O2RyaXZlX2Rpcjo6UGF1bGRyb24gb2YgRXJ1cHRpbmcgV3JhdGg7ZHJpdmVfZGlyOjpQaGFudG9tIENvbmNvcmQgUHJlbTtkcml2ZV9kaXI6OkJpdHRlciBMaW5lYWdlIEltbW9ydGFsIEF4ZXM7ZHJpdmVfZGlyOjpTY2FsZSBvZiBCaXR0ZXIgU3BvaWwgSW1tb3J0YWwgVVA7ZHJpdmVfZGlyOjpBcm1vciBvZiB0aGUgSWNld3JhY2sgTWFyYXVkZXI7ZHJpdmVfZGlyOjpIYWlyIG9mIHRoZSBJbXBlcmlvdXMgQ29tbWFuZDtkcml2ZV9kaXI6OkFybW9yIG9mIHRoZSBEZW1vbiBUcmlja3N0ZXI7ZHJpdmVfZGlyOjpFdGVybmFsIFJhZGlhbmNlIEJsYWRlcyBQcmVtO2RyaXZlX2Rpcjo6Rmxhc2sgb2YgTGl0dGxlIEJpZyAqVW47ZHJpdmVfZGlyOjpTZWEgUmFrZXMgQnJpZGxlO2RyaXZlX2Rpcjo6U2hhZG93IGluIHRoZSBEZWVwIEFybW9yO2RyaXZlX2Rpcjo6R29sZGVuIEh5ZHJha2FuIExhdGNoO2RyaXZlX2Rpcjo6SG9vayBvZiB0aGUgU2NvdW5kcmVsO2RyaXZlX2Rpcjo6U2hhZG93IGluIHRoZSBEZWVwIEJhY2s7ZHJpdmVfZGlyOjpGcmFjdGFsIEhvcm5zIG9mIElubmVyIEFieXNtIFVQO2RyaXZlX2Rpcjo6UHVycGxlIENvbG9yIGZvciBUQjtkcml2ZV9kaXI6OlNGIEFyY2FuYSBNZWdhcGFjaztkcml2ZV9kaXI6OlJlbW5hbnRzIG9mIEFzY2Vuc2lvbjtkcml2ZV9kaXI6OlJlcHRpbGlhbiBSZWZ1Z2UgRGlyZSBDcmVlcHM7ZHJpdmVfZGlyOjpUZXJyYWluIC0gU2FuY3R1bXMgb2YgdGhlIERpdmluZTtkcml2ZV9kaXI6OkRyYWdvbiBvZiB0aGUgT3V0bGFuZCBSYXZhZ2VyO2RyaXZlX2Rpcjo6U2NvcmNoaW5nIEFtYmVyIERyYWdvb247ZHJpdmVfZGlyOjpIaWRkZW4gVmVjdG9yIC0gQXJtb3I7ZHJpdmVfZGlyOjpIaWRkZW4gVmVjdG9yIC0gQmVsdDtkcml2ZV9kaXI6OkhpZGRlbiBWZWN0b3IgLSBIYXQ7ZHJpdmVfZGlyOjpIaWRkZW4gVmVjdG9yIC0gQmxhZGU7ZHJpdmVfZGlyOjpTd2luZSBvZiB0aGUgU3Vua2VuIEdhbGxleSBQcmVtO2RyaXZlX2Rpcjo6UmlnaHRlb3VzIFRodW5kZXJib2x0IGFuZCBBcmNhbmEgTWVnYVBhY2s7ZHJpdmVfZGlyOjpUaHVuZGVyIEhhd2s7ZHJpdmVfZGlyOjpUZW1wZXN0IFJldmVsYXRpb247ZHJpdmVfZGlyOjpJbW1vcnRhbCBJbnZva2VyIEtpZDtkcml2ZV9kaXI6OlBoYW50b20gQWR2ZW50IFNob3VsZGVycyBVUDtkcml2ZV9kaXI6OlBoYW50b20gQWR2ZW50IFVQO2RyaXZlX2Rpcjo6UGhhbnRvbSBBZHZlbnQgQmVsdCBVUDtkcml2ZV9kaXI6OlBoYW50b20gQWR2ZW50IFdlYXBvbiBVUDtkcml2ZV9kaXI6Ok1hbmlmb2xkIFBhcmFkb3ggR290aGljIEh1bnRlcjtkcml2ZV9kaXI6OkhvbmV5IEhlaXN0IEJhYnkgUm9zaGFuO2RyaXZlX2Rpcjo6QXJlbmEgQ2hhbXBpb24gQXJtb3I7ZHJpdmVfZGlyOjpBcmVuYSBDaGFtcGlvbiBCZWx0O2RyaXZlX2Rpcjo6Rm9yc3dvcm4gTGVnYWN5IC0gU3BlYXI7ZHJpdmVfZGlyOjpCZWFzdCBvZiB0aGUgQ3JpbXNvbiBSaW5nIEJhY2s7ZHJpdmVfZGlyOjpCZWFzdCBvZiB0aGUgQ3JpbXNvbiBSaW5nIEhlbG07ZHJpdmVfZGlyOjpJY2UgTGluYSBQcmVtaXVtO2RyaXZlX2Rpcjo6THljYW4gS2lzaWxldiBNb2RNYWtlciBNZWdhUGFjaztkcml2ZV9kaXI6OlRoZSBDaGFpbmVkIFNjcmliZTtkcml2ZV9kaXI6OldyYWl0aCBLaW5nIEFyY2FuYSBNZWdhUGFjaztkcml2ZV9kaXI6OkJvbWJ0cmFpbHMgYW5kIEJvb21zdGlja3MgU3BsZWVuO2RyaXZlX2Rpcjo6Qm9tYnRyYWlscyBhbmQgQm9vbXN0aWNrcyBTcG9vbjtkcml2ZV9kaXI6OkJvbWJ0cmFpbHMgYW5kIEJvb21zdGlja3MgU3F1ZWU7ZHJpdmVfZGlyOjpCb21idHJhaWxzIGFuZCBCb29tc3RpY2tzIFdlYXBvbjtkcml2ZV9kaXI6OkNhdmVybml0ZSBSYWRpYW50IENyZWVwcztkcml2ZV9kaXI6Ok1pbmUgUmFkaXVzIDcwMjtkcml2ZV9kaXI6OkdvbGRlbiBTaGFkb3cgTWFzcXVlcmFkZTtkcml2ZV9kaXI6OlNtb2tlIEJvbWIgb2YgTW9uc3Ryb3VzIFJlcHJpc2FsO2RyaXZlX2Rpcjo6VGhlIEludGVybmF0aW9uYWwgMjAxOCBDdXJzb3IgUGFjaztkcml2ZV9kaXI6OkJhYnkgVG95IFB1ZGdlIFBlcnNvbmE7IDEyM3x8fA==