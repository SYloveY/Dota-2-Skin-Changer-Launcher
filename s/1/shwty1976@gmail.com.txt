bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogMDMwQTAyMzgtMDQ5NC0wNTQyLTNCMDYtOTUwNzAwMDgwMDA5IDExMXx8fCAyMjI6OiAkMnkkMTAkTldOaE9UQm1aalV4WW1VNE56VTJNZTVWSzJvcWdmVUg4algxSmp1N1pORXJMSHplRHZpZU8gMjIyfHx8IDEyMzo6IFRoaXJzdCBvZiBFenR6aG9rIEJ1bmRsZSBQcmVtO0dvbGRlbiBSYWJpZCBXYXRjaGNvZztSb3lhbCBXaW50ZXJibG9vbSBBcm1zO0dsYWNpYWwgR2FyZGVucyBTaG91bGRlcjtJcmUgb2YgdGhlIFVud2lsdGVkIFN0eWxlO1NjYXJmIG9mIHRoZSBCb25lIFNjcnllcjtRdWl2ZXIgb2YgdGhlIEJvcmVhbCBXYXRjaDtTaG91bGRlcnMgb2YgdGhlIEJsYWNrIFdpbmQgUmF2ZW47TWQ5519bnQgb2YgdGhlIE1pZG5pZ2h0IFN1bjtBcm1vciBvZiBUd2lzdGVkIFdpc2RvbTtTcGluZXMgb2YgdGhlIEFmZmxpY3RlZCBTb3VsIDtQbGF0ZXMgb2YgU3VuZGVyaW5nO1RhaWwgb2YgU3VuZGVyaW5nO0NvbnZhbGVzY2luZyBFbXByZXNzIEFybXM7QmxhZGVicmVha2VyIEJydXNoO0NvbGFyIG9mIHRoZSBBcmRhbGFuIEludGVyZGljdG9yO0JyYWNlcnMgb2YgdGhlIEFyZGFsYW4gSW50ZXJkaWN0b3I7Q29uc3BpY3VvdXMgQ3VscHJpdCBNb2hhd2s7QXJtb3Igb2YgdGhlIEljZXdyYWNrIE1hcmF1ZGVyO1doaXNreSB0aGUgU3RvdXQgQXJ0aWZhY3Q7UGF1bGRyb24gb2YgdGhlIEJhcnJpZXIgUm9ndWU7U3BpdHRlcnMgb2YgdGhlIFZpcnVsZW50IEtyYWl0O1RhaWwgb2YgdGhlIEZhdGFsIEJsb29tO01hbGVmaWMgRHJha2VzIEhvb2Qgb2YgdGhlIENyaW1zb24gV2l0bmVzcztSaXZlciBWaWFsIEljZTtMaW5hIEFubm91bmNlcjtFdGVybmFsIFJhZGlhbmNlIEJsYWRlcyBQcmVtO0JsYWNrc2hpZWxkIFByb3RvZHJvbmUgQXJtb3I7QXJtcyBvZiB0aGUgTWFkIE11dGluZWVyO0JhbGwtbi1DaGFpbnMgb2YgdGhlIEJsYWNrIERlYXRoO0NvcmUgb2YgdGhlIFNlcmFrdW5kIFR5cmFudDtFbmRsZXNzIE5pZ2h0O0NvcnJ1cHRlZCBCcm9vZG1vdGhlcjtNYW5pcHVsYXRvciBvZiBXYXJzaXR1YXRpb247S2lyaW4gUmlkZXIgU2V0O0dvZGRlc3Mgb2YgV29vZHM7VGhlIFJpZnRzaGFkb3cgUm9hbWVycyBTZXQ7U3RlbGxhciBKYWRlO0FsbHVyZSBvZiB0aGUgRGVlcDtDZWxlc3RpYWx1cyBGbG9yYWxhcztUYWxlcyBvZiB0aGUgV2luZHdhcmQgUm9ndWU7UmVzZWFyY2hlciBvZiBPYmxpdmlvbiBNYWdpYztXYXJyaW9yIG9mIHRoZSBSZWQgU2FuZCBWIDIuMDtTdHlnaWFuIE1hdztDb3JydXB0aW9uIG9mIHRoZSBWaXJ1bGVudCBLcmFpdDtTdG9uZW1hcmNoIFNvdmVyZWlnbiBTdHlsZSAyOyAxMjN8fHw=