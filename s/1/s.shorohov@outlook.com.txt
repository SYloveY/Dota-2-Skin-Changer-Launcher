bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogNTFERTREMEUtQUJDRi1FOTExLTgwRDItMDg5Nzk4NzgwNUQ2IDExMXx8fCAyMjI6OiAkMnkkMTAkWWpVNE9EWXlaRFEyTTJNNE56ZzBZT1dNaUh5UWFFdEJod0UzcjhTR1YxOEpSUHl6TVhwNFcgMjIyfHx8IDEyMzo6IEN1cmlvc2l0eSBIVUQ7Uml2ZXIgVmlhbCBJY2U7VGVycmFpbiAtIFdpbnRlcjtXZWF0aGVyIE1vb25iZWFtO1dpbnRlciBSb3NoYW47UmVwdGlsaWFuIFJlZnVnZSBEaXJlIENyZWVwcztSZXB0aWxpYW4gUmVmdWdlIFJhZGlhbnQgQ3JlZXBzO0FwZXJ0dXJlIFNjaWVuY2UgV2FyZGNvcmU7VGhlIFdvbmRlcm91c2x5IEVuY3VtYmVyZWQgVHJhdmVsbGluZyBBdXRvbWF0b247QXJtb3Igb2YgdGhlIEVxdWlsaWJyaXVtO0dhcmIgb2YgdGhlIFByb3BoZXQgRm9yZXRvbGQ7SG9vZCBvZiBMdWNpZCBUb3JtZW50O092ZXJncm93biBUZXJyb3IgU2hvdWxkZXI7RmlyZXN0YXJ0ZXIgR2FzIE1hc2s7RHJlYWRlZCBGb3JnZXdpbmc7UHJpemVkIEFjcXVpc2l0aW9ucyBDb21wYXNzO0JvYXIgb2YgdGhlIFN0b3V0aGVhcnQgR3Jvd2xlcjtPd2wgb2YgdGhlIFN0b3V0aGVhcnQgR3Jvd2xlcjtQZXJjZXB0aXZlIFNwaWRlcmxpbmc7Q3Jvd24gb2YgUGVyY2VwdGlvbjtBbmNpZW50IExlZ3Mgb2YgdGhlIEFyYWNobmFyb2s7QWJkb21lbiBvZiB0aGUgQWJ5c207R2xvdmVzIG9mIHRoZSBIdW50IEV0ZXJuYWw7Q2FzayBvZiB0aGUgSHVudCBFdGVybmFsO01hc2sgb2YgdGhlIEh1bnQgRXRlcm5hbDtTaG91bGRlcnMgb2YgdGhlIEZhbGxlbiBDbG9haztIZWF0O1NlZXIgb2YgSW5maW5pdHkgU3BhY2UgRWlkb2xvbjtSYWlubWFrZXIgTUsuVklJO1JlZCBXaXNwO1dpbmdzIG9mIEVsZGVyIENvbnZlcmdlbmNlO0FieXNzYWwgSGVsbGNsYXc7SW5mZXJuYWwgV2luZ3M7TXVsY3RhbnQgUGFsbDtEb29tIGxvYWRzY3JlZW47RW1iZXIgU3Bpcml0IGxvYWRzY3JlZW47QWNvbHl0ZSBvZiBWZW5nZWFuY2UgTG9hZGluZyBTY3JlZW47QXNwZWN0IG9mIHRoZSBZZWFyIEJlYXN0IExvYWRpbmcgU2NyZWVuO0F4ZSBsb2Fkc2NyZWVuO09yZGVyIG9mIHRoZSBTaWx2ZXJlZCBUYWxvbjtLZWcgb2YgdGhlIFBvd2RlcmtlZyBQYXRyb2w7U3dpbmUgVmlzb3I7Q2FydCBvZiB0aGUgUG93ZGVya2VnIFBhdHJvbDtQb3dkZXJzbGVkIFJvb2tlcnkgU3F1ZWU7TXVuaXRpb25zIG9mIHRoZSBQb3dkZXJrZWcgUGF0cm9sO0Ryb3duZWQgSG9yc2VtYW4gViAyLjE7QWxjaGVteSBFc3NlbnRpYWxzIFNldDtUaGUgV2l0Y2ggSHVudGVyIFYgMi4wO1dpY2tlZCBTcGFjZSBLbmlnaHQ7QmxhY2sgT3JjIFdhcmJvc3MgViAyLjA7TWFyYXVkZXIgQ2hpZWZ0YWluIG9mIHRoZSBDaGFvcyBXYXN0ZXM7SGFydmVzdHMgSG91bmQ7RGppbm4gU2xheWVyIFYgMi4xO0ljZWJyZXcgQW5nbGVyO0VtZXJhbGQgRnJlbnp5IFNldDtDb250ZXN0ZWQgRmF0ZTtBcm1zIG9mIEJ1cm5pbmcgVHVybW9pbCBTZXQgViAzLjE7U2F2aW9yIGZvciBKdW5nbGVzIEhvbm9yO0Nsb2NrIE1hc3RlciBWIDMuMDtSb3lhbCBXaW50ZXJibG9vbTtJbnNpZ2h0cyBvZiB0aGUgU2FwcGhpcmUgU2hyb3VkO01pc2NoaWVmIG9mIHRoZSBGYWUgRm9yYWdlcjtTbW9reSBEcmVhbWVyO1dhaWwgb2YgdGhlIFdpbnRlciBSZXZlbmFudDtLaXJpbiBSaWRlciBTZXQ7RXRlcm5hbCBEYWVtb24gUHJpbmNlIG9mIEtob3JuZTtHdWlzZSBvZiB0aGUgV2luZ2VkIEJvbHQ7VGhlIEphZGUgR2VuZXJhbDtDcmltc29uIEJlYXN0IFYgMy4wO0FkYWdlIG9mIHRoZSBTbW9sZGVyaW5nIFNhZ2U7Q2FlcnVsYSBTaWx2YTtUaGUgSG9sbG93IFNldDtUaGUgTWFuaXB1bGF0b3IgU2V0O1JlY2tsZXNzIFZpZ29yIFYgMi4xO0NvdmVuYW50IG9mIHRoZSBEZXB0aHM7VGhlIFBhdGggb2YgT2RvY29lbGV1cztGb3Jnb3R0ZW4gUmVuZWdhZGU7U2VhYm9ybmUgUmVwcmlzYWw7SG9ub3JlZCBTZXJ2YW50IG9mIHRoZSBFbXBpcmU7RGFyayBGb3Jlc3QgUHVuaXNoZXI7QXNjZW5kYW5jZSBvZiB0aGUgUmltZSBMb3JkIDJuZCBTdHlsZTtMaWZlIFN0ZWFsZXIgQ2hpbmEgTW9kZWw7RW1iZXIgQ3JhbmUgU2V0IFYgMi4wO0NsYW4gb2YgdGhlIEFyY3RpYyBPd2xiZWFyO05pZ2h0c2lsdmVycyBSZXNvbHZlIFYgMi4xO0FybW9yIG9mIHRoZSBTYW5ndWluZSBNb29uIFNldDtSaXNpbmcgR2xvcnkgViAyLjE7SW1wZXJpYWwgRW52b3k7Q29udmFsZXNjaW5nIEVtcHJlc3M7Q3J5c3RhbCBTY2F2ZW5nZXI7Q3Jlc2NlbnQgViAyLjE7TWFza3Mgb2YgTWlzY2hpZWY7U3RlbGxhciBKYWRlO0FsbHVyZSBvZiB0aGUgRGVlcDtGdW5nYWwgTG9yZCBTZXQ7VGhlIFBsYWd1ZW1vbmdlcjtVbmZldHRlcmVkIE1hbGV2b2xlbmNlO0NoaXRpbm91cyBTdGFsa2VyO1Nob3JlbGluZSBTYXBwZXI7SGVhdmVubHkgTGlnaHQ7VGhlIEZhdGUgRmlkZGxlcjtDb21wZW5kaXVtIEJpbmRpbmdzIG9mIHRoZSBUcmFwcGVyO0RyYWdvbiBGb3JnZWQgU2V0IFYgMi4xO1RhbGVzIG9mIHRoZSBXaW5kd2FyZCBSb2d1ZTtSYXZlbmluZyBXaW5ncztIYXJzaCBTb2pvdXJuO05pcnZhbmEgU3Bpcml0dWFsO0FsbHVyaW5nIE1lc21lcjtSZXNlYXJjaGVyIG9mIE9ibGl2aW9uIE1hZ2ljO1Rocm9lcyBvZiBBbmd1aXNoIFNldCBTdHlsZSAxO0V5ZSBvZiB0aGUgTWF6ZSBLZWVwZXI7Q3VubmluZyBDb3JzYWlyO0dhcmIgb2YgdGhlIENydWVsIE1hZ2ljaWFuIFNldDtSdWxlciBvZiB0aGUgRnJvc3RiaXRlIER1bmVzO01hbGljaWQ5519cyBTdGluZztFdGVybmFsIEhhcnZlc3Q7R2FyYiBvZiBTaGFkZXMgViAyLjA7Qmxlc3Npbmcgb2YgdGhlIENyZXN0ZWQgRGF3biBWIDIuMTsgMTIzfHx8