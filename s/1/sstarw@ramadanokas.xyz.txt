bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogIDExMXx8fCAyMjI6OiAkMnkkMTAkTlRJNE1tUmpPRGRrWkRBeVlUaGhOdUx0cmU4SlV2M0kzWHZaa3RGeDhqdlJpY3d3dllTWHUgMjIyfHx8IDEyMzo6IFRyZW5jaGtuaWdodCAtIEJhY2s7SGVsbSBvZiB0aGUgTWlzdHJhbCBGaWVuZDtDcm93biBvZiB0aGUgQnJpbmVicmVkIENhdmFsaWVyO1BhdWxkcm9ucyBvZiB0aGUgQnJpbmVicmVkIENhdmFsaWVyO0ljZXNoYXJkO1JhenppbHMgTWlkYXMgS251Y2tsZXMgUHJlbTtFeHBlcmltZW50YWxpc3QqcyBMYWJvcmF0b3J5IEVzc2VudGlhbHM7TW9oYXdrIG9mIHRoZSBDb252aWN0cztDcmF6eSBFeHBlcmltZW50IE5lY2s7V2FhYWdoIEZsYXNrIG9mIExpdHRsZSBCaWcgKlVuO0V0ZXJuYWwgUmFkaWFuY2UgQmxhZGVzIFByZW07UmF6aWwqcyBSZXZpdGFsaXplciBQaXBlcztSYXppbCpzIFJldml0YWxpemVyIEdhcmI7QnJ1bWFsIEJlcnNlcmtlciBUYWlsO1NwaXJlcyBvZiB0aGUgUHJvcGhldCBGb3JldG9sZDtBcm1vciBvZiB0aGUgRXF1aWxpYnJpdW07QnJ1bWFsIEJlcnNlcmtlciBTaG91bGRlcjtHYXJiIG9mIHRoZSBQcm9waGV0IEZvcmV0b2xkO1RhaWwgb2YgdGhlIEVxdWlsaWJyaXVtO1ZhbGVudGluZSBXYXJkO1N0dXJkeSBCcmFjZXJzIG9mIHRoZSBFeGlsZWQgUm9uaW47QXJzZW5hbCBvZiB0aGUgQmxhZGVrZWVwZXI7RmF1bGRzIG9mIHRoZSBHd2lteWVvbiBXYXJyaW9yO1NpZ2lsIE1hc2sgb2YgdGhlIEJsYWRla2VlcGVyO1BhbnRhbG9vbnMgb2YgdGhlIEJsYWRla2VlcGVyO1JlbGVudGxlc3M7TGluZWFnZSBBcm1vciBvZiBCcm9rZW4gU2NhbGU7QnJhY2VycyBvZiB0aGUgU3Vydml2b3I7QmVsdCBvZiB0aGUgRHJhZ29uKnMgRGlzY2lwbGU7TGluZWFnZSBIZWxtIG9mIEJyb2tlbiBTY2FsZTtTaG91bGRlcnMgb2YgdGhlIFN1cnZpdm9yO09mZmhhbmQgQmFzaGVyIG9mIE1hZ2UgU2t1bGxzO0dvbGRlbiBCYXNoZXIgb2YgTWFnZSBTa3VsbHM7QXJtcyBvZiB0aGUgU2FjcmlmaWNpYWwgU2VycGVudDtDYXBlIG9mIHRoZSBXZWVwaW5nIEJlYXN0O0JlbHQgb2YgdGhlIEJsb29kIENvdmVuYW50O1RoaXJzdCBvZiBFenR6aG9rIC0gT2ZmLUhhbmQ7RmVhc3Qgb2YgdGhlIFVud2lsbGluZyBTaG91bGRlcnM7VGhpcnN0IG9mIEV6dHpob2sgQnVuZGxlIFByZW07TWFzdGVyIG9mIHRoZSBTZWFyaW5nIFBhdGggQXJtcztFZnJpdCBTdWx0YW4gQmVsdDtDYXAgb2YgdGhlIFNtb2xkZXJpbmcgU2FnZTtSYXBpZXIgb2YgdGhlIEJ1cm5pbmcgR29kIE9mZmhhbmQ7TWFudGxlIG9mIHRoZSBTbW9sZGVyaW5nIFNhZ2U7U3dvcmQgb2YgdGhlIFZvbGNhbmljIEd1YXJkO0FybSBvZiB0aGUgRXhhY3QgTWFya3NtYW47RnVsbC1Cb3JlIEJvbmFuemE7RGVlcCBzZWEgb3ZlcmxvcmQgSGVhZDtQYXVsZHJvbnMgb2YgdGhlIE9jY3VsdGlzdCpzIFB1cnN1aXQ7Qmx1bmRlcmJ1c3Mgb2YgdGhlIExvbmdiZWFyZCBEd2FyZiBFbmdpbmVlcjtDbGF3IG9mIHRoZSBVbWl6YXIgQ3Jhd2xlcjtXYXZlY3V0dGVyO0Zpc2h5IEZyaWxsaGF3aztTaGVsbCBvZiB0aGUgVW1pemFyIENyYXdsZXI7UGFsZSBFZGdlO0hlbGwqcyBHdWlkZTtBc3Nhc3NpbmF0aW9uIG9mIERhcmsgRmVhdGhlciBCYWNrO0dpcmRsZSBvZiB0aGUgRGFyayBXcmFpdGg7SGVsbSBvZiBDcnVlbCBSZXByaXNhbDtBc3Nhc3NpbmF0aW9uIG9mIERhcmsgRmVhdGhlciBTaG91bGRlcjtCcmFjZXJzIG9mIHRoZSBDYXZlcm4gTHVtaW5hcjtMaW5lYWdlIFRvb2xiZWx0IG9mIHRoZSBFYXJ0aHdyaWdodDtUb3RlbSBvZiBEZWVwIE1hZ21hO1ZhbGt5cmllIG9mIHRoZSBSZW1haW5zIEJhY2s7SGVsbSBvZiBaaHV6aG91O0NvbXBlbmRpdW0gQXJtcyBvZiB0aGUgT255eCBDcnVjaWJsZSBCbGFkZTtQaGFudG9tIENvbmNvcmQ7Q2FwZSBvZiB0aGUgUmlzaW5nIEdhbGU7Qm93IG9mIHRoZSBCYXR0bGVyYW5nZXI7U29uZyBvZiB0aGUgQmx1ZWJpcmQgLSBIZWFkO1Nvbmcgb2YgdGhlIEJsdWViaXJkIC0gUXVpdmVyO1Nvbmcgb2YgdGhlIEJsdWViaXJkIC0gU2hvdWxkZXI7QXJtcyBvZiB0aGUgQml0dGVyd2luZyBMZWdhY3k7SGVsbSBvZiB0aGUgQml0dGVyd2luZyBMZWdhY3k7U2hpZWxkIG9mIHRoZSBCaXR0ZXJ3aW5nIExlZ2FjeTtIZWF2eSBXaW5nYmxhZGU7SG9vZCBvZiB0aGUgVHdpbiBCbGFkZXM7QXJtb3Igb2YgdGhlIEh1bnRlcipzIEdsb3J5O1Rvb2xzIG9mIHRoZSBHaWFudCBIdW50ZXI7SGVhcnRsZXNzIEh1bnQgLSBPZmYtSGFuZDtNYXJrIG9mIHRoZSBGaXJzdCBIdW50O0hlYXJ0bGVzcyBIdW50IC0gV2VhcG9uO1N3aW5lIFBvd2RlciBCYXJyZWw7U3dpbmUgVmlzb3I7UGlyYXRlIG9mIFRyZWFzdXJlKnMgQmlnaHQgTWQ5519bnQ7UGlyYXRlIG9mIFRyZWFzdXJlKnMgQmlnaHQgU2hvdWxkZXI7TXVuaXRpb25zIG9mIHRoZSBQb3dkZXJrZWcgUGF0cm9sO1Nob2NrIG9mIHRoZSBBbnZpbDtTZWlzbWljIEJlcnNlcmtlciBIb3JuO1NlaXNtaWMgQmVyc2Vya2VyIEhlbG07U2Vpc21pYyBCZXJzZXJrZXIgQnJhY2VycztTZWlzbWljIEJlcnNlcmtlciBBcm1vcjtHb2dnbGVzIG9mIHRoZSBNYW5pYWNhbCBNYWNoaW5pc3Q7V2lsZCBIYWlyIG9mIHRoZSBNb2x0ZW4gRGVzdHJ1Y3RvcjtCcmlnaHRza3llO1BlZGVzdGFsIEJsYWRlZm9ybSBMZWdhY3k7UGVkZXN0YWwgRmVhc3Qgb2YgQWJzY2Vzc2lvbiBHcmVlbjtSZXB0aWxpYW4gUmVmdWdlIFJhZGlhbnQgQ3JlZXBzO0FjaWQgSHlkcmEgQ3Vyc29yIFBhY2s7V29vZHkgV2FyZDtIb2xpZGF5IFJhZGlhbnQgVG93ZXI7Sm91cm5leSBSb3NoYW47V2VhdGhlciBNb29uYmVhbTtEYXJrZXN0IER1bmdlb24gQW5ub3VuY2VyO0Rhcmtlc3QgRHVuZ2VvbiBNZWdhLWtpbGxzO1RlcnJhaW4gLSBXaW50ZXI7Q29tcGxldGUgV2luZ3Mgb2YgdGhlIEV0aGVyZWFsIE1vbmFyY2g7THVtaW5vdXMgU2NhcmFiIEhlYWQ7Q3ljbGVzIG9mIHRoZSBTZXJlbmUgVGFpbDtTY29yY2hpbmcgVGFsb247QWdocyBCUCBDYXBlIG9mIHRoZSBJbXBvc3NpYmxlIFJlYWxtO0FnaHMgQlAgSGVhZCBvZiB0aGUgSW1wb3NzaWJsZSBSZWFsbTtDb3VuY2lsb3IqcyBTaGF3bDtTdGFmZiBvZiB0aGUgUmFtYmxpbmcgRmF0ZWJlbmRlcjtGdXJ5IG9mIEJvdW5kbGVzcyBEYXJrbmVzcyBIZWFkO1NoaWVsZCBvZiB0aGUgQnVybmluZyBOaWdodG1hcmU7UGF1bGRyb25zIG9mIHRoZSBCdXJuaW5nIE5pZ2h0bWFyZTtCbGFkZSBvZiBEaXNjb3JkO1dhcmNvZyBFbGVjdHJvIFphcHBlcjtDYXAgb2YgdGhlIEtlZW4gQ29tbWFuZGVyO0dlYXIgb2YgdGhlIEtlZW4gQ29tbWFuZGVyO1JhYmlkIFdhdGNoY29nO0Nsb3duIG9mIFRveSBDaXJjdXMgTWlzYztDbGF3cyBvZiB0aGUgQmxvb2QgTW9vbjtBcm1zIG9mIHRoZSBEaWFib2xpY2FsIEZpZW5kO0FybXMgb2YgRGVzb2xhdGlvbjtTb3VsIENvcnB1bGVuY2UgLSBIZWFkO1NvdWwgQ29ycHVsZW5jZSAtIFNob3VsZGVyO1NvdWwgRGlmZnVzZXI7V3JhaXRoIEtpbmcgUmFwaWVyO0FyY2FuZSBJbnZlcnRlciAtIEJhY2s7QXJjYW5lIEludmVydGVyIC0gTWlzc2lsZTtHb2xkZW4gQXRvbWljIFJheSBUaHJ1c3RlcnM7U2hhdHRlcmVkIEdyZWF0c3dvcmQ7R29sZGVuIEdyYXNwaW5nIEJsdWRnZW9uO01hbGVmaWMgRHJha2VzIEhvb2Qgb2YgdGhlIENyaW1zb24gV2l0bmVzcztTdW5rZW4gU25hcHBlciBXaW5ncztMdWNreSBBbHBpbmUgU3RhbGtlcipzIEhhdDtDbGF3cyBvZiB0aGUgU2FuZ3N0cmF0aCBGb2xkO01hbnRsZSBvZiB0aGUgU2FuZ3N0cmF0aCBGb2xkO0JhcmRpbmcgb2YgdGhlIFNhbmdzdHJhdGggRm9sZDtNYWplc3R5IE9mIFRoZSBDb2xvc3N1cyAtIFBlYmJsZTtGcm9zdG1vb3QgVHJlZTtCYXR0bGVmdXJ5O0Zyb3plbiBWb2lkIEhlYWQ7RnJvemVuIFZvaWQgU2hvdWxkZXI7TWFjZSBvZiBBZW9ucztGcm96ZW4gVm9pZCBBcm1zO0Zyb3plbiBWb2lkIEJlbHQ7QW5jaWVudCBBcHBhcml0aW9uIENoaW5hIE1vZGVsO0hhcnZlc3RzIEhvdW5kO0hhcnNoIFNvam91cm47Qmxvb2R5IFJpcHBlcjtGaXJlIERyYWdvbiBvZiBEb29tIFYgMy4wO01vbHRlbiBEZXN0cnVjdG9yO1NjYXZlbmdlciBvZiB0aGUgQmFzaWxpc2s7Um9zZSBBbmQgVGhlIEJlYXN0O0ZpcmVzIG9mIFZhc2h1bmRvbCBubyBlZmZlY3QgViAyLjE7Um95YWwgV2ludGVyYmxvb207SHVudGVyIG9mIEtpbmdzIFYgMi4wO0hlaXJlc3Mgb2YgdGhlIENvYXN0YWwgS2luZ2RvbTtSZWxpY3Mgb2YgR2xvcmlvdXMgSW5zcGlyYXRpb247Vm9sYXRpbGUgRmlybWFtZW50IFYgMi4wO1NjYXJsZXQgTG9yZHM7VGhlIEdpZnRzIG9mIFpodXpob3U7RmxhbWVkIEZhbGNvbiBQYXRyb2wgU2V0O01lcmFudGggRHJhZ29vbjtCZXN0b3dtZW50cyBvZiB0aGUgQ2VudHVyaW9uIFZhbmd1YXJkOyAxMjN8fHw=