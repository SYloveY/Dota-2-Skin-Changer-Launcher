bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogIDExMXx8fCAyMjI6OiAkMnkkMTAkWVRrd1lXVTFOVGswTmpSak1EazFPLlVid3lqQTVESURCZVdsV0R3Mm5uOWJPckFrVUszYS4gMjIyfHx8IDEyMzo6IFRJLTkgQmxpbmsgbHZsIDIgRWZmZWN0O1ZpcnR1cyBXZXJlYmVhciBVcGdyYWRlIDI7U21lZXZpbHMgUGVuYW5jZSBTdHlsZSA0O1RJLTkgUGhhc2UgQm9vdHMgRWZmZWN0O0lyZSBvZiB0aGUgQW5jaWVudCBHYW9sZXIgQXJtcztJcmUgb2YgdGhlIEFuY2llbnQgR2FvbGVyIEJhY2s7V3JhaXRoYmluZGVyO01hdyBvZiBFenR6aG9rO0RyZWFkIFJldHJpYnV0aW9uIC0gQnJhY2VycyBBbHQ7RHJlYWQgUmV0cmlidXRpb24gLSBDYXBlIEFsdDtEcmVhZCBSZXRyaWJ1dGlvbiAtIEhlYWR3ZWFyIEFsdDtEcmVhZCBSZXRyaWJ1dGlvbiAtIExlZyBBcm1vciBBbHQ7RHJlYWQgUmV0cmlidXRpb24gLSBRdWl2ZXIgQWx0O0RyZWFkIFJldHJpYnV0aW9uIC0gU2hvdWxkZXIgQXJtb3IgQWx0O0JyYWNlcnMgb2YgQWVvbnM7UGVyY2VwdGlvbnMgb2YgdGhlIEV0ZXJuYWwgTWluZDtKZXdlbCBvZiBBZW9ucztNYWNlIG9mIEFlb25zIFByZW07UmFwaWVycyBvZiB0aGUgQnVybmluZyBHb2QgViAzLjE7TWFzdGVyIG9mIHRoZSBTZWFyaW5nIFBhdGggQmVsdDtIb29kIG9mIHRoZSBXYW5kZXJpbmcgRmxhbWU7QXRvbWljIFJheSBUaHJ1c3RlcnMgUHJlbTtXb3JsZCBDaGFzbSBBcnRpZmFjdDtQcml6ZSBvZiB0aGUgU2FsdHdvcm4gTWFyaW5lcjtMZXZpYXRoYW4gV2hhbGUgQmxhZGUgUHJlbTtKdWdnZXJuYXV0IEFyY2FuYSBSZWQgQmxhZGVmb3JtIE9yaWdpbnM7UHVsc2FyIFJlbW5hbnQgUHJlbTtNYXNrIG9mIE1ldGlyYTtDcmVzY2VudCBCb3cgQXJyb3cgb25seTtTYXBwaGlyZSBTYWJyZS1MeW54IFByZW07U2hvY2sgb2YgdGhlIEFudmlsIFByZW07Um95YWwgRGVjcmVlIFdoaXAgQXR0YWNrO0Nyb3duIG9mIHRoZSBSb3lhbCBEZWNyZWU7UmFpbWVudHMgb2YgdGhlIEVtaW5lbmNlIG9mIFJpc3R1bDtHcmFjZSBvZiB0aGUgUm95YWwgRGVjcmVlO1Rvcm1lbnRlZCBDcm93bjtUb3JtZW50ZWQgU3RhZmY7RGFyayBBcnRpc3RyeSBUaHJvd2JhY2s7SG9ybnMgb2YgdGhlIEJldHJheWVyO0hlbGwtU3BhciBBbmF0aGVtYSBPYnNpZGlhbiBCbGlnaHQ7RmluIEtpbmdzIENoYXJtIG9mIEVtaW5lbnQgUmV2aXZhbDtXeXJtd3JvdWdodCBGbGFyZTtNYW5pZm9sZCBQYXJhZG94IFBBIEFyY2FuYSBTdHlsZSAzO0dvdGhpYyBXaGlzcGVyIENhcGU7QXZvd2FuY2Ugb2YgdGhlIENyaW1zb24gV2l0bmVzcztTdHlsZSBvZiB0aGUgRmVhcmZ1bCBBcmlhO1BoYW50b20gQXNjZW5zaW9uIEJlbHQ7UGhhbnRvbSBBc2NlbnNpb247UGhhbnRvbSBBc2NlbnNpb24gU2hvdWxkZXJzO1BoYW50b20gQXNjZW5zaW9uIFdlYXBvbjtIaWRkZW4gVmVjdG9yIC0gQXJtb3I7SGlkZGVuIFZlY3RvciAtIEJlbHQ7SGlkZGVuIFZlY3RvciAtIEhhdDtIaWRkZW4gVmVjdG9yIC0gQmxhZGU7V2luZHJhbmdlciBBcmNhbmEgc3R5bGUgMjtPcmIgb2YgdGhlIEhpZXJvcGhhbnQ7TWFzayBvZiB0aGUgSGllcm9waGFudDtHb2xkZW4gUHJvZmFuZSBVbmlvbjtBcm1vciBvZiB0aGUgRGVtb24gVHJpY2tzdGVyIFJlZDtTdGFmZiBvZiBHdW4tWXUgb2YgdGhlIENyaW1zb24gV2l0bmVzcztHcmVhdCBTYWdlcyBSZWNrb25pbmcgUnVtYmxlIGluIHRoZSBEZWVwO0NvbmNvcmQgUmV2ZXJzaW9uIFVQO0NvbmNvcmQgRG9taW5pb247TGFuY2Ugb2YgdGhlIFN1bndhcnJpb3I7Qmxvc3NvbSBvZiB0aGUgTWVycnkgV2FuZGVyZXI7R29sZGVuIEVkaWN0IG9mIFNoYWRvd3M7R29sZGVuIFNoYWRvdyBNYXNxdWVyYWRlIFByZW07QXJtcyBvZiBEZXNvbGF0aW9uO1RoZSBCcmFzcyBGbHllciBBcm1vcjtSYWJpZCBXYXRjaGNvZztTb2xhciBGb3JnZSBQcmVtO1NoYWRvdyBpbiB0aGUgRGVlcCBIZWxtO1NoYWRvdyBpbiB0aGUgRGVlcCBBcm1vcjtHb2xkZW4gSHlkcmFrYW4gTGF0Y2g7RXlyaWVib3VuZCBJbXBlcmF0b3IgLSBBcm1zO0V5cmllYm91bmQgSW1wZXJhdG9yIC0gQmFjaztFeXJpZWJvdW5kIEltcGVyYXRvciAtIEJlbHQ7RXlyaWVib3VuZCBJbXBlcmF0b3IgLSBIZWFkO0V5cmllYm91bmQgSW1wZXJhdG9yIC0gU2hvdWxkZXI7U3RhZmYgb2YgdGhlIE1hbnRpY29yZTtIZWxtIG9mIHRoZSBEYXJrIE1vb24gU3RhbGtlcjtHb2xkZW4gVHdpbGlnaHQgU2NoaXNtO0dvbGRlbiBNb29uZmFsbCBQcmVtO1RlbXBlc3QgSGVsbSBvZiB0aGUgVGh1bmRlcmdvZCBQcmVtO0dvbGRlbiBCcmFjZXJzIG9mIEZvcmxvcm4gUHJlY2lwaWNlO0ZvcnR1bmUgb2YgdGhlIEZpdmUgSG91c2VzO0RhcmticmV3IEVuZm9yY2VyIGFuZCBFdGVybmFsIFJhZGlhbmNlIEJsYWRlcyBhbmQgTWlkYXMgS251Y2tsZXMgTWVnYVBhY2s7QW50aU1hZ2UgRmVtYWxlO0F4ZSBmdWxsIEltbW9ydGFscyBNZWdhcGFjaztHaWFudCBIdW50ZXIgViAyLjE7Q2xpbmt6IE1lZ2FQYWNrO1NoZXJtYW4gTWFpZGVuIFYgNC4xO0RLIFBlcnNvbmEgRGF2aW9uO0VhcnRoc2hha2VyIE1lZ2FQYWNrIE5ldztIZWxsZmlyZSBJbnN1cmdlbnQ7TGVnaW9uIENvbW1hbmRlciBNb2RNYWtlciBNZWdhUGFjaztXcmFpdGggS2luZyBBcmNhbmEgTWVnYVBhY2s7U3Rvcm0gU3Bpcml0IE1lZ2FQYWNrO1N2ZW4gSW1tb3J0YWxzIE1lZ2FQYWNrO1RpZGVodW50ZXIgTWVnYVBhY2s7RXRlcm5hbCBIYXJ2ZXN0O0FyY3RpYyBTaG9jayBUQSBWIDMuMDtQdXBwZXQgUHVkZ2UgUGVyc29uYSAoeWQ5519IGNhbiBhZGQgSG9vaykgVVA7VXJzYSBJbW1vcnRhbHMgTWVnYVBhY2s7VmlzaW9uIG9mIHRoZSBTZXJhcGggU2Npb24gLSBGYWxsZW47UnViaWNrIEFyY2FuYSB3aXRoIEltbW9ydGFsO0JhdHRsZSBEcmVzcyBvZiB0aGUgUHJvdmVuO1NpbGVuY2VyIFRJMTAgQ29sbGVjdG9ycyBDYWNoZSBNZWdhUGFjaztUaW1iZXJzYXcgTWVnYVBhY2s7QXJjIG9mIHRoZSBTb3ZlcmVpZ247UXVldHphbDsgMTIzfHx8