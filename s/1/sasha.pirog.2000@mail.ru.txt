limitHWID:: 1 000||| 111::  111||| 222:: e1ee6079a29e1ba58bb6306bd6c50be138a44ded1e129f242000e340ebce7d00db2e8cf39a5886c9123c96301233ea6692024064475182f18b6fb2437642f06a 222||| 123:: Juggernaut Announcer;Toilet Shrine;Wardchest Direling Ward;Boooofus with Dark effect;Stone Monkey Spirits V 3.1;Heroes Within Music Pack V 2.1;Legion Commander ENG Arcane voice;Rollermawster and Mecha Boots of Travel Mk III;Harvested Shoulders;Winter Creeps V 3.0;Warlord Skarsnik and Gobbla;Bow of the Frostfangs;Bonds of Madness Set Style 2;Burning Fiend;Magus Apex;Kotl Illuminate Deer;Iron Surge V 2.2;The Lightning Orchid;HD item icon;Dagger New Year;Axe Announcer;Platinum Baby Roshan;Fuck Deny;Mantle of the Cinder Baron Style 1;Verna;Helm of the Primeval Predator;Hunters Hoard;Mark of the First Hunt Bestowed;Piston Impaler effect;Nothlic Burden Prem;Yulsarias Mantle Prem;Yulsaria*s Glacier Prem;Golden Gravelmaw;Rapiers of the Burning God V 3.1;Wargod of the Bladekeeper;Lamb to the Slaughter;Empyrean;The Golden Barb of Skadi;Full-Bore Bonanza;Tempest Helm of the Thundergod Prem;Cavernite Dire Creeps;Cavernite Radiant Creeps;Bracers of Aeons Prem;Jewel of Aeons Prem;Mace of Aeons;Visage of the Emerald Age;Eminence of Ristul Knife Attack;Bloodfeather Wings Prem;DotaCinema - Queen of Pain Spells;Tines of Tybara;Diabolic Aspect;Dread Retribution - Headwear Alt;Crown of the Sacred Hunt;Golden Silent Wake;Tempest Revelation;Sniper Immortal Weapon of the Ardalan Interdictor;Blacksail Cannoneer Hat;Darkclaw Emissary Staff;Crimson Gates of Nothl;Nothlic Burden of the Crimson Witness Prem;Legacy of the Fallen Legion Style 1;Baneful Devotion;Wings of Unfettered Malevolence;Auspice of the Whyrlegyge;Gimlek Decanter;Feast of Abscession Chain;Feast of Abscession Hook Bundle;Declaration of the Divine Light Radiant Towers;Declaration of the Divine Shadow Dire Towers;Juggernaut Arcana Bladeform Legacy;Jagged Honor Mask;Crimson Edge of the Lost Order;Wyrmwrought Flare;Disciple of the Wyrmwrought Flame;Glory of the Elderflame - Neck;Manifold Paradox PA Arcana Style 2;Codicil of the Veiled Ones;Avowance of the Veiled Ones;Gothic Whisper Blade;Skittering Desolation Prem;Crimson Pique;The Jade General;Twin Blades Assassin Set;Monstrous Reprisal;Old Model Shadow Fiend;Blessings of the Wildwing V 2.0;Forbidden Knowledge;Divine Flame V 2.0;Reef Kyte Rider;Armor of the Sanguine Moon Set;Urushin Huntsman Style 1;Vengeance of the Sunwarrior;Mark of the Mistral Fiend V 2.1;Bindings of Deep Magma;Dancer of the Spiteful Eye V 3.0;Bindings of the Battleranger Chaotic Style;Bounty Hunter Maniac Set;The Brass Flyer;Misgivings of the Emerald Age;Giant Hunter V 2.1;Wrath of the Celestial Sentinel;Apex Automated;Righteous Thunderbolt and Arcana MegaPack;Windranger Arcana style 1 + WR immortal;Occultists Pursuit;Legion Commander ModMaker MegaPack;Night Stalker Immortal and Reaper Kisilev ModMaker MegaPack;Pyrexae Polymorph Perfected;Pudge TI10 Collectors Cache MegaPack;Earthshaker MegaPack;Silencer MegaPack;Omniknight MegaPack; 123|||