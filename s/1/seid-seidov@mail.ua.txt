bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogOTVDQTVBNDAtMUREOS0xMUIyLTgwMDAtRjlFMDZDOEFCQkEzIDExMXx8fCAyMjI6OiAkMnkkMTAkTmpkbVpESTVPVGxqTVRVME9EZGpOLkI1UHdYNDJkM0ZSMDhBOTkyai82WUZxMHRyUzVIL3UgMjIyfHx8IDEyMzo6IEJhdHRsZSBQYXNzIEVmZmVjdCBCbGluayBEYWdnZXI7R3VhcmRpYW5zIG9mIHRoZSBMb3N0IFBhdGggRGlyZSBUb3dlcnM7R3VhcmRpYW5zIG9mIHRoZSBMb3N0IFBhdGggUmFkaWFudCBUb3dlcnM7REFDIDIwMTUgQ2hhb3MgS25pZ2h0IEN1cnNvciBQYWNrO0hVRCBvZiB0aGUgQnVybmluZyBTY2FsZSBJY2U7U2V4eSBXb21hbiBNZWdhLUtpbGw7RGVmZW5zZSBHcmlkIEFubm91bmNlcjtaZXVzIFJVIEFyY2FuZSB2b2ljZTtKdWdnZXJuYXVudCBFbmcgQXJjYW5hIFZvaWNlO1B1ZGdlIEFyY2FuYSBFTkcgVm9pY2U7WmV1cyBFTkcgQXJjYW5lIHZvaWNlO0xlZ2lvbiBDb21tYW5kZXIgRU5HIEFyY2FuZSB2b2ljZTtUZXJyb3JibGFkZSBFTkcgQXJjYW5lIHZvaWNlO1NoYWRvdyBGaWVuZCBFTkcgQXJjYW5lIHZvaWNlO0VtaW5lbmNlIG9mIFJpc3R1bCBLbmlmZSBBdHRhY2s7U3VibWVyZ2VkIEhhemFyZCBNYXNrO1RoZSBMaWdodG5pbmcgT3JjaGlkIFYgMy4yO1ZpcnR1b3VzIFJvYXIgUGFkcztFZGdlIG9mIHRoZSBMb3N0IE9yZGVyO0xlZ2FjeSBvZiB0aGUgRmFsbGVuIExlZ2lvbjtQYWRkYXBvbiBvZiBSaWJiaXRhciBWIDQuMDtDaGFvcyBBcmJpdGVyO1Bpc3RvbiBJbXBhbGVyO0JsYXN0Zm9yZ2UgRXhoYWxlcjtTZXZlcmluZyBDcmVzdCBWIDIuMDtTZXZlcmluZyBMYXNoO0RpZmZ1c2FsIExhbmNlO0RpcmUgU2hyZWQgQ292ZXIgTXVzaWMgUGFjayBWIDIuMTtSaHl0aG1zIG9mIFJpZnRzaGFkb3cgUnVpbnMgTXVzaWMgUGFjaztNYXRjaCBSZWFkeSAtIFBhcGljaCBTbWVoO1NvdW5kcyBSdW5lO1RpbmtlciAtIEthcHBhIGFybXk7Vm9pZCAtIFpvbG90aWUgQ3Vwb2xhO1NuaXBlciAtIFN1cnByaXNlIG1hemFmYWthO1dEIHVsdCBEYWdlc3Rhbi1EYWdlc3RhbjtTbW9rZSBTbm9vcCBEb2c7Rm9vdGZhbGxzIG9mIHRoZSBTcG9yZWZhdGhlcnMgLSBIZWFkO0Zyb3plbiBWb2lkIEFybXM7TWFjZSBvZiBBZW9ucztGcm96ZW4gVm9pZCBTaG91bGRlcjtLaWRzIE9yYjtNYWd1cyBBcGV4O0ZhbWlsaWFycyBvZiBHbG9yaWQ5519cyBJbnNwaXJhdGlvbjtOb3J0aGVybiBCbGlnaHQgQXJtcztEYXJrIEFydGlzdHJ5IENhcGU7RGFyayBBcnRpc3RyeSBCZWx0O1Nob3VsZGVycyBvZiB0aGUgRGFyayBNYWdpYztTdWJtZXJnZWQgSGF6YXJkO0FudGltYWdlIFNoaW5vYmk7U2FtdXJhaSBvZiBXaW5kIFYgMy4wO0VycmFudCBTb2xkaWVyO0xpZ2h0bmluZyBIYXJiaW5nZXI7SGF2b2Mgb2YgRHJhZ29uIFBhbGFjZSBWIDIuMDtNdXJkZXIgb2YgQ3Jvd3MgKG5vIGNyb3cpO0dyeXBob24gUmlkZXIgU2V0O1ZlbmdlYW5jZSBvZiB0aGUgU3Vud2FycmlvcjsgMTIzfHx8