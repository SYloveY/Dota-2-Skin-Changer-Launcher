limitHWID:: 1 000||| 111::  111||| 222:: $2y$10$ODIwMmUyYjVkN2Y1MmJiN.eD9M7V21vTSm9AtshcFszHPbIo1f6Fe 222||| 123:: Burning Jacks;Hat of Empiric Incendiary;Night Terrors Mount;Rough Rider*s Slipshod Slicker;Valentine Ward;Wraps of a Thousand Faces;God*s Mercy;Arena Champion Spear;Arena Champion Armor;Arms of Desolation;Pauldrons of Eternal Harvest;Cape of Cruel Reprisal;Trail of the Fearful Aria;Belt of the Lifted Veil;Helm of the Lifted Veil;Shawl of the Creeping Shadow;Brightskye;Ember Spirit loadscreen;Ward of the Phoenix;Gleaming Seal;Molten Claw Prem;Crucible of Rile;Mantle of the Cinder Baron Style 1;Manias Mask Prem;Bow of the Frostfangs V 2.0;Bracers of Aeons Prem;Jewel of Aeons Prem;Golden Moonfall Prem;Twilight Schism;Magus Apex;Covenant of the Depths Spirit;Kids Orb;Soup for Sluts Customs Spells Invoker;Inverse Bayonet;Daughters of Hydrophiinae;Great Sage*s Reckoning;Staff of Gun-Yu;Blade of Tears and Crown of Tears;Golden Shards of Exile;Medium Tassels of the Black Death;Insatiable Bonesaw;Golden Scavenging Guttleslug;Grand Abscession Hook Bundle;Twilight Effigy Head;Toxic Death Eater;Eldwurms Touch V 3.1;Misgivings of the Emerald Age;Dark Moon Stalker V 2.1;Compendium Bloody Ripper;Blazing Cosmos;Covenant of the Depths;Seaborne Reprisal;Divine Anchor Style 1;Bestowments of the Divine Anchor effects;Eye of the Beholder;Mandate of the Nameless;Vengeance of the Sunwarrior;Jolly Reaver; 123|||