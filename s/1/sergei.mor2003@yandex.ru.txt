bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogMDMwMDAyMDAtMDQwMC0wNTAwLTAwMDYtMDAwNzAwMDgwMDA5IDExMXx8fCAyMjI6OiAkMnkkMTAkTldVelpEYzNZakF5WlRJeE1XTmpNZUVHSGozbGhkdjNMTDE0ZXBNOVNKNzRQVWNTVGcvbU8gMjIyfHx8IDEyMzo6IGRyaXZlX2Rpcjo6TWFyayBvZiB0aGUgTWlzdHJhbCBGaWVuZCBWIDIuMTtkcml2ZV9kaXI6OkFudGltYWdlIFNoaW5vYmk7ZHJpdmVfZGlyOjpIYXJ2ZXN0cyBIb3VuZDtkcml2ZV9kaXI6OkJvdW50eSBIdW50ZXIgTWFuaWFjIFNldDtkcml2ZV9kaXI6Ok1hcmsgb2YgdGhlIEZpcnN0IEh1bnQgQmVzdG93ZWQ7ZHJpdmVfZGlyOjpMb3N0IFJhbmdlcjtkcml2ZV9kaXI6OlBpc3RvbiBJbXBhbGVyO2RyaXZlX2Rpcjo6Um9zZSBBbmQgVGhlIEJlYXN0O2RyaXZlX2Rpcjo6Q2hhb3MgQXJiaXRlcjtkcml2ZV9kaXI6OlByb3ZpbmNlIG9mIHRoZSBIdW50IEV0ZXJuYWw7ZHJpdmVfZGlyOjpXcmFwcyBvZiB0aGUgV2ludGVyYnJpbmdlcjtkcml2ZV9kaXI6Oll1bHNhcmlhKnMgR2xhY2llciBQcmVtO2RyaXZlX2Rpcjo6WXVsc2FyaWFzIE1hbnRsZSBQcmVtO2RyaXZlX2Rpcjo6SWNlIEJsb3Nzb207ZHJpdmVfZGlyOjpNYW5pcHVsYXRvciBvZiBXYXJzaXR1YXRpb247ZHJpdmVfZGlyOjpTYWNjaGFyaW5lIFNhYm90ZXVyO2RyaXZlX2Rpcjo6RGVsaWdodHMgb2YgUGV0YWx1bmEgUGF0aGZpbmRlcjtkcml2ZV9kaXI6Ok5vdGhsaWMgQnVyZGVuIFByZW07ZHJpdmVfZGlyOjpNeXN0aWMgb2YgQ2VsZXN0aWFsIEFydDtkcml2ZV9kaXI6OkZhdGUgTWVyaWRpYW47ZHJpdmVfZGlyOjpMb3JkIG9mIENocm9ub3B0aWMgU3ludGhlc2lzO2RyaXZlX2Rpcjo6Rm9yYmlkZGVuIEtub3dsZWRnZTtkcml2ZV9kaXI6OkZ1cnkgb2YgV2FyIEdvZDtkcml2ZV9kaXI6OkV5ZSBvZiB0aGUgQmVob2xkZXI7ZHJpdmVfZGlyOjpVbmZldHRlcmVkIE1hbGV2b2xlbmNlO2RyaXZlX2Rpcjo6VGFsZXMgb2YgdGhlIEdyZXkgV2FzdGVzO2RyaXZlX2Rpcjo6QXVzcGljZSBvZiB0aGUgV2h5cmxlZ3lnZSBQcmVtO2RyaXZlX2Rpcjo6VmVuZ2VhbmNlIG9mIHRoZSBTdW53YXJyaW9yO2RyaXZlX2Rpcjo6R3JhbmQgQWJzY2Vzc2lvbiBIb29rIEJ1bmRsZTtkcml2ZV9kaXI6OkdvbGRlbiBTY2F2ZW5naW5nIEd1dHRsZXNsdWc7ZHJpdmVfZGlyOjpDYW5keSBDYXQgT2ZmLUhhbmQ7ZHJpdmVfZGlyOjpDYW5keSBDYXQgQXJtcztkcml2ZV9kaXI6OkNhbmR5IENhdCBCZWx0O2RyaXZlX2Rpcjo6Q2FuZHkgQ2F0IEJhY2s7ZHJpdmVfZGlyOjpDYW5keSBDYXQgSGVhZDtkcml2ZV9kaXI6Ok5hcmNpc3Npc3RpYyBMZWVjaDtkcml2ZV9kaXI6OkRhbmNlciBvZiB0aGUgU3BpdGVmdWwgRXllIFYgMy4wO2RyaXZlX2Rpcjo6S2VlbiBNYWNoaW5lO2RyaXZlX2Rpcjo6R29sZGVuIEZ1bGwtQm9yZSBCb25hbnphO2RyaXZlX2Rpcjo6Q2Fubm9uIG9mIHRoZSBPY2N1bHRpc3RzIFB1cnN1aXQ7ZHJpdmVfZGlyOjpWaXJ0dWQ5519cyBSb2FyIFYgMi4wO2RyaXZlX2Rpcjo6UGFjaHlkZXJtIFBvd2RlcndhZ29uIFNpZ247ZHJpdmVfZGlyOjpQYWNoeWRlcm0gUG93ZGVyd2Fnb24gU3F1ZWU7ZHJpdmVfZGlyOjpQYWNoeWRlcm0gUG93ZGVyd2Fnb24gRWxlcGhhbnQ7ZHJpdmVfZGlyOjpQYWNoeWRlcm0gUG93ZGVyd2Fnb24gU3BsZWVuO2RyaXZlX2Rpcjo6VGVtcGVzdCBIZWxtIG9mIHRoZSBUaHVuZGVyZ29kO2RyaXZlX2Rpcjo6UmlnaHRlb3VzIFRodW5kZXJib2x0IGFuZCBBcmNhbmEgTWVnYVBhY2s7ZHJpdmVfZGlyOjpQbHVuZGVyIG9mIHRoZSBTYXZhZ2UgTW9uZ2VyO2RyaXZlX2Rpcjo6R3JpbSBEZXN0aW55O2RyaXZlX2Rpcjo6UHVwcGV0IFN1bW1vbmVyO2RyaXZlX2Rpcjo6RmVyb2Npb3VzIFRveGljYW50O2RyaXZlX2Rpcjo6TWFsZWZpYyBEcmFrZXMgSG9vZCBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzO2RyaXZlX2Rpcjo6RGlyZ2Vzd29ybiBEeW5hc3R5O2RyaXZlX2Rpcjo6R29sZGVuIFBhbGUgTWF1c29sZXVtO2RyaXZlX2Rpcjo6R3VhcmRpYW5zIG9mIHRoZSBMb3N0IFBhdGggRGlyZSBUb3dlcnM7ZHJpdmVfZGlyOjpUZXJyYWluIC0gVGhlIEtpbmdzIE5ldyBKb3VybmV5O2RyaXZlX2Rpcjo6Uml2ZXIgVmlhbCBCb2lsaW5nO2RyaXZlX2Rpcjo6RHVza2llIExvYWRpbmcgU2NyZWVuO2RyaXZlX2Rpcjo6VmlzYWdlIG9mIHRoZSBTbGVlcGxlc3MgU2VjdDtkcml2ZV9kaXI6OkhhcnZlc3RlZCBTaG91bGRlcnM7ZHJpdmVfZGlyOjpCcmV3bWFzdGVyIGZyb20gSE9UUztkcml2ZV9kaXI6OkFybW9yIG9mIHRoZSBFcXVpbGlicml1bTtkcml2ZV9kaXI6OlNoYXR0ZXJibGFzdCBDcm93bjtkcml2ZV9kaXI6OlRoZSBSb3dkeSBGaXJlYnJhbmQ7ZHJpdmVfZGlyOjpOaWdodCBUZXJyb3JzIEhhdDtkcml2ZV9kaXI6Ok1hcmF1ZGVyIG9mIHRoZSBDaGFvcyBXYXN0ZXM7ZHJpdmVfZGlyOjpTYXZpb3IgZm9yIEp1bmdsZXMgSG9ub3I7ZHJpdmVfZGlyOjpUaGUgQnJhc3MgRmx5ZXI7ZHJpdmVfZGlyOjpQYXJhZmxhcmUgQ2Fubm9uO2RyaXZlX2Rpcjo6VGhlIElyb24gUGlvbmVlciBDb2dzO2RyaXZlX2Rpcjo6QnJpbmdlciBvZiBUcm91Ymxlcztkcml2ZV9kaXI6OldoaXNwZXJzIG9mIHRoZSBEYW1uZWQgV2luZ3M7ZHJpdmVfZGlyOjpXaGlzcGVycyBvZiB0aGUgRGFtbmVkIEhlYWQ7ZHJpdmVfZGlyOjpUaGUgU2hlZXAgU2V0O2RyaXZlX2Rpcjo6TWFndXMgQXBleDtkcml2ZV9kaXI6OkZpcmVmbGlnaHQgU2Npb247ZHJpdmVfZGlyOjpEYXJrZmFsbCBXYXJkZW47ZHJpdmVfZGlyOjpUc3VrdW1vIE1vb24gQ2xvdWQ7ZHJpdmVfZGlyOjpWb29kb28gTWVlcG87ZHJpdmVfZGlyOjpDb2xvc3NhbCBDcnlzdGFsIENob3J1cyBlZmZlY3Q7ZHJpdmVfZGlyOjpBbGxmYXRoZXIgb2YgTmF0dXJlIFNldDtkcml2ZV9kaXI6OlN0YWZmIG9mIHRoZSBUcnVlYmFyayBBZGhlcmVudDtkcml2ZV9kaXI6OldyYXRoIG9mIEthIFYgMi4xO2RyaXZlX2Rpcjo6R29sZGVuIFN1bGxlbiBIb2xsb3cgViAzLjI7ZHJpdmVfZGlyOjpQbGFndWUgQmFyb24gSGF0O2RyaXZlX2Rpcjo6RXhwbG9zaXZlIE1hbmlhYztkcml2ZV9kaXI6OkZsYXNocG9pbnQgUHJvc2VseXRlIC0gSGVhZDtkcml2ZV9kaXI6Oldpc2RvbSBvZiB0aGUgTWlkbmlnaHQgU3VuO2RyaXZlX2Rpcjo6U2hpbW1lciBvZiB0aGUgQW5vaW50ZWQ7ZHJpdmVfZGlyOjpXaXRjaCBIdW50ZXIgVGVtcGxhcjtkcml2ZV9kaXI6OkxldmlhdGhhbiBXaGFsZSBCbGFkZSBvZiBFbWluZW50IFJldml2YWw7ZHJpdmVfZGlyOjpQcmlzbWF0aWMgR3JhY2U7ZHJpdmVfZGlyOjpTb3ZlcmVpZ24gb2YgdGhlIEtyYXkgTGVnaW9ucyAyc3QgU3R5bGU7ZHJpdmVfZGlyOjpUaGUgQmFycmVuIFZlY3Rvcjtkcml2ZV9kaXI6OkNlbGVzdGlhbHVzIEZsb3JhbGFzO2RyaXZlX2Rpcjo6QWxsdXZpb24gUHJvcGhlY3k7ZHJpdmVfZGlyOjpUYWxlcyBvZiB0aGUgV2luZHdhcmQgUm9ndWU7ZHJpdmVfZGlyOjpNYXNrIG9mIHRoZSBDb25maWRhbnQ7ZHJpdmVfZGlyOjpNYW5kYXRlIG9mIHRoZSBOYW1lbGVzcztkcml2ZV9kaXI6OlJlbWluaXNjZW5jZSBvZiBEcmVhbXM7ZHJpdmVfZGlyOjpTYW5ndWluZSBSb3lhbHR5O2RyaXZlX2Rpcjo6Qmxvb2RmZWF0aGVyIFdpbmdzIFByZW07ZHJpdmVfZGlyOjpCbG9vZGZlYXRoZXIgRmVhc3Q7ZHJpdmVfZGlyOjpWYW50YWdlIG9mIHRoZSBCcmVhY2ggV2FyZGVuO2RyaXZlX2Rpcjo6R29sZGVuIEdyYXNwaW5nIEJsdWRnZW9uIGVmZmVjdDtkcml2ZV9kaXI6Ok1hZ2lzdGVyIG9mIHRoZSBOYXJyb3cgRmF0ZXM7ZHJpdmVfZGlyOjpHb2xkZW4gU2V2ZXJpbmcgQ3Jlc3Q7ZHJpdmVfZGlyOjpCYXN0aW9uIG9mIHRoZSBMaW9uc2d1YXJkO2RyaXZlX2Rpcjo6RW1weXJlYW47ZHJpdmVfZGlyOjpHb2xkIFNreW1hZ2U7ZHJpdmVfZGlyOjpJcmUgb2YgTW9sdGVuIFJlYmlydGg7ZHJpdmVfZGlyOjpDcm93biBvZiBUaGUgTmlnaHR3b3JsZDtkcml2ZV9kaXI6OkVsZW1lbnRhbCBJbXBlcmF0b3IgViAyLjA7ZHJpdmVfZGlyOjpTYXZhZ2UgTWV0dGxlO2RyaXZlX2Rpcjo6SXJvbiBTdXJnZSBWIDIuMjtkcml2ZV9kaXI6OlNvdWwgTGlsaXRoO2RyaXZlX2Rpcjo6U291bCBEaWZmdXNlciBWIDIuMTtkcml2ZV9kaXI6OlRoZSBMaWdodG5pbmcgT3JjaGlkIFYgMy4wO2RyaXZlX2Rpcjo6VmlydHVvdXMgUm9hciBQYWRzO2RyaXZlX2Rpcjo6U2FtdXJhaSBTZXQ7ZHJpdmVfZGlyOjpUaW5rZXIgU2NhcmVjcm93IFNldDtkcml2ZV9kaXI6OkJhcmsgb2YgdGhlIEFnZWxlc3MgV2l0bmVzcyBEaXN0aW5ndWlzaGVkO2RyaXZlX2Rpcjo6Rm9saWFnZSBvZiBFbGRyaXRjaCBHbmFybDtkcml2ZV9kaXI6OlRoZSBEdXNrIENyYXdsZXIgU2V0O2RyaXZlX2Rpcjo6Q3JpbXNvbiBDeXJyaWRhZTtkcml2ZV9kaXI6Ok1vbHRlbiBEZXN0cnVjdG9yO2RyaXZlX2Rpcjo6UmVjdGlmaWVyO2RyaXZlX2Rpcjo6Qmxlc3Npbmcgb2YgdGhlIENyZXN0ZWQgVW1icmE7ZHJpdmVfZGlyOjpBYnlzc2FsIEN1aXJhc3M7ZHJpdmVfZGlyOjpDaGlsbCBvZiB0aGUgS2VlcGVycyBHYXplO2RyaXZlX2Rpcjo6RXBpdGFwaGljIEJvbmRzO2RyaXZlX2Rpcjo6Rm9jYWwgUmVzb25hbmNlIFYgMy4wO2RyaXZlX2Rpcjo6Q2hhb3MgQ2hvc2VuIFYgMy4wO2RyaXZlX2Rpcjo6SW5mZXJuYWwgQ2hpZWZ0YWluIG9mIHRoZSBDcmltc29uIFdpdG5lc3M7ZHJpdmVfZGlyOjpXZWF0aGVyIFNwcmluZztkcml2ZV9kaXI6OkhVRCBvZiB0aGUgQnVybmluZyBTY2FsZSBJY2U7ZHJpdmVfZGlyOjpMaWdodG5pbmcgSGFyYmluZ2VyO2RyaXZlX2Rpcjo6RnVyeSBvZiB0aGUgUmlnaHRlb3VzIFN0b3JtIC0gSGVhZDtkcml2ZV9kaXI6OkNydWNpYmxlIG9mIFJpbGU7ZHJpdmVfZGlyOjpNYW50bGUgb2YgdGhlIENpbmRlciBCYXJvbiBTdHlsZSAxO2RyaXZlX2Rpcjo6RmF0aGVyIE9mIFNwaXJpdHM7ZHJpdmVfZGlyOjpMZWdhY3kgb2YgdGhlIEVsZHd1cm0gQ3Jlc3Q7ZHJpdmVfZGlyOjpDaW5kZXIgU2Vuc2VpO2RyaXZlX2Rpcjo6VHJhaWwgb2YgdGhlIEdyZXkgR2hvc3Q7ZHJpdmVfZGlyOjpGb3JtIG9mIHRoZSBHcmV5IEdob3N0O2RyaXZlX2Rpcjo6V2FyZGVuIG9mIHRoZSBXeXJtZm9yZ2UgU2hhcmQ7ZHJpdmVfZGlyOjpNaXNnaXZpbmdzIG9mIHRoZSBFbWVyYWxkIEFnZTtkcml2ZV9kaXI6Okx1cmthYmxvO2RyaXZlX2Rpcjo6UmVwdGlsaWFuIFJlZnVnZSBSYWRpYW50IENyZWVwcztkcml2ZV9kaXI6OlRJLTEwIExldmVsIFVwIEVmZmVjdDtkcml2ZV9kaXI6OkZhbGwgQmF0dGxlIFBhc3MgMjAxNiBFZmZlY3QgVGVsZXBvcnQ7ZHJpdmVfZGlyOjpCYXR0bGUgUGFzcyBFZmZlY3QgQmxpbmsgRGFnZ2VyO2RyaXZlX2Rpcjo6V2FhYWdoIEJpZyBVbiBWIDMuMDtkcml2ZV9kaXI6OkFybW9yIG9mIHRoZSBCb2lsZXJwbGF0ZSBCcnVpc2VyO2RyaXZlX2Rpcjo6SGVhdnkgQnV0dGVyZmx5IEJsYWRlcztkcml2ZV9kaXI6OlJhenppbCpzIE1pZGFzIEtudWNrbGVzO2RyaXZlX2Rpcjo6QWxjaGVtaXN0KnMgRGlyZXRpZGUgU2hpbW1lciBXZWFwb247ZHJpdmVfZGlyOjpNb2x0ZW4gQ2xhdyBQcmVtO2RyaXZlX2Rpcjo6RXhlY3V0aW9uZXIqcyBUcm9waGllcztkcml2ZV9kaXI6OkF4ZSBvZiBQaHJhY3RvcyBQcmVtO2RyaXZlX2Rpcjo6Q2x1YiBvZiB0aGUgSWduZWQ5519cyBTdG9uZTtkcml2ZV9kaXI6OkFyZW5hIENoYW1waW9uIFNoaWVsZDtkcml2ZV9kaXI6OlNlcnZhbnRzIG9mIEVuZGxlc3MgU3RhcnM7ZHJpdmVfZGlyOjpNYXNrIG9mIHRoZSBCbG9vZGZvcmdlO2RyaXZlX2Rpcjo6T2ZmLUhhbmQgV2VhcG9uIG9mIHRoZSBCbG9vZGZvcmdlO2RyaXZlX2Rpcjo6V2VhcG9uIG9mIHRoZSBCbG9vZGZvcmdlO2RyaXZlX2Rpcjo6Q2F2ZXJuaXRlIERpcmUgQ3JlZXBzO2RyaXZlX2Rpcjo6Q3VzdG9tIERhc2hib2FyZCAyMDtkcml2ZV9kaXI6OkRhcmsgTW9vbiBTdGFsa2VyIFYgMi4xO2RyaXZlX2Rpcjo6SGVsbSBvZiB0aGUgV2luZ2VkIFNlbnRpbmVsO2RyaXZlX2Rpcjo6VHdpbGlnaHQgU2NoaXNtO2RyaXZlX2Rpcjo6Qm9tYnRyYWlscyBhbmQgQm9vbXN0aWNrcyBXZWFwb247ZHJpdmVfZGlyOjpCb21idHJhaWxzIGFuZCBCb29tc3RpY2tzIFNwb29uO2RyaXZlX2Rpcjo6Q2x1YiBvZiBQYWd1cztkcml2ZV9kaXI6Okhvb2Qgb2YgdGhlIFNoYXR0ZXJlZCBUYXJnZTtkcml2ZV9kaXI6OkRhZW1vbmZlbGwgRmxhbWU7ZHJpdmVfZGlyOjpMZWdhY3kgb2YgdGhlIEZhbGxlbiBMZWdpb247ZHJpdmVfZGlyOjpBcm1vciBvZiB0aGUgU3RhbHdhcnQgU291bDtkcml2ZV9kaXI6OkNvbXBsZXRlIENyb3duIG9mIFNhY3JlZCBMaWdodDtkcml2ZV9kaXI6Okd1YXJkaWFucyBvZiB0aGUgTG9zdCBQYXRoIFJhZGlhbnQgVG93ZXJzO2RyaXZlX2Rpcjo6RXhwb25lbnQgb2YgdGhlIEVuZGxlc3MgU3RhcnM7ZHJpdmVfZGlyOjpNb25zdHJvdXMgUmVwcmlzYWw7ZHJpdmVfZGlyOjpIdW5nZXIgb2YgdGhlIEhvd2xpbmcgV2lsZHMgQXJtcztkcml2ZV9kaXI6OktpbmRyZWQgb2YgdGhlIFVtaXphciBDcmF3bGVyO2RyaXZlX2Rpcjo6VGhlIEdvbGRlbiBCYXJiIG9mIFNrYWRpO2RyaXZlX2Rpcjo6UGVhY29jayBQcmllc3Q7ZHJpdmVfZGlyOjpEYXJrIFJlYWxtIE9yYWNsZXMgQXJtb3I7ZHJpdmVfZGlyOjpEYXJrIFJlYWxtIE9yYWNsZXMgTWFzaztkcml2ZV9kaXI6OkFybXMgb2YgUmlzaW5nIEZ1cnk7ZHJpdmVfZGlyOjpTaGF0dGVyZWQgR3JlYXRzd29yZCBWIDIuMDtkcml2ZV9kaXI6OlRpbWUgV2FuZGVyZXI7ZHJpdmVfZGlyOjpCYXJyaWVyIFJvZ3VlO2RyaXZlX2Rpcjo6UGlzY2VhbiBQdWx2ZXJpemVyO2RyaXZlX2Rpcjo6VGhlIEphZGUgR2VuZXJhbDtkcml2ZV9kaXI6OlJhZ2Ugb2YgdGhlIERhcmsgV29vZCB2IDIuMDtkcml2ZV9kaXI6OkdhcmIgb2YgdGhlIFByb3BoZXQgRm9yZXRvbGQ7ZHJpdmVfZGlyOjpBbGxpZWQgQ29tbWFuZGVyIFNldDtkcml2ZV9kaXI6OldheWZhcmluZyBTY2hvbGFyIFNldDtkcml2ZV9kaXI6OlN0YWZmIG9mIFBlcnBsZXggUHJlbTtkcml2ZV9kaXI6OkJsYXN0Zm9yZ2UgRXhoYWxlcjtkcml2ZV9kaXI6Okh1bnRlciBvZiBLaW5ncyBWIDIuMDtkcml2ZV9kaXI6Ok1hbGVmaWMgRHJha2VzIFN0cmlrZSBvbmx5IEVmZmVjdDtkcml2ZV9kaXI6OlN1bmtlbiBTbmFwcGVyIFdpbmdzO2RyaXZlX2Rpcjo6UHlyZXhhZWMgRmxvZTtkcml2ZV9kaXI6OkJhcmRpbmcgb2YgQ2hpbWVyaWMgUmFwcG9ydDtkcml2ZV9kaXI6OkZ1cnkgb2YgdGhlIFJpZ2h0ZWQ5519cyBTdG9ybSAtIEJhY2s7ZHJpdmVfZGlyOjpIYXZvYyBvZiBEcmFnb24gUGFsYWNlIFYgMi4wO2RyaXZlX2Rpcjo6R3JlYXQgU2FnZSpzIFJlY2tvbmluZztkcml2ZV9kaXI6OlN0YWZmIG9mIEd1bi1ZdTtkcml2ZV9kaXI6OkVuZGxlc3MgTmlnaHQgU3dvcmQ7ZHJpdmVfZGlyOjpFcnVwdGluZyBXcmF0aCBWIDIuMDtkcml2ZV9kaXI6OlJvYmUgb2YgRGl2aW5lcipzIEVtYnJhY2U7ZHJpdmVfZGlyOjpFdGVybmFsIEhhcnZlc3Q7ZHJpdmVfZGlyOjpBcm1zIG9mIERlc29sYXRpb24gUHJlbTtkcml2ZV9kaXI6OkNvbXBsZXRlIFdpbmdzIG9mIHRoZSBFdGhlcmVhbCBNb25hcmNoO2RyaXZlX2Rpcjo6T2JzaWRpYW5ob29mIEd1YXJkaWFuO2RyaXZlX2Rpcjo6QnJhY2VycyBvZiB0aGUgQ2F2ZXJuIEx1bWluYXI7ZHJpdmVfZGlyOjpHb2RkZXNzIG9mIFdvb2RzO2RyaXZlX2Rpcjo6TWFuaWFzIE1hc2sgUHJlbTtkcml2ZV9kaXI6Ok1vbmFyY2ggQm93IFYgMi4wO2RyaXZlX2Rpcjo6TXVsY3RhbnQgUGFsbDtkcml2ZV9kaXI6OkhhbmQgb2YgSGVsbCpzIEFtYmFzc2Fkb3I7ZHJpdmVfZGlyOjpGaW4gS2luZypzIENoYXJtIFByZW07ZHJpdmVfZGlyOjpTdXNhbm8gT3MgRGVzY2VuZGFudDtkcml2ZV9kaXI6OkVkZ2Ugb2YgdGhlIExvc3QgT3JkZXI7ZHJpdmVfZGlyOjpXYXJnb2Qgb2YgdGhlIEJsYWRla2VlcGVyO2RyaXZlX2Rpcjo6RmVyb2Npb3VzIEhlYXJ0O2RyaXZlX2Rpcjo6Q3JlZXBpbmcgU2hhZG93O2RyaXZlX2Rpcjo6SHVzaCBvZiBFdGVybmFsIE5pZ2h0O2RyaXZlX2Rpcjo6QmluZGluZ3Mgb2YgdGhlIEJhdHRsZXJhbmdlciBMaWdodCBTdHlsZTtkcml2ZV9kaXI6OlN5bHZhbiBDYXNjYWRlIFByZW07ZHJpdmVfZGlyOjpNYXJrc3dvbWFucyBDYXA7IDEyM3x8fA==