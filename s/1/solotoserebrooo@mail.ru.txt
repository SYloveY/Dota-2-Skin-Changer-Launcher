limitHWID:: 1 000||| 111:: 1E008C80-008C-2E00-1927-E0CB4ED85DC9;; 111||| 222:: $2y$10$ZjJkN2YwOGVhYTA4YWMwNOE2fu4iblC1DT0iSR3di/Glc0p1C/iVq 222||| 123:: Tempest Helm of the Thundergod;Weather Spring;Guardians of the Lost Path Dire Towers;Bonds of Madness Set Style 1;Bow of the Battleranger;Blackshield Protodrone Helm;Blackshield Protodrone Armor;Pedestal Bladeform Legacy;Pedestal Feast of Abscession Red;Tempest Helm of the Thundergod Prem;Pedestal Feast of Abscession Green;Terrain - Winter;Tools of the Final Utterance;Helm of the Savage Monger;Conspicuous Culprit Armor;mohawk shoulder;Volatile Majesty;Visions of the Lifted Veil;Writ of the Royal Butcher;Maze Watcher Set;Virtuous Roar V 2.0;Masks of Mischief;Divine Flame V 2.0;The Baptism of Melting Fire;Exact Marksman;Bark of the Ageless Witness Distinguished;Bindings of the Battleranger;Dirgesworn Dynasty;Cyclopean Marauder;Gifted Jester;Moon Rift V 2.1;Dusklight Marauder V 2.1;The Path of Odocoeleus;The Corruption of Nezzureem;Covenant of the Depths;Toxic Death Eater;Storm Dragon Potente;Bearer of the Arkturan Talon;Ironbarde Charger;Beacon of Cerulean Light 2 Style V 2.1;Harsh Sojourn;Darkfall Warden no effects V 2.1;Algid Falcon;Smoky Dreamer;Harvests Hound;Lich Master Necromancer V 2.1;New Chieftain Style 1;Delightful Affliction;Flowering Shade V 2.0;Steam Chopper;Ritual of the Loyal Fold;Cunning Corsair;Bestowments of the Centurion Vanguard;March of the Powderkeg Patrol; 123|||