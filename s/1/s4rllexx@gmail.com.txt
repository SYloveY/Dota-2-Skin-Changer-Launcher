limitHWID:: 1 000||| 111:: E1F9FE40-B8AD-11DC-84CB-10C37B9E05BB 111||| 222:: $2y$10$ODAwYmE2MWJlZDBkOTcxN.U75Vw4tDr.XjIeIsZxcOnuGI.EYfKy. 222||| 123:: Item Sound WC 3 for Reborn;Drow Ranger WC 3 Sound;Nevermore WC 3 Sound;Akasha WC 3 Sound;Alchemist WC 3 Sound;Anubarak WC 3 Sound;Arthas WC 3 Sound for Abbadon;Axe WC 3 Sound;Barathrum WC 3 Sound;Batrider WC 3 Sound;Beastmaster WC 3 Sound;Bounty Hunter WC 3 Sound;Brewmaster WC 3 Sound;Centaur WC 3 Sound;Clinkz WC 3 Sound;Disruptor WC 3 Sound;Enchantress WC 3 Sound;Gyrocopter WC 3 Sound;Keeper of the Light WC 3 Sound;Invoker WC 3 Sound;Lina WC 3 Sound;Lich WC 3 Sound;Lone Druid WC 3 Sound;Luna WC 3 Sound;Medusa WC 3 Sound;Mirana WC 3 Sound;Naga Siren WC 3 Sound;Naix WC 3 Sound;Nature Prophet (Furion) WC 3 Sound;Necrolyte WC 3 Sound;Ogre Magi WC 3 Sound;Pugna WC 3 Sound;Rikimaru WC 3 Sound;Shadow Demon WC 3 Sound;Shadow Shaman WC 3 Sound;Silenser WC 3 Sound;Skywrath Mage WC 3 Sound;Slardar WC 3 Sound;Sniper WC 3 Sound;Templar Assassin WC 3 Sound;Vengeful Spirit WC 3 Sound;Warlock WC 3 Sound;Windrunner WC 3 Sound;Weaver WC 3 Sound;Witch Doctor WC 3 Sound;Chaos Knight WC 3 Sound;Juggernaut WC 3 Sound;Kunkka WC 3 Sound;Oracle WC 3 Sound;Rubick WC 3 Sound;Techies WC 3 Sound;Tinker WC 3 Sound;Custom Dashboard 75;Irona Mega-Kills;Rise Kujikawa Announcer (Jap); 123|||