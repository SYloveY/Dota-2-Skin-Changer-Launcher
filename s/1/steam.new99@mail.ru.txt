bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogMDA1MTc1QkUtQzc5My03MDQ1LTg2OEYtN0QyNjM4Rjg5Q0I5IDExMXx8fCAyMjI6OiAkMnkkMTAkTTJZeE1EUTROamswWVRKbE5UTXlOLnpENkRGQnpDMGhWY012d05yMWs3UWV2QXd2L1RaRUcgMjIyfHx8IDEyMzo6IFRoZSBTdGFubGV5IFBhcmFibGUgQW5ub3VuY2VyO1RyaW5lIE1lZ2EtS2lsbDtHdWFyZGlhbnMgb2YgdGhlIExvc3QgUGF0aCBEaXJlIFRvd2VycztHdWFyZGlhbnMgb2YgdGhlIExvc3QgUGF0aCBSYWRpYW50IFRvd2VycztLbmlnaHQgU3RhdHVlO0hVRCBvZiB0aGUgQnVybmluZyBTY2FsZSBJY2U7RHJlYWQgb2YgdGhlIEdsZWFtaW5nIFNlYWwgU2V0O1B1ZGdlIEJsaW5rIERhZ2dlcjtSaXBwZXJzIFJlZWw7UnViaWNrIEFyY2FuYSBFTkcgVm9pY2U7VGhlIEludGVybmF0aW9uYWwgMjAxOSBNdXNpYyBQYWNrO0N1c3RvbSBEYXNoYm9hcmQgNztTaGF0dGVyYmxhc3QgQ3Jvd247Q3J1Y2libGUgb2YgUmlsZTtNb2x0ZW4gQ2xhdyBQcmVtO01hbnRsZSBvZiB0aGUgQ2luZGVyIEJhcm9uIFN0eWxlIDE7V2l0bmVzc2VzIG9mIHRoZSBTaGFkZWQgRXVsb2d5O1JhcGllcnMgb2YgdGhlIEJ1cm5pbmcgR29kIFYgMy4xO1NlcnZhbnRzIG9mIEVuZGxlc3MgU3RhcnM7Tm9ydGhlcm4gQmxpZ2h0IFNwaXJpdHM7R29sZGVuIEF0b21pYyBSYXkgVGhydXN0ZXJzIFByZW07SGVhbGluZyBXYXJkIG9mIHRoZSBLdXVyLUlzaGltaW5hcmk7VG9ybWVudGVkIFN0YWZmIGVmZmVjdDtIZWxtIG9mIHRoZSBXaW5nZWQgU2VudGluZWw7R29sZGVuIE1vb25mYWxsIFByZW07QXVzcGljZSBvZiB0aGUgV2h5cmxlZ3lnZSBQcmVtO0FsbHV2aW9uIFByb3BoZWN5IFYgMi4wO0dvbGRlbiBTaGFyZHMgb2YgRXhpbGU7Q29hdCBvZiB0aGUgV2luZHdhcmQgUm9ndWU7TWFzayBvZiB0aGUgQ29uZmlkYW50O0VtaW5lbmNlIG9mIFJpc3R1bCBLbmlmZSBBdHRhY2s7SHVzaCBvZiBFdGVybmFsIE5pZ2h0O0dvbGRlbiBHcmFzcGluZyBCbHVkZ2VvbiBlZmZlY3Q7VGhlIEJhcmIgb2YgU2thZGk7UGhhbnRvbSBBZHZlbnQgU2hvdWxkZXJzIFVQO1NhdmFnZSBNZXR0bGU7SXJvbiBTdXJnZSBWIDIuMjtUaGUgTGlnaHRuaW5nIE9yY2hpZCBWIDMuMjtGb2NhbCBSZXNvbmFuY2UgViAzLjA7RnJhY3RhbCBIb3JucyBvZiBJbm5lciBBYnlzbSBVUDtUaGUgSWduZWQ5519cyBTdG9uZSBWIDQuMDtDbHViIG9mIHRoZSBJZ25lb3VzIFN0b25lO0ZvbGlhZ2Ugb2YgRWxkcml0Y2ggR25hcmw7R29sZGVuIFBhbGUgTWF1c29sZXVtO0RhcmsgTWVhZG93IE1hc3NhY3JlIEhlYWQ7RGFyayBNZWFkb3cgTWFzc2FjcmUgQXJtcztEYXJrIE1lYWRvdyBNYXNzYWNyZSBBcm1vcjtNYWxlZmljIERyYWtlcyBTdHJpa2Ugb25seSBFZmZlY3Q7Q3JpbXNvbiBDeXJyaWRhZTtTeWx2YW4gQ2FzY2FkZSBQcmVtO1JhbWJsaW5nIEZhdGViZW5kZXI7SWNlYm91bmQgS2luZyBTZXQ7RHJhZ29uIEd1YXJkaWFuO0FudGltYWdlIFNoaW5vYmk7UmVsZW50bGVzcyBXYXJicmluZ2VyIFYgMy4wO1NoZXJtYW4gTWFpZGVuIFYgNC4xO1NhY2NoYXJpbmUgU2Fib3RldXI7TWlzdHJlc3Mgb2YgdGhlIExvbmcgTmlnaHQ7TGlnaHRuaW5nIEhhcmJpbmdlcjtCcmluZ2VyIG9mIFRyb3VibGVzO0xhZHkgU3lsdmFuYXMgZm9yIERyb3cgLSBTcGlrZXMgb2YgRnJvc3QgU2V0O0JpbmRpbmdzIG9mIERlZXAgTWFnbWE7QWJ5c3NhbCBWb3J0ZXg7RmF0ZSBNZXJpZGlhbjtFeHBsb3NpdmUgTWFuaWFjO1RoZSBDaGFpbmVkIFNjcmliZTtTYW11cmFpIG9mIFdpbmQgViAzLjA7QmVzdG93bWVudHMgb2YgdGhlIERpdmluZSBBbmNob3IgZWZmZWN0cztEaXZpbmUgQW5jaG9yIFN0eWxlIDE7VmFsa3lyaWUgT2YgVGhlIFJlbWFpbnM7U3BpcmV0aG9ybiBSZWdhbGlhIFYgMi4wO0Zsb3dlciBGbGFtZSBMaW5hIFYgMy4wO0VydXB0aW5nIFdyYXRoIFYgMi4wO0Z1cnkgb2YgV2FyIEdvZDtIYXZvYyBvZiBEcmFnb24gUGFsYWNlIFYgMi4wO0JsYWNrIE5paGlsaXR5O1dyYXRoIG9mIEthIFYgMi4xO1NoaW1tZXIgb2YgdGhlIEFub2ludGVkO1ZlbmdlYW5jZSBvZiB0aGUgU3Vud2FycmlvcjtSZW1pbmlzY2VuY2Ugb2YgRHJlYW1zO01vbnN0cm91cyBSZXByaXNhbDtMaWdodGJyaW5nZXIgU0Y7R29sZCBTa3ltYWdlO1ZhbnRhZ2Ugb2YgdGhlIEJyZWFjaCBXYXJkZW47SGludGVybGFuZCBTdGFsa2VyO1JlbGljcyBvZiB0aGUgTG9zdCBWaWdpbCBQYXRoZmluZGVyO1Bvd2RlcnNsZWQgUm9va2VyeTtUcmVrIG9mIHRoZSBUcmFpbGJsYXplcjtUaW5rZXIgU2NhcmVjcm93IFNldDtCcmF3bGVyIG9mIHRoZSBHbGFjaWVyIFNlYSBWIDMuMDtBdHJvY2l0aWVzIG9mIHRoZSBBYnlzc2FsIFNjb3VyZ2U7RWNob2VzIG9mIHRoZSBFeXJpZSBWIDIuMDtCaW5kaW5ncyBvZiB0aGUgQmF0dGxlcmFuZ2VyIENoYW90aWMgU3R5bGU7T3V0bGFuZGlzaCBHb3VybWV0O1JlZ2FsaWEgb2YgdGhlIFdyYWl0aCBMb3JkIFNldDtFbXBlcm9yIE9mIFRoZSBDbGVyZ3k7UmlnaHRlb3VzIFRodW5kZXJib2x0IGFuZCBBcmNhbmEgTWVnYVBhY2s7IDEyM3x8fA==