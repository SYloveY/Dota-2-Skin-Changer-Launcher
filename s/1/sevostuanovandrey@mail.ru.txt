bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogMUQ5MkMxQzAtRDdEQS0xMURELUEzOEEtRTAzRjQ5MTE5MTExIDExMXx8fCAyMjI6OiA0OTMwN2EzZTNmODliMzY0MjNkN2ExZGQwZTUxMTQ5ZDE4NGE1ZjYyMTM5MzgyMTNiNGQzNmEzMjUyMzlhOTRlZmY5ZGQ5YzEzZWZhNDE0MjEzNDQzYzhiZmJjODk2NmM0ZTlkMmQ3MzFjZDE4OTU1NDg4YTFmYThkYjM4NmUyYyAyMjJ8fHwgMTIzOjogR29sZGVuIEFlZ2lzOzI1IGx2bCBwaW5nO0VtaW5lbmNlIG9mIFJpc3R1bCBEZW55IDE7SXJvbiBCcmFuY2ggR0c7Q29sb3JTdGF0cztNYXcgb2YgRXp0emhvaztUaGlyc3Qgb2YgRXp0emhvayBCdW5kbGUgUHJlbTtDcmltc29uIEJyYWNlcnMgb2YgQWVvbnMgUHJlbTtNYWNlIG9mIEFlb25zIFByZW07UGVyY2VwdGlvbnMgb2YgdGhlIEV0ZXJuYWwgTWluZDtKZXdlbCBvZiBBZW9ucyBQcmVtO1Rvcm1lbnRlZCBTdGFmZjtTb3VsIG9mIHRoZSBTbGF5ZXIgUHJlbTtEaXNjaXBsZSBvZiB0aGUgV3lybXdyb3VnaHQgRmxhbWU7R29sZGVuIFd5cm13cm91Z2h0IEZsYXJlIFByZW07R29sZGVuIFN0YWZmIG9mIEd1bi1ZdSBQcmVtO1NvdWwgRGlmZnVzZXIgUHJlbTtUb3AgSGF0IG9mIHRoZSBPY2N1bHRpc3RzIFB1cnN1aXQ7R29sZGVuIEZ1bGwtQm9yZSBCb25hbnphO0NyaW1zb24gUGlxdWUgUHJlbTtTa2l0dGVyaW5nIERlc29sYXRpb24gUHJlbTtHb2xkZW4gQ3lycmlkYWUgUHJlbTtCbGFkZSBvZiBUZWFycyBhbmQgQ3Jvd24gb2YgVGVhcnM7UmFwaWVycyBvZiB0aGUgQnVybmluZyBHb2QgViAzLjE7R29sZGVuIFNjYXZlbmdpbmcgR3V0dGxlc2x1ZztHb2xkZW4gVHdpbGlnaHQgU2NoaXNtO0dvbGRlbiBNb29uZmFsbCBQcmVtO0JlbHQgb2YgdGhlIEJsYWRlZm9ybSBBZXN0aGV0ZTtDcmltc29uIEVkZ2Ugb2YgdGhlIExvc3QgT3JkZXI7Rm9ydHVuZXMgVG91dCBQcmVtO0NvdmVycyBvZiB0aGUgTWVycXVlZW47RHJlc3Mgb2YgdGhlIE1lcnF1ZWVuO0p1Z2dlcm5hdXQgQXJjYW5hIFJlZCBCbGFkZWZvcm0gT3JpZ2lucztXYXRlcmxvZ2dlZCBLdW5ra2EgU2hvZXM7QmxhZGVCaXRlciBWIDMuMTtTdHlsZSBvZiB0aGUgRGl2aW5lIEFuY2hvcjtIZWxtIG9mIHRoZSBEYXJrIE1vb24gU3RhbGtlcjtNYW5pZm9sZCBQYXJhZG94IFBBIEFyY2FuYSBTdHlsZSAxO0NvZGljaWwgb2YgdGhlIFZlaWxlZCBPbmVzO0RyYWdvbmNsYXcgSG9vaztHb2xkZW4gU2hhZG93IE1hc3F1ZXJhZGUgUHJlbTtTbW9rZSBCb21iIG9mIE1vbnN0cm91cyBSZXByaXNhbDtIb3JucyBvZiBNb25zdHJvdXMgUmVwcmlzYWw7VGVtcGVzdCBIZWxtIG9mIHRoZSBUaHVuZGVyZ29kICsgUmlnaHRlb3VzIFRodW5kZXJib2x0O1RlbXBlc3QgUmV2ZWxhdGlvbjtQdXJwbGUgQ29sb3IgZm9yIFRCO1NwYW4gb2YgU29ycm93O0JpdHRlciBMaW5lYWdlIEltbW9ydGFsIEF4ZXM7RXRlcm5hbCBSYWRpYW5jZSBCbGFkZXMgUHJlbTtUb3AgSGF0IG9mIHRoZSBEYXJrYnJldyBFbmZvcmNlcjtNb2xvdG92IENvY2t0YWlsIG9mIHRoZSBEYXJrYnJldyBFbmZvcmNlcjtUaGUgT3JkZXIgb2YgQ3lwcmluO0JsYWRlcyBvZiBQcmlzbWF0aWMgR3JhY2U7R29sZGVuIFNldmVyaW5nIENyZXN0IFByZW07U2V2ZXJpbmcgTGFzaCBQcmVtO1JvbGxlcm1hd3N0ZXI7QXJjYW5pYyBSZXNvbmFuY2UgQmVhbTtQaXQgR3VhcmQgRmFtaWxpYXI7U3Bpcml0IG9mIHRoZSBTYWNyZWQgR3JvdmUgLSBIZWFkO0NsZWFyY3V0IENhdmFsaWVyIEhlYWQ7R29sZGVuIFJlY3RpZmllcjtDb250cm9sbGVkIEJ1cm47SGVhZGRyZXNzIG9mIHRoZSBMb3lhbCBGb2xkO1BhdWxkcm9ucyBvZiB0aGUgTG95YWwgRm9sZDtGb2NhbCBSZXNvbmFuY2UgViAzLjA7Q3Jlc2NlbnQgQm93IEFycm93IG9ubHk7QXJtb3Igb2YgdGhlIExveWFsIEZvbGQ7U3Rld2FyZCBvZiB0aGUgRm9yYmlkZGVuIENoYW1iZXIgQXJtb3I7R29sZGVuIEF0b21pYyBSYXkgVGhydXN0ZXJzIFByZW07Qmxvc3NvbSBvZiB0aGUgTWVycnkgV2FuZGVyZXI7RmlyZXN0YXJ0ZXIgRnVlbCBDYW5uaXN0ZXI7VEktOSBCb3R0bGUgRWZmZWN0O0VtYmxlbSBvZiBEaXZpbml0eSBBZ2hhbmltIEVmZmVjdDtUSS05IEV1bCBTY2VwdGVyIEVmZmVjdDtUSS05IEZvcmNlIFN0YWZmIEVmZmVjdDtUSS0xMCBGb3VudGFpbiBsdmwgMyBFZmZlY3Q7TmlnaHQgVGVycm9ycyBIYXQ7R2hhc3RseSBOb2N0dXJuZTtGZWFzdCBvZiBBYnNjZXNzaW9uO0xhcmdlIFRhc3NlbHMgb2YgdGhlIEJsYWNrIERlYXRoO1RJLTEwIEJsaW5rIGx2bCAyIEVmZmVjdDtTaGFkb3cgRmllbmQgQXJjYW5hIERlbW9uIEVhdGVyO0FybXMgb2YgRGVzb2xhdGlvbiBQcmVtO0RpYWJvbGljIEFzcGVjdDtSaXZlciBWaWFsIEJsYWNrO1RlcnJhaW4gLSBTYW5jdHVtcyBvZiB0aGUgRGl2aW5lO0JsYWNrIE1vbm9saXRoIEhVRDtBbGxpYW5jZSBsb2FkaW5nIHNjcmVlbjtBcmMgb2YgTWFudGE7SGFpciBvZiB0aGUgU3Vydml2b3I7UGhhbnRvbSBBZHZlbnQgQmVsdCBVUDtQaGFudG9tIEFkdmVudCBVUDtQaGFudG9tIEFkdmVudCBTaG91bGRlcnMgVVA7Q3Jvd24gb2YgVmlsZSBSZWxpcXVhcnk7UGF1bGRyb24gb2YgdGhlIERyZWFkYm9ybiBSZWdlbnQ7VW5icm9rZW4gRmVhbHR5O0FybW9yIG9mIHRoZSBEYXJrIFJlc2Vydm9pcjtCbGlzdGVyaW5nIFNoYWRlO0Nsb2FrIG9mIHRoZSBEYXJrIFJlc2Vydm9pcjtUaW55IElnbmVvdXMgU3RvbmU7U21hbGwgSWduZWQ5519cyBTdG9uZTtNZWRpdW0gSWduZWQ5519cyBTdG9uZTtMYXJnZSBJZ25lb3VzIFN0b25lO0FuY2llbnQgSW5oZXJpdGFuY2UgLSBXZWFwb247QXJjIG9mIE1hbnRhIC0gT2ZmLUhhbmQ7R29sZGVuIFNpbGVudCBXYWtlO1JlYXBlcnMgV3JlYXRoO0NvbmNvcmQgRG9taW5pb247TGFuY2Ugb2YgdGhlIFN1bndhcnJpb3I7VGhlRmF0UmF0IFdhcnJpb3IgU29uZ3MgTXVzaWMgUGFjayBPZmZpY2lhbDtUcmluZSBBbm5vdW5jZXI7Q29uY29yZCBSZXZlcnNpb24gVVA7RGFyayBBcnRpc3RyeSBDYXBlIFByZW07RGFyayBBcnRpc3RyeSBCZWx0IFByZW07RGFyayBBcnRpc3RyeSBQYXVsZHJvbnMgUHJlbTtNYWd1cyBBcGV4O0luZmVybnVzO0RhcmsgQXJ0aXN0cnkgQnJhY2VycyBQcmVtO0d1YXJkaWFucyBvZiB0aGUgTG9zdCBQYXRoIFJhZGlhbnQgVG93ZXJzO0d1YXJkaWFucyBvZiB0aGUgTG9zdCBQYXRoIERpcmUgVG93ZXJzO0NoZXN0cGxhdGUgb2YgdGhlIEd1YXJkaWFuIENvbnN0cnVjdCBIYXJ2ZXN0ZWQ7QnJhY2VycyBvZiB0aGUgR3VhcmRpYW4gQ29uc3RydWN0IEhhcnZlc3RlZDtTa2lydCBvZiB0aGUgR3VhcmRpYW4gQ29uc3RydWN0IEJlc3Rvd2VkO0FiYWRkb24gUkVEIE1lZ2FQYWNrO0RhcmticmV3IEVuZm9yY2VyIGFuZCBFdGVybmFsIFJhZGlhbmNlIEJsYWRlcyBhbmQgTWlkYXMgS251Y2tsZXMgTWVnYVBhY2s7Q2xvY2t3ZXJrIE1lZ2FQYWNrO0VhcnRoc2hha2VyIE1lZ2FQYWNrIE5ldztTaWxlbmNlciBUSTEwIENvbGxlY3RvcnMgQ2FjaGUgTWVnYVBhY2s7SHVza2FyIE1lZ2FQYWNrIE5FVztBQU1lZ2FQYWNrO0JyaXN0bGViYWNrIE1lZ2FQYWNrO1RodW5kZXIgR3JpZmZpbjtFc3NlbmNlIE9mIFRoZSBEYXJrIE1vb247U2hvb3RpbmcgU3RhcjtCcmF3bGVyIG9mIHRoZSBHbGFjaWVyIFNlYSBWIDMuMDtBcnRlbWlzIFJlZCBTdHlsZTtNZWR1c2EgTWVnYVBhY2sgTkVXO0JsYWNrIE5paGlsaXR5IGFuZCBHb2xkZW4gU2hhZG93IG9mIHRoZSBEYXJrIEFnZSBNZWdhUGFjaztDbGlua3ogTWVnYVBhY2s7UXVlZW4gb2YgUGFpbiBBcmNhbmEgTWVnYVBhY2s7S3VuZyBmdSBNYXN0ZXI7U3dvb3BpbmcgRWxkZXI7TWlyYW5hIE1lZ2FQYWNrO1N2ZW4gSW1tb3J0YWxzIE1lZ2FQYWNrIFVQO1Vyc2EgSW1tb3J0YWxzIE1lZ2FQYWNrO1dpbmRyYW5nZXIgQXJjYW5hIHN0eWxlIDEgKEJsdWUgQmlyZCkgKyBGdWxsIFdSIGltbW9ydGFsO01vcnBobGluZyBJbW1vcnRhbHMgTWVnYVBhY2sgVVA7TGVnaW9uIENvbW1hbmRlciBNb2RNYWtlciBNZWdhUGFjaztFdGVybmFsIFRlc3RhbWVudDtMaWZlc3RlYWxlciBNZWdhUGFjaztNb25zdHJvdXMgUmVwcmlzYWw7U2xhcmsgTWVnYVBhY2sgTmV3O1N0b3JtIFNwaXJpdCBNZWdhUGFjaztWaXBlciBNZWdhUGFjaztQbHVuZGVyIG9mIHRoZSBTYXZhZ2UgTW9uZ2VyO0xpZ2h0IG9mIEVsZWFub3IgU2V0O0dpZnRzIG9mIHRoZSBGbGF5ZWQgVHdpbnMgU3R5bGUgMTtPdXR3b3JsZCBEZXZvdXZlciBNZWdhUGFjaztEIE9jdG8gVGlua2VyO0FyYyBXYXJkZW4gTWVnYVBhY2s7VmlzYWdlIE1lZ2FQYWNrO01vbHRlbiBEZXN0cnVjdG9yO1RpbWJlcnNhdyBNZWdhUGFjaztSZW1pbmlzY2VuY2Ugb2YgRHJlYW1zO0RlYXRoIE5lY3JvbGlnaHQgUHJlbWl1bSBTdHlsZSAyO0x5Y2FuIEtpc2lsZXYgTW9kTWFrZXIgTWVnYVBhY2s7QnVybmluZyBOaWdodG1hcmU7QW50aW1hZ2UgV2VpIEZlbWFsZSAoWWQ5519IGNhbiBhZGQgV2VhcG9uIGFuZCBIZWFkKTtESyBQZXJzb25hIERhdmlvbjtFbGR3dXJtcyBUb3VjaDtWZW5nZWFuY2Ugb2YgdGhlIFN1bndhcnJpb3I7QXhlIGZ1bGwgSW1tb3J0YWxzIE1lZ2FwYWNrIGFsdDsgMTIzfHx8