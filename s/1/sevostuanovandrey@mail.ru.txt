bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogMUQ5MkMxQzAtRDdEQS0xMURELUEzOEEtRTAzRjQ5MTE5MTExIDExMXx8fCAyMjI6OiA0OTMwN2EzZTNmODliMzY0MjNkN2ExZGQwZTUxMTQ5ZDE4NGE1ZjYyMTM5MzgyMTNiNGQzNmEzMjUyMzlhOTRlZmY5ZGQ5YzEzZWZhNDE0MjEzNDQzYzhiZmJjODk2NmM0ZTlkMmQ3MzFjZDE4OTU1NDg4YTFmYThkYjM4NmUyYyAyMjJ8fHwgMTIzOjogR29sZGVuIEFlZ2lzOzI1IGx2bCBwaW5nO0VtaW5lbmNlIG9mIFJpc3R1bCBEZW55IDE7SXJvbiBCcmFuY2ggR0c7Q29sb3JTdGF0cztEZWNsYXJhdGlvbiBvZiB0aGUgRGl2aW5lIFNoYWRvdyBEaXJlIFRvd2VycztEZWNsYXJhdGlvbiBvZiB0aGUgRGl2aW5lIExpZ2h0IFJhZGlhbnQgVG93ZXJzO01hdyBvZiBFenR6aG9rO1RoaXJzdCBvZiBFenR6aG9rIEJ1bmRsZSBQcmVtO0NyaW1zb24gQnJhY2VycyBvZiBBZW9ucyBQcmVtO01hY2Ugb2YgQWVvbnMgUHJlbTtQZXJjZXB0aW9ucyBvZiB0aGUgRXRlcm5hbCBNaW5kO0pld2VsIG9mIEFlb25zIFByZW07VG9ybWVudGVkIFN0YWZmO1NvdWwgb2YgdGhlIFNsYXllciBQcmVtO0Rpc2NpcGxlIG9mIHRoZSBXeXJtd3JvdWdodCBGbGFtZTtHb2xkZW4gV3lybXdyb3VnaHQgRmxhcmUgUHJlbTtHb2xkZW4gU3RhZmYgb2YgR3VuLVl1IFByZW07U291bCBEaWZmdXNlciBQcmVtO1RvcCBIYXQgb2YgdGhlIE9jY3VsdGlzdHMgUHVyc3VpdDtHb2xkZW4gRnVsbC1Cb3JlIEJvbmFuemE7Q3JpbXNvbiBQaXF1ZSBQcmVtO1NraXR0ZXJpbmcgRGVzb2xhdGlvbiBQcmVtO0dvbGRlbiBDeXJyaWRhZSBQcmVtO0JsYWRlIG9mIFRlYXJzIGFuZCBDcm93biBvZiBUZWFycztSYXBpZXJzIG9mIHRoZSBCdXJuaW5nIEdvZCBWIDMuMTtHb2xkZW4gU2NhdmVuZ2luZyBHdXR0bGVzbHVnO0dvbGRlbiBUd2lsaWdodCBTY2hpc207R29sZGVuIE1vb25mYWxsIFByZW07QmVsdCBvZiB0aGUgQmxhZGVmb3JtIEFlc3RoZXRlO0NyaW1zb24gRWRnZSBvZiB0aGUgTG9zdCBPcmRlcjtGb3J0dW5lcyBUb3V0IFByZW07Q292ZXJzIG9mIHRoZSBNZXJxdWVlbjtEcmVzcyBvZiB0aGUgTWVycXVlZW47SnVnZ2VybmF1dCBBcmNhbmEgUmVkIEJsYWRlZm9ybSBPcmlnaW5zO1dhdGVybG9nZ2VkIEt1bmtrYSBTaG9lcztCbGFkZUJpdGVyIFYgMy4xO1N0eWxlIG9mIHRoZSBEaXZpbmUgQW5jaG9yO0hlbG0gb2YgdGhlIERhcmsgTW9vbiBTdGFsa2VyO01hbmlmb2xkIFBhcmFkb3ggUEEgQXJjYW5hIFN0eWxlIDE7Q29kaWNpbCBvZiB0aGUgVmVpbGVkIE9uZXM7RHJhZ29uY2xhdyBIb29rO0dvbGRlbiBTaGFkb3cgTWFzcXVlcmFkZSBQcmVtO1Ntb2tlIEJvbWIgb2YgTW9uc3Ryb3VzIFJlcHJpc2FsO0hvcm5zIG9mIE1vbnN0cm91cyBSZXByaXNhbDtUZW1wZXN0IEhlbG0gb2YgdGhlIFRodW5kZXJnb2QgKyBSaWdodGVvdXMgVGh1bmRlcmJvbHQ7VGVtcGVzdCBSZXZlbGF0aW9uO1B1cnBsZSBDb2xvciBmb3IgVEI7U3BhbiBvZiBTb3Jyb3c7Qml0dGVyIExpbmVhZ2UgSW1tb3J0YWwgQXhlcztFdGVybmFsIFJhZGlhbmNlIEJsYWRlcyBQcmVtO1RvcCBIYXQgb2YgdGhlIERhcmticmV3IEVuZm9yY2VyO01vbG90b3YgQ29ja3RhaWwgb2YgdGhlIERhcmticmV3IEVuZm9yY2VyO1RoZSBPcmRlciBvZiBDeXByaW47QmxhZGVzIG9mIFByaXNtYXRpYyBHcmFjZTtHb2xkZW4gU2V2ZXJpbmcgQ3Jlc3QgUHJlbTtTZXZlcmluZyBMYXNoIFByZW07Um9sbGVybWF3c3RlcjtBcmNhbmljIFJlc29uYW5jZSBCZWFtO1BpdCBHdWFyZCBGYW1pbGlhcjtTcGlyaXQgb2YgdGhlIFNhY3JlZCBHcm92ZSAtIEhlYWQ7Q2xlYXJjdXQgQ2F2YWxpZXIgSGVhZDtHb2xkZW4gUmVjdGlmaWVyO0NvbnRyb2xsZWQgQnVybjtIZWFkZHJlc3Mgb2YgdGhlIExveWFsIEZvbGQ7UGF1bGRyb25zIG9mIHRoZSBMb3lhbCBGb2xkO0ZvY2FsIFJlc29uYW5jZSBWIDMuMDtDcmVzY2VudCBCb3cgQXJyb3cgb25seTtBcm1vciBvZiB0aGUgTG95YWwgRm9sZDtTdGV3YXJkIG9mIHRoZSBGb3JiaWRkZW4gQ2hhbWJlciBBcm1vcjtHb2xkZW4gQXRvbWljIFJheSBUaHJ1c3RlcnMgUHJlbTtCbG9zc29tIG9mIHRoZSBNZXJyeSBXYW5kZXJlcjtGaXJlc3RhcnRlciBGdWVsIENhbm5pc3RlcjtUSS05IEJvdHRsZSBFZmZlY3Q7RW1ibGVtIG9mIERpdmluaXR5IEFnaGFuaW0gRWZmZWN0O0FnaGFuaW0gRHVuZ2VvbiBTY2VwdGVyIEVmZmVjdDtUSS05IEV1bCBTY2VwdGVyIEVmZmVjdDtUSS05IEZvcmNlIFN0YWZmIEVmZmVjdDtUSS0xMCBGb3VudGFpbiBsdmwgMyBFZmZlY3Q7TmlnaHQgVGVycm9ycyBIYXQ7R2hhc3RseSBOb2N0dXJuZTtGZWFzdCBvZiBBYnNjZXNzaW9uO0xhcmdlIFRhc3NlbHMgb2YgdGhlIEJsYWNrIERlYXRoO1RJLTEwIEJsaW5rIGx2bCAyIEVmZmVjdDtTaGFkb3cgRmllbmQgQXJjYW5hIERlbW9uIEVhdGVyO0FybXMgb2YgRGVzb2xhdGlvbiBQcmVtO0RpYWJvbGljIEFzcGVjdDtSaXZlciBWaWFsIEJsYWNrO1dhcmNvZyBDdXJzb3IgUGFjaztUZXJyYWluIC0gU2FuY3R1bXMgb2YgdGhlIERpdmluZTtCbGFjayBNb25vbGl0aCBIVUQ7QWxsaWFuY2UgbG9hZGluZyBzY3JlZW47RW5pZ21hdGljIEVtYmxlbSBvZiB0aGUgRGlyZXRpZGUgLSBCbHVlO0FyYyBvZiBNYW50YTtIYWlyIG9mIHRoZSBTdXJ2aXZvcjtQaGFudG9tIEFkdmVudCBCZWx0IFVQO1BoYW50b20gQWR2ZW50IFVQO1BoYW50b20gQWR2ZW50IFNob3VsZGVycyBVUDtDcm93biBvZiBWaWxlIFJlbGlxdWFyeTtQYXVsZHJvbiBvZiB0aGUgRHJlYWRib3JuIFJlZ2VudDtVbmJyb2tlbiBGZWFsdHk7QXJtb3Igb2YgdGhlIERhcmsgUmVzZXJ2b2lyO0JsaXN0ZXJpbmcgU2hhZGU7Q2xvYWsgb2YgdGhlIERhcmsgUmVzZXJ2b2lyO1RpbnkgSWduZWQ5519cyBTdG9uZTtTbWFsbCBJZ25lb3VzIFN0b25lO01lZGl1bSBJZ25lb3VzIFN0b25lO0xhcmdlIElnbmVvdXMgU3RvbmU7QW5jaWVudCBJbmhlcml0YW5jZSAtIFdlYXBvbjtBcmMgb2YgTWFudGEgLSBPZmYtSGFuZDtHb2xkZW4gU2lsZW50IFdha2U7UmVhcGVycyBXcmVhdGg7Q29uY29yZCBEb21pbmlvbjtMYW5jZSBvZiB0aGUgU3Vud2FycmlvcjtUaGVGYXRSYXQgV2FycmlvciBTb25ncyBNdXNpYyBQYWNrIE9mZmljaWFsO1RyaW5lIEFubm91bmNlcjtDb25jb3JkIFJldmVyc2lvbiBVUDtEYXJrIEFydGlzdHJ5IENhcGUgUHJlbTtEYXJrIEFydGlzdHJ5IEJlbHQgUHJlbTtEYXJrIEFydGlzdHJ5IFBhdWxkcm9ucyBQcmVtO01hZ3VzIEFwZXg7SW5mZXJudXM7RGFyayBBcnRpc3RyeSBCcmFjZXJzIFByZW07QWJhZGRvbiBSRUQgTWVnYVBhY2s7RGFya2JyZXcgRW5mb3JjZXIgYW5kIEV0ZXJuYWwgUmFkaWFuY2UgQmxhZGVzIGFuZCBNaWRhcyBLbnVja2xlcyBNZWdhUGFjaztDbG9ja3dlcmsgTWVnYVBhY2s7RWFydGhzaGFrZXIgTWVnYVBhY2sgTmV3O1NpbGVuY2VyIFRJMTAgQ29sbGVjdG9ycyBDYWNoZSBNZWdhUGFjaztIdXNrYXIgTWVnYVBhY2sgTkVXO0FBTWVnYVBhY2s7QnJpc3RsZWJhY2sgTWVnYVBhY2s7VGh1bmRlciBHcmlmZmluO0Vzc2VuY2UgT2YgVGhlIERhcmsgTW9vbjtTaG9vdGluZyBTdGFyO0JyYXdsZXIgb2YgdGhlIEdsYWNpZXIgU2VhIFYgMy4wO0FydGVtaXMgUmVkIFN0eWxlO01lZHVzYSBNZWdhUGFjayBORVc7QmxhY2sgTmloaWxpdHkgYW5kIEdvbGRlbiBTaGFkb3cgb2YgdGhlIERhcmsgQWdlIE1lZ2FQYWNrO0NsaW5reiBNZWdhUGFjaztRdWVlbiBvZiBQYWluIEFyY2FuYSBNZWdhUGFjaztLdW5nIGZ1IE1hc3RlcjtTd29vcGluZyBFbGRlcjtNaXJhbmEgTWVnYVBhY2s7U3ZlbiBJbW1vcnRhbHMgTWVnYVBhY2sgVVA7VXJzYSBJbW1vcnRhbHMgTWVnYVBhY2s7V2luZHJhbmdlciBBcmNhbmEgc3R5bGUgMSAoQmx1ZSBCaXJkKSArIEZ1bGwgV1IgaW1tb3J0YWw7TW9ycGhsaW5nIEltbW9ydGFscyBNZWdhUGFjayBVUDtMZWdpb24gQ29tbWFuZGVyIE1vZE1ha2VyIE1lZ2FQYWNrO0V0ZXJuYWwgVGVzdGFtZW50O0xpZmVzdGVhbGVyIE1lZ2FQYWNrO01vbnN0cm91cyBSZXByaXNhbDtTbGFyayBNZWdhUGFjayBOZXc7U3Rvcm0gU3Bpcml0IE1lZ2FQYWNrO1ZpcGVyIE1lZ2FQYWNrO1BsdW5kZXIgb2YgdGhlIFNhdmFnZSBNb25nZXI7TGlnaHQgb2YgRWxlYW5vciBTZXQ7R2lmdHMgb2YgdGhlIEZsYXllZCBUd2lucyBTdHlsZSAxO091dHdvcmxkIERldm91dmVyIE1lZ2FQYWNrO0QgT2N0byBUaW5rZXI7QXJjIFdhcmRlbiBNZWdhUGFjaztWaXNhZ2UgTWVnYVBhY2s7TW9sdGVuIERlc3RydWN0b3I7VGltYmVyc2F3IE1lZ2FQYWNrO1JlbWluaXNjZW5jZSBvZiBEcmVhbXM7RGVhdGggTmVjcm9saWdodCBQcmVtaXVtIFN0eWxlIDI7THljYW4gS2lzaWxldiBNb2RNYWtlciBNZWdhUGFjaztCdXJuaW5nIE5pZ2h0bWFyZTtBbnRpbWFnZSBXZWkgRmVtYWxlIChZb3UgY2FuIGFkZCBXZWFwb24gYW5kIEhlYWQpO0RLIFBlcnNvbmEgRGF2aW9uO0VsZHd1cm1zIFRvdWNoO1ZlbmdlYW5jZSBvZiB0aGUgU3Vud2FycmlvcjtBeGUgZnVsbCBJbW1vcnRhbHMgTWVnYXBhY2sgYWx0OyAxMjN8fHw=