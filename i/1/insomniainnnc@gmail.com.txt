limitHWID:: 1 000||| 111::  111||| 222:: $2y$10$YTA1MTg5MGMwNTMwNjBjNuA.Ses8.ZCf1Y6MuYfEn11gKOYGB.wZm 222||| 123:: Trainer Dragon;Dark Artistry Cape;Dark Artistry Pauldrons;Magus Accord;Dark Artistry Cape Prem;Dark Artistry Hair 1st Style;Dark Artistry Belt Prem;Acolyte of the Lost Arts with Taunt Attacks;Magus Apex Prem;Soup for Sluts Customs Spells Invoker;Grace of the Eminence of Ristul;Grace of the Royal Decree;Bloodfeather Feast;Golden Bloodfeather Feast;Great Sages Reckoning Timeless Tale;Staff of the Demon Trickster;Armor of the Demon Trickster Orange;Pauldrons of the Demon Trickster;Grand Abscession;Execution Headclamp of the Black Death;Surgical Precision Mask;Fan of the Royal Butcher;Golden Scavenging Guttleslug;Golden Rippers Reel;Grand Abscession Hook Bundle;Scorching Talon;Horns of Eternal Harvest Prem;Golden Silent Wake;Dread Retribution - Headwear Alt;Manias Mask Prem;Dread Retribution - Leg Armor Alt;Dread Retribution - Quiver Alt;Dread Retribution - Shoulder Armor Alt;Arcana Dread Retribution Master of Madness;Radiant Conqueror Back;Radiant Conqueror Shoulder;Legion Commander Arcana UP;Spear of the Daemonfell Flame;Jagged Honor Mask;Juggernaut Arcana Red Bladeform Origins;Provocation of Ruin Mask;Hakama of a Thousand Faces;Golden Edge of the Lost Order;Bracers of the Bladeform Aesthete;Juggernaut Arcana Bladeform Legacy;Eminence of Ristul Whip Attack;Crown of the Royal Decree;Royal Decree Whip Attack;Golden Mandate of the Stormborn;Garb of the Corridan Maestro;Blistering Shade;Crown of the One True King;Crimson Unbroken Fealty;WK Refresher Sword;Monarch of the Sapphire Glen;Mantle of the Truebark Adherent;Sufferwood Sapling;Tunic of the Wandering Flame;Master of the Searing Path Head;Apogee of the Guardian Flame;Master of the Searing Path Weapon;Avowance of the Veiled Ones;Avowance of the Crimson Witness;Manifold Paradox PA Arcana Style 3;Windranger Arcana style 2;Peregrine Flight;Flowersong Beauty Style 2;Pumpkin Trees UP;Bottle TI-6 Effect;Dagger New Year;Euls Scepter TI-6 Effect;Mjollnir TI-6 Effect;Phase Boots TI-6 Effect;LevelUp TI-6 Effect;Audio Countdowns Spells;25 lvl ping;ColorStats;Fountain Regen lvl 2 TI-6 Effect;Radiant Nemestice Creeps;Dire Nemestice Creeps;Pedestal Winter Major;Overgrown Emblem;Mine Radius 702;Teleport lvl 3 TI-6 Effect;Diretide Shader Map Effect;Planetfall Stun Effect;Declaration of the Divine Shadow Dire Towers;Declaration of the Divine Light Radiant Towers;The International 2019 Versus Screen II;Lasthit Gold - New Bloom 2019;Gabe Newell Shopkeeper;TI-9 Shivas Effect;Aghanim Dungeon Scepter Effect;Eminence of Ristul Deny 1;Hex Yakyok;Kappa Silence;V1lat Announcer;Broodmother Anime Voice;Queen of Pain Arcana MegaPack;Eternal Harvest;Yellow Storm V 2.0;Neon Spirit - Jade Style 1;Storm Spirit MegaPack;Wraith King Arcana MegaPack;Cursed Spirit;Fog Spirit V 3.0;Manifold Paradox Gothic Hunter;Sempiternal Revelations; 123|||