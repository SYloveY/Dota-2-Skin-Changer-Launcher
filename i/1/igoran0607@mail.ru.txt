bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogIDExMXx8fCAyMjI6OiAkMnkkMTAkTm1VNVpERTNPREUxWW1VeFpUazRZT1RCMFhua0hLcTFsM0dTVm8vS21MdkR2c05TRzh3bHkgMjIyfHx8IDEyMzo6IFRlcnJhaW4gLSBXaW50ZXI7VGVycmFpbiAtIFJlZWZzIEVkZ2U7VGVycmFpbiAtIEF1dHVtbjtUZXJyYWluIC0gSW1tb3J0YWwgR2FyZGVucztUZXJyYWluIC0gT3Zlcmdyb3duIEVtcGlyZTtCZXlvbmQgdGhlIFN1bW1pdCBIVUQ7QmxhY2sgTW9ub2xpdGggSFVEO0JyYXdsIEJhc2hlciBIVUQ7RDJDTCBTZWFzb24gNSBIVUQ7RGVlcGVzdCBEZXB0aHMgSFVEO0RlbW9uaWMgRXNzZW5jZSBIVUQ7RGV0b25hdGlvbiBIVUQ7Vm9pY2Ugb2YgRmxvY2toZWFydHMgR2FtYmxlO1RoZSBJbnRlcm5hdGlvbmFsIDIwMjAgTXVzaWMgUGFjaztUaGVGYXRSYXQgV2FycmlvciBTb25ncyBNdXNpYyBQYWNrIE9mZmljaWFsO0Rvb21saW5nIFByZW07QWdoYW5pbXMgSW50ZXJkaW1lbnNpb25hbCBCYWJ5IFJvc2hhbjtDb2xsZWN0b3JzIEJhYnkgUm9zaGFuIDIwMTc7Q29sbGVjdG9ycyBCYWJ5IFJvc2hhbiAyMDE4O0RhcmsgTW9vbiBCYWJ5IFJvc2hhbjtMaWV1dGVuYW50IFNxdWF3a2lucyBSb3dib2F0O0FnaGFuaW0gRHVuZ2VvbiBTY2VwdGVyIEVmZmVjdDtFbWJsZW0gb2YgRGl2aW5pdHkgQWdoYW5pbSBFZmZlY3Q7Qmx1ZVNreSBJdGVtIEVmZmV0cztEYWdnZXIgTmV3IFllYXI7TGFzdGhpdCBHb2xkIC0gTmV3IEJsb29tIDIwMTk7VEktMTAgQm90dGxlIEVmZmVjdDtCb3R0bGUgVEktNiBFZmZlY3Q7R29sZGVuIEFlZ2lzO0FlZ2lzIGFuZCBSb3NoYW4gU3QuIFZhbGVudGluZSBEYXk7RW1pbmVuY2Ugb2YgUmlzdHVsIERlbnkgMTtFbWluZW5jZSBvZiBSaXN0dWwgRGVueSAyO1NvdWwgRGVueTtUSS04IFNlYXNvbmFsIENyZWVwIERlbnkgRWZmZWN0O1dpbnRlciBTY3l0aGUgb2YgVnlzZSBFZmZlY3QgMjAxNztIZXggWWFreW9rO0F1ZGlvIENvdW50ZG93bnMgU3BlbGxzO1ByZSBBZ2hhbmltIER1bmdlb24gU2NlcHRlciBFZmZlY3Q7T3Zlcmdyb3duIEVtYmxlbSBBZ2hhbmltIEVmZmVjdDtCbG9vZCBGb250YWluIFJlZ2VuO0ZvdW50YWluIFJlZ2VuIGx2bCAyIFRJLTYgRWZmZWN0O0JhdHRsZSBQYXNzIEVmZmVjdCBGb3VudGFpbiBSZWdlbjtFbWJsZW0gb2YgRGl2aW5pdHk7RW1ibGVtIG9mIHRoZSBDcnlzdGFsIEVjaGVsb247RW5pZ21hdGljIEVtYmxlbSBvZiB0aGUgRGlyZXRpZGUgLSBCbHVlO0VuaWdtYXRpYyBFbWJsZW0gb2YgdGhlIERpcmV0aWRlIC0gR3JlZW47T3Zlcmdyb3duIEVtYmxlbTtFbmlnbWF0aWMgRW1ibGVtIG9mIHRoZSBEaXJldGlkZSAtIFJlZDtTdW5rZW4gRW1ibGVtO0xldmVsVXAgVEktNiBFZmZlY3Q7VEktOSBMZXZlbCBVcCBFZmZlY3Q7VEktMTAgTGV2ZWwgVXAgRWZmZWN0O1RJLTcgTWpvbG5pciBFZmZlY3Q7VEktOCBNam9sbG5pciBFZmZlY3Q7VEktOSBNam9sbG5pciBFZmZlY3Q7VEktMTAgTWpvbGxuaXIgRWZmZWN0O01qb2xsbmlyIFRJLTYgRWZmZWN0O1RJLTkgUGhhc2UgQm9vdHMgRWZmZWN0O1BoYXNlIEJvb3RzIFRJLTYgRWZmZWN0O1RJLTggUmFkaWFuY2UgRWZmZWN0O1RJLTcgUmFkaWFuY2UgRWZmZWN0O1RJLTkgUmFkaWFuY2UgRWZmZWN0O1JhZGlhbmNlIFRJLTYgRWZmZWN0O1RJLTEwIFJhZGlhbmNlIEVmZmVjdDtNaW5lIFJhZGl1cyA3MDI7Uml2ZXIgVmlhbCBPaWw7Uml2ZXIgVmlhbCBSZWQ7Uml2ZXIgVmlhbCBCbG9vZDtSaXZlciBWaWFsIENocm9tZTtSaXZlciBWaWFsIEVsZWN0cmlmaWVsZDtSaXZlciBWaWFsIEJsdWU7Uml2ZXIgVmlhbCBCbGFjaztSaXZlciBWaWFsIENvbGE7Uml2ZXIgVmlhbCBPcmFuZ2U7Uml2ZXIgVmlhbCBQb3Rpb247Uml2ZXIgVmlhbCBQdXJwbGU7RW1lcmFsZCBSb3NoYW47RGVzZXJ0IFJvc2hhbjtSb3NoYW4gZnJvbSBEaWFibG87Um9zaGFuIEdhcmRlbnM7VGktNyBSb3NoYW47RGlyZXRpZGUgU2hhZGVyIE1hcCBFZmZlY3Q7VEktOSBTaGl2YXMgRWZmZWN0O1RJLTggU2hpdmFzIEVmZmVjdDtHYWJlIE5ld2VsbCBTaG9wa2VlcGVyO1BsYW5ldGZhbGwgU3R1biBFZmZlY3Q7VGVsZXBvcnQgbHZsIDMgVEktNiBFZmZlY3Q7VEktNiBBbGxpYW5jZSBUUCBFZmZlY3Q7VEktNiBFc2NhcGUgR2FtaW5nIFRQIEVmZmVjdDtUSS02IEV2aWwgR2VuaXVzZXMgVFAgRWZmZWN0O1RJLTYgRm5hdGljIFRQIEVmZmVjdDtUSS02IE5hdHVzIFZpbmNlcmUgVFAgRWZmZWN0O1RJLTcgQWVnaXMgVFAgRWZmZWN0O1RJLTcgQWxsaWFuY2UgVFAgRWZmZWN0O0RlY2xhcmF0aW9uIG9mIHRoZSBEaXZpbmUgTGlnaHQgUmFkaWFudCBUb3dlcnM7RGVjbGFyYXRpb24gb2YgdGhlIERpdmluZSBTaGFkb3cgRGlyZSBUb3dlcnM7RHJhZ29uIFRvd2VycyBieSBKZXQgU2hhcmsgViAyLjA7RHJhZ29uIFRvd2VycztHdWFyZGlhbnMgb2YgdGhlIExvc3QgUGF0aCBEaXJlIFRvd2VycztHdWFyZGlhbnMgb2YgdGhlIExvc3QgUGF0aCBSYWRpYW50IFRvd2VycztQZWRlc3RhbCBEaXJlIEZyb3N0O1JhZGlhbnQgTmVtZXN0aWNlIENyZWVwcztEaXJlIE5lbWVzdGljZSBDcmVlcHM7V2ludGVyIENyZWVwcyBWIDMuMDtUSS05IEV1bCBTY2VwdGVyIEVmZmVjdDtCYXN0aW9uIEFubm91bmNlcjtLdW5ra2EgYW5kIFRpZGVodW50ZXIgQW5ub3VuY2VyO1ZvaWNlIG9mIFRoZSBJbnRlcm5hdGlvbmFsIEFubm91bmNlcjtWMWxhdCBBbm5vdW5jZXI7V2VhdGhlciBBdXJvcmE7V2VhdGhlciBIYXJ2ZXN0O1dlYXRoZXIgQmx1ZSBTa3kgZnJvbSBTb3VwIGZvciBTbHV0cztXZWF0aGVyIFBlc3RpbGVuY2U7QWJ5c20gZG9taW5hdG9yIGxvYWRpbmdzY3JlZW47QWNvbHl0ZSBvZiBWZW5nZWFuY2UgTG9hZGluZyBTY3JlZW47QXJ0aXNhbiBvZiBIYXZvYyBMb2FkaW5nIFNjcmVlbjtCYXR0bGV0cmFwIExvYWRpbmcgU2NyZWVuO0NpY2F0cml4IFJlZ2FsaWEgTG9hZGluZyBTY3JlZW47Q3JpbXNvbiBCcmFjZXJzIG9mIEFlb25zIFByZW07RmFjZWxlc3MgTWFkbmVzcztQcm92b2NhdGlvbiBvZiBSdWluIE1hc2s7SnVnZ2VybmF1dCBBcmNhbmEgUmVkIEJsYWRlZm9ybSBPcmlnaW5zO0phZ2dlZCBIb25vciBNYXNrO0p1Z2dlcm5hdXQgQXJjYW5hIEJsYWRlZm9ybSBMZWdhY3k7Q3JpbXNvbiBFZGdlIG9mIHRoZSBMb3N0IE9yZGVyO0dvbGRlbiBQcm9mYW5lIFVuaW9uIENsb3NlO0dvbGRlbiBEcmVhZCBSZXF1aXNpdGlvbjtHYXVudGxldCBvZiB0aGUgVHJlYWNoZXJvdXMgRGVtb24gUHJlbTtNdWxjdGFudCBQYWxsIG9mIHRoZSBDcmltc29uIFdpdG5lc3M7U3RyaWZlbWF1bCBvZiBIZWxscyBBbWJhc3NhZG9yO0hlbG0gb2YgdGhlIERhcmsgTW9vbiBTdGFsa2VyO0dvbGRlbiBUd2lsaWdodCBTY2hpc207THVjZW50eXIgUHJlbTtNb3VudCBvZiB0aGUgV2luZ2VkIFNlbnRpbmVsO1dpbmdzIG9mIFVuZmV0dGVyZWQgTWFsZXZvbGVuY2U7T3JpZ2luIG9mIHRoZSBEYXJrIE9hdGggLSBXaW5ncztHb2xkZW4gU2hhcmRzIG9mIEV4aWxlIFByZW07U2hhcmRzIG9mIEV4aWxlO0FzdHJhbCBEcmlmdDtDb2RpY2lsIG9mIHRoZSBWZWlsZWQgT25lcztBdm93YW5jZSBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzO0F2b3dhbmNlIG9mIHRoZSBWZWlsZWQgT25lcztNYW5pZm9sZCBQYXJhZG94IFBBIEFyY2FuYSBTdHlsZSAzO01hbmlmb2xkIFBhcmFkb3ggUEEgQXJjYW5hIFN0eWxlIDI7TWFuaWZvbGQgUGFyYWRveCBQQSBBcmNhbmEgU3R5bGUgMTtNYW5pZm9sZCBQYXJhZG94IEhlbGxzIFVzaGVyIFN0eWxlIDE7Q29uY29yZCBSZXZlcnNpb24gVVA7TWFuZSBvZiB0aGUgU3Vud2FycmlvciBVUDtEaWZmdXNhbCBMYW5jZSBQcmVtO0NvbmNvcmQgRG9taW5pb247Um95YWwgRGVjcmVlIFdoaXAgQXR0YWNrO0VtaW5lbmNlIG9mIFJpc3R1bCBXaGlwIEF0dGFjaztDcm93biBvZiB0aGUgRW1pbmVuY2Ugb2YgUmlzdHVsO0Jsb29keSBXaGlwO0dvbGRlbiBCbG9vZGZlYXRoZXIgRmVhc3Q7R3JhY2Ugb2YgdGhlIEVtaW5lbmNlIG9mIFJpc3R1bDtDaGVzdHBsYXRlIG9mIHRoZSBHdWFyZGlhbiBDb25zdHJ1Y3QgQmVzdG93ZWQ7Q3JpbXNvbiBFZGljdCBvZiBTaGFkb3dzO0VkaWN0IG9mIFNoYWRvd3M7R29sZGVuIEVkaWN0IG9mIFNoYWRvd3M7R29sZGVuIFNoYWRvdyBNYXNxdWVyYWRlIFByZW07Q3Jlc3Qgb2YgdGhlIEx1Y2VudCBDYW5vcHk7UmVkIFNhbmRzIE1hcmF1ZGVyIC0gSGVhZDtMYXNoIG9mIHRoZSBMaXphcmQgS2luO0hhdWwgb2YgdGhlIEx1Y2VudCBDYW5vcHk7QXJtcyBvZiB0aGUgTHVjZW50IENhbm9weTtDcmltc29uIENlbnNlciBvZiBHbGlzcyBVUDtSZWQgU2FuZHMgTWFyYXVkZXIgLSBPZmZoYW5kO0NoYXJtIG9mIHRoZSBMdWNlbnQgQ2Fub3B5O0NlbnNlciBvZiBHbGlzcztEYW1hcmFrYW4gTXV6emxlIG9mIHRoZSBDcmltc29uIFdpdG5lc3M7Vm91bGdlIG9mIHRoZSBBbmRlc3RpYW4gU2VudGluZWw7Q3JpbXNvbiBGaXJzdCBvZiB0aGUgRmxvb2Q7Q3Jvd24gb2YgRWxhc215cjtEZW1vbiBGb3JtIG9mIHRoZSBGb3VsZmVsbCBDb3JydXB0b3IgVVA7Q2hhbXBpb25zIEJsdWUgQ29sb3IgZm9yIFRCO0dvbGRlbiBGbG9vZG1hc2s7QXF1ZW1lcmFsZCBCbGFkZTtBbmNpZW50IEluaGVyaXRhbmNlIC0gU2hvdWxkZXI7QW5jaWVudCBJbmhlcml0YW5jZSAtIE5lY2s7QW5jaWVudCBJbmhlcml0YW5jZSAtIEJhY2s7QW50aG96b2FuIEFzc2F1bHQgLSBIdWdlO0xhcmdlIEZyb3N0bW9vdDtTY2FybGV0IFF1YXJyeSBWIDQuMDtUaGUgSWduZWQ5519cyBTdG9uZSBWIDQuMDtNYWplc3R5IE9mIFRoZSBDb2xvc3N1cyAtIENvYmJsZTtNZWRpdW0gU2NhcmxldCBRdWFycnk7TWFqZXN0eSBPZiBUaGUgQ29sb3NzdXMgLSBNb25vbGl0aDtTd2lmdCBDbGF3IGFuZCBGZXJvY2lvdXMgSGVhcnQ7T3Zlcmdyb3duIFByZWRhdG9yIFdpbmdzO1NjYWxlcyBvZiB0aGUgTmV0aGVyZnJvc3Q7U2tpdHRlcmluZyBEZXNvbGF0aW9uIFByZW07R29sZGVuIEN5cnJpZGFlIFByZW07Q3JpbXNvbiBQaXF1ZSBQcmVtO0N1c3RvbSBCbHVlIEltbW9ydGFsIENhcGU7QXJtb3Igb2YgR3JpbSBEZXN0aW55O0JsaXN0ZXJpbmcgU2hhZGU7Q3Jvd24gb2YgdGhlIE9uZSBUcnVlIEtpbmc7Q3Jvd24gb2YgdGhlIE1hbGlnbmFudCBSdWxlO0NyaW1zb24gVW5icm9rZW4gRmVhbHR5O1N3b3JkIG9mIHRoZSBNYWxpZ25hbnQgUnVsZTtIZWxtIG9mIHRoZSBXYXJ0b3JuIEhlYXZlbnM7VGVtcGVzdCBSZXZlbGF0aW9uO0NyeW9nZW5pYyBFbWJyYWNlIFNldDtGZXJvY2lvdXMgSGVhcnQ7QXhlIGZ1bGwgSW1tb3J0YWxzIE1lZ2FwYWNrO0F4ZSBmdWxsIEltbW9ydGFscyBNZWdhcGFjayBhbHQ7QXJtb3Igb2YgdGhlIFNoYXR0ZXJlZCBWYW5ndWFyZDtMaW5lYWdlIFRoZSBSYW1zIEhlYWQgQXJtYW1lbnRzO1RoZSBSYW1zIEhlYWQgQXJtYW1lbnRzO0dpZnRzIG9mIHRoZSBGbGF5ZWQgVHdpbnMgU3R5bGUgMTtHaWZ0cyBvZiB0aGUgRmxheWVkIFR3aW5zIFN0eWxlIDI7VHJpYmFsIFRlcnJvciBWIDMuMDtXcmF0aCBvZiB0aGUgQmxvb2QgQ292ZW5hbnQgU2V0O0FudGlNYWdlIFJFRCBNZWdhUGFjaztQbGVkZ2Ugb2YgdGhlIERyYWdvbnMgRGlzY2lwbGUgYW5kIEdvbGRlbiBCYXNoZXIgQmxhZGVzIGFuZCBHb2xkZW4gT3JpZ2lucyBvZiBGYWl0aCBNZWdhUGFjaztMaW5lYWdlIEJyb2tlbiBTY2FsZTtQbGVkZ2Ugb2YgdGhlIERyYWdvbnMgRGlzY2lwbGU7R2lhbnQgSHVudGVyIFYgMi4xO0JvdW50eSBIdW50ZXIgTWFuaWFjIFNldDtIdW50ZXIgd2l0aCBObyBOYW1lIFYgMi4xO0h1bnRlcnMgR2xvcnk7T2xkIE1hbiBHb25kYXIgU2V0O0J1cm5pbmcgTmlnaHRtYXJlO0NoYXJnZSBvZiB0aGUgQmFsZWZ1bCBSZWlnbiBWIDMuMTtPbmkgS25pZ2h0IHRoZSBEYXJrIENvbnF1ZXJvciBWIDMuMTtSaXNpbmcgQ2hhb3MgViAzLjE7QnJpc3RsZWJhY2sgTWVnYVBhY2s7RGVidHMgb2YgdGhlIE5pZ2h0d2F0Y2htYW47TG9zdCBSYW5nZXI7Q2xpbmt6IE1lZ2FQYWNrO0RlbW9uaWMgSGllcm9waGFudDtNYXJheGlmb3JtcyBGYXRlIEJ1bmRsZTtMaW5lYWdlIFByb3ZpbmNlIG9mIHRoZSBIdW50IEV0ZXJuYWw7VXJ1c2hpbiBIdW50c21hbiBTdHlsZSAxO0RlbGlnaHRzIG9mIFBldGFsdW5hO0xpbmVhZ2UgRGVsaWdodHMgb2YgUGV0YWx1bmE7U2hhZG93IEZsYW1lIFYgMy4wO1RyYXBwaW5nIG9mIHRoZSBTZWNyZXQgTWVkaWNpbmU7RHJvdyBSYW5nZXIgTWVnYVBhY2s7QXJjYW5lIERyb3cgUmFuZ2VyIE1vZDtMYWR5IFN5bHZhbmFzIGZvciBEcm93IC0gTWFuaWEgTWFzayB3aXRoIGVmZmVjdDtTY29yY2hpbmcgQW1iZXIgRHJhZ29vbjtEcmFnb24gR3VhcmRpYW47RnJvemVuIFZvaWQ7UHJpbW9yZGlhbCBDb25zZXJ2YXRvcjtBcm1vciBvZiB0aGUgVW55aWVsZGluZyBNYXNrO0JhbGFuY2Ugb2YgdGhlIEJsYWRla2VlcGVyO0hvcnJvciBPZiBUaGUgRmFjZSBDb2xsZWN0b3I7RGFzaGluZyBTd29yZHNtYW47TGVnaW9uIENvbW1hbmRlciBNb2RNYWtlciBNZWdhUGFjaztMaW5lYWdlIERlc29sYXRlIENvbnF1ZXN0O1JhZGlhbnQgQ29ucXVlcm9yO0Jsb29keSBCYXR0bGUgQW5nZWw7VGhlIEdyeXBob253aW5nIEtuaWdodDtHb2xkZW4gRGFyayBNYXcgSW5oaWJpdG8gYW5kIEdvbGRlbiBQcm9mYW5lIFVuaW9uIGFuZCBHb2xkZW4gRHJlYWQgUmVxdWlzaXRpb24gTGlmZXN0ZWFsZXIgSW1tb3J0YWxzIE1lZ2FwYWNrO0xpZmVzdGVhbGVyIE1lZ2FQYWNrO0RlYWQgR29kIEhlaXIgU2V0O0dydWVzb21lIEVtYnJhY2U7Q3Vyc2Ugb2YgdGhlIE1hbGlnbmFudCBDb3JydXB0aW9uIFNldDtUb29scyBvZiB0aGUgRGVtb24gV2l0Y2ggU2V0O0Vzc2VuY2UgT2YgVGhlIERhcmsgTW9vbjtMaW5lYWdlIFJlZGVtcHRpb24gb2YgdGhlIFJhaWRmb3JnZWQgUmlkZXI7RmxpZ2h0IG9mIHRoZSBDcmVzY2VudCBNb29uO0RlYXRoIE5lY3JvbGlnaHQgUHJlbWl1bSBTdHlsZSAxO0RlYXRoIE5lY3JvbGlnaHQgUHJlbWl1bSBTdHlsZSAyO0Zvd2wgUGxhZ3VlIFNldDtUaGUgQnJpbmdlciBvZiBQbGFndWVzO05pZ2h0IFN0YWxrZXIgSW1tb3J0YWwgYW5kIFJlYXBlciBLaXNpbGV2IE1vZE1ha2VyIE1lZ2FQYWNrO05pZ2h0IFN0YWxrZXIgTWVnYVBhY2s7TmlnaHRzdGFsa2VyIE1lZ2FQYWNrIHNldDtPdXR3b3JsZCBEZXZvdXZlciBNZWdhUGFjaztEZXZpbCBTZXQ7TWFuaWZvbGQgUGFyYWRveCBCbG9vZHJvb3QgR3VhcmQ7RHJhZ29udGVycm9yO01hbmlmb2xkIFBhcmFkb3ggR290aGljIEh1bnRlcjtRdWVlbiBvZiBQYWluIEFyY2FuYSBNZWdhUGFjaztTaWx2ZXIgUmV2ZW5hbnQ7Q3J1ZWwgQXNzZW1ibGFnZTtTdG9ybXkgUmlraSBWIDIuMDtTbGFyayBNZWdhUGFjayBOZXc7QWJ5c3NhbCBBcm1zO0FuY2llbnQgR3VhcmRpYW4gb2YgdGhlIEp1bmdsZSBSdWxlO0NyaW1zb24gU2hhZG93O1NpbGVuY2VyIE1lZ2FQYWNrO1NpbGVuY2VyIFRJMTAgQ29sbGVjdG9ycyBDYWNoZSBNZWdhUGFjaztTbGFyZGFyIE1lZ2FQYWNrIHNldDtEcmFnb24gR2F0ZSBTZXQ7QmxhY2sgU2FpbHMgQ29ubm9uZWVyO09jY3VsdGlzdHMgUHVyc3VpdDtUcmVhc3VyZSBIdW50ZXI7S2VlbiBNYWNoaW5lO1NlYXNvbmVkIEV4cGVkaXRpb25hcnk7U3ZlbiBJbW1vcnRhbHMgTWVnYVBhY2s7U3ZlbiBJbW1vcnRhbHMgTWVnYVBhY2sgVVA7U3ZlbiBNZWdhUGFjaztIYWxsb3dlZCBGbGFtZTtTdGVhbSBLbmlnaHQgU2V0O1RpZGVodW50ZXIgTWVnYVBhY2s7VGlkZWh1bnRlciBLaWxsZXI7VGlueSBNaXggViA0LjA7UG9sYXIgVXJzYTtUaGUgSXJvbiBCZWFycyBTZXQ7Um9zaGFuIEh1bnRlcnMgU2V0O1NjYWxlIG9mIHRoZSBSYXpvcnd5cm0gQ2hhb3M7VXJzYSBJbW1vcnRhbHMgTWVnYVBhY2s7S2luIG9mIHRoZSBTYW5nc3RyYXRoIEZvbGQ7S2luIG9mIHRoZSBTYW5nc3RyYXRoIEZvbGQgUGF0aGZpbmRlcjtUaGUgQWxwaW5lIFN0YWxrZXJzIFNldDtWaXBlciBNZWdhUGFjaztEZXZpbCBSaXBwZXI7UGl4ZWwgV2luZHJ1bm5lcjtXaW5kcmFuZ2VyIEFyY2FuYSBzdHlsZSAxIChCbHVlIEJpcmQpICsgRnVsbCBXUiBpbW1vcnRhbDtXaW5kcmFuZ2VyIEFyY2FuYSBzdHlsZSAyICsgV1IgaW1tb3J0YWw7V2luZHJhbmdlciBBcmNhbmEgc3R5bGUgMiAoT3JhbmdlIEJpcmQpIGFuZCBGdWxsIFdSIGltbW9ydGFsO1dpbmRyYW5nZXIgQXJjYW5hIHN0eWxlIDEgKyBXUiBpbW1vcnRhbDtGbG93ZXJzb25nIFRlbXBlc3Q7V2l0Y2ggRG9jdG9yIE1lZ2FQYWNrO1Nwb2lscyBvZiB0aGUgVm9kb3UgUm92ZXI7Rm9yZXRlbGxlcnMgT2F0aDtXcmFpdGggS2luZyBBcmNhbmEgTWVnYVBhY2s7UmVnYWxpYSBvZiB0aGUgV3JhaXRoIExvcmQgU2V0O0FyYyBvZiB0aGUgU292ZXJlaWduO1JpZ2h0ZWQ5519cyBUaHVuZGVyYm9sdCBhbmQgQXJjYW5hIE1lZ2FQYWNrO0JlYXJpbmcgb2YgdGhlIEtpbmcgUmVzdG9yZWQgRGlzdGluZ3Vpc2hlZDtCZWFyaW5nIG9mIHRoZSBLaW5nIFJlc3RvcmVkO1RodW5kZXIgSGF3azsgMTIzfHx8