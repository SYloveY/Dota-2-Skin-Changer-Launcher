bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogQkE4QTA3QjgtOEFFNi03ODE2LUE4MkEtMDBEODYxRDUyMTcyIDExMXx8fCAyMjI6OiAkMnkkMTAkTlRRM05tUXdaall3TlRKak16ZzRNdVRHN293NW9TcUNMN0ppVERzb0lKQnBYcFhoSnRHNDYgMjIyfHx8IDEyMzo6IEhvb2Qgb2YgdGhlIEV2ZXJibGFjaztFbmRsZXNzIE5pZ2h0IFNob3VsZGVyO0FybW9yIG9mIHRoZSBCb2lsZXJwbGF0ZSBCcnVpc2VyO0FybXMgb2YgdGhlIEJvaWxlcnBsYXRlIEJydWlzZXI7RXRlcm5hbCBSYWRpYW5jZSBCbGFkZXMgUHJlbTtXb3JkcyBvZiB0aGUgQXdha2VuZWQ7VHJpYmFsIFN0b25lIFZhbWJyYWNlO1JlZCBUYWxvbiBCZWx0O0VkZ2Ugb2YgRXh0aW5jdGlvbiBIZWxtO1RhaWwgb2YgQ29udGVzdGVkIEZhdGU7TWFyYXhpZm9ybXMgRmFsbGVuO0dhdW50bGV0cyBvZiB0aGUgQ3J5cHQgR3VhcmRpYW47TWFzayBvZiB0aGUgSHVudCBFdGVybmFsO0tpdCBvZiB0aGUgSHVudCBFdGVybmFsO1JveWFsIFdpbnRlcmJsb29tIEFybXM7R2xhY2lhbCBHYXJkZW5zIEhlYWQ7WXVsc2FyaWFzIE1hbnRsZSBQcmVtO0Fxd2FuZGVyZXIgQm9vdHM7SG9vZCBvZiB0aGUgVml6aWVyIEV4aWxlO0RhcmtjbGF3IEVtaXNzYXJ5IERyZXNzO0dvbGRlbiBOb3RobGljIEJ1cmRlbiBQcmVtO0dsb3ZlcyBvZiB0aGUgTWFzdGVyIFRoaWVmO01hbmlhcyBNYXNrIFByZW07Qm9vdHMgb2YgWmVidWxvbjtBcm1vciBvZiB0aGUgS2hhLVJlbiBGYWl0aGZ1bDtBcm1zICBvZiB0aGUgU2hhdHRlcmVkIFRhcmdlO0hvb2Qgb2YgdGhlIFNoYXR0ZXJlZCBUYXJnZTtGb3JtIG9mIHRoZSBNb251bWVudCBvZiBSdWluO0Z1cnkgb2YgdGhlIERhbW5lZCBBcm1vcjtGdXJ5IG9mIHRoZSBEYW1uZWQgQmVsdDtGdXJ5IG9mIHRoZSBEYW1uZWQgTWFzaztLaWRzIE9yYjtWYWxlbnRpbmUgV2FyZDtHaWZ0cyBvZiB0aGUgVmFuaXNoZWQgSXNsZSBBcm1zO1dpbmRzIG9mIENvbnF1ZXN0IEJyYWNlcnM7UHJpZGUgb2YgdGhlIENyZXc7QXJtbGV0IG9mIHRoZSBEcmFnb24gR3VhcmQ7SXJlIG9mIHRoZSBIaW50ZXJsYW5kcyBCYWNrO0lyZSBvZiB0aGUgSGludGVybGFuZHMgQ3Jvd247SXJlIG9mIHRoZSBIaW50ZXJsYW5kcyBUYWlsO011bGN0YW50IFBhbGw7VGhlIEZhbWlseSBWYWx1ZXMgQXJtcztTa3VsbCBvZiB0aGUgQm9uZSBSdWlucztTcGlyaXQgb2YgdGhlIFNhY3JlZCBHcm92ZSAtIEFybXM7Q3Jlc2NlbnQgQm93IEFycm93IG9ubHk7RHJlYW1zIG9mIE1pZHN1bW1lciBRdWl2ZXI7RHJlYW1zIG9mIE1pZHN1bW1lciBTaG91bGRlcjtEZXNlcnQgQmxvb20gLSBBcm1zO0JlYXJkIG9mIHRoZSBUcnVlYmFyayBBZGhlcmVudDtTaWxlbmNlIG9mIHRoZSBTdGFyd2VhdmVyIC0gQXJtb3I7RXllIG9mIHRoZSBGYXRld2VhdmVyIEhvb2Q7QWxsdXZpb24gUHJvcGhlY3kgViAyLjA7U2lsZW5jZSBvZiB0aGUgU3RhcndlYXZlciAtIEJhY2s7Q29hdCBvZiB0aGUgV2luZHdhcmQgUm9ndWU7UmFwaWVyIG9mIHRoZSBXaW5kd2FyZCBSb2d1ZTtBcm1sZXRzIG9mIFRlYXJkcm9wIEljZTtCZWx0IG9mIFRlYXJkcm9wIEljZTtLaXRlc3RhciBTcGxlbmRvciBCZWFrO0RyYWdvbmNsYXcgSG9vaztEYXBwZXIgRGlzZ3Vpc2UgSmFja2V0O0Jsb29kZmVhdGhlciBXaW5ncyBQcmVtO0h1bmdlciBvZiB0aGUgSG93bGluZyBXaWxkcyBBcm1zO0h1bmdlciBvZiB0aGUgSG93bGluZyBXaWxkcyBPZmYtSGFuZCBXZWFwb247V2hpc2sgb2YgdGhlIEhpZ2hib3JuO0NlcmVtb25pYWwgQ2xhd3Mgb2YgUWFsZGluO1RhaWwgb2YgdGhlIEtyYXkgTGVnaW9ucztDZXJlbW9uaWFsIFN0aW5nZXIgb2YgUWFsZGluO0xlZ3Mgb2YgdGhlIEVsdXNpdmUgRGVzdHJveWVyO0NoaXRpbiBvZiB0aGUgS3JheSBMZWdpb25zO0dlbnVpbmUgRGVmaWxlZCBTdGluZ2VyO0JyYWNlcnMgb2YgdGhlIEFyZGFsYW4gSW50ZXJkaWN0b3I7Q29sYXIgb2YgdGhlIEFyZGFsYW4gSW50ZXJkaWN0b3I7UGhhbnRvbSBBZHZlbnQgQmVsdCBVUDtUaGUgSWduZWQ5519cyBTdG9uZSBWIDQuMDtDbHViIG9mIHRoZSBJZ25lb3VzIFN0b25lO0FybXMgb2YgdGhlIFNwbGludGVyaW5nIEF3ZTtTdHJpZGUgb2YgdGhlIEFnYXJpYyBGbG91cmlzaDtIZWFkIG9mIHRoZSBJY2V3cmFjayBNYXJhdWRlcjtDb25zcGljdWQ5519cyBDdWxwcml0IEFybW9yO1NwaXR0ZXJzIG9mIHRoZSBWaXJ1bGVudCBLcmFpdDtOYWNyZWQ5519cyBTdGFnIEhlYWQ7U3BpbmVzIG9mIHRoZSBWaXJ1bGVudCBLcmFpdDtNYWxlZmljIERyYWtlcyBTdHJpa2Ugb25seSBFZmZlY3Q7TWFsZWZpYyBEcmFrZXMgSG9vZCBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzO01hc2sgb2YgVW5ibGlua2luZyBFdGVybml0eTtBcm1vciBvZiBVbmJsaW5raW5nIEV0ZXJuaXR5O0JyYWNlcnMgb2YgdGhlIFNwaXRlZnVsIERqaW5uO1JvYmVzIG9mIHRoZSBEcmVhZCBDb21wYWN0O0JlbHQgb2YgdGhlIFNwaXRlZnVsIERqaW5uO0Nvd2wgb2YgdGhlIERyZWFkIENvbXBhY3Q7V3JldGNoZWQgR3VhcmRpYW47RGltZW5zaW9uIFJpcHBlciBCYWNrO0RpbWVuc2lvbiBSaXBwZXIgQXJtcztEaW1lbnNpb24gUmlwcGVyIEhlYWQ7RGltZW5zaW9uIFJpcHBlciBMZWdzO092ZXJncm93biBFbWJsZW0gQWdoYW5pbSBFZmZlY3Q7UXVlc3Rpb24gbWFyayBEZW55O1dpbmRydW5uZXIgQW5pbWUgVm9pY2U7VHJhaW5lciBEcmFnb247RGl2aW5lIEFuY2hvciBTdHlsZSAxO0FsbHVyZSBvZiB0aGUgRGVlcDtSaWdodGVvdXMgVGh1bmRlcmJvbHQgYW5kIEFyY2FuYSBNZWdhUGFjazsgMTIzfHx8