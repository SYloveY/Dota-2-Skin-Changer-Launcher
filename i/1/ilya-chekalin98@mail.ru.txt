bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogRDM5RDBDRTAtODQ0QS0xMUVBLTgwREMtMDAyQjY3MzVDOTJCIDExMXx8fCAyMjI6OiAkMnkkMTAkTkdJNU1qazFaRFV3WlRrNU5XVm1PT3Z4Z0lLMUpMeTBYemVyZDFRVVJ6WFJncHhBbVVOci4gMjIyfHx8IDEyMzo6IE1hY2Ugb2YgVmluY2VyZSBBdGFjayBFZmZlY3Q7RG90YUNpbmVtYSAtIFF1ZWVuIG9mIFBhaW4gU3BlbGxzO0hhemhhZGFsIE1hZ2VicmVha2VyO0F2YWRhIEtlZGF2cmE7UGhhbnRvbSBBZHZlbnQgQmVsdCBVUDtQaGFudG9tIEFkdmVudCBVUDtQaGFudG9tIEFkdmVudCBTaG91bGRlcnMgVVA7UGhhbnRvbSBBZHZlbnQgV2VhcG9uIFVQO0F1c3BpY2Ugb2YgdGhlIFdoeXJsZWd5Z2UgUHJlbTtTYXZhZ2UgTWV0dGxlO092ZXJncm93biBFbWJsZW0gQWdoYW5pbSBFZmZlY3Q7QmF0dGxlIFBhc3MgRWZmZWN0IEJsaW5rIERhZ2dlcjtUSS05IEJsaW5rIGx2bCAyIEVmZmVjdDtUSS04IEJvdHRsZSBFZmZlY3Q7VEktOSBTZWFzb25hbCBDcmVlcCBEZW55IEVmZmVjdDtGYWxsIEJhdHRsZSBQYXNzIDIwMTYgRWZmZWN0IFRlbGVwb3J0O1JhZGlhbmNlIFRJLTYgRWZmZWN0O1BoYXNlIEJvb3RzIFRJLTYgRWZmZWN0O01qb2xsbmlyIFRJLTYgRWZmZWN0O0JhdHRsZSBQYXNzIEVmZmVjdCBGb3VudGFpbiBSZWdlbjtCcmlnaHRza3llIFJlZnJlc2hlciBPcmI7REFDIDIwMTUgQ2hhb3MgS25pZ2h0IEN1cnNvciBQYWNrO0Nocm9teSB0aGUgQ2VudGlwZWRlIFdhcmQ7Q2F2ZXJuaXRlIERpcmUgQ3JlZXBzO0VtZXJhbGQgUm9zaGFuO1RlcnJhaW4gLSBUaGUgS2luZ3MgTmV3IEpvdXJuZXk7Uml2ZXIgVmlhbCBCbHVlO1RoZSBJbnRlcm5hdGlvbmFsIDIwMTkgTXVzaWMgUGFjaztXZWF0aGVyIFNpcm9jY287QXp1cmUgQ29uc3RlbGxhdGlvbiBIVUQ7Q3VzdG9tIERhc2hib2FyZCAxMjY7TGluYSBBbm5vdW5jZXI7TGluYSBNZWdhLUtpbGxzO0RhdGFzdGFyIFByb2dlbml0b3IgKEFsdGVyIEFyY2FuYSk7Q3J1Y2libGUgb2YgUmlsZTtCbGFkZSBvZiBUZWFycyBhbmQgQ3Jvd24gb2YgVGVhcnM7Q29hdCBvZiB0aGUgV2luZHdhcmQgUm9ndWU7TWFzayBvZiB0aGUgQ29uZmlkYW50O1JhcGllciBvZiB0aGUgV2luZHdhcmQgUm9ndWU7Tm92YSBvZiBHb2xkZW4gTmlydmFuYTtSdWJpY2sgQ3Vyc2UgLSBEZWF0aCBXYXJkO1J1YmljayBDdXJzZSAtIERlbW9uaWMgUHVyZ2U7UnViaWNrIEN1cnNlIC0gRXhvY2lyc207UnViaWNrIEN1cnNlIC0gRmFtaWxpYXI7UnViaWNrIEN1cnNlIC0gRmxlc2ggR29sZW07UnViaWNrIEN1cnNlIC0gSmV4O1J1YmljayBDdXJzZSAtIE1hZ25ldGl6ZTtSdWJpY2sgQ3Vyc2UgLSBNYXNzIFNlcnBlbnQgV2FyZDtSdWJpY2sgQ3Vyc2UgLSBQb3dlciBDb2c7UnViaWNrIEN1cnNlIC0gUmVtb3RlIE1pbmU7UnViaWNrIEN1cnNlIC0gU2hhcGVzaGlmdDtSdWJpY2sgQ3Vyc2UgLSBTcGlyaXQgQmVhcjtGb2xpYWdlIG9mIEVsZHJpdGNoIEduYXJsO0N1cnNlIG9mIHRoZSBOZXcgU2Vhc29uIFYgMi4xO0Jsb29kZmVhdGhlciBXaW5ncyBQcmVtO0RyYWdvbiBMb3JlIEFXUDtNYWxlZmljIERyYWtlcyBIb29kIG9mIHRoZSBDcmltc29uIFdpdG5lc3M7UGxhdGluZyBvZiB0aGUgTmV0aGVyc3dhcm0gVmFuZ3VhcmQ7TWFsZWZpYyBEcmFrZXMgU3RyaWtlIG9ubHkgRWZmZWN0O0FyY3RpYyBDbGlua3ogViAzLjA7Q3JpbXNvbiBDeXJyaWRhZTtCbG9vZGZlYXRoZXIgRmVhc3Q7R3VhcmRpYW5zIG9mIHRoZSBMb3N0IFBhdGggRGlyZSBUb3dlcnM7R3VhcmRpYW5zIG9mIHRoZSBMb3N0IFBhdGggUmFkaWFudCBUb3dlcnM7VEktMTAgTGV2ZWwgVXAgRWZmZWN0O1JpcHBlcnMgUmVlbDtJbmZlcm5hbCBXaW5ncztNdWxjdGFudCBQYWxsO0Fjb2x5dGUgb2YgVmVuZ2VhbmNlIFYgMi4wO0xvc3QgUmFuZ2VyO1NoZXJtYW4gTWFpZGVuIFYgNC4xO0JpdHRlcndpbmcgTGVnYWN5O0FsZ2lkIEZhbGNvbiBWIDMuMTtDaGxvZSB2b24gRWluemJlcm4gZm9yIEVhcnRoIFNwaXJpdCBieSBQYXRjaG91bGkgS25vd2xlZGdlO1RoZSBTaGVlcCBTZXQ7QXp1cmUgQ29uc3RlbGxhdGlvbiBWIDIuMTtXcmF0aCBvZiBLYSBWIDIuMTtUb2xsIG9mIHRoZSBGZWFyZnVsIEFyaWE7Sm9sbHkgUmVhdmVyO0FycmF5IG9mIFRyYW5xdWlsaXR5O01pc2dpdmluZ3Mgb2YgdGhlIEVtZXJhbGQgQWdlO1RhbGVzIG9mIHRoZSBHcmV5IFdhc3RlcztWZW5nZWFuY2Ugb2YgdGhlIFN1bndhcnJpb3I7U3RlZWwgS2luZztMaWdodGJyaW5nZXIgU0Y7Qmxvc3NvbWluZyBIYXJtb255IFYgMi4wO1RpbnkgTWl4IFYgNC4wO0NvbmNlYWxlZCBSYXZlbjtEYXJrIFJlZWYgRXNjYXBlIFYgMi4xO01vcmJpZmljIFByb3Zpc2lvbjtNb25zdHJvdXMgUmVwcmlzYWw7QXVzcGljaWQ5519cyBTZWFkd2VsbGVyO0FsbGZhdGhlciBvZiBOYXR1cmUgU2V0O0hhdm9jIG9mIERyYWdvbiBQYWxhY2UgViAyLjA7U3VzYW5vIE9zIERlc2NlbmRhbnQ7RGFlbW9uZmVsbCBGbGFtZTtUZW5ndSBHdWFyZGlhbiBTZXQ7SGVhdmVubHkgU3dvcmQgRG9vbSBWIDMuMDtCb3VudHkgSHVudGVyIE1hbmlhYyBTZXQ7R3J5cGhvbiBSaWRlciBTZXQ7RGVsaWdodHMgb2YgUGV0YWx1bmEgUGF0aGZpbmRlcjtBbmNpZW50IE1lY2hhbmlzbTtNYXJrIG9mIHRoZSBNaXN0cmFsIEZpZW5kIFYgMi4xO0JpZyBVbiBWIDMuMDtPdmVyZ3Jvd247U3RyeWd3eXIgQmxvb2RzZWVrZXI7UGF0dGVybiBvZiB0aGUgU2lsa2VuIFF1ZWVuO0ljZXBsYWluIFJhdmFnZXI7U2FjY2hhcmluZSBTYWJvdGV1cjtGYXRhbCBCbG9zc29tIFYgMy4wO0xpZ2h0bmluZyBIYXJiaW5nZXI7RmlyZXMgb2YgdGhlIFZvbGNhbmljIEd1YXJkO0RpdmluZSBBbmNob3IgU3R5bGUgMTtCZXN0b3dtZW50cyBvZiB0aGUgRGl2aW5lIEFuY2hvciBlZmZlY3RzO0FzY2VuZGFuY2Ugb2YgdGhlIFJpbWUgTG9yZCAxc3QgU3R5bGU7RXllIG9mIHRoZSBCZWhvbGRlcjtEYXJrZmFsbCBXYXJkZW47Vm9vZG9vIE1lZXBvO0Z1cnkgb2YgV2FyIEdvZDtQcmlzbWF0aWMgR3JhY2U7UmVtaWxpYSBTY2FybGV0IGZvciBOUyBieSBQYXRjaG91bGkgS25vd2xlZGdlO0lyZSBvZiBNb2x0ZW4gUmViaXJ0aDtBbmNpZW50IE1hZ3VzIFN0eWxlIDI7Rm91bGZlbGwgQ29ycnVwdG9yO1N1Ym1lcmdlZCBIYXphcmQ7QnJhd2xlciBvZiB0aGUgR2xhY2llciBTZWEgViAzLjA7V2luZ3Mgb2YgQ29sb3JmdWwgSWNlY3J5c3RhbHM7RHJlYWQgQ29tcGFjdCBTdHlsZSAyO0NoaWxsIG9mIHRoZSBLZWVwZXJzIEdhemU7RmVyb2Npb3VzIFRveGljYW50O1Jvc2hhbiBIdW50ZXJzIFNldDtBYnlzc2FsIEN1aXJhc3M7VHJlayBvZiB0aGUgVHJhaWxibGF6ZXI7TWFnaXN0ZXIgb2YgdGhlIE5hcnJvdyBGYXRlcztEZW1vbmljIFB1Z25hIFYgMy4wO1JlbWluaXNjZW5jZSBvZiBEcmVhbXM7QXJtb3Igb2YgdGhlIFN0YWx3YXJ0IFNvdWw7Q3Vyc2VkIFplYWxvdDtBcm1vciBvZiB0aGUgU2FuZ3VpbmUgTW9vbiBTZXQ7V2FyLUJ1cnJvdyBSYXZhZ2VyO0xvcmQgb2YgQ2hyb25vcHRpYyBTeW50aGVzaXM7Qmxvb2R5IFJpcHBlcjtFeHBsb3NpdmUgTWFuaWFjO0FsbGllZCBDb21tYW5kZXIgU2V0O0hhcm5lc3Mgb2YgdGhlIEZpc3N1cmVkIFNvdWw7U2FuZ3VpbmUgUm95YWx0eTtCaW5kaW5ncyBvZiBEZWVwIE1hZ21hO1ZhbnRhZ2Ugb2YgdGhlIEJyZWFjaCBXYXJkZW47Qmxlc3Npbmcgb2YgdGhlIENyZXN0ZWQgVW1icmE7S2VlbiBNYWNoaW5lO1BsdW5kZXIgb2YgdGhlIFNhdmFnZSBNb25nZXI7VGhlIER1c2sgQ3Jhd2xlciBTZXQ7UmVsaWNzIG9mIHRoZSBMb3N0IFZpZ2lsIFBhdGhmaW5kZXI7RW1wZXJvciBPZiBUaGUgQ2xlcmd5O1RoZSBCcmFzcyBGbHllcjtTZWlzbWljIEJlcnNlcmtlcjtGb3Jnb3R0ZW4gVGFjdGljaWFuO0Zsb3dlciBGbGFtZSBMaW5hIFYgMy4wO0Jld2l0Y2hpbmcgRmxhcmUgViAyLjA7R3JpbSBEZXN0aW55OyAxMjN8fHw=