bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogRDM5RDBDRTAtODQ0QS0xMUVBLTgwREMtMDAyQjY3MzVDOTJCIDExMXx8fCAyMjI6OiAkMnkkMTAkTkdJNU1qazFaRFV3WlRrNU5XVm1PT3Z4Z0lLMUpMeTBYemVyZDFRVVJ6WFJncHhBbVVOci4gMjIyfHx8IDEyMzo6IGRyaXZlX2Rpcjo6SWNlIExpbmEgMm5kIFN0eWxlO2RyaXZlX2Rpcjo6QWNvbHl0ZSBvZiBWZW5nZWFuY2UgViAyLjA7ZHJpdmVfZGlyOjpMb3N0IFJhbmdlcjtkcml2ZV9kaXI6OlNoZXJtYW4gTWFpZGVuIFYgNC4xO2RyaXZlX2Rpcjo6Qml0dGVyd2luZyBMZWdhY3k7ZHJpdmVfZGlyOjpBbGdpZCBGYWxjb24gViAzLjE7ZHJpdmVfZGlyOjpDaGxvZSB2b24gRWluemJlcm4gZm9yIEVhcnRoIFNwaXJpdCBieSBQYXRjaG91bGkgS25vd2xlZGdlO2RyaXZlX2Rpcjo6VGhlIFNoZWVwIFNldDtkcml2ZV9kaXI6OkF6dXJlIENvbnN0ZWxsYXRpb24gViAyLjE7ZHJpdmVfZGlyOjpXcmF0aCBvZiBLYSBWIDIuMTtkcml2ZV9kaXI6OlRvbGwgb2YgdGhlIEZlYXJmdWwgQXJpYTtkcml2ZV9kaXI6OkpvbGx5IFJlYXZlcjtkcml2ZV9kaXI6Ok1hY2Ugb2YgVmluY2VyZSBBdGFjayBFZmZlY3Q7ZHJpdmVfZGlyOjpEb3RhQ2luZW1hIC0gUXVlZW4gb2YgUGFpbiBTcGVsbHM7ZHJpdmVfZGlyOjpIYXpoYWRhbCBNYWdlYnJlYWtlcjtkcml2ZV9kaXI6Okl0c3VrYSBLb3RvcmkgZm9yIFdLIGJ5IFBhdGNob3VsaSBLbm93bGVkZ2U7ZHJpdmVfZGlyOjpSaWdodGVvdXMgVGh1bmRlcmJvbHQgYW5kIEFyY2FuYSBNZWdhUGFjaztkcml2ZV9kaXI6OkF2YWRhIEtlZGF2cmE7ZHJpdmVfZGlyOjpOeWFydWtvIGZvciBMaW9uIGJ5IFBhdGNob3VsaSBLbm93bGVkZ2U7ZHJpdmVfZGlyOjpQaGFudG9tIEFkdmVudCBCZWx0IFVQO2RyaXZlX2Rpcjo6UGhhbnRvbSBBZHZlbnQgVVA7ZHJpdmVfZGlyOjpQaGFudG9tIEFkdmVudCBTaG91bGRlcnMgVVA7ZHJpdmVfZGlyOjpQaGFudG9tIEFkdmVudCBXZWFwb24gVVA7ZHJpdmVfZGlyOjpBcnJheSBvZiBUcmFucXVpbGl0eTtkcml2ZV9kaXI6OlRlbXBlc3QgSGVsbSBvZiB0aGUgVGh1bmRlcmdvZCBQcmVtO2RyaXZlX2Rpcjo6QXJtYXR1cmUgb2YgdGhlIEJlbGxpZ2VyZW50IFJhbSBSZWQ7ZHJpdmVfZGlyOjpNaXNnaXZpbmdzIG9mIHRoZSBFbWVyYWxkIEFnZTtkcml2ZV9kaXI6OlRhbGVzIG9mIHRoZSBHcmV5IFdhc3Rlcztkcml2ZV9kaXI6OkF1c3BpY2Ugb2YgdGhlIFdoeXJsZWd5Z2UgUHJlbTtkcml2ZV9kaXI6OlZlbmdlYW5jZSBvZiB0aGUgU3Vud2Fycmlvcjtkcml2ZV9kaXI6OlN0ZWVsIEtpbmc7ZHJpdmVfZGlyOjpMaWdodGJyaW5nZXIgU0Y7ZHJpdmVfZGlyOjpCbG9zc29taW5nIEhhcm1vbnkgViAyLjA7ZHJpdmVfZGlyOjpUaW55IE1peCBWIDQuMDtkcml2ZV9kaXI6OkNvbmNlYWxlZCBSYXZlbjtkcml2ZV9kaXI6OkRhcmsgUmVlZiBFc2NhcGUgViAyLjE7ZHJpdmVfZGlyOjpTYXZhZ2UgTWV0dGxlO2RyaXZlX2Rpcjo6TW9yYmlmaWMgUHJvdmlzaW9uO2RyaXZlX2Rpcjo6TW9uc3Ryb3VzIFJlcHJpc2FsO2RyaXZlX2Rpcjo6QXVzcGljaWQ5519cyBTZWFkd2VsbGVyO2RyaXZlX2Rpcjo6QWxsZmF0aGVyIG9mIE5hdHVyZSBTZXQ7ZHJpdmVfZGlyOjpIYXZvYyBvZiBEcmFnb24gUGFsYWNlIFYgMi4wO2RyaXZlX2Rpcjo6T3Zlcmdyb3duIEVtYmxlbSBBZ2hhbmltIEVmZmVjdDtkcml2ZV9kaXI6OkJhdHRsZSBQYXNzIEVmZmVjdCBCbGluayBEYWdnZXI7ZHJpdmVfZGlyOjpUSS05IEJsaW5rIGx2bCAyIEVmZmVjdDtkcml2ZV9kaXI6OlRJLTggQm90dGxlIEVmZmVjdDtkcml2ZV9kaXI6OlRJLTkgU2Vhc29uYWwgQ3JlZXAgRGVueSBFZmZlY3Q7ZHJpdmVfZGlyOjpHdWFyZGlhbnMgb2YgdGhlIExvc3QgUGF0aCBSYWRpYW50IFRvd2Vycztkcml2ZV9kaXI6OkZhbGwgQmF0dGxlIFBhc3MgMjAxNiBFZmZlY3QgVGVsZXBvcnQ7ZHJpdmVfZGlyOjpSYWRpYW5jZSBUSS02IEVmZmVjdDtkcml2ZV9kaXI6OlBoYXNlIEJvb3RzIFRJLTYgRWZmZWN0O2RyaXZlX2Rpcjo6TWpvbGxuaXIgVEktNiBFZmZlY3Q7ZHJpdmVfZGlyOjpCYXR0bGUgUGFzcyBFZmZlY3QgRm91bnRhaW4gUmVnZW47ZHJpdmVfZGlyOjpCcmlnaHRza3llIFJlZnJlc2hlciBPcmI7ZHJpdmVfZGlyOjpEQUMgMjAxNSBDaGFvcyBLbmlnaHQgQ3Vyc29yIFBhY2s7ZHJpdmVfZGlyOjpDaHJvbXkgdGhlIENlbnRpcGVkZSBXYXJkO2RyaXZlX2Rpcjo6Q2F2ZXJuaXRlIERpcmUgQ3JlZXBzO2RyaXZlX2Rpcjo6RW1lcmFsZCBSb3NoYW47ZHJpdmVfZGlyOjpUZXJyYWluIC0gVGhlIEtpbmdzIE5ldyBKb3VybmV5O2RyaXZlX2Rpcjo6Uml2ZXIgVmlhbCBCbHVlO2RyaXZlX2Rpcjo6VGhlIEludGVybmF0aW9uYWwgMjAxOSBNdXNpYyBQYWNrO2RyaXZlX2Rpcjo6V2VhdGhlciBTaXJvY2NvO2RyaXZlX2Rpcjo6QXp1cmUgQ29uc3RlbGxhdGlvbiBIVUQ7ZHJpdmVfZGlyOjpDdXN0b20gRGFzaGJvYXJkIDEyNjtkcml2ZV9kaXI6OlN1c2FubyBPcyBEZXNjZW5kYW50O2RyaXZlX2Rpcjo6TGluYSBBbm5vdW5jZXI7ZHJpdmVfZGlyOjpMaW5hIE1lZ2EtS2lsbHM7ZHJpdmVfZGlyOjpEYXRhc3RhciBQcm9nZW5pdG9yIChBbHRlciBBcmNhbmEpO2RyaXZlX2Rpcjo6RGFlbW9uZmVsbCBGbGFtZTtkcml2ZV9kaXI6OkZhdGUgTWVyaWRpYW47ZHJpdmVfZGlyOjpUZW5ndSBHdWFyZGlhbiBTZXQ7ZHJpdmVfZGlyOjpIZWF2ZW5seSBTd29yZCBEb29tIFYgMy4wO2RyaXZlX2Rpcjo6Qm91bnR5IEh1bnRlciBNYW5pYWMgU2V0O2RyaXZlX2Rpcjo6R3J5cGhvbiBSaWRlciBTZXQ7ZHJpdmVfZGlyOjpEZWxpZ2h0cyBvZiBQZXRhbHVuYSBQYXRoZmluZGVyO2RyaXZlX2Rpcjo6QW5jaWVudCBNZWNoYW5pc207ZHJpdmVfZGlyOjpNYXJrIG9mIHRoZSBNaXN0cmFsIEZpZW5kIFYgMi4xO2RyaXZlX2Rpcjo6QmlnIFVuIFYgMy4wO2RyaXZlX2Rpcjo6T3Zlcmdyb3duO2RyaXZlX2Rpcjo6Q3J1Y2libGUgb2YgUmlsZTtkcml2ZV9kaXI6OlN0cnlnd3lyIEJsb29kc2Vla2VyO2RyaXZlX2Rpcjo6UGF0dGVybiBvZiB0aGUgU2lsa2VuIFF1ZWVuO2RyaXZlX2Rpcjo6SWNlcGxhaW4gUmF2YWdlcjtkcml2ZV9kaXI6OlNhY2NoYXJpbmUgU2Fib3RldXI7ZHJpdmVfZGlyOjpGYXRhbCBCbG9zc29tIFYgMy4wO2RyaXZlX2Rpcjo6TGlnaHRuaW5nIEhhcmJpbmdlcjtkcml2ZV9kaXI6OkZpcmVzIG9mIHRoZSBWb2xjYW5pYyBHdWFyZDtkcml2ZV9kaXI6OkRpdmluZSBBbmNob3IgU3R5bGUgMTtkcml2ZV9kaXI6OkJlc3Rvd21lbnRzIG9mIHRoZSBEaXZpbmUgQW5jaG9yIGVmZmVjdHM7ZHJpdmVfZGlyOjpBc2NlbmRhbmNlIG9mIHRoZSBSaW1lIExvcmQgMXN0IFN0eWxlO2RyaXZlX2Rpcjo6RXllIG9mIHRoZSBCZWhvbGRlcjtkcml2ZV9kaXI6OkRhcmtmYWxsIFdhcmRlbjtkcml2ZV9kaXI6OkJsYWRlIG9mIFRlYXJzIGFuZCBDcm93biBvZiBUZWFycztkcml2ZV9kaXI6OlZvb2RvbyBNZWVwbztkcml2ZV9kaXI6OkZ1cnkgb2YgV2FyIEdvZDtkcml2ZV9kaXI6OlByaXNtYXRpYyBHcmFjZTtkcml2ZV9kaXI6OlJlbWlsaWEgU2NhcmxldCBmb3IgTlMgYnkgUGF0Y2hvdWxpIEtub3dsZWRnZTtkcml2ZV9kaXI6OkNvYXQgb2YgdGhlIFdpbmR3YXJkIFJvZ3VlO2RyaXZlX2Rpcjo6TWFzayBvZiB0aGUgQ29uZmlkYW50O2RyaXZlX2Rpcjo6UmFwaWVyIG9mIHRoZSBXaW5kd2FyZCBSb2d1ZTtkcml2ZV9kaXI6OklyZSBvZiBNb2x0ZW4gUmViaXJ0aDtkcml2ZV9kaXI6Ok5vdmEgb2YgR29sZGVuIE5pcnZhbmE7ZHJpdmVfZGlyOjpBbmNpZW50IE1hZ3VzIFN0eWxlIDI7ZHJpdmVfZGlyOjpSdWJpY2sgQ3Vyc2UgLSBEZWF0aCBXYXJkO2RyaXZlX2Rpcjo6UnViaWNrIEN1cnNlIC0gRGVtb25pYyBQdXJnZTtkcml2ZV9kaXI6OlJ1YmljayBDdXJzZSAtIEV4b2NpcnNtO2RyaXZlX2Rpcjo6UnViaWNrIEN1cnNlIC0gRmFtaWxpYXI7ZHJpdmVfZGlyOjpSdWJpY2sgQ3Vyc2UgLSBGbGVzaCBHb2xlbTtkcml2ZV9kaXI6OlJ1YmljayBDdXJzZSAtIEZyZWV6aW5nIEZpZWxkO2RyaXZlX2Rpcjo6UnViaWNrIEN1cnNlIC0gSmV4O2RyaXZlX2Rpcjo6UnViaWNrIEN1cnNlIC0gTWFnbmV0aXplO2RyaXZlX2Rpcjo6UnViaWNrIEN1cnNlIC0gTWFzcyBTZXJwZW50IFdhcmQ7ZHJpdmVfZGlyOjpSdWJpY2sgQ3Vyc2UgLSBQb3dlciBDb2c7ZHJpdmVfZGlyOjpSdWJpY2sgQ3Vyc2UgLSBSZW1vdGUgTWluZTtkcml2ZV9kaXI6OlJ1YmljayBDdXJzZSAtIFNoYXBlc2hpZnQ7ZHJpdmVfZGlyOjpSdWJpY2sgQ3Vyc2UgLSBTcGlyaXQgQmVhcjtkcml2ZV9kaXI6OkZvdWxmZWxsIENvcnJ1cHRvcjtkcml2ZV9kaXI6OlN1Ym1lcmdlZCBIYXphcmQ7ZHJpdmVfZGlyOjpGb2xpYWdlIG9mIEVsZHJpdGNoIEduYXJsO2RyaXZlX2Rpcjo6QnJhd2xlciBvZiB0aGUgR2xhY2llciBTZWEgViAzLjA7ZHJpdmVfZGlyOjpXaW5ncyBvZiBDb2xvcmZ1bCBJY2VjcnlzdGFscztkcml2ZV9kaXI6OlRva2lzYWtpIEt1cnVtaSBmb3IgV2VhdmVyIGJ5IFBhdGNob3VsaSBLbm93bGVkZ2U7ZHJpdmVfZGlyOjpEcmVhZCBDb21wYWN0IFN0eWxlIDI7ZHJpdmVfZGlyOjpDaGlsbCBvZiB0aGUgS2VlcGVycyBHYXplO2RyaXZlX2Rpcjo6RmVyb2Npb3VzIFRveGljYW50O2RyaXZlX2Rpcjo6Um9zaGFuIEh1bnRlcnMgU2V0O2RyaXZlX2Rpcjo6QWJ5c3NhbCBDdWlyYXNzO2RyaXZlX2Rpcjo6R29sZGVuIEZsb29kbWFzayBlZmZlY3Q7ZHJpdmVfZGlyOjpUcmVrIG9mIHRoZSBUcmFpbGJsYXplcjtkcml2ZV9kaXI6Ok1hZ2lzdGVyIG9mIHRoZSBOYXJyb3cgRmF0ZXM7ZHJpdmVfZGlyOjpEZW1vbmljIFB1Z25hIFYgMy4wO2RyaXZlX2Rpcjo6UmVtaW5pc2NlbmNlIG9mIERyZWFtcztkcml2ZV9kaXI6OkFybW9yIG9mIHRoZSBTdGFsd2FydCBTb3VsO2RyaXZlX2Rpcjo6Q3Vyc2VkIFplYWxvdDtkcml2ZV9kaXI6OkN1cnNlIG9mIHRoZSBOZXcgU2Vhc29uIFYgMi4xO2RyaXZlX2Rpcjo6QXJtb3Igb2YgdGhlIFNhbmd1aW5lIE1vb24gU2V0O2RyaXZlX2Rpcjo6V2FyLUJ1cnJvdyBSYXZhZ2VyO2RyaXZlX2Rpcjo6TG9yZCBvZiBDaHJvbm9wdGljIFN5bnRoZXNpcztkcml2ZV9kaXI6OkJsb29keSBSaXBwZXI7ZHJpdmVfZGlyOjpFeHBsb3NpdmUgTWFuaWFjO2RyaXZlX2Rpcjo6QWxsaWVkIENvbW1hbmRlciBTZXQ7ZHJpdmVfZGlyOjpIYXJuZXNzIG9mIHRoZSBGaXNzdXJlZCBTb3VsO2RyaXZlX2Rpcjo6U2FuZ3VpbmUgUm95YWx0eTtkcml2ZV9kaXI6OkJsb29kZmVhdGhlciBXaW5ncyBQcmVtO2RyaXZlX2Rpcjo6QmluZGluZ3Mgb2YgRGVlcCBNYWdtYTtkcml2ZV9kaXI6OlZhbnRhZ2Ugb2YgdGhlIEJyZWFjaCBXYXJkZW47ZHJpdmVfZGlyOjpCbGVzc2luZyBvZiB0aGUgQ3Jlc3RlZCBVbWJyYTtkcml2ZV9kaXI6OktlZW4gTWFjaGluZTtkcml2ZV9kaXI6OkRyYWdvbiBMb3JlIEFXUDtkcml2ZV9kaXI6OlBsdW5kZXIgb2YgdGhlIFNhdmFnZSBNb25nZXI7ZHJpdmVfZGlyOjpNYWxlZmljIERyYWtlcyBIb29kIG9mIHRoZSBDcmltc29uIFdpdG5lc3M7ZHJpdmVfZGlyOjpQbGF0aW5nIG9mIHRoZSBOZXRoZXJzd2FybSBWYW5ndWFyZDtkcml2ZV9kaXI6Ok1hbGVmaWMgRHJha2VzIFN0cmlrZSBvbmx5IEVmZmVjdDtkcml2ZV9kaXI6OkFyY3RpYyBDbGlua3ogViAzLjA7IDEyM3x8fA==