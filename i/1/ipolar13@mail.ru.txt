bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogQUVBMzJGNDMtODA4QS0zMEU0LUE4OTQtMTA3QjQ0MTk4QjIyIDExMXx8fCAyMjI6OiA4NjVkZWVkNGY0ODQ4ZDczMTg4NWNlZmJjYTVkNGE1MTQwYTFjOTA1MDI4OTBhYTMzZGQ2MjM3YTdhYzFkNmU4NWI4M2VkNWY1M2ZmOTBlZDJjZDVhNmM1Y2U0MTJmNDI1OWJmYzliYjRhZWI0NWFiNjI1NjRjNDZhYmU3NzQ1NiAyMjJ8fHwgMTIzOjogVGlueSBGcm9zdG1vb3Q7U21hbGwgRnJvc3Rtb290O01lZGl1bSBGcm9zdG1vb3Q7TGFyZ2UgRnJvc3Rtb290O0hvcm5zIG9mIHRoZSBCZXRyYXllcjtIZWxsLVNwYXIgQW5hdGhlbWEgT2JzaWRpYW4gQmxpZ2h0O011bGN0YW50IFBhbGwgb2YgdGhlIENyaW1zb24gV2l0bmVzcztGaW4gS2luZ3MgQ2hhcm0gb2YgRW1pbmVudCBSZXZpdmFsIEV4Y2VwdGlvbmFsO0ZlYXN0IG9mIEFic2Nlc3Npb247QXJjYW5hIENyeXN0YWwgTWFpZGVuIEZyb3N0IEF2YWxhbmNoZTtDb2xsZWN0b3JzIEJhYnkgUm9zaGFuIDIwMTg7RW1lcmFsZCBTZWEgQ3Vyc29yIFBhY2s7Q2hpY2tlbiBIdXQgV2FyZDtHdWFyZGlhbnMgb2YgdGhlIExvc3QgUGF0aCBSYWRpYW50IFRvd2VycztHdWFyZGlhbnMgb2YgdGhlIExvc3QgUGF0aCBEaXJlIFRvd2VycztEaXJlIE5lbWVzdGljZSBDcmVlcHM7UmFkaWFudCBOZW1lc3RpY2UgQ3JlZXBzO1Jvc2hhbiBmcm9tIERpYWJsbztSaXZlciBWaWFsIEJsdWU7QmxhY2sgTW9ub2xpdGggSFVEO0pha2lybyBJbW1vcnRhbCBXaW5ncztEYXJrIEFydGlzdHJ5IFRocm93YmFjaztTaGFkb3cgRmllbmQgQXJjYW5hIERlbW9uIEVhdGVyO0NyaW1zb24gUHJvZ2VuaXRvcnMgQmFuZTtBcmVuYSBDaGFtcGlvbiBBcm1vcjtTdGFmZiBvZiB0aGUgRGVtb24gVHJpY2tzdGVyO0dyZWF0IFNhZ2VzIFJlY2tvbmluZyBUaW1lbGVzcyBUYWxlO0JlYXN0IG9mIHRoZSBDcmltc29uIFJpbmcgSGVsbTtCZWFzdCBvZiB0aGUgQ3JpbXNvbiBSaW5nIFdlYXBvbjtCZWFzdCBvZiB0aGUgQ3JpbXNvbiBSaW5nIEJhY2s7QmVhc3Qgb2YgdGhlIENyaW1zb24gUmluZyBCcmFjZXJzO09mZmhhbmQgQmxhZGUgb2YgdGhlIFN1cnZpdm9yIFByZW07QmxhZGUgb2YgdGhlIFN1cnZpdm9yO01hbmlmb2xkIFBhcmFkb3ggUEEgQXJjYW5hIFN0eWxlIDI7RmlzdHMgb2YgQXhlIFVubGVhc2hlZDtUZW1wZXN0IEhlbG0gb2YgdGhlIFRodW5kZXJnb2Q7R29sZGVuIEluZmVybmFsIENoaWVmdGFpbjtBeGUgb2YgdGhlIFByb3ZlbjtJY2VwbGFpbiBSYXZhZ2VyIEhvcm47U2NlcHRyZSBvZiBJY2V3cmFjaztHcm9taXQ7R29kcyBNZXJjeSBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzO0hpZGRlbiBWZWN0b3IgLSBBcm1vcjtIaWRkZW4gVmVjdG9yIC0gQmVsdDtIaWRkZW4gVmVjdG9yIC0gQmxhZGU7SGlkZGVuIFZlY3RvciAtIEhhdDtUZXJyYWluIC0gU2FuY3R1bXMgb2YgdGhlIERpdmluZTtXZWF0aGVyIEJsdWUgU2t5IGZyb20gU291cCBmb3IgU2x1dHM7QmV5b25kIHRoZSBTdW1taXQgSFVEO0RhcmticmV3IEVuZm9yY2VyIGFuZCBFdGVybmFsIFJhZGlhbmNlIEJsYWRlcyBhbmQgTWlkYXMgS251Y2tsZXMgTWVnYVBhY2s7QW50aW1hZ2UgV2VpIEZlbWFsZSAoWWQ5519IGNhbiBhZGQgV2VhcG9uIGFuZCBIZWFkKTtTaGF0dGVyYmxhc3QgQ29yZSBTaGF0dGVyYmxhc3QgQ3Jvd24gQXBvY2FseXBzZSBVbmJvdW5kO0N1c3RvbSBNZWdhUGFjayBGYWNlbGVzcyBWb2lkIEJsYWNrIFRpbWU7SWNlIExpbmEgMXN0IFN0eWxlO0JsYWRlZm9ybSBMZWdhY3kgUHJvdm9jYXRpb24gb2YgUnVpbjtMeWNhbiBLaXNpbGV2IE1vZE1ha2VyIE1lZ2FQYWNrO0N1c3RvbSBNZWdhUGFjayBNYWdpYyBQeXJvbWFuY2VyIFJFO0RpdmluZSBBbmNob3IgU3R5bGUgMTtRdWVlbiBvZiBQYWluIEFyY2FuYSBNZWdhUGFjaztUd2luIEJsYWRlcyBBc3Nhc3NpbiBTZXQ7VGhlIEJyaW5nZXIgb2YgUGxhZ3VlcztXaW5kcmFuZ2VyIEFyY2FuYSBzdHlsZSAxIChCbHVlIEJpcmQpICsgRnVsbCBXUiBpbW1vcnRhbDtadWxqaW4gZm9yIFRyb2xsIFdhcmxvcmQ7U2lsZW5jZXIgTWVnYVBhY2s7VGhhbmF0b3MgTWVnYVBhY2sgVVA7Q3VzdG9tIE1lZ2FwYWNrIEh1c2thciBGbGFzaHBvaW50IFByb3NlbHl0ZSArIFB1cnN1aXQgb2YgdGhlIEVtYmVyIERlbW9ucztFYXJ0aHNoYWtlciBNZWdhUGFjayBOZXc7Q3VzdG9tIE1lZ2FQYWNrIFN2ZW4gVHJ1ZSBWaWdpbDtDdXN0b20gTWVnYVBhY2sgV3JhaXRoIEtpbmcgVGhlIE9uZSBUcnVlIEtpbmcgQnVuZGxlIChTdHlsZSAxIENoaW5lc2UpO0FiYWRkb24gUkVEIE1lZ2FQYWNrO0luayBEcmFnb24gUG9ldDtKYWtpcm8gTWVnYVBhY2s7VmlzaW9uIG9mIHRoZSBTZXJhcGggU2Npb24gLSBGYWxsZW47TmlnaHQgU3RhbGtlciBJbW1vcnRhbCBhbmQgUmVhcGVyIEtpc2lsZXYgTW9kTWFrZXIgTWVnYVBhY2s7Q3VzdG9tIE1lZ2FQYWNrIFRlbXBsYXIgQXNzYXNzaW4gSnVuZ2xlIFNlY3JldHMgUkU7VmVuZ2VhbmNlIG9mIHRoZSBTdW53YXJyaW9yO0N1c3RvbSBNZWdhUGFjayBSYWluYm93IFN0YXRpY3M7T2NjdWx0aXN0cyBQdXJzdWl0O0RLIFBlcnNvbmEgRGF2aW9uO1JpZ2h0ZWQ5519cyBUaHVuZGVyYm9sdCBhbmQgQXJjYW5hIE1lZ2FQYWNrO0V0ZXJuYWwgVGVzdGFtZW50O0RlYXRoIEtuaWdodDtMaW5lYWdlIERlc29sYXRlIENvbnF1ZXN0O0xpbmVhZ2UgUHJvdmluY2Ugb2YgdGhlIEh1bnQgRXRlcm5hbDtDdXN0b20gTWVnYVBhY2sgRHJvdyBSYW5nZXIgU3lsdmFuYXMgQmFzZTsgMTIzfHx8