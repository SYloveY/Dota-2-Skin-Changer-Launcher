bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogQUVBMzJGNDMtODA4QS0zMEU0LUE4OTQtMTA3QjQ0MTk4QjIyIDExMXx8fCAyMjI6OiA4NjVkZWVkNGY0ODQ4ZDczMTg4NWNlZmJjYTVkNGE1MTQwYTFjOTA1MDI4OTBhYTMzZGQ2MjM3YTdhYzFkNmU4NWI4M2VkNWY1M2ZmOTBlZDJjZDVhNmM1Y2U0MTJmNDI1OWJmYzliYjRhZWI0NWFiNjI1NjRjNDZhYmU3NzQ1NiAyMjJ8fHwgMTIzOjogVGlueSBGcm9zdG1vb3Q7U21hbGwgRnJvc3Rtb290O01lZGl1bSBGcm9zdG1vb3Q7TGFyZ2UgRnJvc3Rtb290O0hvcm5zIG9mIHRoZSBCZXRyYXllcjtIZWxsLVNwYXIgQW5hdGhlbWEgT2JzaWRpYW4gQmxpZ2h0O011bGN0YW50IFBhbGwgb2YgdGhlIENyaW1zb24gV2l0bmVzcztGaW4gS2luZ3MgQ2hhcm0gb2YgRW1pbmVudCBSZXZpdmFsIEV4Y2VwdGlvbmFsO0ZlYXN0IG9mIEFic2Nlc3Npb247QXJjYW5hIENyeXN0YWwgTWFpZGVuIEZyb3N0IEF2YWxhbmNoZTtDb2xsZWN0b3JzIEJhYnkgUm9zaGFuIDIwMTg7RW1lcmFsZCBTZWEgQ3Vyc29yIFBhY2s7Q2hpY2tlbiBIdXQgV2FyZDtHdWFyZGlhbnMgb2YgdGhlIExvc3QgUGF0aCBSYWRpYW50IFRvd2VycztHdWFyZGlhbnMgb2YgdGhlIExvc3QgUGF0aCBEaXJlIFRvd2VycztEaXJlIE5lbWVzdGljZSBDcmVlcHM7UmFkaWFudCBOZW1lc3RpY2UgQ3JlZXBzO1Jvc2hhbiBmcm9tIERpYWJsbztUZXJyYWluIC0gQXV0dW1uO1JpdmVyIFZpYWwgQmx1ZTtCbGFjayBNb25vbGl0aCBIVUQ7SmFraXJvIEltbW9ydGFsIFdpbmdzO0RhcmsgQXJ0aXN0cnkgVGhyb3diYWNrO1NoYWRvdyBGaWVuZCBBcmNhbmEgRGVtb24gRWF0ZXI7Q3JpbXNvbiBQcm9nZW5pdG9ycyBCYW5lO0FyZW5hIENoYW1waW9uIEFybW9yO1N0YWZmIG9mIHRoZSBEZW1vbiBUcmlja3N0ZXI7R3JlYXQgU2FnZXMgUmVja29uaW5nIFRpbWVsZXNzIFRhbGU7QmVhc3Qgb2YgdGhlIENyaW1zb24gUmluZyBIZWxtO0JlYXN0IG9mIHRoZSBDcmltc29uIFJpbmcgV2VhcG9uO0JlYXN0IG9mIHRoZSBDcmltc29uIFJpbmcgQmFjaztCZWFzdCBvZiB0aGUgQ3JpbXNvbiBSaW5nIEJyYWNlcnM7T2ZmaGFuZCBCbGFkZSBvZiB0aGUgU3Vydml2b3IgUHJlbTtCbGFkZSBvZiB0aGUgU3Vydml2b3I7TWFuaWZvbGQgUGFyYWRveCBQQSBBcmNhbmEgU3R5bGUgMjtGaXN0cyBvZiBBeGUgVW5sZWFzaGVkO0RhcmticmV3IEVuZm9yY2VyIGFuZCBFdGVybmFsIFJhZGlhbmNlIEJsYWRlcyBhbmQgTWlkYXMgS251Y2tsZXMgTWVnYVBhY2s7QW50aW1hZ2UgV2VpIEZlbWFsZSAoWWQ5519IGNhbiBhZGQgV2VhcG9uIGFuZCBIZWFkKTtWZW5lcmF0ZWQgVHJpdW12aXJhdGU7U2hhdHRlcmJsYXN0IENvcmUgU2hhdHRlcmJsYXN0IENyb3duIEFwb2NhbHlwc2UgVW5ib3VuZDtDdXN0b20gTWVnYVBhY2sgRHJvdyBSYW5nZXIgU3lsdmFuYXMgQ2xhc3NpYztDdXN0b20gTWVnYVBhY2sgRmFjZWxlc3MgVm9pZCBCbGFjayBUaW1lO0ljZSBMaW5hIDFzdCBTdHlsZTtCbGFkZWZvcm0gTGVnYWN5IFByb3ZvY2F0aW9uIG9mIFJ1aW47THljYW4gS2lzaWxldiBNb2RNYWtlciBNZWdhUGFjaztDdXN0b20gTWVnYVBhY2sgTWFnaWMgUHlyb21hbmNlciBSRTtEaXZpbmUgQW5jaG9yIFN0eWxlIDE7UXVlZW4gb2YgUGFpbiBBcmNhbmEgTWVnYVBhY2s7VHdpbiBCbGFkZXMgQXNzYXNzaW4gU2V0O1RoZSBCcmluZ2VyIG9mIFBsYWd1ZXM7V2luZHJhbmdlciBBcmNhbmEgc3R5bGUgMSAoQmx1ZSBCaXJkKSArIEZ1bGwgV1IgaW1tb3J0YWw7WnVsamluIGZvciBUcm9sbCBXYXJsb3JkO1NpbGVuY2VyIE1lZ2FQYWNrO1RoYW5hdG9zIE1lZ2FQYWNrIFVQO0N1c3RvbSBNZWdhUGFjayBMZWdpb24gQ29tbWFuZGVyIE1lcmVkaXRoIFJFO0N1c3RvbSBNZWdhcGFjayBIdXNrYXIgRmxhc2hwb2ludCBQcm9zZWx5dGUgKyBQdXJzdWl0IG9mIHRoZSBFbWJlciBEZW1vbnM7RWFydGhzaGFrZXIgTWVnYVBhY2sgTmV3O0N1c3RvbSBNZWdhUGFjayBTdmVuIFRydWUgVmlnaWw7Q3VzdG9tIE1lZ2FQYWNrIFdyYWl0aCBLaW5nIFRoZSBPbmUgVHJ1ZSBLaW5nIEJ1bmRsZSAoU3R5bGUgMSBDaGluZXNlKTtCZWFyaW5nIG9mIHRoZSBLaW5nIFJlc3RvcmVkIERpc3Rpbmd1aXNoZWQ7QWJhZGRvbiBSRUQgTWVnYVBhY2s7SW5rIERyYWdvbiBQb2V0O0pha2lybyBNZWdhUGFjaztWaXNpb24gb2YgdGhlIFNlcmFwaCBTY2lvbiAtIEZhbGxlbjtOaWdodCBTdGFsa2VyIEltbW9ydGFsIGFuZCBSZWFwZXIgS2lzaWxldiBNb2RNYWtlciBNZWdhUGFjaztDdXN0b20gTWVnYVBhY2sgVGVtcGxhciBBc3Nhc3NpbiBKdW5nbGUgU2VjcmV0cyBSRTtWZW5nZWFuY2Ugb2YgdGhlIFN1bndhcnJpb3I7VW5icm9rZW4gU3RhbGxpb247Q3VzdG9tIE1lZ2FQYWNrIFJhaW5ib3cgU3RhdGljcztPY2N1bHRpc3RzIFB1cnN1aXQ7REsgUGVyc29uYSBEYXZpb247Q2xpbmt6IE1lZ2FQYWNrOyAxMjN8fHw=