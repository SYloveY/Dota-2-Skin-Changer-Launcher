bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogQzJDRTVENEUtMkVCMC00MjRGLTBFRTMtNDBCMDc2MTI0OTQ2IDExMXx8fCAyMjI6OiAkMnkkMTAkTVRRMk5qYzNPRGs0T0RjNU1HVTBOZXhlc3RwdGEudU5BMkhFSndEQ0k3cGJlazN2aGNNTUcgMjIyfHx8IDEyMzo6IEJsb29kIFNoYXJkO0RyZWFka25pZ2h0IFBhdWxkcm9uO1RJLTYgQ29tcGxleGl0eSBHYW1pbmcgVFAgRWZmZWN0O1BhbGUgRWRnZTtTaGFkb3cgaW4gdGhlIERlZXAgQnJhY2VycztTaGFkb3cgaW4gdGhlIERlZXAgQmFjaztTaGFyayBDb3dsO0FybW9yIG9mIHRoZSBEcmVhZGJvcm4gUmVnZW50O0JvdW5kIFNoYXJrIEZsaXBwZXJzO1RoZSBCYXNoZXIgQmxhZGVzO1NlcnJha3VyYTtQcm92b2NhdGlvbiBvZiBSdWluIEJyYWNlcnM7QmF0dGxlIEJhbm5lciBvZiB0aGUgTWFza2VkO1Byb3ZvY2F0aW9uIG9mIFJ1aW4gQmVsdDtNYXNrIG9mIGEgVGhvdXNhbmQgRmFjZXM7SGVsbSBvZiB0aGUgQWJ5c3NhbCBTY291cmdlO0JsYWRlIG9mIHRoZSBCdXJuaW5nIFNjYWxlO1NoaWVsZCBvZiB0aGUgQnVybmluZyBTY2FsZTtCcmFjZXJzIG9mIHRoZSBCdXJuaW5nIFNjYWxlO1Zlc3BlcnRpbmUgR3VhcmQgSGVsbWV0O0NhcGUgb2YgdGhlIEJ1cm5pbmcgU2NhbGU7UGF1bGRyb25zIG9mIHRoZSBCbGF6aW5nIFN1cGVyaW9yaXR5O0hlbG0gb2YgQmxhemluZyBPYmxpdmlvbjtTY29yY2hpbmcgVGFsb24gUHJlbTtHYXVudGxldCBvZiBEYXJrIEZlYXRoZXJzO1BhdWxkcm9uIFBlcmNoO0JlbHQgb2YgdGhlIEJhc2lsaXNrO011cmRlciBNYXNrO1RJLTkgTWVrYXNtIEVmZmVjdDtBY2lkIEh5ZHJhIEN1cnNvciBQYWNrO0NsYXcgb2YgdGhlIFdvbGYgSHVudGVyO1BhdWxkcm9uIG9mIFRoZSBJcm9uIENsYXc7VGhlIFNjaW50aWxsYW50IFN0aW5nO0phd3Mgb2YgdGhlIEtyYXkgTGVnaW9ucztDcmF3bGVycyBvZiB0aGUgS3JheSBMZWdpb25zO0NoaXRpbiBvZiB0aGUgS3JheSBMZWdpb25zO1BpbmNlcnMgb2YgdGhlIEtyYXkgTGVnaW9ucztSYXp6aWxzIE1pZGFzIEtudWNrbGVzIFByZW07Rmxhc2sgb2YgdGhlIENvbnZpY3RzO0V0ZXJuYWwgUmFkaWFuY2UgQmxhZGVzIFByZW07TW9oYXdrIG9mIHRoZSBDb252aWN0cztGb3JtZWQgQWxsb3kgUGF1bGRyb25zO0FybW9yIG9mIHRoZSBFbmR1cmluZyBDb25zY3JpcHQ7QmVsdCBvZiB0aGUgV3JhdGhmdWwgQW5uaWhpbGF0b3I7UmFtcGFudCBPdXRyYWdlIFByZW07VW5kZWZlYXRlZCBHZW5lcmFsIFdlYXBvbjtBcm1zIG9mIERlc29sYXRpb247SG9ybnMgb2YgdGhlIERpYWJvbGljYWwgRmllbmQ7QXJtb3Igb2YgdGhlIERpYWJvbGljYWwgRmllbmQ7U3dvcmQgb2YgdGhlIFNtb2xkZXJpbmcgU2FnZTtTaG91bGRlcnMgb2YgdGhlIFJla2luZGxlZCBBc2hlcztPZmYtaGFuZCBXZWFwb24gb2YgdGhlIFZvbGNhbmljIEd1YXJkO01lbnRvciBvZiB0aGUgSGlnaCBQbGFpbnMgQ2VyZW1vbmlhbCBCYW5uZXI7QmVsdCBvZiB0aGUgRm9yc2FrZW4gRmxhbWU7TWVudG9yIG9mIHRoZSBIaWdoIFBsYWlucyBHdWFyZDtCbGFkZSBvZiBSZWNrbGVzcyBWaWdvcjtQYXRjaCBTdGFzaCBhbmQgSG9iYjtTdHlsZSBvZiB0aGUgUmF1Y291cyBHYXRlY3Jhc2hlcjtTYXcgb2YgdGhlIFJhdWNvdXMgR2F0ZWNyYXNoZXI7U2NhciBvZiB0aGUgQmFycmllciBSb2d1ZTtJY2V3cmFja3MgRmlzdDtDYXBlIG9mIHRoZSBXZWF0aGVyZWQgU3Rvcm07RnJvc3Rpcm9uIFJhaWRlciBUdXNrcztNYWNlIG9mIHRoZSBXZWF0aGVyZWQgU3Rvcm07T2JzaWRpYW4gQmxhZGUgRGFnZ2VyO0Jsb29kc3RvbmUgQmxhZGUgLSBPZmYtSGFuZDtCbG9vZHN0b25lIEJsYWRlO0Nsb2FrIG9mIHRoZSBOaW1ibGUgRWRnZTtCZWx0IG9mIHRoZSBMaWZ0ZWQgVmVpbDtTY3l0aGUgb2YgU2FjcmlmaWNlO1JpdmVyIFZpYWwgTm9uZTtIZWxtIG9mIHRoZSBOaW1ibGUgRWRnZTtBcm1vciBvZiBDcnVlbCBSZXByaXNhbDtNdWxjdGFudCBQYWxsO0RlbW9uIFF1aXZlciBvZiB0aGUgQ3J5cHQgR3VhcmRpYW47TG9zdCBIaWxscyBHYXVudGxldHM7TWFzayBvZiB0aGUgSHVudCBFdGVybmFsO0tpdCBvZiB0aGUgSHVudCBFdGVybmFsO1RoZSBDcm93IEVhdGVyO0FybW9yIG9mIHRoZSBCbGFjayBCaXJkO0NsdWIgb2YgUGFndXM7SGVhZHMgb2YgdGhlIEdyZXkgV2FzdGVzO0JlbHQgb2YgdGhlIEdyZXkgV2FzdGVzO0NhcGUgb2YgdGhlIEdyZXkgV2FzdGVzO0JyYWNlciBvZiB0aGUgR3JleSBXYXN0ZXM7RGFyayBBcnRpc3RyeSBDYXBlO0NvdmVuYW50IG9mIHRoZSBEZXB0aHMgQmVsdDtIb29kIG9mIEVuZGxlc3MgSW50ZWxsZWN0O0RhcmsgQXJ0aXN0cnkgUGF1bGRyb25zO0JyYWNlcnMgb2YgdGhlIEVhc3Rlcm4gUmFuZ2U7TWVyYW50aCBEcmFnb29uIFNoaWVsZDtCZWx0IG9mIHRoZSBTdG9ybXdyb3VnaHQgQXJiaXRlcjtIYWxsb3dlZCBGbGFtZSBIZWxtO1BhdWxkcm9uIG9mIHRoZSBTdG9ybXdyb3VnaHQgQXJiaXRlcjtBcm1vciBvZiBCcm9rZW4gU2NhbGU7RmFsY29uc2lkZTtUaWFyYSBvZiBGYWxjb25zaWRlIEFybW9yO1BhdWxkcm9ucyBvZiBGYWxjb25zaWRlIEFybW9yO0dpbGRlZCBGYWxjb24gQ2xvYWs7UXVpdmVyIG9mIHRoZSBXaWxkIFdpbmQ7RnJvemVuIFZvaWQgU2hvdWxkZXI7QmVsdCBvZiB0aGUgRW1lcmFsZCBBZ2U7RnJvemVuIFZvaWQgQXJtcztGcm96ZW4gVm9pZCBXZWFwb247RnJvemVuIFZvaWQgSGVhZDtDYXBlIG9mIHRoZSBEcmVhZGJvcm4gUmVnZW50O0N1cnNlIG9mIHRoZSBDcm93IEtpbmcgQXJtcztIeW1uIG9mIHRoZSBQaWQ5519cyBQbGFndWUgSG9vZDtIeW1uIG9mIHRoZSBQaWQ5519cyBQbGFndWUgQXJtb3I7SHltbiBvZiB0aGUgUGlvdXMgUGxhZ3VlIEFybXM7U2hhbWJsaW5nIERyYXVnO0VuZGxlc3MgTmlnaHQ7UmFnZSBvZiB0aGUgRGFyayBXb29kIHYgMi4wO0h1bnRlciBvZiB0aGUgQ3J5c3RhbCBEcmlmdDtNb2x0ZW4gRGVzdHJ1Y3RvcjtUaGUgQmFwdGlzbSBvZiBNZWx0aW5nIEZpcmU7SGFydmVzdHMgSG91bmQ7RGFlbW9uIFByaW5jZSBvZiBLaG9ybmUgViAyLjE7IDEyM3x8fA==