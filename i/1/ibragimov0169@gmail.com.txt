bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogQzJDRTVENEUtMkVCMC00MjRGLTBFRTMtNDBCMDc2MTI0OTQ2IDExMXx8fCAyMjI6OiAkMnkkMTAkTVRRMk5qYzNPRGs0T0RjNU1HVTBOZXhlc3RwdGEudU5BMkhFSndEQ0k3cGJlazN2aGNNTUcgMjIyfHx8IDEyMzo6IEFybW9yIG9mIHRoZSBEcmVhZGJvcm4gUmVnZW50O0NhcGUgb2YgdGhlIERyZWFkYm9ybiBSZWdlbnQ7RHJlYWRrbmlnaHQgUGF1bGRyb247Qmxvb2QgU2hhcmQ7SW5zYXRpYWJsZSBCb25lc2F3O0dyYW5kIEFic2Nlc3Npb24gSG9vayBCdW5kbGU7U291bHMgVHlyYW50IEhlYWQ7QXJtcyBvZiBEZXNvbGF0aW9uIFByZW07U2N5dGhlIG9mIFZ5c2UgViAyLjA7Q2FsbCBvZiB0aGUgRGVuZHJvY2hyb247RGVzZXJ0IEJsb29tIC0gQXJtcztEZXNlcnQgQmxvb20gLSBTaG91bGRlcjtXaWxkIE1vc3MgQmVhcmQgb2YgdGhlIEZ1bmdhbCBMb3JkO1R3aW4gQnVsbCBBZG9ybm1lbnQ7Q2FwZSBvZiB0aGUgRHJlYWQgUHJvcGhldDtWZXNwZXJ0aW5lIEd1YXJkIEhlbG1ldDtCbGFkZXMgb2YgdGhlIEZvdWxmZWxsIENvcnJ1cHRvciBQcmVtaXVtO1BsYXRlIG9mIHRoZSBCYWxlZnVsIEhvbGxvdztGcmFjdGFsIEhvcm5zIG9mIElubmVyIEFieXNtIFVQO0RBQyAyMDE1IENoYW9zIEtuaWdodCBDdXJzb3IgUGFjaztGbGFzaHBvaW50IFByb3NlbHl0ZSAtIEhlYWQ7S3Vua2thKnMgU2hhZG93IEJsYWRlO0dyYW5kIEdsb3ZlcyBvZiB0aGUgV2l0Y2ggSHVudGVyIFRlbXBsYXI7Qmljb3JuZSBvZiB0aGUgUmVuZWdhZGU7Qm9vdHMgb2YgdGhlIERpdmluZSBBbmNob3I7VGhlIENyb3cqcyBOZXN0O01hZ3VzIEFwZXg7VHJhaW5lciBEcmFnb247U2xlZXZlcyBvZiB0aGUgQmxhY2tndWFyZCBNYWd1cztEYXJrIEFydGlzdHJ5IENhcGU7Q292ZW5hbnQgb2YgdGhlIERlcHRocyBCZWx0O0RhcmsgQXJ0aXN0cnkgUGF1bGRyb25zO0d1YXJkaWFucyBvZiB0aGUgTG9zdCBQYXRoIERpcmUgVG93ZXJzO0d1YXJkaWFucyBvZiB0aGUgTG9zdCBQYXRoIFJhZGlhbnQgVG93ZXJzO1N0b25lIE1vbmtleSBTcGlyaXRzIFYgMy4xO0FybXMgb2YgdGhlIEphZGUgRW1pc3Nhcnk7QmVsdCBvZiB0aGUgSmFkZSBHZW5lcmFsO1ZhbnF1aXNoaW5nIERlbW9ucyBPcm5hbWVudHMgb2YgQW5uaWhpbGF0aW9uO1N0eWxlIG9mIHRoZSBKYWRlIEdlbmVyYWw7R2FtYml0cyBvZiBOaXNoYWkgUGF1bGRyb25zO0dhbWJpdHMgb2YgTmlzaGFpIEJlbHQ7R29sZGVuIEdyYXZlbG1hdztBY29seXRlIG9mIFZlbmdlYW5jZSBIb29kO1Nocm91ZCBvZiB0aGUgQXdha2VuZWQ7QXJtcyBvZiB0aGUgT255eCBDcnVjaWJsZSBCcmFjZXJzO1ZpcnR1b3VzIFJvYXIgUGFkcztUaGUgTGlnaHRuaW5nIE9yY2hpZCBvZiBFbWluZW50IFJldml2YWw7Um9iZSBvZiB0aGUgUmFpa2FnZSBXYXJyaW9yO01hcmF1ZGVyKnMgV2luZ3M7U3VpdCBvZiB0aGUgRGFya2JyZXcgRW5mb3JjZXI7UmF6emlscyBNaWRhcyBLbnVja2xlcyBQcmVtO0dhcmIgb2YgTGl0dGxlIEJpZyAqVW47V2FhYWdoIENhcCBvZiBMaXR0bGUgQmlnICpVbjtGcm9zdHJlYWNoIEJyaWdhbmRzIFRoZXJtb3M7RXRlcm5hbCBSYWRpYW5jZSBCbGFkZXMgUHJlbTtTcGlrZWQgU2hvdWxkZXIgb2YgdGhlIENvbnZpY3RzO0dvbGRlbiBTY2F2ZW5naW5nIEd1dHRsZXNsdWc7RWRnZSBvZiB0aGUgTG9zdCBPcmRlcjtXYXJnb2Qgb2YgdGhlIEJsYWRla2VlcGVyO1Byb3ZvY2F0aW9uIG9mIFJ1aW4gQnJhY2VycztCYXR0bGUgQmFubmVyIG9mIHRoZSBNYXNrZWQ7U2lnaWwgTWFzayBvZiB0aGUgQmxhZGVrZWVwZXI7UHJvdm9jYXRpb24gb2YgUnVpbiBCZWx0O1dhci1CdXJyb3cgUmF2YWdlciBCZWFyO1dhci1CdXJyb3cgUmF2YWdlciBUcnVlIEZvcm07TWFuZSBvZiB0aGUgV2FyLUJ1cnJvdyBSYXZhZ2VyO1BhdWxkcm9uIG9mIFRoZSBJcm9uIENsYXc7Q2F1bGRyb24gb2YgWGFocnl4O1BhdWxkcm9ucyBvZiBFdGVybmFsIEhhcnZlc3Q7QXJtcyBvZiB0aGUgU3RvbmVtYXJjaCBTb3ZlcmVpZ247TWFzayBvZiB0aGUgTWFkIEhhcnZlc3RlcjtEYXBwZXIgRGlzZ3Vpc2UgSmFja2V0O0xpb24gR3JlZWR5IEtpbmcgV2VhcG9uO011bGN0YW50IFBhbGw7TGlvbiBHcmVlZHkgS2luZyBBcm1zO1N0b25laGFsbCBSb3lhbCBHdWFyZCBIZWxtZXQ7TGVnYWN5IG9mIHRoZSBGYWxsZW4gTGVnaW9uO1BsYXRlIG9mIHRoZSBTaGFycHN0YXI7UGxhdGludW0gQmFieSBSb3NoYW47U2hhcmsgQ293bDtXZWFwb24gb2YgdGhlIExpemFyZCBLaW5nO0RlZXAgV2FyZGVuKnMgVG9vdGggQnJhY2VyO0ZpbnMgb2YgdGhlIExpemFyZCBLaW5nO1BhdWxkcm9uIG9mIHRoZSBMaXphcmQgS2luZztNYWVscmF3bipzIGFieXNzYWwgR3VhcmQgV2VhcG9uO0dyaXAgb2YgdGhlIERyb3duaW5nIFRyZW5jaDtCcmFja2lzaCBTdGFsa2VyIEJlbHQ7TGVhc2hlZCBSb2Nrc2hhcms7VGVycmFpbiAtIEltbW9ydGFsIEdhcmRlbnM7RXRlcm5hbCBIYXJ2ZXN0O1JlbGljcyBvZiB0aGUgTG9zdCBWaWdpbCBQYXRoZmluZGVyO0Zlcm9jaWQ5519cyBIZWFydDtFbmRsZXNzIE5pZ2h0O0V4cGxvc2l2ZSBNYW5pYWM7RnVsbCBNZXRhbCBUZWNoaWVzO0Jyb2tlbiBTY2FsZSBWIDIuMDtUaGUgSmFkZSBHZW5lcmFsO0NyaW1zb24gQmVhc3QgViAzLjA7RGlyZXN0b25lIEJpbmRpbmdzIFNldDtXYXItQnVycm93IFJhdmFnZXI7RGFlbW9uZmVsbCBGbGFtZTtCaXR0ZXJ3aW5nIExlZ2FjeTsgMTIzfHx8