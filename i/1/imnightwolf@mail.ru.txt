bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogNzI0QTUxRDQtOThFMy1GNENELTdDM0YtMjQ0QkZFNDdCREQwIDExMXx8fCAyMjI6OiAkMnkkMTAkT0RBMFkyWXlPVEUyWXpOaU1UWmtOZTlqRlRoMUNPMlJZQVRVbzljbDVWTHRYcjFEbDBsVVcgMjIyfHx8IDEyMzo6IGRyaXZlX2Rpcjo6SGVsbSBvZiBFbnZlbG9waW5nIERlc3BhaXI7ZHJpdmVfZGlyOjpNaXN0cmFsO2RyaXZlX2Rpcjo6QnJhdW4gb2YgdGhlIE5vcnRoZXJuIEV4aWxlcztkcml2ZV9kaXI6OlRvb2xzIG9mIHRoZSBOb3J0aGVybiBFeGlsZXM7ZHJpdmVfZGlyOjpCcmFpbnMgb2YgdGhlIE5vcnRoZXJuIEV4aWxlcztkcml2ZV9kaXI6OkhlbG0gb2YgdGhlIE5vcnRoZXJuIEV4aWxlcztkcml2ZV9kaXI6OkZsYXNrIG9mIHRoZSBDb252aWN0cztkcml2ZV9kaXI6OkZyb3N0cmVhY2ggQnJpZ2FuZHMgU2hvdWxkZXJzO2RyaXZlX2Rpcjo6QXJtcyBvZiB0aGUgTm9ydGhlcm4gRXhpbGVzO2RyaXZlX2Rpcjo6QnJva2VuIFNjYWxlIFYgMi4wO2RyaXZlX2Rpcjo6TW9sdGVuIENsYXcgUHJlbTtkcml2ZV9kaXI6OkNydWNpYmxlIG9mIFJpbGU7ZHJpdmVfZGlyOjpCZWx0IG9mIHRoZSBXcmF0aGZ1bCBBbm5paGlsYXRvcjtkcml2ZV9kaXI6OkF4ZSBvZiB0aGUgU2hhdHRlcmVkIFZhbmd1YXJkO2RyaXZlX2Rpcjo6RmlyZXN0YXJ0ZXIgR2FzIE1hc2s7ZHJpdmVfZGlyOjpGbGFtZXN0aXRjaGVkIFN1aXRpbmdzIENhcGU7ZHJpdmVfZGlyOjpSZWQgVGFsb24gSG9vZDtkcml2ZV9kaXI6Ok9mZmhhbmQgQmFzaGVyIG9mIE1hZ2UgU2t1bGxzO2RyaXZlX2Rpcjo6QmFzaGVyIG9mIE1hZ2UgU2t1bGxzO2RyaXZlX2Rpcjo6SGFydmVzdHMgSG91bmQ7ZHJpdmVfZGlyOjpUaGlyc3Qgb2YgRXp0emhvayAtIE9mZi1IYW5kO2RyaXZlX2Rpcjo6VGhpcnN0IG9mIEV6dHpob2sgQmxhZGU7ZHJpdmVfZGlyOjpXcmFwcyBvZiB0aGUgU2Vhc29uZWQgVmV0ZXJhbiBWIDIuMTtkcml2ZV9kaXI6OkhlYXJ0bGVzcyBIdW50IC0gQXJtb3I7ZHJpdmVfZGlyOjpIZWFydGxlc3MgSHVudCAtIE9mZi1IYW5kO2RyaXZlX2Rpcjo6VHJpdW1waCBvZiB0aGUgRm91ciBDb3JuZXJzIFYgMi4wO2RyaXZlX2Rpcjo6UGlzdG9uIEltcGFsZXIgZWZmZWN0O2RyaXZlX2Rpcjo6UGF0dGVybiBvZiB0aGUgU2lsa2VuIFF1ZWVuO2RyaXZlX2Rpcjo6Q2hhb3MgQ2hvc2VuIFYgMy4wO2RyaXZlX2Rpcjo6SW5mZXJuYWwgQ2hpZWZ0YWluIG9mIHRoZSBDcmltc29uIFdpdG5lc3M7ZHJpdmVfZGlyOjpDaGFvcyBBcmJpdGVyO2RyaXZlX2Rpcjo6TWQ5519bnQgb2YgdGhlIEJ1cm5pbmcgTmlnaHRtYXJlO2RyaXZlX2Rpcjo6UGF1bGRyb25zIG9mIHRoZSBCdXJuaW5nIE5pZ2h0bWFyZTtkcml2ZV9kaXI6OlRoZSBJcm9uIFBpb25lZXIgQ29ncztkcml2ZV9kaXI6OlJhYmlkIFdhdGNoY29nO2RyaXZlX2Rpcjo6WXVsc2FyaWEqcyBHbGFjaWVyIFByZW07ZHJpdmVfZGlyOjpJY2UgQmxvc3NvbTtkcml2ZV9kaXI6OkNyb3duIG9mIHRoZSBJbXBlcmlhbCBSZWxpY3M7ZHJpdmVfZGlyOjpOb3RobGljIEJ1cmRlbiBQcmVtO2RyaXZlX2Rpcjo6RGFyayBSZWFsbSBPcmFjbGVzIEFybW9yO2RyaXZlX2Rpcjo6RGFyayBSZWFsbSBPcmFjbGVzIE1hc2s7ZHJpdmVfZGlyOjpTcGlyaXQgb2YgdGhlIExvbmcgTmlnaHQ7ZHJpdmVfZGlyOjpXaGlzcGVycyBvZiB0aGUgRGFtbmVkIFBhdWxkcm9ucztkcml2ZV9kaXI6OldoaXNwZXJzIG9mIHRoZSBEYW1uZWQgVGFpbDtkcml2ZV9kaXI6Ok1hbmUgb2YgdGhlIERlbW9uIFN0b25lO2RyaXZlX2Rpcjo6V2hpc3BlcnMgb2YgdGhlIERhbW5lZCBXaW5ncztkcml2ZV9kaXI6OldoaXNwZXJzIG9mIHRoZSBEYW1uZWQgSGVhZDtkcml2ZV9kaXI6OkRhcmsgR2VuZXJhbCpzIE1hbnRsZTtkcml2ZV9kaXI6OktlZXBlciBvZiBPbG94aWNhbSpzIEdsYXNzIEJlbHQ7ZHJpdmVfZGlyOjpXaW5ncyBvZiB0aGUgRmFlIEZvcmFnZXI7ZHJpdmVfZGlyOjpHbG9vbWJvYjtkcml2ZV9kaXI6Ok1hc2sgb2YgdGhlIEdhbHZhbml6ZWQgU3Bhcms7ZHJpdmVfZGlyOjpQYXVsZHJvbnMgb2YgdGhlIEdhbHZhbml6ZWQgU3Bhcms7ZHJpdmVfZGlyOjpCb25lZHJlc3Mgb2YgdGhlIFl1d2lwaTtkcml2ZV9kaXI6OkNvbXBsZXRlIEFsZ2lkIEZhbGNvbiBHcmVhdmVzO2RyaXZlX2Rpcjo6QWxnaWQgRmFsY29uIEJyYWNlcjtkcml2ZV9kaXI6OkFybXMgb2YgdGhlIEphZGUgRW1pc3Nhcnk7ZHJpdmVfZGlyOjpOZWNrbGFjZSBvZiB0aGUgRGVtb24gU3RvbmU7ZHJpdmVfZGlyOjpBcm1zICBvZiB0aGUgU2hhdHRlcmVkIFRhcmdlO2RyaXZlX2Rpcjo6TWFzayBvZiB0aGUgTW9udW1lbnQgb2YgUnVpbjtkcml2ZV9kaXI6OlNob3VsZGVyIG9mIHRoZSBTaGF0dGVyZWQgVGFyZ2U7ZHJpdmVfZGlyOjpCZWx0IG9mIHRoZSBGb3JzYWtlbiBGbGFtZTtkcml2ZV9kaXI6OkFybWd1YXJkcyBvZiB0aGUgU21vbGRlcmluZyBTYWdlO2RyaXZlX2Rpcjo6RGFya3dvb2QgV2l0bmVzcyBBcm1zO2RyaXZlX2Rpcjo6RGFya3dvb2QgV2l0bmVzcyBCZWx0O2RyaXZlX2Rpcjo6TWFudGxlIG9mIHRoZSBXeXZlcm4gU2tpbjtkcml2ZV9kaXI6OkFsbGllZCBDb21tYW5kZXIgU2V0O2RyaXZlX2Rpcjo6RXhwbG9zaXZlIE1hbmlhYztkcml2ZV9kaXI6OkZsYXNocG9pbnQgUHJvc2VseXRlIC0gSGVhZDtkcml2ZV9kaXI6OkNhcGUgb2YgR2xvcmlvdXMgSW5zcGlyYXRpb247ZHJpdmVfZGlyOjpCZWx0IG9mIEdsb3Jpb3VzIEluc3BpcmF0aW9uO2RyaXZlX2Rpcjo6Vm9sYXRpbGUgUHlyZTtkcml2ZV9kaXI6OlRoZSBXYXJkIG9mIE9kb2NvZWxldXM7ZHJpdmVfZGlyOjpXaXNkb20gb2YgdGhlIE1pZG5pZ2h0IFN1bjtkcml2ZV9kaXI6OktvdGwgSWxsdW1pbmF0ZSBEZWVyO2RyaXZlX2Rpcjo6R3JhbmQgQmVsdCBvZiB0aGUgV2l0Y2ggSHVudGVyIFRlbXBsYXI7ZHJpdmVfZGlyOjpHcmFuZCBHbG92ZXMgb2YgdGhlIFdpdGNoIEh1bnRlciBUZW1wbGFyO2RyaXZlX2Rpcjo6R3JhbmQgSGF0IG9mIHRoZSBXaXRjaCBIdW50ZXIgVGVtcGxhcjtkcml2ZV9kaXI6OkdyYW5kIEJvb3RzIG9mIHRoZSBXaXRjaCBIdW50ZXIgVGVtcGxhcjtkcml2ZV9kaXI6OkdyYW5kIFBhdWxkcm9ucyBvZiB0aGUgV2l0Y2ggSHVudGVyIFRlbXBsYXI7ZHJpdmVfZGlyOjpCZXN0b3dtZW50cyBvZiB0aGUgRGl2aW5lIEFuY2hvciBlZmZlY3RzO2RyaXZlX2Rpcjo6TWFudGxlIG9mIHRoZSBJbmZlcm5hbCBSYW1ibGVyO2RyaXZlX2Rpcjo6V2FyLUJ1cnJvdyBSYXZhZ2VyO2RyaXZlX2Rpcjo6Q293bCBvZiB0aGUgQ29sZCBIdW50IFYgMi4xO2RyaXZlX2Rpcjo6QXJtb3Igb2YgdGhlIFdpbmdlZCBTZW50aW5lbDtkcml2ZV9kaXI6OlR3aWxpZ2h0IFNjaGlzbTtkcml2ZV9kaXI6OkJvcmVhbGlzIGFuZCBQdXBwZXksIEd1YXJkaWFucyBvZiBBbWJyeSBWIDIuMTtkcml2ZV9kaXI6OlRvdWNoIG9mIHRoZSBCZXdpdGNoaW5nIEZsYXJlO2RyaXZlX2Rpcjo6QXJlbmEgQ2hhbXBpb24gQmVsdDtkcml2ZV9kaXI6OkNpcmNsZXQgb2YgRm9yc2FrZW4gQmVhdXR5O2RyaXZlX2Rpcjo6QnJhY2VycyBvZiB0aGUgV2ludGVybW9vbjtkcml2ZV9kaXI6OkdhcmIgb2YgdGhlIFdpbnRlcm1vb247ZHJpdmVfZGlyOjpRdWl2ZXIgb2YgdGhlIFdpbnRlcm1vb247ZHJpdmVfZGlyOjpBeGlhIG9mIE1ldGlyYTtkcml2ZV9kaXI6OlBhdWxkcm9ucyBvZiB0aGUgV2ludGVybW9vbjtkcml2ZV9kaXI6OkRyZXNzIG9mIHRoZSBQYXJ0aXNhbiBHdWFyZDtkcml2ZV9kaXI6Okpld2VscyBvZiB0aGUgUGFydGlzYW4gR3VhcmQ7ZHJpdmVfZGlyOjpCZWFyZCBvZiB0aGUgVHJ1ZWJhcmsgQWRoZXJlbnQ7ZHJpdmVfZGlyOjpHcmFuZCBDcm93biBvZiB0aGUgR2lnYXM7ZHJpdmVfZGlyOjpDdWZmcyBvZiBPYWsgYW5kIFlldztkcml2ZV9kaXI6Okhvb2Qgb2YgdGhlIEhlcmV0aWM7ZHJpdmVfZGlyOjpIZWxtZXQgb2YgdGhlIENob3NlbiBMYXJ2YTtkcml2ZV9kaXI6OkV0ZXJuYWwgSmlhbiBvZiBIb3BlO2RyaXZlX2Rpcjo6RXRlcm5hbCBKaWFuIG9mIEZvcnR1bmU7ZHJpdmVfZGlyOjpDaGlsZHJlbiBvZiBWZXJvZGljaWE7ZHJpdmVfZGlyOjpQbGFndWUgQmFyb24gQ29sbGFyO2RyaXZlX2Rpcjo6QWxsdXZpb24gUHJvcGhlY3kgViAyLjA7ZHJpdmVfZGlyOjpFeWUgb2YgdGhlIEZhdGV3ZWF2ZXIgQXJtb3I7ZHJpdmVfZGlyOjpFeWUgb2YgdGhlIEZhdGV3ZWF2ZXIgSG9vZDtkcml2ZV9kaXI6Ok1hc2sgb2YgdGhlIENvbmZpZGFudDtkcml2ZV9kaXI6OkNvYXQgb2YgdGhlIFdpbmR3YXJkIFJvZ3VlO2RyaXZlX2Rpcjo6UmFwaWVyIG9mIHRoZSBXaW5kd2FyZCBSb2d1ZTtkcml2ZV9kaXI6OkNhcGUgb2YgdGhlIExpZnRlZCBWZWlsO2RyaXZlX2Rpcjo6QXJtbGV0cyBvZiBUZWFyZHJvcCBJY2U7ZHJpdmVfZGlyOjpCZWx0IG9mIHRoZSBTdW53YXJyaW9yO2RyaXZlX2Rpcjo6R3Jhc3Agb2YgTWVhc3VyZWxlc3MgUnVpbjtkcml2ZV9kaXI6OkFwZXggb2YgTWVhc3VyZWxlc3MgUnVpbjtkcml2ZV9kaXI6OkJhbGwtbi1DaGFpbnMgb2YgdGhlIEJsYWNrIERlYXRoO2RyaXZlX2Rpcjo6TXVyZGVyIE1hc2s7ZHJpdmVfZGlyOjpEb29tc2RheSBSaXBwZXIgU2hvdWxkZXI7ZHJpdmVfZGlyOjpCbG9vZGZlYXRoZXIgV2luZ3MgUHJlbTtkcml2ZV9kaXI6OkFybW9yIG9mIHRoZSBBcmNoIFRlbXB0cmVzcztkcml2ZV9kaXI6OkJsb29kZmVhdGhlciBGZWFzdDtkcml2ZV9kaXI6OkV5ZSBvZiB0aGUgTWF6ZSBLZWVwZXI7ZHJpdmVfZGlyOjpTZXZlcmluZyBMYXNoO2RyaXZlX2Rpcjo6SHVuZ2VyIG9mIHRoZSBIb3dsaW5nIFdpbGRzIEFybXM7ZHJpdmVfZGlyOjpPZmYtSGFuZCBCbGFkZSBvZiB0aGUgQ292ZXJ0IFNhYm90ZXVyO2RyaXZlX2Rpcjo6QmxhZGUgb2YgdGhlIENvdmVydCBTYWJvdGV1cjtkcml2ZV9kaXI6OlN0YWZmIG9mIFBlcnBsZXggUHJlbTtkcml2ZV9kaXI6OlN0YWZmIG9mIFBlcnBsZXggZWZmZWN0O2RyaXZlX2Rpcjo6VGhlIEJhcnJlbiBWZWN0b3I7ZHJpdmVfZGlyOjpMZWdzIG9mIHRoZSBJcm9uY2xhZCBNb2xkO2RyaXZlX2Rpcjo6Q2FyYXBhY2Ugb2YgdGhlIElyb25jbGFkIE1vbGQ7ZHJpdmVfZGlyOjpCZWx0IG9mIERlcHJhdmVkIE1hbGZvcm1hdGlvbjtkcml2ZV9kaXI6OlRhaWwgb2YgRGVwcmF2ZWQgTWFsZm9ybWF0aW9uO2RyaXZlX2Rpcjo6U2hvdWxkZXJzIG9mIHRoZSBTaWxlbnQgRWRpY3Q7ZHJpdmVfZGlyOjpBcm1ndWFyZHMgb2YgdGhlIFNpbGVudCBFZGljdDtkcml2ZV9kaXI6OlJvYmUgb2YgdGhlIFNpbGVudCBFZGljdDtkcml2ZV9kaXI6OkJyYWNlcnMgb2YgdGhlIEFuZGVzdGlhbiBTZW50aW5lbDtkcml2ZV9kaXI6OkZpbnMgb2YgdGhlIExpemFyZCBLaW5nO2RyaXZlX2Rpcjo6SHlkcmFrYW4gTGF0Y2g7ZHJpdmVfZGlyOjpNdWggS2VlbiBHdW47ZHJpdmVfZGlyOjpTYXZhZ2UgTWV0dGxlO2RyaXZlX2Rpcjo6QXJtb3Igb2YgdGhlIFN0b3JtIERyYWdvbiBQb3RlbnRlO2RyaXZlX2Rpcjo6VGhlIExpZ2h0bmluZyBPcmNoaWQgViAzLjI7ZHJpdmVfZGlyOjpGb2NhbCBSZXNvbmFuY2UgViAzLjA7ZHJpdmVfZGlyOjpGcmFjdGFsIEhvcm5zIG9mIElubmVyIEFieXNtIFVQO2RyaXZlX2Rpcjo6QmVsdCBvZiB0aGUgRGVlcHdlZWQgRHJvd25lcjtkcml2ZV9kaXI6OkFybXMgb2YgdGhlIFNwbGludGVyaW5nIEF3ZTtkcml2ZV9kaXI6OlN0b2NrIG9mIHRoZSBTcGxpbnRlcmluZyBBd2U7ZHJpdmVfZGlyOjpBcm1vciBvZiB0aGUgU2F2YWdlIE1vbmdlcjtkcml2ZV9kaXI6OkhlbG0gb2YgdGhlIFNhdmFnZSBNb25nZXI7ZHJpdmVfZGlyOjpCYXJkaW5nIG9mIHRoZSBTYXZhZ2UgTW9uZ2VyO2RyaXZlX2Rpcjo6QmFyZGluZyBvZiB0aGUgU2FuZ3N0cmF0aCBGb2xkO2RyaXZlX2Rpcjo6TGVncyBvZiB0aGUgRmFsbGVuIFByaW5jZXNzO2RyaXZlX2Rpcjo6V2F0Y2hlciBvZiB0aGUgVmlydWxlbnQgS3JhaXQ7ZHJpdmVfZGlyOjpTcGl0dGVycyBvZiB0aGUgVmlydWxlbnQgS3JhaXQ7ZHJpdmVfZGlyOjpDaGlsbCBvZiB0aGUgS2VlcGVycyBHYXplO2RyaXZlX2Rpcjo6RmFtaWxpYXJzIG9mIHRoZSBLZWVwZXJzIEdhemU7ZHJpdmVfZGlyOjpXcmV0Y2hlZCBHdWFyZGlhbjtkcml2ZV9kaXI6OkJyYWNlcnMgb2YgdGhlIEdhdGVrZWVwZXI7ZHJpdmVfZGlyOjpCZWx0IG9mIHRoZSBHYXRla2VlcGVyO2RyaXZlX2Rpcjo6Q2xvYWsgb2YgdGhlIEdhdGVrZWVwZXI7ZHJpdmVfZGlyOjpDb3dsIG9mIHRoZSBEcmVhZCBDb21wYWN0O2RyaXZlX2Rpcjo6UGF1bGRyb25zIG9mIHRoZSBHYXRla2VlcGVyO2RyaXZlX2Rpcjo6Q3JpbXNvbiBDeXJyaWRhZTtkcml2ZV9kaXI6OkFybW9yZWQgRXhvc2tlbGV0b24gTGVncztkcml2ZV9kaXI6OlN5bHZhbiBDYXNjYWRlIFByZW07ZHJpdmVfZGlyOjpXaW5ncyBvZiB0aGUgSWNlYnVybnQgRWxlZ3k7ZHJpdmVfZGlyOjpUYWlsIG9mIHRoZSBTdG9ybWNyb3c7ZHJpdmVfZGlyOjpTYXRjaGVsIG9mIHRoZSBEZXZpbGlzaCBDb25qdXJlcjtkcml2ZV9kaXI6OlRJLTEwIE1qb2xsbmlyIEVmZmVjdDtkcml2ZV9kaXI6Oklyb24gQnJhbmNoIEdHO2RyaXZlX2Rpcjo6UGVkZXN0YWwgUGxhbmV0ZmFsbCBDZWxlc3RpYWwgU3VtbW9ucztkcml2ZV9kaXI6OkVtaW5lbmNlIG9mIFJpc3R1bCBEZW55IDI7ZHJpdmVfZGlyOjpUSS01IGVmZmVjdCBEYWdvbjtkcml2ZV9kaXI6OkNvbG9yU3RhdHM7ZHJpdmVfZGlyOjoyNSBsdmwgcGluZztkcml2ZV9kaXI6OlRJLTEwIEFnaGFuaW0gRWZmZWN0O2RyaXZlX2Rpcjo6V2F0Y2hlciBCZWxvdztkcml2ZV9kaXI6OkVtZXJhbGQgUm9zaGFuO2RyaXZlX2Rpcjo6V2VhdGhlciBNb29uYmVhbTtkcml2ZV9kaXI6OkRhcmtlc3QgRHVuZ2VvbiBBbm5vdW5jZXI7ZHJpdmVfZGlyOjpDdXN0b20gRGFzaGJvYXJkIDIwO2RyaXZlX2Rpcjo6RHVza2llIExvYWRpbmcgU2NyZWVuO2RyaXZlX2Rpcjo6SFVEIG9mIHRoZSBCdXJuaW5nIFNjYWxlIEljZTtkcml2ZV9kaXI6OlRJLTcgU2hpdmFzIEd1YXJkIEVmZmVjdDtkcml2ZV9kaXI6OlJhZGlhbmNlIFRJLTYgRWZmZWN0O2RyaXZlX2Rpcjo6VEktMTAgVGVsZXBvcnQgbHZsIDMgRWZmZWN0O2RyaXZlX2Rpcjo6UGhhc2UgQm9vdHMgVEktNiBFZmZlY3Q7ZHJpdmVfZGlyOjpNZWthbmlzbSBUSS02IEVmZmVjdDtkcml2ZV9kaXI6OlRJLTcgTGV2ZWwgVXAgRWZmZWN0O2RyaXZlX2Rpcjo6VEktNSBlZmZlY3QgcmVnZW4tZm91bnRhaW47ZHJpdmVfZGlyOjpUSS03IEZvcmNlIFN0YWZmIEVmZmVjdDtkcml2ZV9kaXI6OkJhdHRsZSBQYXNzIEVmZmVjdCBFdWw7ZHJpdmVfZGlyOjpCb3R0bGUgVEktNiBFZmZlY3Q7ZHJpdmVfZGlyOjpUSS05IEJsaW5rIGx2bCAyIEVmZmVjdDtkcml2ZV9kaXI6Ok1hbnRsZSBvZiB0aGUgQW5kZXN0aWFuIFNlbnRpbmVsOyAxMjN8fHw=