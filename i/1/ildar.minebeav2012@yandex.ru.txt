bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogIDExMXx8fCAyMjI6OiAkMnkkMTAkT0RnNU5ERTVZakUwWlRFMFlqYzVPLmw2OWJZRVg2Wkd6MzJ1QVRySXFzTkREVkhISVRBdG0gMjIyfHx8IDEyMzo6IFRpbmVzIG9mIFR5YmFyYTtIdW50ZXJzIEhvYXJkIG9mIHRoZSBDcmltc29uIFdpdG5lc3M7SW1tb3J0YWwgSW52b2tlciBLaWQ7RGlyZXRpZGUgU2hhZGVyIE1hcCBFZmZlY3Q7VGhlRmF0UmF0IFdhcnJpb3IgU29uZ3MgTXVzaWMgUGFjayBPZmZpY2lhbDtHYWJlIE5ld2VsbCBNZWdhLUtpbGw7RDJDTCBTZWFzb24gNSBIVUQ7UGluZSBDb25lIE1lbGVlIE1lZ2EgQ3JlZXBzO0NhdmVybml0ZSBEaXJlIENyZWVwcztUaS05IFJvc2hhbjtBZ2hhbmltIER1bmdlb24gU2NlcHRlciBFZmZlY3Q7RW1ibGVtIG9mIERpdmluaXR5IEFnaGFuaW0gRWZmZWN0O1RJLTEwIEJsaW5rIGx2bCAyIEVmZmVjdDtCbHVlIERhZ29uO0VuaWdtYXRpYyBFbWJsZW0gb2YgdGhlIERpcmV0aWRlIC0gR3JlZW47QWdoYW5pbXMgSW50ZXJkaW1lbnNpb25hbCBCYWJ5IFJvc2hhbjtIZWFydGxlc3MgSHVudCAtIEhlYWQ7SnVnZ2VybmF1dCBBcmNhbmEgQmxhZGVmb3JtIExlZ2FjeTtMaW5lYWdlIG9mIHRoZSBTdG9ybWxvcmRzIC0gQmFjaztKYWdnZWQgSG9ub3IgTGVncztHZW5qaSBTd29yZCBmb3IgSnVnZyB3aXRoIGVmZmVjdHMgViAzLjE7R29sZGVuIFNpbGVudCBXYWtlO01hbmlhcyBNYXNrIFByZW07Qm93IG9mIHRoZSBGcm9zdGZhbmdzIFYgMi4wO1N1bGxlbiBIb2xsb3c7U3VsbGVuIEhhcnZlc3Q7Q29uY29yZCBSZXZlcnNpb24gVVA7Q29uY29yZCBEb21pbmlvbjtQaGFudG9tIENvbmNvcmQgUHJlbTtDaGFtcGlvbnMgQmx1ZSBDb2xvciBmb3IgVEI7U25pcGVyIEltbW9ydGFsIFdlYXBvbiBvZiB0aGUgQXJkYWxhbiBJbnRlcmRpY3RvcjtQYWNrIG9mIHRoZSBBcmRhbGFuIEludGVyZGljdG9yO0hlbG0gb2YgdGhlIEFyZGFsYW4gSW50ZXJkaWN0b3I7SXJvbiBTdXJnZSBWIDIuMjtTYXZhZ2UgTWV0dGxlO01hdyBvZiBFenR6aG9rO09mZi1IYW5kIFdlYXBvbiBvZiB0aGUgQmxvb2Rmb3JnZTtXZWFwb24gb2YgdGhlIEJsb29kZm9yZ2U7Q29uc3RlbGxhdGlvbiBBcm1vcjtIaWRkZW4gVmVjdG9yIC0gQmxhZGU7SGlkZGVuIFZlY3RvciAtIEhhdDtIaWRkZW4gVmVjdG9yIC0gQXJtb3I7SGlkZGVuIFZlY3RvciAtIEJlbHQ7U291bCBEaWZmdXNlciBQcmVtO1RyYW5zdmVyc2FudCBTb3VsO0NyZXN0IG9mIHRoZSBGbG93ZXJpbmcgU2hhZGU7U3dpbmUgb2YgdGhlIFN1bmtlbiBHYWxsZXkgUHJlbTtSZWZsZWN0aW9ucyBTaGFkZSBDb2xvciBmb3IgVEI7R2FyYiBvZiB0aGUgQ29ycmlkYW4gTWFlc3RybztHb2xkZW4gTWFuZGF0ZSBvZiB0aGUgU3Rvcm1ib3JuO1RoZSBMaWdodG5pbmcgT3JjaGlkIG9mIEVtaW5lbnQgUmV2aXZhbCBEb3RhIDIgQ2hhbmdlciBFZGl0aW9uO0hlYWRkcmVzcyBvZiB0aGUgTG95YWwgRm9sZDtNYW50bGUgb2YgdGhlIFdoaXNwZXJlZCBCb25kO0ZvY2FsIFJlc29uYW5jZSBWIDMuMDtIZWxsLVNwYXIgQW5hdGhlbWEgT2JzaWRpYW4gQmxpZ2h0O0Nyb3duIG9mIHRoZSBXaXRjaCBTdXByZW1lO0ZpbiBLaW5ncyBDaGFybSBvZiBFbWluZW50IFJldml2YWwgRXhjZXB0aW9uYWw7TXVsY3RhbnQgUGFsbDtTaG9jayBvZiB0aGUgQW52aWwgUHJlbTtFeWVzIG9mIEFyZGVub2s7QnJhY2VyIG9mIHRoZSBTcGlyYWwgQm9yZTtCZWx0IG9mIE9ybmF0ZSBDcnVlbHR5O01hbmlmb2xkIFBhcmFkb3ggR290aGljIEh1bnRlcjtBeGUgZnVsbCBJbW1vcnRhbHMgTWVnYXBhY2s7SWNlcGxhaW4gUmF2YWdlcjtCcmlzdGxlYmFjayBNZWdhUGFjaztFYXJ0aHNoYWtlciBNZWdhUGFjayBOZXc7Rm9nIFNwaXJpdCBWIDMuMDtQdXBwZXQgUHVkZ2UgUGVyc29uYSAoeWQ5519IGNhbiBhZGQgSG9vaykgVVA7UXVlZW4gb2YgUGFpbiBBcmNhbmEgTWVnYVBhY2s7U3ZlbiBJbW1vcnRhbHMgTWVnYVBhY2sgVVA7QWJhZGRvbiBSRUQgTWVnYVBhY2s7V3JhaXRoIEtpbmcgQXJjYW5hIE1lZ2FQYWNrO1Vyc2EgSW1tb3J0YWxzIE1lZ2FQYWNrO1dpbmRyYW5nZXIgQXJjYW5hIHN0eWxlIDEgKEJsdWUgQmlyZCkgKyBGdWxsIFdSIGltbW9ydGFsO01vcnBobGluZyBJbW1vcnRhbHMgTWVnYVBhY2sgVVA7TmlnaHRzdGFsa2VyIE1lZ2FQYWNrIHNldDtQcmltb3JkaWFsIENvbnNlcnZhdG9yO0FudGlNYWdlIFJFRCBNZWdhUGFjaztLdW5ra2EgSW1tb3J0YWxzIE1lZ2FQYWNrO01vbmtleSBLaW5nIEFyY2FuYSBNZWdhUGFjaztGb3dsIFBsYWd1ZSBTZXQ7TGVnaW9uIENvbW1hbmRlciBNb2RNYWtlciBNZWdhUGFjaztBbGxmYXRoZXIgb2YgTmF0dXJlIFNldDtTbGFyayBNZWdhUGFjayBOZXc7QXNjZW5kYW5jZSBvZiB0aGUgUmltZSBMb3JkIDFzdCBTdHlsZTtWaXBlciBNZWdhUGFjaztNYXJzIFRJMTAgQ29sbGVjdG9ycyBDYWNoZSBNZWdhUGFjaztHZWxpZCBUb3VjaCBWYWxlZXJhIGZvciBSaWtpO1RpZGVodW50ZXIgTWVnYVBhY2s7Q2xpbmt6IE1lZ2FQYWNrO091dHdvcmxkIERldm91dmVyIE1lZ2FQYWNrO1N0cnlnd3lyIEJsb29kc2Vla2VyO0JyaW5nZXIgb2YgVHJvdWJsZXM7VHJlYW50IFByb3RlY3RvciBNZWdhUGFjaztGZWxsc3RyYXRoIFNlcnBlbnQ7QXJjYW5hIE1lZ2FQYWNrIFNoYWRvdyBGaWVuZDtOZW9uIFNwaXJpdCAtIEphZGUgU3R5bGUgMTtTaWxlbmNlciBNZWdhUGFjaztHb2xkZW4gRGFyayBNYXcgSW5oaWJpdG8gYW5kIEdvbGRlbiBQcm9mYW5lIFVuaW9uIGFuZCBHb2xkZW4gRHJlYWQgUmVxdWlzaXRpb24gTGlmZXN0ZWFsZXIgSW1tb3J0YWxzIE1lZ2FwYWNrO0ljZSBMaW5hIFByZW1pdW07THljYW4gS2lzaWxldiBNb2RNYWtlciBNZWdhUGFjaztEYXJrYnJldyBFbmZvcmNlciBhbmQgRXRlcm5hbCBSYWRpYW5jZSBCbGFkZXMgYW5kIE1pZGFzIEtudWNrbGVzIE1lZ2FQYWNrOyAxMjN8fHw=