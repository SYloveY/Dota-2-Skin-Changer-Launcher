bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogIDExMXx8fCAyMjI6OiAkMnkkMTAkT1RRME1UVmpOamMwWm1ZNU9XRXlPLnJwV25UVHEyTEFsYU9lemJPN1hqYVF0cjI2Y1I5eVcgMjIyfHx8IDEyMzo6IFdlYXRoZXIgUmFpbjtIYWlyIG9mIHRoZSBTdXJ2aXZvcjtHb2xkZW4gQmFzaGVyIEJsYWRlcyBWIDIuMDtPZmZoYW5kIEJsYWRlIG9mIHRoZSBTdXJ2aXZvciBQcmVtO0FybW9yIG9mIHRoZSBGb3Jnb3R0ZW4gUGxhbmU7QnJhY2VyIG9mIHRoZSBGb3Jnb3R0ZW4gUGxhbmU7U2hvdWxkZXIgUGxhdGUgb2YgdGhlIEZlcnZlbnQgQ29uc2NyaXB0O0JlbHQgb2YgdGhlIFN1cnZpdm9yO1ZvaWNlIG9mIFRoZSBJbnRlcm5hdGlvbmFsIE1lZ2EtS2lsbDtEZWNsYXJhdGlvbiBvZiB0aGUgRGl2aW5lIExpZ2h0IFJhZGlhbnQgVG93ZXJzO0RlY2xhcmF0aW9uIG9mIHRoZSBEaXZpbmUgU2hhZG93IERpcmUgVG93ZXJzO0NoaWNrZW4gSHV0IFdhcmQ7VGhlRmF0UmF0IFdhcnJpb3IgU29uZ3MgTXVzaWMgUGFjayBPZmZpY2lhbDtBcmNhbmEgU0YgRGVtb24gRWF0aGVyO0FyY2FuZSBEcmFwaW5ncztBcmNhbmUgU2lnaHQ7QXJjYW5lIEZpc3Q7QXJjYW5lIFNoaWVsZDtBc3Nhc3NpbmF0aW9uIG9mIERhcmsgRmVhdGhlciBIZWFkO1R3aWxpZ2h0IEVmZmlneSBBcm1vcjtBcm1zIG9mIERlc29sYXRpb247SGF0IG9mIHRoZSBXaXRjaCBIdW50ZXIgVGVtcGxhcjtQZWdsZWcgb2YgdGhlIEN1cnNlZCBQaXJhdGU7R2VudWluZSBBZ2VkIFNwaXJpdCBvZiBUaWRlO0ZsaW50bG9jayBvZiB0aGUgRGl2aW5lIEFuY2hvcjtDb2F0IG9mIHRoZSBQYWNrLUljZSBQcml2YXRlZXI7R2hvc3QgQmxhZGUgb2YgU2VhYm9ybmUgUmVwcmlzYWw7QnJhY2VyIG9mIHRoZSBTcGlyYWwgQm9yZTtCZWx0IG9mIE9ybmF0ZSBDcnVlbHR5O0V5ZXMgb2YgQXJkZW5vaztTaG9jayBvZiB0aGUgQW52aWwgUHJlbTtUcnVuayBvZiB0aGUgT3JuYXRlIENydWVsdHk7SGlkZGVuIFZlY3RvciAtIEFybW9yO0hpZGRlbiBWZWN0b3IgLSBIYXQ7SGlkZGVuIFZlY3RvciAtIEJlbHQ7SGlkZGVuIFZlY3RvciAtIEJsYWRlO1Rvcm1lbnRlZCBTdGFmZiBvZiBFbWluZW50IFJldml2YWw7VGhlIE9yZGVyIG9mIEN5cHJpbjtCbG9zc29tIG9mIHRoZSBNZXJyeSBXYW5kZXJlcjtNZXJyeSBXYW5kZXJlcipzIEJydXNoIFByZW07Q3Jvd24gb2YgQ3VyaWQ5519cyBDb2xkc3BlbGw7Q3JpbXNvbiBQaXF1ZSBQcmVtO1NraXR0ZXJpbmcgRGVzb2xhdGlvbiBQcmVtO09yaWdpbiBvZiB0aGUgVW5tYWtpbmc7RW5kbGVzcyBOaWdodG1hcmUgU2hvdWxkZXI7Q29sbGFyIG9mIHRoZSBNYWQgTXV0aW5lZXI7R2xhcmUgb2YgdGhlIFR5cmFudDtCZWx0IG9mIFZpbGUgQ29udm9jYXRpb247VHJhbnN2ZXJzYW50IFNvdWw7UmljayBhbmQgTW9ydHkgQW5ub3VuY2VyO0Zyb3plbiBWb2lkO1Jla2luZGxlZCBBc2hlcyBWIDIuMDtCYWxhbmNlIG9mIHRoZSBCbGFkZWtlZXBlcjtNb3JwaGxpbmcgSW1tb3J0YWxzIE1lZ2FQYWNrIFVQO0FybXMgb2YgdGhlIEJvZ2F0eXI7TW9ua2V5IEtpbmcgQXJjYW5hIE1lZ2FQYWNrO0FzcGVjdCBvZiB0aGUgWWVhciBCZWFzdDtXcmF0aCBvZiB0aGUgQ2VsZXN0aWFsIFNlbnRpbmVsO1NpbHZlcnd1cm0gU2FjcmlmaWNlO1N0cmFuZ2VyIGluIHRoZSBXYW5kZXJpbmcgSXNsZXM7Q29ycmlkYW4gTWFlc3RybyBhbmQgVGhlIExpZ2h0bmluZyBPcmNoaWQgYW5kIEdvbGRlbiBNYW5kYXRlIG9mIHRoZSBTdG9ybWJvcm4gTWVnYVBhY2sgTkVXO0FyY2FuZSBJbnZlcnRlcjtMaWZlc3RlYWxlciBNZWdhUGFjaztMZWdpb24gQ29tbWFuZGVyIE1vZE1ha2VyIE1lZ2FQYWNrO0VtYmVyY2xhdyBXaXRjaDtNaXJhbmEgVEkxMCBDb2xsZWN0b3JzIENhY2hlIE1lZ2FQYWNrO1BsYW5ldGZhbGwgYW5kIEp1ZGdlbWVudCBvZiB0aGUgRmFsbGVuIGFuZCBCcmFjZXJzIG9mIHRoZSBDYXZlcm4gTHVtaW5hciBBUkNBTkEgTWVnYVBhY2s7UHlyZXhhZSBQb2x5bW9ycGggUGVyZmVjdGVkO0Zvd2wgUGxhZ3VlIFNldDtTY2FsZXMgb2YgdGhlIFNoYWRvdyBXYWxrZXI7RnJvemVuIEZhbGNoaW9uYWlyZTtUZXN0IG9mIHRoZSBCYXNpbGlzayBMb3JkO1F1ZWVuIG9mIFBhaW4gQXJjYW5hIE1lZ2FQYWNrO01hcmNoIG9mIHRoZSBDcmFja2VyamFjayBNYWdlO09tbmlrbmlnaHQgTWVnYVBhY2s7RGF5cyBvZiB0aGUgRGVtb247RGFya2JyZXcgRW5mb3JjZXIgYW5kIEV0ZXJuYWwgUmFkaWFuY2UgQmxhZGVzIGFuZCBNaWRhcyBLbnVja2xlcyBNZWdhUGFjaztBQU1lZ2FQYWNrO1Rvb2xzIG9mIHRoZSBIZWxsc3dvcm47VGhlIFRydWUgQ3JvdyBWIDIuMDtTbW9reSBEcmVhbWVyO0pha2lybyBNZWdhUGFjaztDaGFyZ2Ugb2YgdGhlIFR1bmRyYSBXYXJkZW47R2FyYiBvZiB0aGUgR3JlYXQgRGVsdWdlO0dydWVzb21lIEVtYnJhY2U7U3Rvcm15IFJpa2kgViAyLjA7U2lsZW5jZXIgVEkxMCBDb2xsZWN0b3JzIENhY2hlIE1lZ2FQYWNrO1NsYXJkYXIgTWVnYVBhY2sgc2V0O1NreXdyYXRoIE1hZ2UgTWVnYVBhY2sgVGhhbmF0b3M7T2NjdWx0aXN0cyBQdXJzdWl0O1NsYXJrIE1lZ2FQYWNrIE5ldztVbmJyb2tlbiBTdGFsbGlvbjtMb3JkIG9mIHRoZSBTY291cmluZyBEdW5lcyBWIDIuMDtUaWRlaHVudGVyIE1lZ2FQYWNrO1dpdGNoIERvY3RvciBNZWdhUGFjaztUaW1iZXJzYXcgTWVnYVBhY2s7QXp0ZWMgV2FycmlvcjtUcmVhbnQgUHJvdGVjdG9yIE1lZ2FQYWNrO1Vyc2EgSW1tb3J0YWxzIE1lZ2FQYWNrOyAxMjN8fHw=