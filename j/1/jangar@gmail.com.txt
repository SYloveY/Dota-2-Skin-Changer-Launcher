limitHWID:: 1 000||| 111::  111||| 222:: $2y$10$NTZmMzMzM2RlYjAxNmUxNeoRQSh4HbbiEHlGaDRjlz8yUT2oUl.6e 222||| 123:: Hair of the Survivor;Golden Origins of Faith Prem;Golden Silent Wake;Arcana Dread Retribution Master of Madness;Bracers of the Cavern Luminar;Golden Gravelmaw Prem;Planetfall;Immortal Invoker Kid;Gothic Whisper Cape;Gothic Whisper Belt;Codicil of the Veiled Ones;Avowance of the Crimson Witness;Manifold Paradox PA Arcana Style 3;Grand Abscession;Mindless Slaughter - Belt;Grand Abscession Chain;Mindless Slaughter - Mask;Insatiable Bonesaw Prem;Mindless Slaughter - Arms;Golden Scavenging Guttleslug;Arcana SF Demon Eather;Souls Tyrant Shoulder;Phantom Ascension Belt;Phantom Ascension;Transversant Soul of the Crimson Witness Prem;Soul Diffuser Prem;Garb of the Corridan Maestro;Golden Mandate of the Stormborn;The Lightning Orchid of Eminent Revival Exceptional;Hidden Vector - Armor;Hidden Vector - Belt;Hidden Vector - Hat;Hidden Vector - Blade;Aghanims Interdimensional Baby Roshan;Declaration of the Divine Light Radiant Towers;Declaration of the Divine Shadow Dire Towers;Woodland Warbands - Dire Creeps;Woodland Warbands - Dire Siege Creeps;Woodland Warbands - Radiant Creeps;Woodland Warbands - Radiant Siege Creeps;Terrain - Sanctums of the Divine;TI-9 Bottle Effect;TI-10 Blink lvl 2 Effect;Enigmatic Emblem of the Diretide - Blue;TI-9 Phase Boots Effect;TI-9 Level Up Effect;TI-10 Fountain lvl 3 Effect;TI-8 Seasonal Creep Deny Effect;TI-9 Teleport lvl 3 Effect;Tomo*kan Incarnate Armor;Tomo*kan Incarnate Hood;Tomo*kan Incarnate Tail;Tomo*kan Incarnate Arbalest;Benevolent Companion Prem;Hell-Spar Anathema Obsidian Blight;Mulctant Pall of the Crimson Witness;Fin Kings Charm of Eminent Revival Exceptional;Horns of the Betrayer;Flockhearts Gamble Resplendent Firelark;Auspice of the Whyrlegyge;Gimlek Decanter;Stonebreak Excavators - Arms;Stonebreak Excavators - Belt;Pyramid of the Temple of the Fallen Sun;Feathers of the Vermillion Crucible;Blaze of Oblivion Head;Rubick Arcana;Head of the Impossible Realm;Crux of Perplex Arcana Style;Golden Staff of Perplex Prem;Monkey King Arcana MegaPack;Outworld Devouver MegaPack;Windranger Arcana style 2 + WR immortal; 123|||