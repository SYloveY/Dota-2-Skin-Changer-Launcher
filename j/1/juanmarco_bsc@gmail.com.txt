bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogIDExMXx8fCAyMjI6OiAkMnkkMTAkWVRRMlptWmhOR0U0TWpOak1XTmpZT2FnV1Y5emdCekRBWmk0RFg0cS9SbG85SnhPNHNUNkMgMjIyfHx8IDEyMzo6IEdvbGRlbiBPcmlnaW5zIG9mIEZhaXRoIFByZW07QnJhY2VycyBhbmQgU2hvdWxkZXJzIG9mIHRoZSBTdXJ2aXZvcjtCZWx0IG9mIHRoZSBTdXJ2aXZvcjtIYWlyIG9mIHRoZSBTdXJ2aXZvcjtPZmZoYW5kIEJsYWRlIG9mIHRoZSBTdXJ2aXZvciBQcmVtO0JsYWRlIG9mIHRoZSBTdXJ2aXZvcjtNYXcgb2YgRXp0emhvaztUaGlyc3Qgb2YgRXp0emhvayBCdW5kbGUgUHJlbTtEb3RhIDIgQ2hhbmdlciBFZGl0aW9uIEh1bnRlcnMgSG9hcmQgb2YgdGhlIENyaW1zb24gV2l0bmVzcztIZWFydGxlc3MgSHVudCAtIEhlYWQ7VGluZXMgb2YgVHliYXJhO0RpYWJvbGljIEFzcGVjdDtUYWxvbnMgb2YgdGhlIEVuZGxlc3MgU3Rvcm0gTWQ5519bnQ7R29sZGVuIENoYW9zIEZ1bGNydW07Q2hhb3MgQXJiaXRlcjtNYXJheGlmb3JtcyBJcmUgUHJlbTtUaGUgR2F0ZXMgb2YgTm90aGw7UGlwZSBvZiBEZXp1biBQcmVtO0dvbGRlbiBOb3RobGljIEJ1cmRlbiBQcmVtO1N3b3JkIG9mIHRoZSBPdXRsYW5kIFJhdmFnZXI7S2luZHJlZCBvZiB0aGUgSXJvbiBEcmFnb24gViAzLjA7U2lsZW50IFdha2Ugb2YgdGhlIENyaW1zb24gV2l0bmVzcztSZWFwZXJzIFdyZWF0aDtCcmFjZXJzIG9mIHRoZSBDYXZlcm4gTHVtaW5hcjtQbGFuZXRmYWxsO0p1ZGdlbWVudCBvZiB0aGUgRmFsbGVuO1R1bmljIG9mIHRoZSBXYW5kZXJpbmcgRmxhbWU7TWFzdGVyIG9mIHRoZSBTZWFyaW5nIFBhdGggT2ZmLUhhbmQ7TWFzdGVyIG9mIHRoZSBTZWFyaW5nIFBhdGggSGVhZDtBcG9nZWUgb2YgdGhlIEd1YXJkaWFuIEZsYW1lO01hc3RlciBvZiB0aGUgU2VhcmluZyBQYXRoIFdlYXBvbjtGYWNlbGVzcyBNYWRuZXNzO0NyaW1zb24gQnJhY2VycyBvZiBBZW9ucyBQcmVtO0pld2VsIG9mIEFlb25zO01hY2Ugb2YgQWVvbnMgUHJlbTtDb25lIG9mIHRoZSBWZXNwaWR1biBIdW50ZXItS2lsbGVyO0hlYWQgb2YgdGhlIFZlc3BpZHVuIEh1bnRlci1LaWxsZXI7UHJvcGVsbGVycyBvZiB0aGUgVmVzcGlkdW4gSHVudGVyLUtpbGxlcjtHb2xkZW4gQXRvbWljIFJheSBUaHJ1c3RlcnMgUHJlbTtKYWdnZWQgSG9ub3IgTWFzaztKYWdnZWQgSG9ub3IgQnJhY2VyO0phZ2dlZCBIb25vciBCYW5uZXI7Rm9ydHVuZXMgVG91dCBQcmVtO0phZ2dlZCBIb25vciBMZWdzO0dvbGRlbiBFZGdlIG9mIHRoZSBMb3N0IE9yZGVyO1Rvcm1lbnRlZCBTdGFmZiBvZiBFbWluZW50IFJldml2YWwgRXhjZXB0aW9uYWw7RHJlc3Mgb2YgdGhlIEJld2l0Y2hpbmcgRmxhcmUgUHJlbWl1bTtHbG9yeSBvZiB0aGUgRWxkZXJmbGFtZSAtIEFybXM7U291bCBvZiB0aGUgU2xheWVyIFByZW07SGVsbSBvZiB0aGUgRGFyayBNb29uIFN0YWxrZXI7R29sZGVuIFR3aWxpZ2h0IFNjaGlzbTtHb2xkZW4gTW9vbmZhbGwgUHJlbTtFeWVzIG9mIEFyZGVub2s7U2hvY2sgb2YgdGhlIEFudmlsIFByZW07Rm9yc3dvcm4gTGVnYWN5IC0gQXJtb3I7R29kcyBNZXJjeSBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzO0NyaW1zb24gUHJvZ2VuaXRvcnMgQmFuZTtTdWxsZW4gUmFtcGFydDtHb2xkZW4gU3VsbGVuIEhvbGxvdyBQcmVtO1N1bGxlbiBIYXJ2ZXN0O0NvZGljaWwgb2YgdGhlIFZlaWxlZCBPbmVzO0F2b3dhbmNlIG9mIHRoZSBDcmltc29uIFdpdG5lc3M7TWFuaWZvbGQgUGFyYWRveCBQQSBBcmNhbmEgU3R5bGUgMztDb25jb3JkIFJldmVyc2lvbiBVUDtDb25jb3JkIERvbWluaW9uO1BoYW50b20gQ29uY29yZCBQcmVtO0Jsb3Nzb20gb2YgdGhlIE1lcnJ5IFdhbmRlcmVyO0Nyb3duIG9mIHRoZSBBZ2VsZXNzIEZhZTtDaGFsaWNlIG9mIEl4eXhhO0dvbGRlbiBTZXZlcmluZyBDcmVzdCBQcmVtO1NldmVyaW5nIExhc2ggUHJlbTtIb3JucyBvZiBFdGVybmFsIEhhcnZlc3QgUHJlbTtHcmlwcyBvZiBFdGVybmFsIEhhcnZlc3QgUHJlbTtQYXVsZHJvbnMgb2YgRXRlcm5hbCBIYXJ2ZXN0IEQyQyBFZGl0aW9uO0FzcGVjdCBvZiBPc2NpbGxhO1NoYWRvdyBpbiB0aGUgRGVlcCBBcm1vcjtCbGFja3NhaWwgQ2Fubm9uZWVyIEhhdDtCbGFja3NhaWwgQ2Fubm9uZWVyIFNob3VsZGVyO0dvbGRlbiBGdWxsLUJvcmUgQm9uYW56YTtTbmlwZXIgSW1tb3J0YWwgV2VhcG9uIG9mIHRoZSBBcmRhbGFuIEludGVyZGljdG9yO1BoYW50b20gQWR2ZW50IEJlbHQgVVA7UGhhbnRvbSBBZHZlbnQgVVA7U291bCBEaWZmdXNlciBWIDIuMTtUcmFuc3ZlcnNhbnQgU291bDtGb2NhbCBSZXNvbmFuY2UgViAzLjA7Rmx1dHRlcmluZyBBbWV0aHlzdCBUcmFwICsgSWNvbjtSb2xsZXJtYXdzdGVyIGFuZCBNZWNoYSBCb290cyBvZiBUcmF2ZWwgTWsgSUlJO0FyY2FuaWMgUmVzb25hbmNlIEJlYW07QW5jaWVudCBJbmhlcml0YW5jZSAtIFNob3VsZGVyO0FuY2llbnQgSW5oZXJpdGFuY2UgLSBCZWx0O0FuY2llbnQgSW5oZXJpdGFuY2UgLSBOZWNrO0FuY2llbnQgSW5oZXJpdGFuY2UgLSBCYWNrO0FuY2llbnQgSW5oZXJpdGFuY2UgLSBXZWFwb247U2NhbGUgb2YgQml0dGVyIFNwb2lsIEltbW9ydGFsIFVQO0JpdHRlciBMaW5lYWdlIEltbW9ydGFsIEF4ZXM7SGlkZGVuIFZlY3RvciAtIEFybW9yO0hpZGRlbiBWZWN0b3IgLSBIYXQ7SGlkZGVuIFZlY3RvciAtIEJlbHQ7SGlkZGVuIFZlY3RvciAtIEJsYWRlO1NraXR0ZXJpbmcgRGVzb2xhdGlvbiBQcmVtO0NyaW1zb24gUGlxdWU7R29sZGVuIEN5cnJpZGFlIFByZW07VGVtcGVzdCBIZWxtIG9mIHRoZSBUaHVuZGVyZ29kICsgUmlnaHRlb3VzIFRodW5kZXJib2x0O1RlbXBlc3QgUmV2ZWxhdGlvbjtQbGFuZXRmYWxsIEZpcmUgQmxpbms7VEktOSBCb3R0bGUgRWZmZWN0O0RpcmUgTmVtZXN0aWNlIENyZWVwcztSYWRpYW50IE5lbWVzdGljZSBDcmVlcHM7VEktOSBTZWFzb25hbCBDcmVlcCBEZW55IEVmZmVjdDtFbWJsZW0gb2YgdGhlIENyeXN0YWwgRWNoZWxvbjtUSS05IEV1bCBTY2VwdGVyIEVmZmVjdDtUSS05IEZvcmNlIFN0YWZmIEVmZmVjdDtUSS05IEZvdW50YWluIGx2bCAzIEVmZmVjdDtUSS05IExldmVsIFVwIEVmZmVjdDtUSS03IE1la2Fuc20gRWZmZWN0O1RJLTkgTWpvbGxuaXIgRWZmZWN0O1RJLTkgUGhhc2UgQm9vdHMgRWZmZWN0O1RJLTkgUmFkaWFuY2UgRWZmZWN0O1RJLTkgU2hpdmFzIEVmZmVjdDtUSS05IFRlbGVwb3J0IGx2bCAzIEVmZmVjdDtQbGFuZXRmYWxsIFN0dW4gRWZmZWN0O0RlY2xhcmF0aW9uIG9mIHRoZSBEaXZpbmUgU2hhZG93IERpcmUgVG93ZXJzO0RlY2xhcmF0aW9uIG9mIHRoZSBEaXZpbmUgTGlnaHQgUmFkaWFudCBUb3dlcnM7VGVycmFpbiAtIFNhbmN0dW1zIG9mIHRoZSBEaXZpbmU7V2VhdGhlciBCbHVlIFNreSBmcm9tIFNvdXAgZm9yIFNsdXRzO0FiYWRkb24gUkVEIE1lZ2FQYWNrO0RhcmticmV3IEVuZm9yY2VyIGFuZCBFdGVybmFsIFJhZGlhbmNlIEJsYWRlcyBhbmQgTWlkYXMgS251Y2tsZXMgTWVnYVBhY2s7QnJpc3RsZWJhY2sgTWVnYVBhY2s7TWFyYXhpZm9ybXMgRmF0ZSBCdW5kbGU7RG9vbSBJbW1vcnRhbHMgTWVnYVBhY2s7RXhwbG9zaXZlIE1hbmlhYztLdW5ra2EgSW1tb3J0YWxzIE1lZ2FQYWNrO1RodW5kZXIgR3JpZmZpbjtMZWdpb24gQ29tbWFuZGVyIE1vZE1ha2VyIE1lZ2FQYWNrO0dvbGRlbiBEYXJrIE1hdyBJbmhpYml0byBhbmQgR29sZGVuIFByb2ZhbmUgVW5pb24gYW5kIEdvbGRlbiBEcmVhZCBSZXF1aXNpdGlvbiBMaWZlc3RlYWxlciBJbW1vcnRhbHMgTWVnYXBhY2s7TGluZWFnZSBSZWRlbXB0aW9uIG9mIHRoZSBSYWlkZm9yZ2VkIFJpZGVyO01lZHVzYSBNZWdhUGFjayBORVc7TW9ycGhsaW5nIEltbW9ydGFscyBNZWdhUGFjayBVUDtNb25rZXkgS2luZyBBcmNhbmEgTWVnYVBhY2s7Rm93bCBQbGFndWUgU2V0O09ncmUgTWFnaSBJbW1vcnRhbHMgQXJjYW5hIE1lZ2FQYWNrO091dHdvcmxkIERldm91dmVyIE1lZ2FQYWNrO1B1Z25hIE1lZ2FQYWNrO1F1ZWVuIG9mIFBhaW4gQXJjYW5hIE1lZ2FQYWNrO1NpbGVuY2VyIE1lZ2FQYWNrO1NlcmFwaCBDZWxlc3RpYWwgU2V0O1NsYXJkYXIgTWVnYVBhY2sgc2V0O1NsYXJrIE1lZ2FQYWNrIE5ldztTdmVuIEltbW9ydGFscyBNZWdhUGFjayBVUDtDb3JyaWRhbiBNYWVzdHJvIGFuZCBUaGUgTGlnaHRuaW5nIE9yY2hpZCBhbmQgR29sZGVuIE1hbmRhdGUgb2YgdGhlIFN0b3JtYm9ybiBNZWdhUGFjayBORVc7TmVvbiBTcGlyaXQgLSBKYWRlIFN0eWxlIDI7UHJvdmluY2Ugb2YgdGhlIFBzaW9uIElucXVpc2l0b3I7VGlkZWh1bnRlciBNZWdhUGFjaztEIE9jdG8gVGlua2VyO1Vyc2EgSW1tb3J0YWxzIE1lZ2FQYWNrO1Zpc2lvbiBvZiB0aGUgU2VyYXBoIFNjaW9uIC0gUm95YWw7VmlwZXIgTWVnYVBhY2s7V2luZHJhbmdlciBBcmNhbmEgc3R5bGUgMSAoQmx1ZSBCaXJkKSArIEZ1bGwgV1IgaW1tb3J0YWw7V3JhaXRoIEtpbmcgQXJjYW5hIE1lZ2FQYWNrOyAxMjN8fHw=