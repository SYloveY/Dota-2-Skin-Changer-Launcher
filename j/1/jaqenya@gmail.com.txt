limitHWID:: 1 000||| 111::  111||| 222:: a17ebf7fde8b8713ac16eccbea8d53b15a1ba60c3866cea29d864a68630c8d5bca0101aff46d928a36e001c17886503e288aafbbf1222a8e2a072bb7c21e345a 222||| 123:: Tempest Helm of the Thundergod Prem;Baby Roshan Prem;Eternal Radiance Blades Prem;Razzils Midas Knuckles Prem;The Basher Blades;Rampant Outrage Prem;Eternal Machine Head V 3.0;Nothlic Burden of the Crimson Witness Prem;Axe of Phractos Prem;Breaking Emerald;Heat;Crown of Nezzureem;Mace of Nezzureem;Bonds of Madness Set Style 1;Staff of Gun-Yu;Hazhadal Magebreaker;River Vial Green;MLG Tethered Sentinel;TI-8 Fountain lvl 1 Effect;TI-8 LVL UP Effect;TI-8 Mekansm Effect;TI-8 Phase Boots Effect;TI-8 TP lvl 1 Effect;Elder Bark HUD;Juggernaut Mega-Kill;Shoulders of the Fortified Fabricator;Helmet of the Fortified Fabricator;Controls of the Fortified Fabricator;Ballista of the Fortified Fabricator;Cannon of the Fortified Fabricator;Juggernaut Announcer;Crystal Basim;Gladiator*s Revenge Trident;Dread Retribution - Headwear Alt;Golden Baby Roshan;Four Armed Observer Ward;Woodland Warbands - Dire Creeps;Woodland Warbands - Dire Siege Creeps;Woodland Warbands - Radiant Creeps;Woodland Warbands - Radiant Siege Creeps;River Vial Potion;Bloody Baby Invoker;Marauder Chieftain of the Chaos Wastes;Charge of the Wrathrunner;Chaos Chosen V 3.0;Daemon Prince of Khorne V 2.1;Rider of the Storm Set;Gifts from the Gloom Set V 3.0;Dragons Ascension V 3.0;Crimson Beast V 3.0;Visions of the Forsaken Flame;Ancient Cultist V 2.1;Reckless Vigor V 2.1;Swooping Elder;Covenant of the Depths;Seaborne Reprisal;Desolate Conquest;Bloody Ripper;Dragonfire V 2.0;Rage of the Dark Wood v 2.0;Dark Moon Stalker V 2.1;Hunter of Kings V 2.0;Vindictive Protector V 2.1;Crystal Scavenger;Darkfall Warden no effects V 2.1;Riptide Raider V 2.0;Direstone Bindings Set;Allure of the Deep;Vanguard of the Emerald Insurgence;Apostle of Decay V 2.1;Carapace of the Hidden Hive Set;Unfettered Malevolence;Herald of Measureless Ruin V 2.1;Dame de Carreau;Creeping Shadow;Raiments of Twilight Shade;Cunning Corsair;Arcane Defiance;Elusive Destroyer V 2.0;Garb of Shades V 2.0;Eye of the Maze Keeper;Bastion of the Lionsguard;Ocean Conqueror;Exact Marksman;Enduring Solitude;Elemental Imperator V 2.0;Cyclopean Marauder;Arms of Rising Fury;Shadows of the Wuxia;The Boreal Sentinel;Tipsy Brawler;March of the Powderkeg Patrol;Aspect of the Year Beast;Bearer of the Arkturan Talon;The Dusk Crawler Set;Swift Pathfinder Set;Dreadhawk Armor;Ferocious Heart;Corruption of the Virulent Krait;Harsh Sojourn;Stygian Maw;Antipodean Allies;Hunt of the Weeping Beast;Pudge TI10 Collectors Cache MegaPack; 123|||