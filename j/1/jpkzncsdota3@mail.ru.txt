limitHWID:: 1 000||| 111::  111||| 222:: $2y$10$ZmZjOTVhMThlYTU2YTJjNeoXVKxIXtT1p7qZ7pkNi03fO9ADiagfG 222||| 123:: Bowling Champion Head;Mask of Unblinking Eternity;Face of Inerrant Eminence;Dimension Ripper Arms;Armored Exoskeleton Wings;Great Sage*s Reckoning;Staff of Gun-Yu;Bandana of the Bone Ruin Bandits;The Family Values Back;Helm of the Slithereen Exile;Robes of the Captive Princess;Lycosidae*s Brood;Crow of Empiric Incendiary;The Song of Swiftguard - Helm;Arms of Desolation;King of Vipers Shoulder;Soul Corpulence - Head;Wavecutter;Amberlight Hood;Hood of Lucid Torment;Eyes of Lucid Torment;Visage of the Sleepless Sect;Owl of the Stoutheart Growler;Whirling Talons Mask;Blade of the Subtle Demon - Off-Hand;Heir*s Gift;Hair of the Imperious Command;Contessa*s Creed Hat;Cape of Falconside Armor;WW Polar Night Back;Complete Wings of the Ethereal Monarch;Adventurers of Fortune Head;Tempest Helm of the Thundergod Prem;Symbol of the King Restored;Golden Immortal Pantheon;Arena Champion Spear;Arena Champion Shield;Avatar of the Hunter of Kings;Mulctant Pall;Red Wisp;Force of Kylin Back;Ire of the Hinterlands Crown;Battle Banner of the Masked;Barding of Chimeric Rapport;Burglar of Wasp Back;Arcane Infestation Head;Memories of the Vow Eternal;Researcher of Oblivion Magic;Dame de Carreau;Raiments of Twilight Shade;Storm Dragon Potente;Flowering Shade V 2.0;Shooting Star;Masks of Mischief;The Riftshadow Roamers Set;Stellar Jade;Wail of the Winter Revenant;Crimson Beast V 3.0;Airborne Assault Craft;Allure of the Deep;Covenant of the Depths;New Chieftain Style 1;Time Wanderer;Seaborne Reprisal;Might of the Galloping Avenger V 2.1;Stagheart Sovereign;Tales of the Windward Rogue;Surgical Precision;Sea Djinn;Shivshell Crawler;Rhinoceros Order;USSR TINKER;The Fate Fiddler;Mystic of Celestial Art;Caerula Silva;Arabian Riders;Wardens Watch;Black Orc Warboss V 2.0;Hunt of the Weeping Beast;Marauder Chieftain of the Chaos Wastes;Chaos Chosen V 3.0;Emerald Frenzy Set;Elusive Destroyer V 2.0;Garb of the Cruel Magician Set;Cloud Forged Battle Gear Set V 2.1;Illidan Stormrage for Terrorblade V 2.0;Hidden Flower;Barrier Rogue;Troll Warlord JahRakal;Resentment of the Banished Princess;Hunter of the Crystal Drift;Bindings of the Battleranger;Markswomans Cap;Chilling Feather;Arms of the Bogatyr;Alluring Mesmer;Harsh Sojourn;Antipodean Allies;Imperial Envoy;Trail of the Grey Ghost;Clan of the Arctic Owlbear;Divine Flame V 2.0;Demons Bacchanal;Dark Forest Punisher;Ascendance of the Rime Lord 2nd Style;The Path of Odocoeleus;The Baptism of Melting Fire;The Jade General;The Hollow Set;The Frostborne Wayfarer;Neverdying Knight Set;Fires of Vashundol no effect V 2.1;Kirin Rider Set;Smoky Dreamer;Little Witch Set;Manipulator of Warsituation;Royal Winterbloom;Savior for Jungles Honor;Nomad of the Burning Decree;Tipsy Brawler;Djinn Slayer V 2.1; 123|||