bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogIDExMXx8fCAyMjI6OiAkMnkkMTAkWWpjek1UTmhOMlJqTVdZMlltUmpaLk1oQzdmbHJLMEpGaVdGNVZWdHdRRVhmUkxCTEwwclMgMjIyfHx8IDEyMzo6IEJhcmRpbmcgb2YgQ2hpbWVyaWMgUmFwcG9ydDtTYWdhcyBvZiB0aGUgQ3ltdXJyaW4gU2FnZTtNYWplc3R5IE9mIFRoZSBDb2xvc3N1cyAtIFBlYmJsZTtDb21wbGV0ZSBXaW5ncyBvZiB0aGUgRXRoZXJlYWwgTW9uYXJjaDtUZW1wZXN0IEhlbG0gb2YgdGhlIFRodW5kZXJnb2QgUHJlbTtDYXBlIG9mIHRoZSBSaXNpbmcgR2FsZTtCb3cgb2YgdGhlIEJhdHRsZXJhbmdlcjtTb25nIG9mIHRoZSBCbHVlYmlyZCAtIEhvb2Q7QXJtb3Igb2YgdGhlIFJpc2luZyBHYWxlO0lndWFuYSpzIFF1aXZlcjtUZXJyYWluIC0gV2ludGVyO1BlZGVzdGFsIEJsYWRlZm9ybSBMZWdhY3k7VEktOSBNZWthc20gRWZmZWN0O0JsaW5rIERhZ2dlciBsdmwgMSBUSS02IEVmZmVjdDtUSS0xMCBCb3R0bGUgRWZmZWN0O0FybW9yIG9mIHRoZSBFcXVpbGlicml1bTtHYXJiIG9mIHRoZSBQcm9waGV0IEZvcmV0b2xkO1JlcHRpbGlhbiBSZWZ1Z2UgUmFkaWFudCBDcmVlcHM7UXVlc3Rpb24gbWFyayBEZW55O1JlcHRpbGlhbiBSZWZ1Z2UgRGlyZSBDcmVlcHM7VEktMTAgUmFkaWFuY2UgRWZmZWN0O1RJLTEwIE1qb2xsbmlyIEVmZmVjdDtUSS0xMCBTaGl2YXMgRWZmZWN0O1RJLTEwIFRlbGVwb3J0IGx2bCAyIEVmZmVjdDtXZWF0aGVyIE1vb25iZWFtO0Fyc2VuYWwgb2YgdGhlIERlbW9uaWMgVmVzc2VsIFYgMi4xO1RoZSBPYmxpdGVyYXRvciBvZiBNYWdpYztCbGFjayBPcmMgV2FyYm9zcyBWIDIuMDtDaGVzcyBLbmlnaHQgU2V0O09yZGVyIG9mIHRoZSBXYW5kZXJpbmcgRmxhbWUgViAyLjE7VGhlIEhvbGxvdyBTZXQ7UmFrc2hhc2EgU2V0O0JsYXppbmcgQ29zbW9zO0ltcGVyaWFsIEVudm95O1dpdGNoIEh1bnRlciBUZW1wbGFyO0RhcHBlciBEaXNndWlzZTtUYWxlcyBvZiB0aGUgV2luZHdhcmQgUm9ndWU7QXVzcGljaWQ5519cyBTZWFkd2VsbGVyO0NvdW50ZXNzIG9mIFJpc3R1bDtBbmNpZW50IE1hZ3VzIFN0eWxlIDE7QXJtYXR1cmUgb2YgdGhlIEJlbGxpZ2VyZW50IFJhbSBCbHVlO0ZhZXJpZXNuYXAgU3ByaXRlbGVhZjtFeWUgb2YgdGhlIE1hemUgS2VlcGVyO0Jhc3Rpb24gb2YgdGhlIExpb25zZ3VhcmQ7Qmxvb2Ryb290IEd1YXJkO1Nob3JlbGluZSBTYXBwZXI7RGVzb2xhdGUgQ29ucXVlc3Q7QmFycmllciBSb2d1ZTtOZXcgQ2hpZWZ0YWluIFN0eWxlIDE7UHVwcGV0IFN1bW1vbmVyO015c3RpYyBvZiBDZWxlc3RpYWwgQXJ0OyAxMjN8fHw=