bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogNzdFMDA5NDEtRERGMC1EODQ4LTk4QUEtQ0JBNTlGQzdGRTQ3IDExMXx8fCAyMjI6OiAkMnkkMTAkWVRkbE16WmlaVEUwTWpVeU9UQTVZdWNqd3hsUTZuWWpsOWhRampvZUtpQWlWYmVDdjVqTlcgMjIyfHx8IDEyMzo6IFRoaXJzdCBvZiBFenR6aG9rIEJ1bmRsZSBQcmVtO0ZlYXN0IG9mIHRoZSBVbndpbGxpbmcgQmVsdDtGZWFzdCBvZiB0aGUgVW53aWxsaW5nIEJyYWNlcnM7RmVhc3Qgb2YgdGhlIFVud2lsbGluZyBBcm1vcjtGZWFzdCBvZiB0aGUgVW53aWxsaW5nIFNob3VsZGVycztEYXJrY2xhdyBFbWlzc2FyeSBEcmVzcztUaGUgQmFycmVuIFZlY3RvcjtTcGl0dGVycyBvZiB0aGUgVmlydWxlbnQgS3JhaXQ7TmFjcmVvdXMgU3RhZyBUYWlsO0xlZ3Mgb2YgSW5lcnJhbnQgRW1pbmVuY2U7V2luZ3Mgb2YgdGhlIEFyY3RpYyBSZWNsdXNlOzI1IGx2bCBwaW5nO0lyb24gQnJhbmNoIENocmlzdG1hcyBUcmVlO01la2FuaXNtIFRJLTYgRWZmZWN0O0ZyYWN0YWwgSG9ybnMgb2YgSW5uZXIgQWJ5c20gVVA7U2hhdHRlcmJsYXN0IENyb3duO01vbHRlbiBDbGF3IFByZW07TWFudGxlIG9mIHRoZSBDaW5kZXIgQmFyb24gU3R5bGUgMTtDcnVjaWJsZSBvZiBSaWxlO0hlbG0gb2YgdGhlIFByaW1ldmFsIFByZWRhdG9yO1Bpc3RvbiBJbXBhbGVyO0JsYXN0Zm9yZ2UgRXhoYWxlcjtDaGFvcyBBcmJpdGVyO1l1bHNhcmlhcyBNYW50bGUgUHJlbTtJY2UgQmxvc3NvbTtCcmFjZXJzIG9mIEFlb25zIFByZW07SmV3ZWwgb2YgQWVvbnMgUHJlbTtNYWd1cyBBcGV4O1B5cmV4YWVjIEZsb2U7SGF0IG9mIHRoZSBLcmFrZW47QmxhZGVCaXRlciBWIDMuMTtMZWdhY3kgb2YgdGhlIEZhbGxlbiBMZWdpb247Qm9uZHMgb2YgTWFkbmVzcyBTZXQgU3R5bGUgMTtIZWxtIG9mIHRoZSBXaW5nZWQgU2VudGluZWw7R29sZGVuIE1vb25mYWxsIFByZW07QmxhZGUgb2YgVGVhcnMgYW5kIENyb3duIG9mIFRlYXJzO0dvbGRlbiBTdWxsZW4gSG9sbG93IFYgMy4yO0F1c3BpY2Ugb2YgdGhlIFdoeXJsZWd5Z2UgUHJlbTtHcmFuZCBBYnNjZXNzaW9uIEhvb2sgQnVuZGxlO0dvbGRlbiBTY2F2ZW5naW5nIEd1dHRsZXNsdWc7UmlwcGVycyBSZWVsO0VtaW5lbmNlIG9mIFJpc3R1bCBLbmlmZSBBdHRhY2s7R29sZGVuIFNldmVyaW5nIENyZXN0O0FybXMgb2YgRGVzb2xhdGlvbiBQcmVtO0h1c2ggb2YgRXRlcm5hbCBOaWdodDtUaGUgR29sZGVuIEJhcmIgb2YgU2thZGk7R29sZGVuIEZ1bGwtQm9yZSBCb25hbnphO1BoYW50b20gQWR2ZW50IEJlbHQgVVA7UGhhbnRvbSBBZHZlbnQgVVA7UGhhbnRvbSBBZHZlbnQgU2hvdWxkZXJzIFVQO1BoYW50b20gQWR2ZW50IFdlYXBvbiBVUDtJcm9uIFN1cmdlIFYgMi4yO1NhdmFnZSBNZXR0bGU7VGhlIExpZ2h0bmluZyBPcmNoaWQgViAzLjA7Um9zZSBvZiB0aGUgQ29ycmlkYW4gTWFlc3RybztTbWFsbCBJZ25lb3VzIFN0b25lO1RpbnkgSWduZWQ5519cyBTdG9uZTtNYWplc3R5IE9mIFRoZSBDb2xvc3N1cyAtIENvYmJsZTtNYWplc3R5IE9mIFRoZSBDb2xvc3N1cyAtIE1vbm9saXRoO1N3b3JkIG9mIHRoZSBDb2xvc3N1cyBQcmVtO0ZvbGlhZ2Ugb2YgRWxkcml0Y2ggR25hcmw7R29sZGVuIFBhbGUgTWF1c29sZXVtO0RhcmsgTWVhZG93IE1hc3NhY3JlIEFybW9yO0RhcmsgTWVhZG93IE1hc3NhY3JlIEFybXM7RGFyayBNZWFkb3cgTWFzc2FjcmUgSGVhZDtDcmltc29uIEN5cnJpZGFlO0JvdW50eSBIdW50ZXIgTWFuaWFjIFNldDtUaGUgU2hlZXAgU2V0O0RyZWFkIENvbXBhY3Q7U3VzYW5vIE9zIERlc2NlbmRhbnQ7TWFyayBvZiB0aGUgTWlzdHJhbCBGaWVuZCBWIDIuMTtBbnRpbWFnZSBTaGlub2JpO0FuY2llbnQgTWVjaGFuaXNtO1RoZSBSb3dkeSBGaXJlYnJhbmQ7RXBvY2ggb2YgdGhlIEFieXNtO0JhdHRsZSBEcmVzcyBvZiB0aGUgUHJvdmVuO1NhY2NoYXJpbmUgU2Fib3RldXI7QnJpbmdlciBvZiBUcm91YmxlcztCaXR0ZXJ3aW5nIExlZ2FjeTtCaW5kaW5ncyBvZiBEZWVwIE1hZ21hO0FieXNzYWwgVm9ydGV4O01pc2dpdmluZ3Mgb2YgdGhlIEVtZXJhbGQgQWdlO0VsZHd1cm1zIFRvdWNoIFYgMy4xO0ZhdGUgTWVyaWRpYW47TG9yZCBvZiBDaHJvbm9wdGljIFN5bnRoZXNpcztCZXdpdGNoaW5nIEZsYXJlIFYgMi4wO0h1bnRlciBvZiBLaW5ncyBWIDIuMDtFcnVwdGluZyBXcmF0aCBWIDIuMDtGdXJ5IG9mIFdhciBHb2Q7RXllIG9mIHRoZSBCZWhvbGRlcjtWb29kb28gTWVlcG87TW9vbmZsYXJlIG9mIFRoZSBOaWdodHNpbHZlcjtIYXZvYyBvZiBEcmFnb24gUGFsYWNlIFYgMi4wO0FsbGZhdGhlciBvZiBOYXR1cmUgU2V0O0JsYWNrIE5paGlsaXR5O1NoaW1tZXIgb2YgdGhlIEFub2ludGVkO1RvbGwgb2YgdGhlIEZlYXJmdWwgQXJpYTtWZW5nZWFuY2Ugb2YgdGhlIFN1bndhcnJpb3I7SXJlIG9mIE1vbHRlbiBSZWJpcnRoO0xlQmxhbmMgZm9yIFB1Y2s7TW9uc3Ryb3VzIFJlcHJpc2FsO0FuY2llbnQgTWFndXMgU3R5bGUgMjtDcm93biBvZiBUaGUgTmlnaHR3b3JsZDtFeHBsb3NpdmUgTWFuaWFjO0RhbmNlciBvZiB0aGUgU3BpdGVmdWwgRXllIFYgMy4wO0dvbGQgU2t5bWFnZTtWYW50YWdlIG9mIHRoZSBCcmVhY2ggV2FyZGVuO1Bvd2RlcnNsZWQgUm9va2VyeTtUcmVrIG9mIHRoZSBUcmFpbGJsYXplcjtUaW5rZXIgU2NhcmVjcm93IFNldDtadWxqaW4gZm9yIFRyb2xsIFdhcmxvcmQgU3R5bGUgMztBYnlzc2FsIEN1aXJhc3M7U2NhbGUgb2YgdGhlIFJhem9yd3lybSBDaGFvcztCaW5kaW5ncyBvZiB0aGUgQmF0dGxlcmFuZ2VyIExpZ2h0IFN0eWxlO091dGxhbmRpc2ggR291cm1ldDtJdHN1a2EgS290b3JpIGZvciBXSyBieSBQYXRjaG91bGkgS25vd2xlZGdlO1JpZ2h0ZWQ5519cyBUaHVuZGVyYm9sdCBhbmQgQXJjYW5hIE1lZ2FQYWNrOyAxMjN8fHw=