limitHWID:: 1 000||| 111:: 032E02B4-0499-0538-CA06-C00700080009 111||| 222:: $2y$10$YzE3MWQ5Mzg1ZGNkZjQ4MeZIPtksXl5tBhG0PQd7aVhCgL.ePBcQ6 222||| 123:: Windranger Arcana style 1;Windranger Blue Immortal Bird UP;Beast of the Crimson Ring Bracers;Beast of the Crimson Ring Helm;Iceplain Ravager Axe;Harness of Contested Fate;Iceplain Ravager Horn;Belt of Contested Fate;Bracer of Contested Fate;Iceplain Ravager Helm;The Iron Pioneer Harpoon;Mind of Endless Days;Valves of the Pressure Regulator;Rocket of Endless Days;Arcana Crystal Maiden Frost Avalanche;Book of the Vizier Exile Prem;Golden Bracers of Forlorn Precipice;Hearts of Misrule;The Sunbreeze Birthright;Dress of the Faeshade Flower;Belt of the Faeshade Flower;Jade Reckoning Prem;Planetfall;Judgement of the Fallen;Bracers of Tectonic Implications;Belt of Tectonic Implications;Atomic Ray Thrusters Prem;Benevolent Companion V 2.0;Juggernaut Arcana Bladeform Legacy;Provocation of Ruin Sword;Lineage of the Stormlords - Legs;Waterlogged Kunkka Shoes;Prize of the Saltworn Mariner Ghostly;Leviathan Whale Blade Prem;Belt of Seaborne Reprisal;Legion Commander Arcana UP;Tormented Staff;Tormented Crown;Hell-Spar Anathema Obsidian Blight;Horns of the Betrayer;Crimson Progenitors Bane;Great Sages Reckoning Timeless Tale;Staff of the Demon Trickster;Concord Reversion UP;Concord Dominion;Phantom Concord Prem;Dragonclaw Hook;Horns of Eternal Harvest Prem;Pauldrons of Eternal Harvest Prem;Golden Lamb to the Slaughter Prem;Lash of the Lizard Kin;Golden Grasping Bludgeon Prem;Apparatus of Shadowpass;Bracer of Shadowpass;Sea Rakes Bridle;Shadow in the Deep Armor;Golden Hydrakan Latch;Desert Burn Saddle;Desert Burn Outfit;Desert Burn Cap;Desert Burn Morty Immortal;Desert Burn Crossbow;Helm of the Ardalan Interdictor;Pack of the Ardalan Interdictor;Sniper Immortal Weapon of the Ardalan Interdictor;Blacksail Cannoneer Arms;Blacksail Cannoneer Shoulder;Soul Diffuser Prem;Transversant Soul;Iron Surge;Garb of the Corridan Maestro;Cursed Black Color for TB;Scythes of Sorrow;Submerged Hazard Propeller;Rollermawster Prem;Arcanic Resonance Beam;Frostmoot Frostivus Tree;Treant Immortal Head Stuntwood Symbiont;Stuntwood Sanctuary;Bitter Lineage Immortal Axes;Scale of Bitter Spoil Immortal UP;Head of the Icewrack Marauder;Tome of the Guarded Word;Hatchet of the Guarded Word;The Hallows Within Tombstone;Beholden of the Banished Ones - Head;Tribal Pathways Golem;Axe Jungle;Golden Arms of Desolation Prem;Tempest Helm of the Thundergod + Righteous Thunderbolt;Tempest Revelation;Diabolic Aspect;Chaos Fulcrum;Talons of the Endless Storm Shoulder Green Style;Talons of the Endless Storm Weapon;Mantle of the Truebark Adherent;Sufferwood Sapling;Signs of the Allfather - Back;Signs of the Allfather - Arms;Signs of the Allfather - Head;Span of Sorrow;Chasm of the Broken Code Armor;Chasm of the Broken Code Helm;Chestplate of the Guardian Construct Bestowed;Bracers of the Guardian Construct Bestowed;Skirt of the Guardian Construct Bestowed;Head of the Forlorn Maze;Whip of the Guardian Construct Bestowed;Reapers Wreath;The Order of Cyprin;Blades of Prismatic Grace;Wings of Curious Coldspell;Phantom Advent UP;Hidden Vector - Armor;Hidden Vector - Blade;Hidden Vector - Belt;Hidden Vector - Hat;Mask of Metira;Spirit of the Sacred Grove - Back;Phantom Ascension Belt;Dark Artistry Throwback;Darkbrew Enforcer and Eternal Radiance Blades and Midas Knuckles MegaPack;AAMegaPack;Loaded Prospects;Mother of Thousands;Clinkz MegaPack;Emperor of the Sun;Eternal Testament;Monuments of the Natural Demiurge;Primordial Conservator;Jakiro MegaPack;The King of Thieves;Mirana MegaPack;Etienne Swiftguard;Manifold Paradox Gothic Hunter;Puppet Pudge Persona (you can add Hook) UP;Queen of Pain Arcana MegaPack;Skywrath Mage MegaPack Thanatos;Sven Immortals MegaPack UP;Sir Cutsalot;Jungle Explorer Set;Incurable Pestilence;Rebirth Vengeful Spirit;Spoils of the Vodou Rover;The Alpine Stalkers Set;Arena Champion Set;Twisted Maelstrom;Huskar MegaPack;Tracer for Weaver;Ink Dragon Poet;Omniknight MegaPack;Everblack;DK Persona Davion; 123|||