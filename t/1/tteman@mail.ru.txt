bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogREE1OERDMUUtQzk4NC1DRDExLUFDNDItMkNGMDVEODBENDhEIDExMXx8fCAyMjI6OiAkMnkkMTAkTnpnMFkyVTVPRGc1TnpNMVpXUmhNT3VPVU1vNUpGWkxxWWFMcWFLVHMwTEtGb2lmbEdMTWEgMjIyfHx8IDEyMzo6IE92ZXJncm93biBFbWJsZW0gQWdoYW5pbSBFZmZlY3Q7VEktNiBMR0QgVFAgRWZmZWN0O0d1YXJkaWFucyBvZiB0aGUgTG9zdCBQYXRoIERpcmUgVG93ZXJzO0d1YXJkaWFucyBvZiB0aGUgTG9zdCBQYXRoIFJhZGlhbnQgVG93ZXJzO0V2aWwgSWNlLVJvc2hhbjtKZXdlbCBvZiBBZW9ucyBQcmVtO0NpbmRlciBTZW5zZWkgU3R5bGU7UmFwaWVycyBvZiB0aGUgQnVybmluZyBHb2QgViAzLjE7U3RhZmYgb2YgR3VuLVl1O0NvZGljaWwgb2YgdGhlIFZlaWxlZCBPbmVzO0dvdGhpYyBXaGlzcGVyIEJlbHQ7QXJtb3Igb2YgdGhlIEZlYXJmdWwgQXJpYSBQcmVtO0F2b3dhbmNlIG9mIHRoZSBDcmltc29uIFdpdG5lc3M7TWFuaWZvbGQgUGFyYWRveCBQQSBBcmNhbmEgU3R5bGUgMztKYWdnZWQgSG9ub3IgQmFubmVyO0NyaW1zb24gRWRnZSBvZiB0aGUgTG9zdCBPcmRlcjtKYWdnZWQgSG9ub3IgTGVncztDcmltc29uIEJyYWNlcnMgb2YgQWVvbnMgUHJlbTtQZXJjZXB0aW9ucyBvZiB0aGUgRXRlcm5hbCBNaW5kO01hY2Ugb2YgQWVvbnMgUHJlbTtCbHVlU2t5IEl0ZW0gRWZmZXRzO1ZvaWNlIG9mIFRoZSBJbnRlcm5hdGlvbmFsIEFubm91bmNlcjtUaGVGYXRSYXQgV2FycmlvciBTb25ncyBNdXNpYyBQYWNrIE9mZmljaWFsO0NvbmNvcmQgUmV2ZXJzaW9uIFVQO0NvbmNvcmQgRG9taW5pb247TGFuY2Ugb2YgdGhlIFN1bndhcnJpb3I7UHJvdm9jYXRpb24gb2YgUnVpbiBNYXNrO0hlbG0gb2YgdGhlIERhcmsgTW9vbiBTdGFsa2VyO01vb25mYWxsIFByZW07TWQ5519bnQgb2YgdGhlIFdpbmdlZCBTZW50aW5lbDtQYXVsZHJvbnMgb2YgRXRlcm5hbCBIYXJ2ZXN0IFByZW07QXJtcyBvZiBEZXNvbGF0aW9uIFByZW07QmxhY2tzYWlsIENhbm5vbmVlciBIYXQ7U25pcGVyIEltbW9ydGFsIFdlYXBvbiBvZiB0aGUgQXJkYWxhbiBJbnRlcmRpY3RvcjtHb2xkZW4gRnVsbC1Cb3JlIEJvbmFuemE7VmlnaWwgU2lnbmV0O01hc2sgb2YgdGhlIFNhbmdzdHJhdGggRm9sZDtEaXNjaXBsZSBvZiB0aGUgV3lybXdyb3VnaHQgRmxhbWU7U291bCBvZiB0aGUgU2xheWVyIFByZW07R29sZGVuIFd5cm13cm91Z2h0IEZsYXJlIFByZW07SGlkZGVuIFZlY3RvciAtIEFybW9yO0hpZGRlbiBWZWN0b3IgLSBCZWx0O0hpZGRlbiBWZWN0b3IgLSBIYXQ7SGlkZGVuIFZlY3RvciAtIEJsYWRlO0RpcmUgTmVtZXN0aWNlIENyZWVwcztXaW50ZXIgQ3JlZXBzIFYgMy4wO1RJLTcgTmFWaSBUUCBFZmZlY3Q7RW5pZ21hdGljIEVtYmxlbSBvZiB0aGUgRGlyZXRpZGUgLSBHcmVlbjtWb2ljZSBvZiBUaGUgSW50ZXJuYXRpb25hbCBNZWdhLUtpbGw7VjFsYXQgQW5ub3VuY2VyO1YxbGF0IE1lZ2EtS2lsbHM7QXBvY2FseXBzZSBVbmJvdW5kIC0gU2hvdWxkZXI7QXBvY2FseXBzZSBVbmJvdW5kIC0gVGFpbDtJbW1vcnRhbCBJbnZva2VyIEtpZDtIZWxsLVNwYXIgQW5hdGhlbWEgT2JzaWRpYW4gQmxpZ2h0O0hvcm5zIG9mIHRoZSBCZXRyYXllcjtNdWxjdGFudCBQYWxsIG9mIHRoZSBDcmltc29uIFdpdG5lc3M7RmluIEtpbmdzIENoYXJtIG9mIEVtaW5lbnQgUmV2aXZhbCBFeGNlcHRpb25hbDtDcmltc29uIEVkaWN0IG9mIFNoYWRvd3M7R29sZGVuIFNoYWRvdyBNYXNxdWVyYWRlIFByZW07SHVuZ2VyIG9mIHRoZSBIb3dsaW5nIFdpbGRzIFdlYXBvbjtUaGUgTGlnaHRuaW5nIE9yY2hpZCBvZiBFbWluZW50IFJldml2YWwgRXhjZXB0aW9uYWw7Rm9jYWwgUmVzb25hbmNlIFYgMy4wO0hlYWRkcmVzcyBvZiB0aGUgTG95YWwgRm9sZDtQYXVsZHJvbnMgb2YgdGhlIExveWFsIEZvbGQ7QXJtb3Igb2YgdGhlIExveWFsIEZvbGQ7VGhlIEludGVybmF0aW9uYWwgMjAxOCBDdXJzb3IgUGFjaztXZWF0aGVyIEF1cm9yYTtUZXJyYWluIC0gVGhlIEVtZXJhbGQgQWJ5c3M7R29sZGVuIFN0YWZmIG9mIEd1bi1ZdSBQcmVtO0dyZWF0IFNhZ2VzIFJlY2tvbmluZyBSdW1ibGUgaW4gdGhlIERlZXA7TWFuaWZvbGQgUGFyYWRveCBHb3RoaWMgSHVudGVyO0FudGlNYWdlIEZlbWFsZTtCcmlzdGxlYmFjayBNZWdhUGFjaztBeGUgZnVsbCBJbW1vcnRhbHMgTWVnYXBhY2sgYWx0O0RhcmticmV3IEVuZm9yY2VyIGFuZCBFdGVybmFsIFJhZGlhbmNlIEJsYWRlcyBhbmQgTWlkYXMgS251Y2tsZXMgTWVnYVBhY2s7TGVnaW9uIENvbW1hbmRlciBNb2RNYWtlciBNZWdhUGFjaztTdmVuIEltbW9ydGFscyBNZWdhUGFjayBVUDtVcnNhIEltbW9ydGFscyBNZWdhUGFjaztXaW5kcmFuZ2VyIEFyY2FuYSBzdHlsZSAyIChPcmFuZ2UgQmlyZCkgYW5kIEZ1bGwgV1IgaW1tb3J0YWw7V3JhaXRoIEtpbmcgQXJjYW5hIE1lZ2FQYWNrO1BsYW5ldGZhbGwgYW5kIEp1ZGdlbWVudCBvZiB0aGUgRmFsbGVuIGFuZCBCcmFjZXJzIG9mIHRoZSBDYXZlcm4gTHVtaW5hciBBUkNBTkEgTWVnYVBhY2s7QUFNZWdhUGFjaztTdG9ybSBTcGlyaXQgTWVnYVBhY2s7IDEyM3x8fA==