bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogMDMwMDAyMDAtMDQwMC0wNTAwLTAwMDYtMDAwNzAwMDgwMDA5IDExMXx8fCAyMjI6OiAkMnkkMTAkT1RFd1lUWmhNemhpTnpRMVkySXdOdWdGWjI4cXBpSmVGVXdJaXFWTkhVRVp2NmV1MG0uZXEgMjIyfHx8IDEyMzo6IEhvb2Qgb2YgdGhlIERlbW9uaWMgVmVzc2VsO01vdW50IG9mIHRoZSBFdmVyYmxhY2s7U2hvdWxkZXJwbGF0ZXMgb2YgRXZpbCBTcGlyaXQ7TWFjZSBvZiB0aGUgQ2hvc2VuIFByZW07Q3JhbmlhbCBDbGFwIFRyYXA7QXJtcyBvZiB0aGUgQm9pbGVycGxhdGUgQnJ1aXNlcjtGb3JtZWQgQWxsb3kgRmxhc2s7SGVhdnkgQnV0dGVyZmx5IEJsYWRlcztTaGF0dGVyYmxhc3QgQ3Jvd247QXJtb3Igb2YgdGhlIEVxdWlsaWJyaXVtO0dhcmIgb2YgdGhlIFByb3BoZXQgRm9yZXRvbGQ7QXJtcyBvZiB0aGUgRmlyc3QgV2F5cztHYXJiIG9mIHRoZSBGaXJzdCBXYXlzO1Nob3VsZGVyIG9mIHRoZSBGaXJzdCBXYXlzO0JlbHQgb2YgdGhlIEFwZXggRXhwbG9yZXI7SGF0IG9mIEVtcGlyaWMgSW5jZW5kaWFyeTtGaWVyeSBUeWw7RmxhbWVzdGl0Y2hlZCBTdWl0aW5ncyBDYXBlO1N0b3V0aGVhcnQgR3Jvd2xlciBPd2w7UmVkIFRhbG9uIEJyYWNlcnM7QmVsdCBvZiB0aGUgQ2hhb3MgV2FzdGVzO0hlbG0gb2YgdGhlIFN0b3V0aGVhcnQgR3Jvd2xlcjtDYXBlIG9mIHRoZSBXaWxkIFRhbWVyO0JlYXN0IG9mIFZlcm1pbGlvbiBXaWxkcztBeGUgb2YgdGhlIFN0b3V0aGVhcnQgR3Jvd2xlcjtBcm1zIG9mIHRoZSBTYWNyaWZpY2lhbCBTZXJwZW50O0NvYXQgb2YgdGhlIFNjYXJsZXQgUmF2ZW47R2FsbG93cyBVbmRlcnN0dWR5IFNraXJ0O01hc2sgb2YgdGhlIEJsb29kZm9yZ2U7Qmxvb2RzdG9uZSBCbGFkZSAtIE9mZi1IYW5kO1Nob3VsZGVycyBvZiB0aGUgU2FjcmlmaWNpYWwgU2VycGVudDtCbG9vZHN0b25lIEJsYWRlIFBhY2s7TWFyayBvZiB0aGUgRmlyc3QgSHVudCBCZXN0b3dlZDtXcmFwcyBvZiB0aGUgU2Vhc29uZWQgVmV0ZXJhbiBWIDIuMTtIZWFydGxlc3MgSHVudCAtIEFybW9yO01hcmF4aWZvcm1zIEZhbGxlbjtDYXNrIG9mIHRoZSBIdW50IEV0ZXJuYWw7R2F1bnRsZXRzIG9mIHRoZSBDcnlwdCBHdWFyZGlhbjtNYXNrIG9mIHRoZSBIdW50IEV0ZXJuYWw7S2l0IG9mIHRoZSBIdW50IEV0ZXJuYWw7QXJjdGljIENsaW5reiBWIDMuMDtIYW1tZXIgb2YgdGhlIFNreWdvZHM7RnVyeSBvZiB0aGUgUmlnaHRlb3VzIFN0b3JtIC0gU2hvdWxkZXI7QXJtcGxhdGVzIG9mIHRoZSBUaHVuZGVyIFJhbTtGdXJ5IG9mIHRoZSBSaWdodGVvdXMgU3Rvcm0gLSBIZWFkO0Z1cnkgb2YgdGhlIFJpZ2h0ZWQ5519cyBTdG9ybSAtIEJhY2s7QnJhY2VycyBvZiB0aGUgR3JlYXQgRGVsdWdlO0JyYWNlcnMgb2YgdGhlIFZvbGNhbmljIEd1YXJkO1JvYmVzIG9mIEJsYXplIEFybW9yO0ZsYW1pbmcgSGFpciBvZiBCbGF6ZSBBcm1vcjtPZmYtaGFuZCBXZWFwb24gb2YgdGhlIFZvbGNhbmljIEd1YXJkO01hbnRsZSBvZiB0aGUgU21vbGRlcmluZyBTYWdlO1N3b3JkIG9mIHRoZSBTbW9sZGVyaW5nIFNhZ2U7QmxhZGUgb2YgVGVhcnMgYW5kIENyb3duIG9mIFRlYXJzO0h1bmdlciBvZiB0aGUgSG93bGluZyBXaWxkcyBBcm1zO0hvcm5zIG9mIE1vbnN0cm91cyBSZXByaXNhbCBQcmVtO0h1bmdlciBvZiB0aGUgSG93bGluZyBXaWxkcyBPZmYtSGFuZCBXZWFwb247SHVuZ2VyIG9mIHRoZSBIb3dsaW5nIFdpbGRzIFNob3VsZGVyO0h1bmdlciBvZiB0aGUgSG93bGluZyBXaWxkcyBUYWlsO0RpZmZ1c2FsIFJpa2ltYXJ1O1NjYXJsZXQgUXVhcnJ5IFYgNC4wO1NtYWxsIFNjYXJsZXQgUXVhcnJ5O01lZGl1bSBTY2FybGV0IFF1YXJyeTtMYXJnZSBTY2FybGV0IFF1YXJyeTtTY2FybGV0IE9haztBbnRpbWFnZSBTaGlub2JpO0xlZ2FjeSBvZiB0aGUgRWxkd3VybSBDcmVzdDtWYW5xdWlzaGluZyBEZW1vbnMgR2VuZXJhbCBWIDMuMTtDb3ZlbmFudCBvZiB0aGUgRGVwdGhzO1N1c2FubyBPcyBEZXNjZW5kYW50O0Z1cnkgb2YgV2FyIEdvZDtFeWUgb2YgdGhlIEJlaG9sZGVyO0hhdm9jIG9mIERyYWdvbiBQYWxhY2UgViAyLjA7QmxhY2sgTmloaWxpdHk7QXJteSBPZiBUaGUgVmFzdCBTZWE7Sm9sbHkgUmVhdmVyO0xpZ2h0YnJpbmdlciBTRjtEYW5jZXIgb2YgdGhlIFNwaXRlZnVsIEV5ZSBWIDMuMDtWYW50YWdlIG9mIHRoZSBCcmVhY2ggV2FyZGVuO0RhcmsgUmVlZiBFc2NhcGUgViAyLjE7R2VuaWUgU3Bpcml0O0FybWF0dXJlIG9mIHRoZSBCZWxsaWdlcmVudCBSYW0gUmVkO1Bvd2RlcnNsZWQgUm9va2VyeTtSaXR1YWwgb2YgdGhlIExveWFsIEZvbGQ7VHJlayBvZiB0aGUgVHJhaWxibGF6ZXI7VGlua2VyIFNjYXJlY3JvdyBTZXQ7UGx1bmRlciBvZiB0aGUgU2F2YWdlIE1vbmdlcjtCcmF3bGVyIG9mIHRoZSBHbGFjaWVyIFNlYSBWIDMuMDtTZWFibGlnaHQgUHJvY2Vzc2lvbjtGZXJvY2lvdXMgVG94aWNhbnQ7VGhlIER1c2sgQ3Jhd2xlciBTZXQ7RW1wZXJvciBPZiBUaGUgQ2xlcmd5OyAxMjN8fHw=