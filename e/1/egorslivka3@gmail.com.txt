limitHWID:: 1 000||| 111:: 03000200-0400-0500-0006-000700080009 111||| 222:: $2y$10$YzM5NDYwMDRjY2MyOGZiNOByn9vedxglf4yHNbaQx7b/uWpsgaqsy 222||| 123:: Rampant Outrage Prem;Axe of Phractos Prem;Guard of the Red Mist;Belt of the Wrathful Annihilator;Razzils Midas Knuckles Prem;Eternal Radiance Blades Prem;Infernal Chieftain;Gloombob;Golden Nothlic Burden Prem;Blackened Edge of the Bladekeeper;Pauldron of Erupting Wrath;Helm of Rising Glory;Horn of Luminous Crystal;Shock of the Anvil;Bow of the Moon Rider;Snowstorm Mantle;Snowstorm Quiver;Nightsilver Gryphon;Snowstorm Hood;Starlight Dress;Bracers of the Wintermoon;Solar Gyre;Solar Forge;Dragonclaw Hook;Armor of the Black Bird;Heavy Tenderizer;Head of the Ghastly Gourmand;Direcourt Jester Belt;Razors of the Iron Hog;Gauntlet of Dark Feathers;Arms of Desolation;Malefic Drakes Hood of the Crimson Witness;Sunken Snapper Wings;Tempest Helm of the Thundergod Prem;Burning Jacks;Flamestitched Suitings Wrap and Molotov;Crow of Empiric Incendiary;Seer of Infinity Space Eidolon;Frozen Void Arms;Frozen Void Belt;Visage of the Emerald Age;Frozen Void Shoulder;Mace of Aeons;Order of the Silvered Talon;Blackshield Protodrone Missile Launcher;Blackshield Protodrone Armor;Blackshield Protodrone Stinger;Blackshield Protodrone Helm;Small Bad To The Bone;Armor of the Abyssal Scourge;Helm of the Abyssal Scourge;Blade of the Abyssal Scourge;Aegis and Roshan St. Valentine Day;TI-10 Aghanim Effect;Blink Dagger lvl 1 TI-6 Effect;TI-10 Bottle Effect;Reptilian Refuge Dire Creeps;Reptilian Refuge Radiant Creeps;Question mark Deny;TI-10 Eul Scepter Effect;TI-8 Fountain lvl 1 Effect;TI-8 LVL UP Effect;TI-9 Mekasm Effect;TI-10 Mjollnir Effect;TI-10 Phase Boots Effect;Pumpkin Trees UP;TI-10 Radiance Effect;River Vial Green;TI-10 Shivas Effect;TI-6 Complexity Gaming TP Effect;Wyvern Hatchling;Watcher Below;Weather Spring;Terrain - Overgrown Empire;Techies Announcer;Gachi Mega-Kills;SfS Demon Hunter For Antimage;War Breakers Set;Burglar of Wasp;Smoky Dreamer;Kirin Rider Set;Mystic of Celestial Art;The Path of Odocoeleus;Ascendance of the Rime Lord 2nd Style;Goddess of the Underworld;Shadowforce Gale;Death Necrolight V 3.2;Narcissistic Leech;The Arcanists Guise;Toxic Death Eater;The True Crow V 2.0;Golden Slark V 2.0;The Dwarf Engineer;Elemental Imperator V 2.0;Corridan Maestro V 2.0;Meranth Dragoon;Illidan Stormrage for Terrorblade V 2.0;Lurkablo;Molten Destructor;Bark of the Ageless Witness Distinguished;Seablight Procession;Corruption of the Virulent Krait;Puppet Summoner;The Dusk Crawler Set;Bindings of the Battleranger;Bearer of the Arkturan Talon;Skeleton King Return Final V 3.0;Drowned Horseman V 2.1;Wicked Space Knight;Komeiji Koishi 2 for Bane by Patchouli Knowledge;Custom of Karroch Set;Harvests Hound;Corruption V 2.1;Tipsy Brawler;Warrior of Arena Set;Feast of the Gluttons Larder;Arms of Burning Turmoil Set V 3.1;Savior for Jungles Honor;Cloak of the Fallen;Royal Winterbloom;Opus of the Vizier Exile V 2.1;Wail of the Winter Revenant;Fires of Vashundol no effect V 2.1;Pact of the Wurmblood V 3.0;Eldwurms Touch;The Jade General;Chess Knight Set;Adage of the Smoldering Sage;Amberlight Raiment V 2.0;Mechalodon Interdictor;The Baptism of Melting Fire;Covenant of the Depths;Forgotten Renegade;Witch Hunter Templar;The Gifts of Zhuzhou;Dark Forest Punisher;Rage of the Dark Wood v 2.0;Hunter of Kings V 2.0;Neptune for Mars by Patchouli Knowledge;Memories of the Vow Eternal;Jester King Set;Light of Eleanor Set;Vanguard of the Emerald Insurgence;Unfettered Malevolence;Chitinous Stalker;Higher Ogre Magi;Holy Inquisitor;Augury Prophet;Mandate of the Nameless;Tales of the Windward Rogue;Creeping Shadow;Army Of The Vast Sea;Alluring Mesmer;Raiments of Twilight Shade;Magister of the Narrow Fates;Bladebreaker Order Valeera for Riki;Sovereign of the Kray Legions 2st Style;Stygian Maw;Bastion of the Lionsguard;Naga Guardian for Slardar V 2.0;Sentinels Shell;March of the Powderkeg Patrol;Ritual of the Loyal Fold;Helm of the Dominator for Troll;Ferocious Heart;Dreadhawk Armor;Unblinking Eternity;Wings of Colorful Icecrystals; 123|||