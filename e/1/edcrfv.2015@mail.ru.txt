bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogIDExMXx8fCAyMjI6OiBjMWM2MjM2NWM1ZTJhZjM4YmViZjExMjNmMDMxMWExMmU4YzE2ZTQ1OTJkMzEyNDU5YjQ3N2QyZTI4MzJlZDNhZTY5MjUzMzA1YzhhYzVhNDNlM2Y4Nzc1OWFhYjFhYzNjNzAwNDk5YWE2ZmU4MTkwODM5NmY3NmM5NGE5M2ZlNCAyMjJ8fHwgMTIzOjogRnVyeSBvZiBCb3VuZGxlc3MgRGFya25lc3MgSGVhZDtUYWxvbnMgb2YgdGhlIEVuZGxlc3MgU3Rvcm0gTWQ5519bnQ7Q2hhb3MgRnVsY3J1bTtUYWxvbnMgb2YgdGhlIEVuZGxlc3MgU3Rvcm0gU2hvdWxkZXI7VGFsb25zIG9mIHRoZSBFbmRsZXNzIFN0b3JtIFdlYXBvbjtCcmFjZXJzIG9mIEZvcmxvcm4gUHJlY2lwaWNlO0Jvb2sgb2YgdGhlIFZpemllciBFeGlsZSBQcmVtO0NyaW1zb24gR2F0ZXMgb2YgTm90aGw7RGFya2NsYXcgRW1pc3NhcnkgRHJlc3M7RGFya2NsYXcgRW1pc3NhcnkgQXJtcztOb3RobGljIEJ1cmRlbiBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzO0RhcmtjbGF3IEVtaXNzYXJ5IFN0YWZmO0dob3N0cyBvZiBFdGVybmFsIFRlc3RhbWVudDtGbHV0dGVyaW5nIE1vcnRpcyBQcmVtO1plYWwgb2YgT21veiBBcmtvc2g7V3JhdGggb2YgdGhlIEZhbGxlbiBCYWNrO1dyYXRoIG9mIHRoZSBGYWxsZW4gSGVhZDtEcmVhZCBBc2NlbmRhbmNlIEFybW9yO1dyYXRoIG9mIHRoZSBGYWxsZW4gVGFpbDtEcmVhZCBBc2NlbmRhbmNlIFN3b3JkO0J1cm5pbmcgU2hpZWxkIG9mIHRoZSBPdXRsYW5kIFJhdmFnZXI7U3dvcmQgb2YgdGhlIFRoaXJkIEF3YWtlbmluZztEcmVhZCBSZXRyaWJ1dGlvbiAtIEJyYWNlcnM7RHJlYWQgUmV0cmlidXRpb24gLSBDYXBlO0RyZWFkIFJldHJpYnV0aW9uIC0gSGVhZHdlYXI7RHJlYWQgUmV0cmlidXRpb24gLSBMZWcgQXJtb3I7RHJlYWQgUmV0cmlidXRpb24gLSBRdWl2ZXI7RHJlYWQgUmV0cmlidXRpb24gLSBTaG91bGRlciBBcm1vcjtBcmNhbmEgRHJlYWQgUmV0cmlidXRpb247QnVybmluZyBOaWdodG1hcmU7RXllIE9mIFBvd2VyIFNldDtGb3Jnb3R0ZW4gVGFjdGljaWFuO0FsbHVyZSBvZiBNaXJhY2xlIEZydWl0O1dhaWwgb2YgdGhlIFdpbnRlciBSZXZlbmFudDtCaW5kaW5ncyBvZiB0aGUgR2FsdmFuaXplZCBTcGFyazsgMTIzfHx8