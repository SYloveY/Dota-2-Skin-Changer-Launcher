bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogMDNDMDAyMTgtMDQ0RC0wNTY5LUVDMDYtODkwNzAwMDgwMDA5IDExMXx8fCAyMjI6OiAkMnkkMTAkT0RJeU1qUTFNV1k1TmpkaFpEQmhPT1lveU9JYjQvb3dveHpCbk4uQU9qeWRSdmhYLk1QbEMgMjIyfHx8IDEyMzo6IFRpLTkgUm9zaGFuO0d1YXJkaWFucyBvZiB0aGUgTG9zdCBQYXRoIFJhZGlhbnQgVG93ZXJzO0d1YXJkaWFucyBvZiB0aGUgTG9zdCBQYXRoIERpcmUgVG93ZXJzO1dhdGNoZXIgQmVsb3c7RXZpbCBJY2UtUm9zaGFuO0hVRCBvZiB0aGUgQnVybmluZyBTY2FsZSBJY2U7R2hpbGxpZWQgR3VubWFuIFNuaXBlciBSaWZsZTtSaXZlciBWaWFsIEJsdWU7QnJhY2VyIGFuZCBCb290cyBvZiB0aGUgU2hvb3RpbmcgU3RhcjtHb2xkZW4gRnVsbC1Cb3JlIEJvbmFuemE7R29nZ2xlcyBvZiB0aGUgU2hvb3RpbmcgU3RhcjtDb2xhciBvZiB0aGUgQXJkYWxhbiBJbnRlcmRpY3RvcjtEYXRhc3RhciBQcm9nZW5pdG9yIChBbHRlciBBcmNhbmEpO0N1cnNlIG9mIHRoZSBOZXcgU2Vhc29uIFYgMi4xO0JsYWRlIG9mIFRlYXJzIGFuZCBDcm93biBvZiBUZWFycztSaXBwZXJzIFJlZWw7RW1pbmVuY2Ugb2YgUmlzdHVsIEtuaWZlIEF0dGFjaztSdWJpY2sgQ3Vyc2UgLSBGbGVzaCBHb2xlbTtIdXNoIG9mIEV0ZXJuYWwgTmlnaHQ7UGluayBDb2xvciBmb3IgVEI7QnJvbnplbW9uc3RlciBvZiB0aGUgV2FpbGluZyBJbmZlcm5vO1RlcnJhaW4gLSBJbW1vcnRhbCBHYXJkZW5zO0RBQyAyMDE1IENoYW9zIEtuaWdodCBDdXJzb3IgUGFjaztDb2xvclN0YXRzO1RJLTQgZWZmZWN0IEJsaW5rIERhZ2dlcjtNaW5lIFJhZGl1cyA3MDI7RXRlcm5hbCBIYXJ2ZXN0O0RlYXRoIEJsb3Nzb20gU2V0O0Fyc2VuYWwgb2YgdGhlIERlbW9uaWMgVmVzc2VsIFYgMi4xO0JpZyBVbiBWIDMuMDtGZXJ2ZW50IENvbnNjcmlwdCBWIDMuMDtUaW1lIFdhbmRlcmVyO1VuZGVmZWF0ZWQgR2VuZXJhbDtUaGUgUm93ZHkgRmlyZWJyYW5kO01hcmF1ZGVyIG9mIHRoZSBDaGFvcyBXYXN0ZXM7V3JhdGggb2YgdGhlIEJsb29kIENvdmVuYW50IFNldDtIdW50ZXJzIEdsb3J5O1RyaXVtcGggb2YgdGhlIEZvdXIgQ29ybmVycyBWIDIuMDtMb3N0IFJhbmdlcjtQYXR0ZXJuIG9mIHRoZSBTaWxrZW4gUXVlZW47UmVsZW50bGVzcyBXYXJicmluZ2VyIFYgMy4wO0NoYW1waW9uIG9mIERpc2NvcmQgViAzLjE7U2F2aW9yIGZvciBKdW5nbGVzIEhvbm9yO0Nsb2FrIG9mIHRoZSBGYWxsZW47UHVycGxlIEZpcmUgQ2xpbmt6IEZ1biBNb2QgViAzLjA7VGhlIEJyYXNzIEZseWVyO1NoZXJtYW4gTWFpZGVuIFYgNC4xO1RoZSBEdXNrYmxvb20gVHJpY2tzdGVyO0ZvcmdvdHRlbiBUYWN0aWNpYW47RmF0YWwgQmxvc3NvbSBWIDMuMDtMaWdodG5pbmcgSGFyYmluZ2VyO0JyaW5nZXIgb2YgVHJvdWJsZXM7RHJhZ29uIEd1YXJkaWFuO1ZhbnF1aXNoaW5nIERlbW9ucyBHZW5lcmFsIFYgMy4xO0JpbmRpbmdzIG9mIERlZXAgTWFnbWE7SGFybmVzcyBvZiB0aGUgRmlzc3VyZWQgU291bDtGaXJlcyBvZiB0aGUgVm9sY2FuaWMgR3VhcmQ7SGVhZGxhbmQgSHVudHJlc3M7TWlzZ2l2aW5ncyBvZiB0aGUgRW1lcmFsZCBBZ2U7QWJ5c3NhbCBWb3J0ZXg7VGhlIENoYWluZWQgU2NyaWJlO0V4cGxvc2l2ZSBNYW5pYWM7QWxsaWVkIENvbW1hbmRlciBTZXQ7U291cCBmb3IgU2x1dHMgaGFpciBmb3IgSW52b2tlcjtWb2xhdGlsZSBNYWplc3R5O0ZvcmdvdHRlbiBSZW5lZ2FkZTtWYWxreXJpZSBPZiBUaGUgUmVtYWlucztMb3JkIG9mIENocm9ub3B0aWMgU3ludGhlc2lzO0RpdmluZSBBbmNob3IgU3R5bGUgMjtTaGFycHN0YXIgQXJtb3I7Rm9yYmlkZGVuIEtub3dsZWRnZTtCbG9vZHkgUmlwcGVyO0RhcmsgRm9yZXN0IFB1bmlzaGVyO1ZlaGVtZW50IFBsdW1lIFYgMi4wO1RoZSBXb2xmIEh1bnRlciB2IDIuMDtEdXNrbGlnaHQgTWFyYXVkZXIgViAyLjE7TnlhcnVrbyBmb3IgTGlvbiBieSBQYXRjaG91bGkgS25vd2xlZGdlO1NlaXNtaWMgQmVyc2Vya2VyO0Z1cnkgb2YgV2FyIEdvZDtWb29kb28gTWVlcG87RGFya2ZhbGwgV2FyZGVuO0hhdm9jIG9mIERyYWdvbiBQYWxhY2UgViAyLjA7V3JhdGggb2YgS2EgViAyLjEgU3R5bGUgMjtCbGFjayBOaWhpbGl0eTtDdXJzZWQgWmVhbG90O1RhbGVzIG9mIHRoZSBHcmV5IFdhc3RlcztJcmUgb2YgTW9sdGVuIFJlYmlydGg7UmVtaW5pc2NlbmNlIG9mIERyZWFtcztEZW1vbmljIFB1Z25hIFYgMy4wO01vbnN0cm91cyBSZXByaXNhbDtTdGVlbCBLaW5nO0Nyb3duIG9mIFRoZSBOaWdodHdvcmxkO0RhbmNlciBvZiB0aGUgU3BpdGVmdWwgRXllIFYgMy4wO0dvbGQgU2t5bWFnZTtWYW50YWdlIG9mIHRoZSBCcmVhY2ggV2FyZGVuO1NvdWwgTGlsaXRoO0dlbmllIFNwaXJpdDtGdWxsIE1ldGFsIFRlY2hpZXM7RXBpdGFwaGljIEJvbmRzO1RyZWsgb2YgdGhlIFRyYWlsYmxhemVyO1RpbmtlciBTY2FyZWNyb3cgU2V0O1RpZGVodW50ZXIgS2lsbGVyO1RpbnkgTWl4IFYgNC4wO1BsdW5kZXIgb2YgdGhlIFNhdmFnZSBNb25nZXI7QWJ5c3NhbCBDdWlyYXNzO0JyYXdsZXIgb2YgdGhlIEdsYWNpZXIgU2VhIFYgMy4wO1Zlc3RtZW50cyBvZiB0aGUgQWxhcnkgRGl2ZTtTY2FsZSBvZiB0aGUgUmF6b3J3eXJtIExpZ2h0O0Zlcm9jaWQ5519cyBUb3hpY2FudDtDaGlsbCBvZiB0aGUgS2VlcGVycyBHYXplO1Rva2lzYWtpIEt1cnVtaSBmb3IgV2VhdmVyIGJ5IFBhdGNob3VsaSBLbm93bGVkZ2U7UHJpbnogRXVnZW4gZm9yIFZpcGVyIGJ5IFBhdGNob3VsaSBLbm93bGVkZ2U7TW9yYmlmaWMgUHJvdmlzaW9uO0dyaW0gRGVzdGlueTtFbXBlcm9yIE9mIFRoZSBDbGVyZ3k7QmluZGluZ3Mgb2YgdGhlIEJhdHRsZXJhbmdlcjtTY2F2ZW5nZXIgb2YgdGhlIEJhc2lsaXNrOyAxMjN8fHw=