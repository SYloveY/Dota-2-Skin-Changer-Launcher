limitHWID:: 1 000||| 111:: 610F8180-D82B-11DD-9CE4-50465D064B3F 111||| 222:: d36b45c8a9f4a8adc375b063c64fba6736f446cd81ee1cdb2586529eec1bc8e7b7b3e34773cd5ee26520e0c5bd29d8066c02187801e6230f9884fcc78704caba 222||| 123:: drive_dir::DK Persona Davion;drive_dir::Windranger Arcana style 1 (Blue Bird) + Full WR immortal;drive_dir::Radiant Conqueror Head;drive_dir::Radiant Conqueror Shoulder;drive_dir::Legion Commander Arcana UP;drive_dir::Red Mist Reaper*s Shawl;drive_dir::Little Blink Dagger;drive_dir::Crucible of Rile;drive_dir::Mantle of the Cinder Baron Style 2;drive_dir::Axe of Phractos Prem;drive_dir::Crimsonwing Slayer Wings;drive_dir::Blissful Knave Coat;drive_dir::Mask of the Confidant;drive_dir::Etienne*s Revenge;drive_dir::Blissful Knave Rapier;drive_dir::The Barren Vector;drive_dir::Tail of the Scouring Dunes;drive_dir::The Barren Crown Prem;drive_dir::Defiled Stinger;drive_dir::Crawlers of the Frostbite Dunes;drive_dir::Chitin of the Kray Legions; 123|||