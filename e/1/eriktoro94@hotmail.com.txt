bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogMDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAyNDFEQzRFN0UwIDExMXx8fCAyMjI6OiAkMnkkMTAkTlRsbE9UUm1NRFEwWVRBNU1USmtaLjRlaktrNVg1dmo0T0tpUXNHQUdKTFVzaGFsVWhrRTYgMjIyfHx8IDEyMzo6IEhlYXJ0bGVzcyBIdW50IC0gQXJtb3I7SGVhcnRsZXNzIEh1bnQgLSBCYWNrO1Rvb2xzIG9mIHRoZSBHaWFudCBIdW50ZXI7VHJhcHBpbmdzIG9mIHRoZSBPbGQtVGltZXJzIC0gSGVhZDtIZWFydGxlc3MgSHVudCAtIE9mZi1IYW5kO1RyYXBwaW5ncyBvZiB0aGUgT2xkLVRpbWVycyAtIFdlYXBvbjtTb25nIG9mIHRoZSBTb2xzdGljZSBIZWFkO0Nyb3duIG9mIHRoZSBXaW50ZXJtb29uO1NhcHBoaXJlIFNhYnJlLUx5bng7VGVtcGxlIEdhbGEgLSBXZWFwb247TmFjcmVvdXMgU3RhZyBDbGF3cztTcGxhdHRlcmluZyBGb3JjaXB1bGU7TmFjcmVvdXMgU3RhZyBIZWFkO05hY3Jlb3VzIFN0YWcgQmFjaztOYWNyZWQ5519cyBTdGFnIFRhaWw7TW9vbmxpZ2h0IEZhaXJ5IEhlYWQ7RnVyeSBvZiB0aGUgRGFtbmVkIEJydXNoO1N0ZWFtcG93ZXJlZCBNYWdpYyBBcm1zO0NvdmVuYW50IG9mIHRoZSBEZXB0aHMgTWFudGxlO1N0ZWFtcG93ZXJlZCBNYWdpYyBCZWx0O01hc2sgb2YgUXVhcyBQcmVjb3I7TWFudGxlIG9mIEZhdGUgTWVyaWRpYW47TWQ5519bnQgb2YgdGhlIE1pZG5pZ2h0IFN1bjtUaGUgQ3J1Y2libGUgb2YgTGlnaHQgU3RhZmY7SXJlIG9mIHRoZSBIaW50ZXJsYW5kcyBCYWNrO0xpb24gR3JlZWR5IEtpbmcgQXJtcztMaW9uIEdyZWVkeSBLaW5nIEJhY2s7QWRvcm5tZW50cyBvZiB0aGUgV2l0Y2ggU3VwcmVtZTtTY2VwdGVyIG9mIHRoZSBHcnVlc29tZSBFbWJyYWNlO0FyZW5hIENoYW1waW9uIEJlbHQ7QXJlbmEgQ2hhbXBpb24gU2hpZWxkO0FyZW5hIENoYW1waW9uIFNwZWFyO0Rlc2VydCBCbG9vbSAtIEFybXM7RGVzZXJ0IEJsb29tIC0gQmFjaztEZXNlcnQgQmxvb20gLSBIZWFkO0Rlc2VydCBCbG9vbSAtIE5lY2s7TlAgQ3V0ZSBjYWN0dXMgU2hvdWxkZXI7U3VwcmVtZSBHYXJkZW5lciBXZWFwb247U3RvbmVicmVhayBFeGNhdmF0b3JzIC0gQmFjaztCZWx0IG9mIHRoZSBBbnRpcG9kZWFucztBZHZlbnR1cmVycyBvZiBGb3J0dW5lIEhlYWQ7RGFya25lc3MgV2FpbGluZyBCYWNrO09yaWdpbiBvZiB0aGUgRGFyayBPYXRoIC0gTGVncztPcmlnaW4gb2YgdGhlIERhcmsgT2F0aCAtIFRhaWw7TG9yZCBGb3ggSGVhZDtCbGFkZSBvZiB0aGUgUGl0ZmFsbCBDcnVzYWRlcjtBcnNlbmFsIG9mIHRoZSBCdXRjaGVyKnMgV2FrZTtEb29tc2RheSBSaXBwZXIgQmVsdDtPbCogQ2hvcHBlcipzIEdyaXp6bGVkIEZhY2U7UGxhZ3VlIEhhdGNoZXQgb2YgdGhlIE51cmdsZSBDaGFtcGlvbjtEb29tc2RheSBSaXBwZXIgU2hvdWxkZXI7RG9vbXNkYXkgUmlwcGVyIFdlYXBvbjtBcm1sZXQgb2YgdGhlIEJhc2lsaXNrO0h1bmdlciBvZiB0aGUgSG93bGluZyBXaWxkcyBPZmYtSGFuZCBXZWFwb247SHVuZ2VyIG9mIHRoZSBIb3dsaW5nIFdpbGRzIFNob3VsZGVyO0h1bmdlciBvZiB0aGUgSG93bGluZyBXaWxkcyBUYWlsO0RhZ2dlciBvZiB0aGUgQ3VubmluZyBDb3JzYWlyO0NsYXdzIG9mIHRoZSBSZWQgU2FuZCBXYXJyaW9yO1RhaWwgb2YgdGhlIEtyYXkgTGVnaW9ucztTdHVudHdvb2QgU3ltYmlvbnQ7U3R1bXBzIG9mIHRoZSBBbmNpZW50IFNlYWw7U2hvdWxkZXIgb2YgdGhlIEFyYm9yIFNhZ2U7Q29udGVzc2EqcyBDcmVlZCBEcmVzcztDb250ZXNzYSpzIENyZWVkIEhhdDtTYXNoIG9mIFJlZ2FsIFJ1aW47Q29udGVzc2EqcyBDcmVlZCBTaG91bGRlcnM7VmlzaW9uIG9mIHRoZSBTZXJhcGggU2Npb24gLSBXZWFwb247R2lsZGVkIEZhbGNvbiBDbG9haztHaWxkZWQgRmFsY29uIEJvdztUaWFyYSBvZiBGYWxjb25zaWRlIEFybW9yO1F1aXZlciBvZiB0aGUgUmlzaW5nIEdhbGU7U2VudHJ5IG9mIFRyYW5xdWlsaXR5O0d1YXJkaWFucyBvZiB0aGUgTG9zdCBQYXRoIERpcmUgVG93ZXJzO0d1YXJkaWFucyBvZiB0aGUgTG9zdCBQYXRoIFJhZGlhbnQgVG93ZXJzO1RlcnJhaW4gLSBTYW5jdHVtcyBvZiB0aGUgRGl2aW5lO1dvb2RsYW5kIFdhcmJhbmRzIC0gUmFkaWFudCBTaWVnZSBDcmVlcHM7V29vZGxhbmQgV2FyYmFuZHMgLSBEaXJlIFNpZWdlIENyZWVwcztXb29kbGFuZCBXYXJiYW5kcyAtIFJhZGlhbnQgQ3JlZXBzO1dvb2RsYW5kIFdhcmJhbmRzIC0gRGlyZSBDcmVlcHM7V2VhdGhlciBCbHVlIFNreSBmcm9tIFNvdXAgZm9yIFNsdXRzO1NweWluZyBUb2Fkc3Rvb2w7SGFrb2JpIGFuZCBUZW5uZWtvIFByZW07UmFuZG9tIEVtYmxlbTtQZWRlc3RhbCBUaGUgRmFsbCBNYWpvciAyMDE2IERpcmUgV29vZDtJcm9uIEJyYW5jaCBDaHJpc3RtYXMgVHJlZTtSaXZlciBWaWFsIFBvdGlvbjtBZ2hhbmltcyBMYWJ5cmludGggU2hhZGVyIEVmZmVjdDtHYWJlIE5ld2VsbCBTaG9wa2VlcGVyO1JpY2sgYW5kIE1vcnR5IEFubm91bmNlcjtIb04gRGVmYXVsdCBNZWdhLUtpbGw7VGhlIEludGVybmF0aW9uYWwgMjAxOCBDdXJzb3IgUGFjaztFbGVtZW50YWwgRnVyeSBNdXNpYyBQYWNrO01hcmsgb2YgdGhlIEZpcnN0IEh1bnQgSGFydmVzdGVkO1RpbmVzIG9mIFR5YmFyYTtGaXN0cyBvZiBBeGUgVW5sZWFzaGVkO1NwaXJpdCBvZiBUaGUgU2FjcmVkIEdsb3ZlO0VtaW5lbmNlIG9mIHRoZSBTb3V0aCBTdGFyO0NvcnJ1cHRpb24gb2YgdGhlIFZpcnVsZW50IEtyYWl0O0J1cmdsYXIgb2YgV2FzcDtNeXN0aWMgb2YgQ2VsZXN0aWFsIEFydDtGb3Jnb3R0ZW4gUmVuZWdhZGU7RGFyayBGb3Jlc3QgUHVuaXNoZXI7SW1wZXJpYWwgRW52b3k7TWFuZGF0ZSBvZiB0aGUgTmFtZWxlc3M7TmVidWxhcyBXYWxrZXI7UmVzZWFyY2hlciBvZiBPYmxpdmlvbiBNYWdpYztUYWxlcyBvZiB0aGUgV2luZHdhcmQgUm9ndWU7QW5jaWVudCBNYWd1cyBTdHlsZSAxO0N1bm5pbmcgQ29yc2FpcjtTb3ZlcmVpZ24gb2YgdGhlIEtyYXkgTGVnaW9ucyAxc3QgU3R5bGU7QmFyayBvZiB0aGUgQWdlbGVzcyBXaXRuZXNzO1JpZnQgQ2hhbXBpb247IDEyM3x8fA==