bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogIDExMXx8fCAyMjI6OiAkMnkkMTAkWldGak5HUXlPRGd3TldKak9HTXhOdUMxa21lLmh0cTIvaHNyY3ovMkNGV1U4Q0Z5NDNFeWEgMjIyfHx8IDEyMzo6IEh1bmdlciBvZiB0aGUgSG93bGluZyBXaWxkcyBXZWFwb247R29sZGVuIFNoYWRvdyBNYXNxdWVyYWRlIFByZW07SHVuZ2VyIG9mIHRoZSBIb3dsaW5nIFdpbGRzIE9mZi1IYW5kIFdlYXBvbjtHb2xkZW4gRWRpY3Qgb2YgU2hhZG93cztIZWxsLVNwYXIgQW5hdGhlbWE7SG9ybnMgb2YgdGhlIEJldHJheWVyO011bGN0YW50IFBhbGwgb2YgdGhlIENyaW1zb24gV2l0bmVzcztGaW4gS2luZ3MgQ2hhcm0gb2YgRW1pbmVudCBSZXZpdmFsIEV4Y2VwdGlvbmFsO0Zsb3VyaXNoaW5nIExvZGVzdGFyO1ZpcmdhcyBBcmM7SGVsbSBvZiB0aGUgRGFyayBNb29uIFN0YWxrZXI7TWQ5519bnQgb2YgdGhlIFdpbmdlZCBTZW50aW5lbDtHb2xkZW4gTW9vbmZhbGwgUHJlbTtHb2xkZW4gVHdpbGlnaHQgU2NoaXNtO0NvbG9zc2FsIENyeXN0YWwgQ2hvcnVzIGVmZmVjdDtNb25hcmNoIG9mIHRoZSBTYXBwaGlyZSBHbGVuO1N1ZmZlcndvb2QgU2FwbGluZztTdWxsZW4gUmFtcGFydDtHb2xkZW4gU3VsbGVuIEhvbGxvdztTdWxsZW4gSGFydmVzdDtDb2RpY2lsIG9mIHRoZSBWZWlsZWQgT25lcztBdm93YW5jZSBvZiB0aGUgVmVpbGVkIE9uZXM7TWFuaWZvbGQgUGFyYWRveCBQQSBBcmNhbmEgU3R5bGUgMztBcmNhbmEgU0YgRGVtb24gRWF0aGVyO0JsYWNrc2FpbCBDYW5ub25lZXIgQmFjaztNdWggS2VlbiBHdW47V2l0Y2ggSHVudCBIYXQ7TWFudGxlIG9mIHRoZSBXaGlzcGVyZWQgQm9uZDtEaWFib2xpYyBBc3BlY3Q7UGVyZGl0aW9uO0NoYW9zIEZ1bGNydW07Q2hhb3MgQXJiaXRlcjtEYXJrIEFydGlzdHJ5IFRocm93YmFjaztEcmVhZCBSZXRyaWJ1dGlvbiAtIEhlYWR3ZWFyIEFsdDtEcmVhZCBSZXRyaWJ1dGlvbiAtIExlZyBBcm1vciBBbHQ7RHJlYWQgUmV0cmlidXRpb24gLSBRdWl2ZXIgQWx0O0RyZWFkIFJldHJpYnV0aW9uIC0gU2hvdWxkZXIgQXJtb3IgQWx0O0FyY2FuYSBEcmVhZCBSZXRyaWJ1dGlvbiBNYXN0ZXIgb2YgTWFkbmVzcztEcmVhZCBSZXRyaWJ1dGlvbiAtIENhcGUgQWx0O0RyZWFkIFJldHJpYnV0aW9uIC0gQnJhY2VycyBBbHQ7Qml0dGVyIExpbmVhZ2UgSW1tb3J0YWwgQXhlcztKdWdnZXJuYXV0IEFyY2FuYSBSZWQgQmxhZGVmb3JtIE9yaWdpbnM7UHJvdm9jYXRpb24gb2YgUnVpbiBNYXNrO0NyaW1zb24gRWRnZSBvZiB0aGUgTG9zdCBPcmRlcjtEZWNsYXJhdGlvbiBvZiB0aGUgRGl2aW5lIFNoYWRvdyBEaXJlIFRvd2VycztEZWNsYXJhdGlvbiBvZiB0aGUgRGl2aW5lIExpZ2h0IFJhZGlhbnQgVG93ZXJzO1RoZSBJbnRlcm5hdGlvbmFsIDIwMjAgTXVzaWMgUGFjaztBZ2hhbmltIER1bmdlb24gU2NlcHRlciBFZmZlY3Q7TWFqZXN0eSBPZiBUaGUgQ29sb3NzdXMgLSBQZWJibGU7TWFqZXN0eSBPZiBUaGUgQ29sb3NzdXMgLSBDb2JibGU7TWFqZXN0eSBPZiBUaGUgQ29sb3NzdXMgLSBNb25vbGl0aDtTd29yZCBvZiB0aGUgQ29sb3NzdXM7QWJhZGRvbiBSRUQgTWVnYVBhY2s7RGFya2JyZXcgRW5mb3JjZXIgYW5kIEV0ZXJuYWwgUmFkaWFuY2UgQmxhZGVzIGFuZCBNaWRhcyBLbnVja2xlcyBNZWdhUGFjaztBQU1lZ2FQYWNrO0FudGlNYWdlIFJFRCBNZWdhUGFjaztBeGUgZnVsbCBJbW1vcnRhbHMgTWVnYXBhY2sgYWx0O0JyaXN0bGViYWNrIE1lZ2FQYWNrO0Nsb2Nrd2VyayBNZWdhUGFjaztBbGx1cmUgb2YgTWlyYWNsZSBGcnVpdDtTY29yY2hpbmcgQW1iZXIgRHJhZ29vbjtLdW5nIGZ1IE1hc3RlcjtBcmNhbmUgSW52ZXJ0ZXI7SHVza2FyIE1lZ2FQYWNrO0t1bmtrYSBJbW1vcnRhbHMgTWVnYVBhY2s7SWNlIExpbmEgUHJlbWl1bTtUaGUgU2hlZXAgU2V0O0xlZ2lvbiBDb21tYW5kZXIgTW9kTWFrZXIgTWVnYVBhY2s7R29sZGVuIERhcmsgTWF3IEluaGliaXRvIGFuZCBHb2xkZW4gUHJvZmFuZSBVbmlvbiBhbmQgR29sZGVuIERyZWFkIFJlcXVpc2l0aW9uIExpZmVzdGVhbGVyIEltbW9ydGFscyBNZWdhcGFjaztBcmVuYSBDaGFtcGlvbiBTZXQ7TWVkdXNhIE1lZ2FQYWNrIE5FVztKdW5nbGUgQmFieXNpdHRlcnM7TW9ua2V5IEtpbmcgQXJjYW5hIE1lZ2FQYWNrO0FsbGZhdGhlciBvZiBOYXR1cmUgU2V0O05pZ2h0IFN0YWxrZXIgSW1tb3J0YWwgYW5kIFJlYXBlciBLaXNpbGV2IE1vZE1ha2VyIE1lZ2FQYWNrO055eCBBc3Nhc3NpbiBNZWdhUGFjaztPZ3JlIE1hZ2kgSW1tb3J0YWxzIEFyY2FuYSBNZWdhUGFjaztQdXBwZXQgUHVkZ2UgUGVyc29uYSAoeWQ5519IGNhbiBhZGQgSG9vaykgVVA7U3Bpcml0IEJyZWFrZXIgTWVnYVBhY2s7UnViaWNrIEFyY2FuYSB3aXRoIEltbW9ydGFsO1N2ZW4gSW1tb3J0YWxzIE1lZ2FQYWNrO1dyYWl0aCBLaW5nIEFyY2FuYSBNZWdhUGFjaztSaXR1YWwgb2YgdGhlIExveWFsIEZvbGQ7QXJjdGljIFNob2NrIFRBIFYgMy4wO1NpbGVuY2VyIFRJMTAgQ29sbGVjdG9ycyBDYWNoZSBNZWdhUGFjaztQbHVuZGVyIG9mIHRoZSBTYXZhZ2UgTW9uZ2VyO01vcnBobGluZyBJbW1vcnRhbHMgTWVnYVBhY2sgVVA7IDEyM3x8fA==