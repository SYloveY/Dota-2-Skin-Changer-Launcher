bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogIDExMXx8fCAyMjI6OiAkMnkkMTAkWldGak5HUXlPRGd3TldKak9HTXhOdUMxa21lLmh0cTIvaHNyY3ovMkNGV1U4Q0Z5NDNFeWEgMjIyfHx8IDEyMzo6IEdyYW5kIEFic2Nlc3Npb247VGVycmFpbiAtIFRoZSBLaW5ncyBOZXcgSm91cm5leTtUaGUgSW50ZXJuYXRpb25hbCAyMDE0IE11c2ljIFBhY2sgViAyLjE7Q3JpbXNvbiBCcmFjZXJzIG9mIEFlb25zIFByZW07TWFjZSBvZiBBZW9ucyBQcmVtO0pld2VsIG9mIEFlb25zO0RhcmsgQXJ0aXN0cnkgVGhyb3diYWNrO1RJLTEwIFJhZGlhbmNlIEVmZmVjdDtUSS0xMCBCb3R0bGUgRWZmZWN0O0FnaGFuaW1zIEludGVyZGltZW5zaW9uYWwgQmFieSBSb3NoYW47RGVjbGFyYXRpb24gb2YgdGhlIERpdmluZSBMaWdodCBSYWRpYW50IFRvd2VycztXb29kbGFuZCBXYXJiYW5kcyAtIFJhZGlhbnQgQ3JlZXBzO1dvb2RsYW5kIFdhcmJhbmRzIC0gUmFkaWFudCBTaWVnZSBDcmVlcHM7UGhhbnRvbSBBZHZlbnQgQmVsdCBVUDtXb29kbGFuZCBXYXJiYW5kcyAtIERpcmUgQ3JlZXBzO1dvb2RsYW5kIFdhcmJhbmRzIC0gRGlyZSBTaWVnZSBDcmVlcHM7RGVjbGFyYXRpb24gb2YgdGhlIERpdmluZSBTaGFkb3cgRGlyZSBUb3dlcnM7R29sZGVuIFNpbGVudCBXYWtlO01hbmlhcyBNYXNrIFByZW07UmVhcGVycyBXcmVhdGg7TWFqZXN0eSBPZiBUaGUgQ29sb3NzdXMgLSBQZWJibGU7TWFqZXN0eSBPZiBUaGUgQ29sb3NzdXMgLSBDb2JibGU7TWFqZXN0eSBPZiBUaGUgQ29sb3NzdXMgLSBNb25vbGl0aDtNb25hcmNoIG9mIHRoZSBTYXBwaGlyZSBHbGVuO0dvbGRlbiBIeWRyYWthbiBMYXRjaDtUaGUgSW50ZXJuYXRpb25hbCAyMDE5IE11c2ljIFBhY2s7T3Zlcmdyb3duIEVtYmxlbSBBZ2hhbmltIEVmZmVjdDtLdW5ra2EgYW5kIFRpZGVodW50ZXIgQW5ub3VuY2VyO01hbnRsZSBvZiB0aGUgV2hpc3BlcmVkIEJvbmQ7Rm9jYWwgUmVzb25hbmNlIFYgMy4wO1N3aW5lIG9mIHRoZSBTdW5rZW4gR2FsbGV5IFByZW07SmFkZSBSZWNrb25pbmcgUHJlbTtXb3JsZCBDaGFzbSBBcnRpZmFjdDtCZW5ldm9sZW50IENvbXBhbmlvbiBWIDIuMDtUb3JtZW50ZWQgQ3Jvd247VG9ybWVudGVkIFN0YWZmIG9mIEVtaW5lbnQgUmV2aXZhbCBFeGNlcHRpb25hbDtIdW50ZXJzIEhvYXJkO1RpbmVzIG9mIFR5YmFyYTtNYXJrIG9mIHRoZSBGaXJzdCBIdW50IEhhcnZlc3RlZDtHb2xkZW4gQnJhY2VycyBvZiBGb3Jsb3JuIFByZWNpcGljZTtCb29rIG9mIHRoZSBWaXppZXIgRXhpbGUgUHJlbTtNdWxjdGFudCBQYWxsIG9mIHRoZSBDcmltc29uIFdpdG5lc3M7SGVsbC1TcGFyIEFuYXRoZW1hIE9ic2lkaWFuIEJsaWdodDtHb2xkZW4gU2hhcmRzIG9mIEV4aWxlIFByZW07QXN0cmFsIERyaWZ0O0FrdG9rKnMgRW1pc3NhcmllcztDdWx0IG9mIEFrdG9rO1RhaWwgb2YgdGhlIEZlcm9jaWQ5519cyBUb3hpY2FudDtCbG9zc29tIG9mIHRoZSBNZXJyeSBXYW5kZXJlcjtDcm93biBvZiB0aGUgQWdlbGVzcyBGYWU7TWVycnkgV2FuZGVyZXIqcyBCcnVzaDtBcmNhbmEgU0YgRGVtb24gRWF0aGVyO0luc2F0aWFibGUgQm9uZXNhdyBQcmVtO0dvbGRlbiBTY2F2ZW5naW5nIEd1dHRsZXNsdWc7R29sZGVuIFJpcHBlcnMgUmVlbDtXYXJkY2hlc3QgRGlyZWxpbmcgV2FyZDtBcmNhbmljIFJlc29uYW5jZSBCZWFtO1JvbGxlcm1hd3N0ZXI7U3VibWVyZ2VkIEhhemFyZCBMYXVuY2hlcjtTdWJtZXJnZWQgSGF6YXJkIFByb3BlbGxlcjtTdWJtZXJnZWQgSGF6YXJkIEh1bGw7U3VibWVyZ2VkIEhhemFyZCBMYXNlcjtTdWxsZW4gSGFydmVzdDtHb2xkZW4gU3VsbGVuIEhvbGxvdztTdWxsZW4gUmFtcGFydDtDcmltc29uIEdhdGVzIG9mIE5vdGhsO05vdGhsaWMgQnVyZGVuIG9mIHRoZSBDcmltc29uIFdpdG5lc3M7UGlwZSBvZiBEZXp1biBQcmVtO0F0b21pYyBSYXkgVGhydXN0ZXJzIFByZW07U3dvcmQgb2YgdGhlIENvbG9zc3VzO1BoYW50b20gQXNjZW5zaW9uO0hvcm5zIG9mIHRoZSBCZXRyYXllcjtGaW4gS2luZ3MgQ2hhcm0gb2YgRW1pbmVudCBSZXZpdmFsIEV4Y2VwdGlvbmFsO0dvbGRlbiBUd2lsaWdodCBTY2hpc207R29sZGVuIE1vb25mYWxsIFByZW07TWQ5519bnQgb2YgdGhlIFdpbmdlZCBTZW50aW5lbDtIZWxtIG9mIHRoZSBEYXJrIE1vb24gU3RhbGtlcjtHb2xkZW4gRnVsbC1Cb3JlIEJvbmFuemE7QmxhY2tzYWlsIENhbm5vbmVlciBIYXQ7U25pcGVyIEltbW9ydGFsIFdlYXBvbiBvZiB0aGUgQXJkYWxhbiBJbnRlcmRpY3RvcjtCbGFkZSBvZiBUZWFycyBhbmQgQ3Jvd24gb2YgVGVhcnM7TWFuZSBvZiB0aGUgU3Vud2FycmlvciBVUDtDb25jb3JkIERvbWluaW9uO1BoYW50b20gQ29uY29yZCBQcmVtO0JpdHRlciBMaW5lYWdlIEltbW9ydGFsIEF4ZXM7V2luZHJhbmdlciBBcmNhbmEgc3R5bGUgMjtDcmltc29uIEVkaWN0IG9mIFNoYWRvd3M7R29sZGVuIFNoYWRvdyBNYXNxdWVyYWRlIFByZW07SHVuZ2VyIG9mIHRoZSBIb3dsaW5nIFdpbGRzIFdlYXBvbjtTa2l0dGVyaW5nIERlc29sYXRpb24gUHJlbTtDcmltc29uIFBpcXVlO0dvbGRlbiBDeXJyaWRhZSBQcmVtO01hbmlmb2xkIFBhcmFkb3ggUEEgQXJjYW5hIFN0eWxlIDM7Q29kaWNpbCBvZiB0aGUgVmVpbGVkIE9uZXM7QXZvd2FuY2Ugb2YgdGhlIFZlaWxlZCBPbmVzO0dvbGRlbiBXeXJtd3JvdWdodCBGbGFyZSBQcmVtO1NvdWwgb2YgdGhlIFNsYXllciBQcmVtO0Rpc2NpcGxlIG9mIHRoZSBXeXJtd3JvdWdodCBGbGFtZTtCZWx0IG9mIHRoZSBGYWVzaGFkZSBGbG93ZXI7VGhlIFN1bmJyZWV6ZSBCaXJ0aHJpZ2h0O0NyaW1zb24gSGVhcnRzIG9mIE1pc3J1bGU7QXhlIGZ1bGwgSW1tb3J0YWxzIE1lZ2FwYWNrIGFsdDtLdW5ra2EgSW1tb3J0YWxzIE1lZ2FQYWNrO1J1YmljayBBcmNhbmEgd2l0aCBJbW1vcnRhbDtQbGFuZXRmYWxsIGFuZCBKdWRnZW1lbnQgb2YgdGhlIEZhbGxlbiBhbmQgQnJhY2VycyBvZiB0aGUgQ2F2ZXJuIEx1bWluYXIgQVJDQU5BIE1lZ2FQYWNrO1F1ZWVuIG9mIFBhaW4gQXJjYW5hIE1lZ2FQYWNrO0FsbGZhdGhlciBvZiBOYXR1cmUgU2V0O1dyYWl0aCBLaW5nIEFyY2FuYSBNZWdhUGFjaztSaWdodGVvdXMgVGh1bmRlcmJvbHQgYW5kIEFyY2FuYSBNZWdhUGFjaztNYXJzIFRJMTAgQ29sbGVjdG9ycyBDYWNoZSBNZWdhUGFjaztTaWxlbmNlciBNZWdhUGFjaztQbHVuZGVyIG9mIHRoZSBTYXZhZ2UgTW9uZ2VyO1dpdGNoIERvY3RvciBNZWdhUGFjaztHb2xkZW4gRGFyayBNYXcgSW5oaWJpdG8gYW5kIEdvbGRlbiBQcm9mYW5lIFVuaW9uIGFuZCBHb2xkZW4gRHJlYWQgUmVxdWlzaXRpb24gTGlmZXN0ZWFsZXIgSW1tb3J0YWxzIE1lZ2FwYWNrO0V5ZSBvZiB0aGUgV2VhdGhlcmVkIFN0b3JtO09ncmUgTWFnaSBJbW1vcnRhbHMgQXJjYW5hIE1lZ2FQYWNrO0h1c2thciBNZWdhUGFjaztSaXR1YWwgb2YgdGhlIExveWFsIEZvbGQ7QUFNZWdhUGFjaztFbmlnbWEgTWVnYVBhY2s7QW50aU1hZ2UgRmVtYWxlIFBlcnNvbmEgVGhlIERpc2NpcGxlcyBQYXRoIEFudGktTWFnZSBBcmNhbmEgQU1hO0Nsb2Nrd2VyayBNZWdhUGFjaztMZWdpb24gQ29tbWFuZGVyIE1vZE1ha2VyIE1lZ2FQYWNrO0FpcmJvcm5lIE1hY2hldGU7TmlnaHQgU3RhbGtlciBJbW1vcnRhbCBhbmQgUmVhcGVyIEtpc2lsZXYgTW9kTWFrZXIgTWVnYVBhY2s7TWVkdXNhIE1lZ2FQYWNrIE5FVztCcmlzdGxlYmFjayBNZWdhUGFjaztNb25rZXkgS2luZyBBcmNhbmEgTWVnYVBhY2s7U2lsdmVyd3VybSBTYWNyaWZpY2U7RGFya2JyZXcgRW5mb3JjZXIgYW5kIEV0ZXJuYWwgUmFkaWFuY2UgQmxhZGVzIGFuZCBNaWRhcyBLbnVja2xlcyBNZWdhUGFjaztJbmN1cmFibGUgUGVzdGlsZW5jZTtUcmVhbnQgUHJvdGVjdG9yIE1lZ2FQYWNrO1NsYXJrIE1lZ2FQYWNrIE5ldztBYmFkZG9uIFJFRCBNZWdhUGFjaztGcm9zdGhlYXJ0O0Rvb20gSW1tb3J0YWxzIE1lZ2FQYWNrO1NwaXJpdCBCcmVha2VyIE1lZ2FQYWNrOyAxMjN8fHw=