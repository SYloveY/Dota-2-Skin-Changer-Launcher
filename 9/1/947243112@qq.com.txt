bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogNTc1QkZBODAtRTBBQi0wMDAwLTAwMDAtMDAwMDAwMDAwMDAwOzsgMTExfHx8IDIyMjo6ICQyeSQxMCROakppWm1VeU5HRTVZMkUwTVdJek9PcjhaS1Jnc1k2cmxLNEFoZ0VwSExFZXRQWDNScVg2LiAyMjJ8fHwgMTIzOjogWmVhbCBvZiBPbW96IEFya29zaDtXaW5ncyBvZiBWYXNodW5kb2w7V3JhdGggb2YgdGhlIEZhbGxlbiBCZWx0O1dyYXRoIG9mIHRoZSBGYWxsZW4gSGVhZDtXcmF0aCBvZiB0aGUgRmFsbGVuIFNob3VsZGVyO1dyYXRoIG9mIHRoZSBGYWxsZW4gVGFpbDtXcmF0aCBvZiB0aGUgRmFsbGVuIFdlYXBvbjtBcm1vciBvZiBWaWxlIFJlbGlxdWFyeTtBcm1zIG9mIFZpbGUgUmVsaXF1YXJ5O01hbnRsZSBvZiBWaWxlIFJlbGlxdWFyeTtIZWxtIG9mIHRoZSBEYXJrIFJlc2Vydm9pcjtQYXVsZHJvbnMgb2YgVmlsZSBSZWxpcXVhcnk7QmxhZGUgb2YgdGhlIERhcmsgUmVzZXJ2b2lyO1NoYWRvdyBpbiB0aGUgRGVlcCBBcm1vcjtEcmFnb24gb2YgdGhlIE91dGxhbmQgUmF2YWdlcjtNYXJheGlmb3JtcyBJcmUgUHJlbTtXcmFwIG9mIHRoZSBVcnVzaGluIEh1bnRzbWFuO0tpdCBvZiB0aGUgSHVudCBFdGVybmFsO01hcmF4aWZvcm1zIEZhdGU7R2xvdmVzIG9mIHRoZSBIdW50IEV0ZXJuYWw7RGlhYm9saWMgQXNwZWN0O1BlcmRpdGlvbjtDaGFvcyBGdWxjcnVtO0VudHJvcGljIFNob3VsZGVycGFkcyBQcmVtO01vbHRlbiBDbGF3IFByZW07QmVsdCBvZiB0aGUgV3JhdGhmdWwgQW5uaWhpbGF0b3I7SG9ybnMgb2YgdGhlIFdyYXRoZnVsIEFubmloaWxhdG9yO0VsaXhpciBvZiBEcmFnb25zIEJyZWF0aCBQcmVtO0FyY3RpYyBCcmFjZXJzIG9mIHRoZSBOb3J0aDtBcmNhbmEgQ3J5c3RhbCBNYWlkZW4gRnJvc3QgQXZhbGFuY2hlO1l1bHNhcmlhcyBNYW50bGUgUHJlbTtTY2VwdHJlIG9mIEljZXdyYWNrO1ZpcmdhcyBBcmM7RmxvdXJpc2hpbmcgTG9kZXN0YXIgUHJlbTtCcmFjZXIgb2YgQ29udGVzdGVkIEZhdGU7QmFyZGluZyBvZiB0aGUgQ2hhb3MgQ2hvc2VuO0JlbHQgb2YgQ29udGVzdGVkIEZhdGU7V2VhdGhlciBCbHVlIFNreSBmcm9tIFNvdXAgZm9yIFNsdXRzO1NoYWRvdyBpbiB0aGUgRGVlcCBCYWNrO0N1c3RvbSBCbHVlIEltbW9ydGFsIENhcGU7V2luZHJhbmdlciBDdXN0b20gQmx1ZSBJbW1vcnRhbCBCb3c7Rmxvd2Vyc29uZyBCZWF1dHkgU3R5bGUgMTtGbG93ZXJzb25nIFRob3JucztXaW5kcmFuZ2VyIEJsdWUgSW1tb3J0YWwgQmlyZCBVUDtTcGl0dGVycyBvZiB0aGUgVmlydWxlbnQgS3JhaXQ7Q2hvbXBlciBXYXJkO0N1bHQgb2YgQWt0b2s7VmVyZGFudCBQcmVkYXRvciBCYWNrO1RhaWwgb2YgdGhlIEZlcm9jaWQ5519cyBUb3hpY2FudDtDbGF3cyBvZiB0aGUgQ3J5c3RhbCBEcmlmdDtIaWRlIG9mIHRoZSBDcnlzdGFsIERyaWZ0O0JhcmRpbmcgb2YgdGhlIFNhbmdzdHJhdGggRm9sZDtNYW5lIG9mIHRoZSBDcnlzdGFsIERyaWZ0O1N3aWZ0IENsYXcgYW5kIEZlcm9jaWQ5519cyBIZWFydDtFbWVyYWxkIENvbnF1ZXN0O1JhdmVub3VzIEFieXNzIC0gSGVhZDtSYXZlbm91cyBBYnlzcyAtIEFybW9yO1RoZSBJZ25lb3VzIFN0b25lIFYgMy4wO01lZGl1bSBGcm9zdG1vb3Q7QW5jaWVudCBJbmhlcml0YW5jZSAtIEJhY2s7Q3J5c3RhbCBEcnlhZCBQcmVtO1NwYW4gb2YgU29ycm93O1NjeXRoZXMgb2YgU29ycm93O1BhY2h5ZGVybSBQb3dkZXJ3YWdvbiBTcG9vbjtCb21idHJhaWxzIGFuZCBCb29tc3RpY2tzIFNwbGVlbjtQYWNoeWRlcm0gUG93ZGVyd2Fnb24gUmVtb3RlIE1pbmUgVVA7U3dpbmUgSGVsbWV0O1BhY2h5ZGVybSBQb3dkZXJ3YWdvbiBXZWFwb247QnJhY2VycyBvZiB0aGUgQW5kZXN0aWFuIFNlbnRpbmVsO0NyaW1zb24gRmlyc3Qgb2YgdGhlIEZsb29kO1NsYXJkYXIgSW1tb3J0YWwgSGVhZCBHb2xkZW4gRmluIG9mIHRoZSBGaXJzdCBTcGVhcjtHb2xkZW4gR3Jhc3BpbmcgQmx1ZGdlb24gZWZmZWN0O1ZvdWxnZSBvZiB0aGUgQW5kZXN0aWFuIFNlbnRpbmVsO1JvYmVzIG9mIE1hbGljaWQ5519cyBFZmZsb3Jlc2NlbmNlO0hvcm5zIG9mIE1hbGljaWQ5519cyBFZmZsb3Jlc2NlbmNlO1RyYW5zdmVyc2FudCBTb3VsIG9mIHRoZSBDcmltc29uIFdpdG5lc3MgUHJlbTtTb3VsIERpZmZ1c2VyIFByZW07R2xhaXZlIG9mIE9zY2lsbGE7RGFtYXJha2FuIE11enpsZSBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzO1RoZSBCYXJyZW4gVmVjdG9yO1RhaWwgb2YgdGhlIFNjb3VyaW5nIER1bmVzO1RoZSBCYXJyZW4gQ3Jvd24gUHJlbTtMZWdzIG9mIHRoZSBFbHVzaXZlIERlc3Ryb3llcjtDYXJhcGFjZSBvZiB0aGUgRnJvc3RiaXRlIER1bmVzO0h1bmdlciBvZiB0aGUgSG93bGluZyBXaWxkcyBBcm1zO0NyaW1zb24gRWRpY3Qgb2YgU2hhZG93cztIdW5nZXIgb2YgdGhlIEhvd2xpbmcgV2lsZHMgT2ZmLUhhbmQgV2VhcG9uO0dvbGRlbiBTaGFkb3cgTWFzcXVlcmFkZSBQcmVtO1Ntb2tlIEJvbWIgb2YgTW9uc3Ryb3VzIFJlcHJpc2FsO0h1bmdlciBvZiB0aGUgSG93bGluZyBXaWxkcyBXZWFwb247RG90YUNpbmVtYSAtIFF1ZWVuIG9mIFBhaW4gU3BlbGxzO1NvbGFyIEZvcmdlIFByZW07QmxhemUgb2YgT2JsaXZpb24gU3VwZXJub3ZhO0JsYWNrZ2F0ZSBTZW50aW5lbCBIZWFkO0dhdW50bGV0cyBvZiBTYWNyZWQgTGlnaHQ7QXJtb3Igb2YgU2FjcmVkIExpZ2h0O1BhcmFnb25zIFJlYnVrZTtGZXR0ZXJzIG9mIE9tbmlzY2llbmNlO0Fkb3JpbmcgV2luZ2ZhbGwgUHJlbTtDbGFzcCBvZiB0aGUgSWNlYm9ybiBUcmluaXR5O1RoZSBDcm93biBvZiB0aGUgU2VhIEVtcHJlc3M7VGhlIE9yZGVyIG9mIEN5cHJpbjtOYWdpbmF0YSBvZiB0aGUgQWxsdXJlIE9mZi1IYW5kO0JsYWRlcyBvZiBQcmlzbWF0aWMgR3JhY2U7QmxhZGUgb2YgdGhlIEZyYWN0dXJlZCBPcmRlcjtQaXRtb3VzZSBGcmF0ZXJuaXR5IFBhdWxkcm9uO0NvbXBhbmlvbiBvZiB0aGUgQXJjdGljIE93bGJlYXIgQ2xhbiBPbGQgVmVyc2lvbjtIb29kd2luayBHbGVpcG5pcjtIb29kd2luayBEcmFnb24gQ3Jvc3Nib3c7UmVtbmFudHMgb2YgQXNjZW5zaW9uO0ZvcnR1bmUgb2YgdGhlIEZpdmUgSG91c2VzO1BlYWNvY2sgUHJpZXN0IEV4b3JjaXNtO0NvdmVycyBvZiB0aGUgTWVycXVlZW47U2xlZXZlcyBvZiB0aGUgTWVycXVlZW47Q3Jvd24gb2YgdGhlIEJyaWdodHNocm91ZDtEcmVzcyBvZiB0aGUgTWVycXVlZW47R29sZGVuIEJyYWNlcnMgb2YgRm9ybG9ybiBQcmVjaXBpY2U7SGFybmVzcyBvZiB0aGUgRm9yZ290dGVuIFRhY3RpY2lhbjtCZWx0IG9mIHRoZSBWaXppZXIgRXhpbGU7VGhlIElyb24gUGlvbmVlciBDb2dzO0FybW9yIG9mIHRoZSBTdW5ib3VuZCBEaXJlY3RpdmU7VGhlIElyb24gUGlvbmVlciBIZWxtO1BhcmFmbGFyZSBDYW5ub247R29sZGVuIFJhYmlkIFdhdGNoY29nO0luZmVybmFsIENoaWVmdGFpbiBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzO0V0ZXJuYWwgQXJtb3Igb2YgdGhlIENoYW9zIENob3NlbjtUYWlsIG9mIHRoZSBQcm92ZW47SW5mZXJuYWwgTWVuYWNlO0ZsYWlsIG9mIHRoZSBWaW9sZW50IFByZWNpcGl0YXRlIENoYW1waW9uO0JsYXN0Zm9yZ2UgRXhoYWxlciBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzO1Bpc3RvbiBJbXBhbGVyO0h1bnRlcnMgSG9hcmQgb2YgdGhlIENyaW1zb24gV2l0bmVzcztNYXJrIG9mIHRoZSBGaXJzdCBIdW50IEhhcnZlc3RlZDtUaW5lcyBvZiBUeWJhcmE7UHJpbWFsIFBhZWFuO0NoaWVmdGFpbiBvZiB0aGUgUHJpbWFsIFRyaWJlcyBCZWFzdDtLaW5nIG9mIEJlYXN0cyBIYXdrO0xlZ2FjeSBvZiBhIExvc3QgQWdlIC0gQXhlO1JlZCBUYWxvbiBIb29kO0JlbHQgb2YgdGhlIFN0b3V0aGVhcnQgR3Jvd2xlcjtMZWdhY3kgb2YgYSBMb3N0IEFnZSAtIEJyYWNlcnM7T3JpZ2luIG9mIHRoZSBVbm1ha2luZztTbHVtYmVyaW5nIFRlcnJvcjtHb2xkZW4gQ3J1Y2libGUgb2YgUmlsZTtGaXN0cyBvZiBBeGUgVW5sZWFzaGVkO1RoaXJzdCBvZiBFenR6aG9rIC0gT2ZmLUhhbmQ7VGhpcnN0IG9mIEV6dHpob2sgQmxhZGU7TWF3IG9mIEV6dHpob2s7RGFya2NsYXcgRW1pc3NhcnkgQXJtcztDcmltc29uIEdhdGVzIG9mIE5vdGhsO0RhcmtjbGF3IEVtaXNzYXJ5IERyZXNzO05vdGhsaWMgQnVyZGVuIG9mIHRoZSBDcmltc29uIFdpdG5lc3MgUHJlbTtEYXJrY2xhdyBFbWlzc2FyeSBTdGFmZjtCcmFjZXJzIG9mIHRoZSBEZWZlbmRlciBvZiBSdWluO1Jlc2lzdGl2ZSBQaW5mb2xkIFByZW07SGF0IG9mIHRoZSBTdG9ybWNoYXJnZSBEcmFnb29uO0JlYXN0IG9mIHRoZSBEZWZlbmRlciBvZiBSdWluO0FybW9yIG9mIHRoZSBEZWZlbmRlciBvZiBSdWluO09yYiBvZiBEZWxpdmVyYW5jZTtDcmltc29uIEJyYWNlcnMgb2YgQWVvbnMgUHJlbTtDbGFzenVyZW1lIEluY3Vyc2lvbiBCZWx0O0NsYXN6dXJlbWUgSW5jdXJzaW9uIEhlYWQ7RnJvemVuIFZvaWQgU2hvdWxkZXI7TWFjZSBvZiBBZW9ucyBQcmVtO0dhdW50bGV0IG9mIHRoZSBJbmZlcm5hbCBSYW1ibGVyO011bGN0YW50IFBhbGwgb2YgdGhlIENyaW1zb24gV2l0bmVzcztGaW4gS2luZ3MgQ2hhcm0gb2YgRW1pbmVudCBSZXZpdmFsIEV4Y2VwdGlvbmFsO0hlbG0gb2YgdGhlIERhcmsgTW9vbiBTdGFsa2VyO01vdW50IG9mIHRoZSBXaW5nZWQgU2VudGluZWw7TW9vbmZhbGwgUHJlbTtBcm1vciBvZiB0aGUgV2luZ2VkIFNlbnRpbmVsO0dsYWl2ZXMgb2YgdGhlIFdpbmdlZCBTZW50aW5lbDtTaG9jayBvZiB0aGUgQW52aWwgUHJlbTtDcmVzY2VudCBCb3cgQXJyb3cgb25seTtQdWxzYXIgUmVtbmFudCBQcmVtO0ZsdXR0ZXJpbmcgU3RhZmYgViAyLjA7TWFudGxlIG9mIHRoZSBUcnVlYmFyayBBZGhlcmVudDtNb25hcmNoIG9mIHRoZSBTYXBwaGlyZSBHbGVuO0JvbnNhaWtvO0JlbHQgb2YgSGFyc2ggU29qb3VybjtEaWZmdXNhbCBMYW5jZSBQcmVtO1BhdWxkcm9ucyBvZiBIYXJzaCBTb2pvdXJuO01hbmUgb2YgdGhlIFN1bndhcnJpb3IgVVA7QXJtcyBvZiBIYXJzaCBTb2pvdXJuO0FybW9yIG9mIHRoZSBNYXplIEtlZXBlcjtBcm1zIG9mIHRoZSBGb3Jsb3JuIE1hemU7QmVsdCBvZiB0aGUgRm9ybG9ybiBNYXplO0dvbGRlbiBTZXZlcmluZyBDcmVzdCBQcmVtO1NldmVyaW5nIExhc2ggUHJlbTtDYXBlIG9mIHRoZSBJbXBvc3NpYmxlIFJlYWxtO0hlYWQgb2YgdGhlIEltcG9zc2libGUgUmVhbG07VG9yY2ggb2YgRmFudG9jY2luaXMgRGlsZW1tYTtDcm93biBvZiBDYWxhcGhhcyBBcm1vcjtHb2xkZW4gTWFudGxlIG9mIEdyaW0gRmFjYWRlO0JlbHQgb2YgRGVwcmF2ZWQgTWFsZm9ybWF0aW9uO1RhaWwgb2YgRGVwcmF2ZWQgTWFsZm9ybWF0aW9uO0FybXMgb2YgdGhlIEx1Y2VudCBDYW5vcHk7SGF1bCBvZiB0aGUgTHVjZW50IENhbm9weTtMYXNoIG9mIHRoZSBMaXphcmQgS2luO0NyaW1zb24gQ2Vuc2VyIG9mIEdsaXNzIFVQO0dsaW1wc2Ugb2YgdGhlIFNwaXRlZnVsIEV5ZTtHb2xkZW4gTGFtYiB0byB0aGUgU2xhdWdodGVyIFByZW07QmxhY2tzYWlsIENhbm5vbmVlciBBcm1zO0JsYWNrc2FpbCBDYW5ub25lZXIgQmFjaztCbGFja3NhaWwgQ2Fubm9uZWVyIEhhdDtCbGFja3NhaWwgQ2Fubm9uZWVyIFNob3VsZGVyO011aCBLZWVuIEd1bjtTYXZhZ2UgTWV0dGxlO0hvcnJvciBmcm9tIHRoZSBEZWVwIEJlbHQ7SG9ycm9yIGZyb20gdGhlIERlZXAgQXJtcztHb2xkZW4gRmxvb2RtYXNrO0hvcnJvciBmcm9tIHRoZSBEZWVwIE9mZi1IYW5kO0NsYWRkaXNoIEN1ZGdlbCBQcmVtO1N1Ym1lcmdlZCBIYXphcmQgUHJvcGVsbGVyO1JvbGxlcm1hd3N0ZXIgYW5kIE1lY2hhIEJvb3RzIG9mIFRyYXZlbCBNayBJSUk7U3VibWVyZ2VkIEhhemFyZCBMYXVuY2hlcjtTdWJtZXJnZWQgSGF6YXJkIEh1bGw7Q2Fubm9uIFB1bmNoIG9mIHRoZSBCYXJyaWVyIFJvZ3VlO1RvbWUgb2YgdGhlIEd1YXJkZWQgV29yZDtIZWxtIG9mIHRoZSBHdWFyZGVkIFdvcmQ7VHVza3Mgb2YgdGhlIEd1YXJkZWQgV29yZDtDb2F0IG9mIHRoZSBHbGFjaWVyIFNlYTtIYXRjaGV0IG9mIHRoZSBHdWFyZGVkIFdvcmQ7Rmxlc2ggR29sZW0gb2YgRm9ybG9ybiBEZXNjZW50O0FybW9yIG9mIEdyaW0gUmVmb3JtYXRpb247UGFsZSBBdWd1ciBQcmVtO1RoZSBIYWxsb3dzIFdpdGhpbjtUaGUgSGFsbG93cyBXaXRoaW4gVG9tYnN0b25lO0NvbnN0ZWxsYXRpb24gQXJtb3I7U2tpdHRlcmluZyBEZXNvbGF0aW9uIFByZW07Q3JpbXNvbiBQaXF1ZSBQcmVtO0dvbGRlbiBDeXJyaWRhZSBQcmVtO0VtYmVyIFRpcHBlZCBTdHJpZGVycztSaXZlciBWaWFsIEVsZWN0cmlmaWVsZDtBbmltYXRlZCBEYXNoYm9hcmQgV2luZHJhbmdlciBBcmNhbmEgc3R5bGUgMSArIFNvdW5kO01pZG5pZ2h0IFRlcnJvciBIVUQ7VGVycmFpbiAtIFNhbmN0dW1zIG9mIHRoZSBEaXZpbmU7Um9zaGFuIGZyb20gRGlhYmxvO1dhcmRjaGVzdCBEaXJlbGluZyBXYXJkO0hvbmV5IEhlaXN0IEJhYnkgUm9zaGFuO0V2ZXJibGFjaztTaGF0dGVyYmxhc3QgQ29yZSBTaGF0dGVyYmxhc3QgQ3Jvd24gQXBvY2FseXBzZSBVbmJvdW5kO0xpZ2h0Zm9yZ2VkIERyYWVuZWk7Q3VzdG9tIE1lZ2FQYWNrIE1hZ2ljIFB5cm9tYW5jZXIgUkU7RWFydGhzaGFrZXIgTWVnYVBhY2sgTmV3O0N1c3RvbSBNZWdhUGFjayBEcm93IFJhbmdlciBTeWx2YW5hcyBMaXZlIChBbHQpO01hcnMgVEkxMCBDb2xsZWN0b3JzIENhY2hlIE1lZ2FQYWNrO0N1c3RvbSBNZWdhUGFjayBEZWxpbGFoIFJFO0N1c3RvbSBNZWdhcGFjayBIdXNrYXIgRmxhc2hwb2ludCBQcm9zZWx5dGUgKyBQdXJzdWl0IG9mIHRoZSBFbWJlciBEZW1vbnM7QmxhZGVmb3JtIExlZ2FjeSBQcm92b2NhdGlvbiBvZiBSdWluO0JhcnJhY3VkYTtWaXBlciBNZWdhUGFjaztFbmlnbWEgTWVnYVBhY2s7QW50aU1hZ2UgUkVEIE1lZ2FQYWNrO0RhcmticmV3IEVuZm9yY2VyIGFuZCBFdGVybmFsIFJhZGlhbmNlIEJsYWRlcyBhbmQgTWlkYXMgS251Y2tsZXMgTWVnYVBhY2s7UnVtcnVubmVycyBDYXJyb25hZGU7Q3VzdG9tIE1lZ2FQYWNrIEZpZXJ5IFNwaXJpdDtDdXN0b20gTWVnYVBhY2sgTGVnaW9uIENvbW1hbmRlciBNZXJlZGl0aCBSRTtDdXN0b20gTWVnYVBhY2sgVGVtcGxhciBBc3Nhc3NpbiBKdW5nbGUgU2VjcmV0cyBSRTtadWxqaW4gZm9yIFRyb2xsIFdhcmxvcmQgU3R5bGUgMztXaXRjaCBEb2N0b3IgTWVnYVBhY2s7RHJlYWQgQ29tcGFjdDtWaXNhZ2UgTWVnYVBhY2s7VGltYmVyc2F3IE1lZ2FQYWNrO1N0b3JtIFNwaXJpdCBNZWdhUGFjaztTRiBBcmNhbmEgTWVnYXBhY2s7UHVkZ2UgVEkxMCBDb2xsZWN0b3JzIENhY2hlIE1lZ2FQYWNrO091dHdvcmxkIERldm91dmVyIE1lZ2FQYWNrO0RlYXRoIE5lY3JvbGlnaHQgUHJlbWl1bSBTdHlsZSAyO01vbmtleSBLaW5nIEFyY2FuYSBNZWdhUGFjaztMeWNhbiBLaXNpbGV2IE1vZE1ha2VyIE1lZ2FQYWNrO0pha2lybyBNZWdhUGFjaztUaGUgV2l6YXJkIG9mIHRoZSBJbXBlcmlhbCBDb3VydDtFeWUgT2YgUG93ZXIgU2V0O0FyYyBXYXJkZW4gTWVnYVBhY2s7S3Vua2thIEltbW9ydGFscyBNZWdhUGFjaztHb2xkZW4gRGFyayBNYXcgSW5oaWJpdG8gYW5kIEdvbGRlbiBQcm9mYW5lIFVuaW9uIGFuZCBHb2xkZW4gRHJlYWQgUmVxdWlzaXRpb24gTGlmZXN0ZWFsZXIgSW1tb3J0YWxzIE1lZ2FwYWNrO01pcmFuYSBUSTEwIENvbGxlY3RvcnMgQ2FjaGUgTWVnYVBhY2s7TW9ycGhsaW5nIEltbW9ydGFscyBNZWdhUGFjayBVUDtDdXN0b20gTmlnaHQgU3RhbGtlciBNZWdhcGFjayBGcm9zdCBXYWxrZXI7T2dyZSBNYWdpIEltbW9ydGFscyBBcmNhbmEgTWVnYVBhY2s7U2t5d3JhdGggTWFnZSBNZWdhUGFjayBUaGFuYXRvcztTdmVuIEltbW9ydGFscyBNZWdhUGFjayBVUDtUcmVhbnQgUHJvdGVjdG9yIE1lZ2FQYWNrOyAxMjN8fHw=