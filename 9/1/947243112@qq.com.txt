bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogNTc1QkZBODAtRTBBQi0wMDAwLTAwMDAtMDAwMDAwMDAwMDAwOzsgMTExfHx8IDIyMjo6ICQyeSQxMCROakppWm1VeU5HRTVZMkUwTVdJek9PcjhaS1Jnc1k2cmxLNEFoZ0VwSExFZXRQWDNScVg2LiAyMjJ8fHwgMTIzOjogWmVhbCBvZiBPbW96IEFya29zaDtXaW5ncyBvZiBWYXNodW5kb2w7V3JhdGggb2YgdGhlIEZhbGxlbiBCZWx0O1dyYXRoIG9mIHRoZSBGYWxsZW4gSGVhZDtXcmF0aCBvZiB0aGUgRmFsbGVuIFNob3VsZGVyO1dyYXRoIG9mIHRoZSBGYWxsZW4gVGFpbDtXcmF0aCBvZiB0aGUgRmFsbGVuIFdlYXBvbjtBcm1vciBvZiBWaWxlIFJlbGlxdWFyeTtBcm1zIG9mIFZpbGUgUmVsaXF1YXJ5O01hbnRsZSBvZiBWaWxlIFJlbGlxdWFyeTtIZWxtIG9mIHRoZSBEYXJrIFJlc2Vydm9pcjtQYXVsZHJvbnMgb2YgVmlsZSBSZWxpcXVhcnk7QmxhZGUgb2YgdGhlIERhcmsgUmVzZXJ2b2lyO1NoYWRvdyBpbiB0aGUgRGVlcCBBcm1vcjtNYXJheGlmb3JtcyBJcmUgUHJlbTtXcmFwIG9mIHRoZSBVcnVzaGluIEh1bnRzbWFuO0tpdCBvZiB0aGUgSHVudCBFdGVybmFsO01hcmF4aWZvcm1zIEZhdGU7R2xvdmVzIG9mIHRoZSBIdW50IEV0ZXJuYWw7RGlhYm9saWMgQXNwZWN0O0NoYW9zIEZ1bGNydW07RW50cm9waWMgU2hvdWxkZXJwYWRzIFByZW07TW9sdGVuIENsYXcgUHJlbTtCZWx0IG9mIHRoZSBXcmF0aGZ1bCBBbm5paGlsYXRvcjtIb3JucyBvZiB0aGUgV3JhdGhmdWwgQW5uaWhpbGF0b3I7RWxpeGlyIG9mIERyYWdvbnMgQnJlYXRoIFByZW07QXJjdGljIEJyYWNlcnMgb2YgdGhlIE5vcnRoO0FyY2FuYSBDcnlzdGFsIE1haWRlbiBGcm9zdCBBdmFsYW5jaGU7WXVsc2FyaWFzIE1hbnRsZSBQcmVtO1NjZXB0cmUgb2YgSWNld3JhY2s7VmlyZ2FzIEFyYztGbG91cmlzaGluZyBMb2Rlc3RhciBQcmVtO0JyYWNlciBvZiBDb250ZXN0ZWQgRmF0ZTtCYXJkaW5nIG9mIHRoZSBDaGFvcyBDaG9zZW47QmVsdCBvZiBDb250ZXN0ZWQgRmF0ZTtTaGFkb3cgaW4gdGhlIERlZXAgQmFjaztCcmFjZXJzIG9mIHRoZSBBbmRlc3RpYW4gU2VudGluZWw7Q3JpbXNvbiBGaXJzdCBvZiB0aGUgRmxvb2Q7U2xhcmRhciBJbW1vcnRhbCBIZWFkIEdvbGRlbiBGaW4gb2YgdGhlIEZpcnN0IFNwZWFyO0dvbGRlbiBHcmFzcGluZyBCbHVkZ2VvbiBlZmZlY3Q7Vm91bGdlIG9mIHRoZSBBbmRlc3RpYW4gU2VudGluZWw7Q2hvbXBlciBXYXJkO1NwaXR0ZXJzIG9mIHRoZSBWaXJ1bGVudCBLcmFpdDtDdWx0IG9mIEFrdG9rO1RhaWwgb2YgdGhlIEZlcm9jaWQ5519cyBUb3hpY2FudDtHb2xkZW4gQ3J1Y2libGUgb2YgUmlsZTtGaXN0cyBvZiBBeGUgVW5sZWFzaGVkO0luZmVybmFsIENoaWVmdGFpbiBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzO0V0ZXJuYWwgQXJtb3Igb2YgdGhlIENoYW9zIENob3NlbjtUYWlsIG9mIHRoZSBQcm92ZW47QXhlIG9mIHRoZSBQcm92ZW47VGhlIElyb24gUGlvbmVlciBDb2dzO0FybW9yIG9mIHRoZSBTdW5ib3VuZCBEaXJlY3RpdmU7VGhlIElyb24gUGlvbmVlciBIZWxtO1BhcmFmbGFyZSBDYW5ub247Q3JpbXNvbiBMYXR0aWNlYW4gSGllcmFyY2h5O055eCBBc3Nhc3NpbnMgRGFnb247U2hhcmRzIG9mIE1ldGVvcml0ZSBIZWFkO0xhdHRpY2VhbiBTaGFyZHMgb2YgdGhlIENyaW1zb24gV2l0bmVzcztHYXVudGxldHMgb2YgU2FjcmVkIExpZ2h0O0FybW9yIG9mIFNhY3JlZCBMaWdodDtQYXJhZ29ucyBSZWJ1a2U7RmV0dGVycyBvZiBPbW5pc2NpZW5jZTtBZG9yaW5nIFdpbmdmYWxsIFByZW07QW5jaWVudCBJbmhlcml0YW5jZSAtIFNob3VsZGVyO0FuY2llbnQgSW5oZXJpdGFuY2UgLSBCZWx0O0FuY2llbnQgSW5oZXJpdGFuY2UgLSBOZWNrO0FuY2llbnQgSW5oZXJpdGFuY2UgLSBCYWNrO0NyeXN0YWwgRHJ5YWQgUHJlbTtDdXN0b20gQmx1ZSBJbW1vcnRhbCBDYXBlO1dpbmRyYW5nZXIgQ3VzdG9tIEJsdWUgSW1tb3J0YWwgQm93O0Zsb3dlcnNvbmcgQmVhdXR5IFN0eWxlIDE7V2luZHJhbmdlciBCbHVlIEltbW9ydGFsIEJpcmQgVVA7Rmxlc2ggR29sZW0gb2YgRm9ybG9ybiBEZXNjZW50O0FybW9yIG9mIEdyaW0gUmVmb3JtYXRpb247UGFsZSBBdWd1ciBQcmVtO1RoZSBIYWxsb3dzIFdpdGhpbjtUaGUgSGFsbG93cyBXaXRoaW4gVG9tYnN0b25lO01vdW50IG9mIHRoZSBCdXJuaW5nIE5pZ2h0bWFyZTtNYXcgb2YgRXp0emhvaztUaGlyc3Qgb2YgRXp0emhvayAtIE9mZi1IYW5kO1RoaXJzdCBvZiBFenR6aG9rIEJsYWRlO1RhbG9ucyBvZiB0aGUgRW5kbGVzcyBTdG9ybSBXZWFwb247U3dvcmQgb2YgdGhlIE91dGxhbmQgUmF2YWdlcjtCcmFjZXJzIG9mIEFlb25zIFByZW07Q2xhc3p1cmVtZSBJbmN1cnNpb24gQmVsdDtDbGFzenVyZW1lIEluY3Vyc2lvbiBIZWFkO0Zyb3plbiBWb2lkIFNob3VsZGVyO01hY2Ugb2YgQWVvbnMgUHJlbTtIZWxtIG9mIHRoZSBEYXJrIE1vb24gU3RhbGtlcjtNb3VudCBvZiB0aGUgV2luZ2VkIFNlbnRpbmVsO01vb25mYWxsIFByZW07QXJtb3Igb2YgdGhlIFdpbmdlZCBTZW50aW5lbDtHbGFpdmVzIG9mIHRoZSBXaW5nZWQgU2VudGluZWw7TW9uYXJjaCBvZiB0aGUgU2FwcGhpcmUgR2xlbjtNYW50bGUgb2YgdGhlIFRydWViYXJrIEFkaGVyZW50O0ZsdXR0ZXJpbmcgU3RhZmYgViAyLjA7U3VibWVyZ2VkIEhhemFyZCBQcm9wZWxsZXI7Um9sbGVybWF3c3RlciBhbmQgTWVjaGEgQm9vdHMgb2YgVHJhdmVsIE1rIElJSTtCbGFja3NoaWVsZCBQcm90b2Ryb25lIE1pc3NpbGUgTGF1bmNoZXI7U3VibWVyZ2VkIEhhemFyZCBIdWxsO1dpbmdzIG9mIHRoZSBGYXRhbCBCbG9vbTtNaWRuaWdodCBUZXJyb3IgSFVEO0FuaW1hdGVkIERhc2hib2FyZCBXaW5kcmFuZ2VyIEFyY2FuYSBzdHlsZSAyICsgU291bmQ7V2VhdGhlciBCbHVlIFNreSBmcm9tIFNvdXAgZm9yIFNsdXRzO1Jvc2hhbiBmcm9tIERpYWJsbztSaXZlciBWaWFsIEVsZWN0cmlmaWVsZDtXYXJkY2hlc3QgRGlyZWxpbmcgV2FyZDtIb25leSBIZWlzdCBCYWJ5IFJvc2hhbjtFdmVyYmxhY2s7U2hhdHRlcmJsYXN0IENvcmUgU2hhdHRlcmJsYXN0IENyb3duIEFwb2NhbHlwc2UgVW5ib3VuZDtMaWdodGZvcmdlZCBEcmFlbmVpO0N1c3RvbSBNZWdhUGFjayBNYWdpYyBQeXJvbWFuY2VyIFJFO0VhcnRoc2hha2VyIE1lZ2FQYWNrIE5ldztDdXN0b20gTWVnYVBhY2sgRHJvdyBSYW5nZXIgU3lsdmFuYXMgTGl2ZSAoQWx0KTtNYXJzIFRJMTAgQ29sbGVjdG9ycyBDYWNoZSBNZWdhUGFjaztDdXN0b20gTWVnYVBhY2sgRGVsaWxhaCBSRTtDdXN0b20gTWVnYXBhY2sgSHVza2FyIEZsYXNocG9pbnQgUHJvc2VseXRlICsgUHVyc3VpdCBvZiB0aGUgRW1iZXIgRGVtb25zO0JsYWRlZm9ybSBMZWdhY3kgUHJvdm9jYXRpb24gb2YgUnVpbjtCYXJyYWN1ZGE7VmlwZXIgTWVnYVBhY2s7RW5pZ21hIE1lZ2FQYWNrO0FudGlNYWdlIFJFRCBNZWdhUGFjaztEYXJrYnJldyBFbmZvcmNlciBhbmQgRXRlcm5hbCBSYWRpYW5jZSBCbGFkZXMgYW5kIE1pZGFzIEtudWNrbGVzIE1lZ2FQYWNrO1J1bXJ1bm5lcnMgQ2Fycm9uYWRlO0N1c3RvbSBNZWdhUGFjayBGaWVyeSBTcGlyaXQ7Q3VzdG9tIE1lZ2FQYWNrIExlZ2lvbiBDb21tYW5kZXIgTWVyZWRpdGggUkU7Q3VzdG9tIE1lZ2FQYWNrIFRlbXBsYXIgQXNzYXNzaW4gSnVuZ2xlIFNlY3JldHMgUkU7WnVsamluIGZvciBUcm9sbCBXYXJsb3JkIFN0eWxlIDM7VGhlIFdpemFyZCBvZiB0aGUgSW1wZXJpYWwgQ291cnQ7TW9ua2V5IEtpbmcgQXJjYW5hIE1lZ2FQYWNrO1NGIEFyY2FuYSBNZWdhcGFjaztCZWFzdG1hc3RlciBNZWdhUGFjaztTdG9ybSBTcGlyaXQgTWVnYVBhY2s7S3Vua2thIEltbW9ydGFscyBNZWdhUGFjaztNb3JwaGxpbmcgSW1tb3J0YWxzIE1lZ2FQYWNrIFVQO0dvbGRlbiBEYXJrIE1hdyBJbmhpYml0byBhbmQgR29sZGVuIFByb2ZhbmUgVW5pb24gYW5kIEdvbGRlbiBEcmVhZCBSZXF1aXNpdGlvbiBMaWZlc3RlYWxlciBJbW1vcnRhbHMgTWVnYXBhY2s7IDEyM3x8fA==