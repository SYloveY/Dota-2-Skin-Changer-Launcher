bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogNTc1QkZBODAtRTBBQi0wMDAwLTAwMDAtMDAwMDAwMDAwMDAwOzsgMTExfHx8IDIyMjo6ICQyeSQxMCROakppWm1VeU5HRTVZMkUwTVdJek9PcjhaS1Jnc1k2cmxLNEFoZ0VwSExFZXRQWDNScVg2LiAyMjJ8fHwgMTIzOjogWmVhbCBvZiBPbW96IEFya29zaDtXaW5ncyBvZiBWYXNodW5kb2w7V3JhdGggb2YgdGhlIEZhbGxlbiBCZWx0O1dyYXRoIG9mIHRoZSBGYWxsZW4gSGVhZDtXcmF0aCBvZiB0aGUgRmFsbGVuIFNob3VsZGVyO1dyYXRoIG9mIHRoZSBGYWxsZW4gVGFpbDtXcmF0aCBvZiB0aGUgRmFsbGVuIFdlYXBvbjtBcm1vciBvZiBWaWxlIFJlbGlxdWFyeTtBcm1zIG9mIFZpbGUgUmVsaXF1YXJ5O01hbnRsZSBvZiBWaWxlIFJlbGlxdWFyeTtIZWxtIG9mIHRoZSBEYXJrIFJlc2Vydm9pcjtQYXVsZHJvbnMgb2YgVmlsZSBSZWxpcXVhcnk7QmxhZGUgb2YgdGhlIERhcmsgUmVzZXJ2b2lyO1NoYWRvdyBpbiB0aGUgRGVlcCBBcm1vcjtNYXJheGlmb3JtcyBJcmUgUHJlbTtXcmFwIG9mIHRoZSBVcnVzaGluIEh1bnRzbWFuO0tpdCBvZiB0aGUgSHVudCBFdGVybmFsO01hcmF4aWZvcm1zIEZhdGU7R2xvdmVzIG9mIHRoZSBIdW50IEV0ZXJuYWw7RGlhYm9saWMgQXNwZWN0O0NoYW9zIEZ1bGNydW07RW50cm9waWMgU2hvdWxkZXJwYWRzIFByZW07TW9sdGVuIENsYXcgUHJlbTtCZWx0IG9mIHRoZSBXcmF0aGZ1bCBBbm5paGlsYXRvcjtIb3JucyBvZiB0aGUgV3JhdGhmdWwgQW5uaWhpbGF0b3I7RWxpeGlyIG9mIERyYWdvbnMgQnJlYXRoIFByZW07QXJjdGljIEJyYWNlcnMgb2YgdGhlIE5vcnRoO0FyY2FuYSBDcnlzdGFsIE1haWRlbiBGcm9zdCBBdmFsYW5jaGU7WXVsc2FyaWFzIE1hbnRsZSBQcmVtO1NjZXB0cmUgb2YgSWNld3JhY2s7VmlyZ2FzIEFyYztGbG91cmlzaGluZyBMb2Rlc3RhciBQcmVtO0JyYWNlciBvZiBDb250ZXN0ZWQgRmF0ZTtCYXJkaW5nIG9mIHRoZSBDaGFvcyBDaG9zZW47QmVsdCBvZiBDb250ZXN0ZWQgRmF0ZTtTaGFkb3cgaW4gdGhlIERlZXAgQmFjaztCcmFjZXJzIG9mIHRoZSBBbmRlc3RpYW4gU2VudGluZWw7Q3JpbXNvbiBGaXJzdCBvZiB0aGUgRmxvb2Q7U2xhcmRhciBJbW1vcnRhbCBIZWFkIEdvbGRlbiBGaW4gb2YgdGhlIEZpcnN0IFNwZWFyO0dvbGRlbiBHcmFzcGluZyBCbHVkZ2VvbiBlZmZlY3Q7Vm91bGdlIG9mIHRoZSBBbmRlc3RpYW4gU2VudGluZWw7Q2hvbXBlciBXYXJkO1NwaXR0ZXJzIG9mIHRoZSBWaXJ1bGVudCBLcmFpdDtDdWx0IG9mIEFrdG9rO1RhaWwgb2YgdGhlIEZlcm9jaWQ5519cyBUb3hpY2FudDtHb2xkZW4gQ3J1Y2libGUgb2YgUmlsZTtGaXN0cyBvZiBBeGUgVW5sZWFzaGVkO0luZmVybmFsIENoaWVmdGFpbiBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzO0V0ZXJuYWwgQXJtb3Igb2YgdGhlIENoYW9zIENob3NlbjtUYWlsIG9mIHRoZSBQcm92ZW47QXhlIG9mIHRoZSBQcm92ZW47VGhlIElyb24gUGlvbmVlciBDb2dzO0FybW9yIG9mIHRoZSBTdW5ib3VuZCBEaXJlY3RpdmU7VGhlIElyb24gUGlvbmVlciBIZWxtO1BhcmFmbGFyZSBDYW5ub247Q3JpbXNvbiBMYXR0aWNlYW4gSGllcmFyY2h5O055eCBBc3Nhc3NpbnMgRGFnb247U2hhcmRzIG9mIE1ldGVvcml0ZSBIZWFkO0xhdHRpY2VhbiBTaGFyZHMgb2YgdGhlIENyaW1zb24gV2l0bmVzcztHYXVudGxldHMgb2YgU2FjcmVkIExpZ2h0O0FybW9yIG9mIFNhY3JlZCBMaWdodDtQYXJhZ29ucyBSZWJ1a2U7RmV0dGVycyBvZiBPbW5pc2NpZW5jZTtBZG9yaW5nIFdpbmdmYWxsIFByZW07QW5jaWVudCBJbmhlcml0YW5jZSAtIFNob3VsZGVyO0FuY2llbnQgSW5oZXJpdGFuY2UgLSBCZWx0O0FuY2llbnQgSW5oZXJpdGFuY2UgLSBOZWNrO0FuY2llbnQgSW5oZXJpdGFuY2UgLSBCYWNrO0NyeXN0YWwgRHJ5YWQgUHJlbTtDdXN0b20gQmx1ZSBJbW1vcnRhbCBDYXBlO1dpbmRyYW5nZXIgQ3VzdG9tIEJsdWUgSW1tb3J0YWwgQm93O0Zsb3dlcnNvbmcgQmVhdXR5IFN0eWxlIDE7V2luZHJhbmdlciBCbHVlIEltbW9ydGFsIEJpcmQgVVA7Rmxlc2ggR29sZW0gb2YgRm9ybG9ybiBEZXNjZW50O0FybW9yIG9mIEdyaW0gUmVmb3JtYXRpb247UGFsZSBBdWd1ciBQcmVtO1RoZSBIYWxsb3dzIFdpdGhpbjtUaGUgSGFsbG93cyBXaXRoaW4gVG9tYnN0b25lO01vdW50IG9mIHRoZSBCdXJuaW5nIE5pZ2h0bWFyZTtNYXcgb2YgRXp0emhvaztUaGlyc3Qgb2YgRXp0emhvayAtIE9mZi1IYW5kO1RoaXJzdCBvZiBFenR6aG9rIEJsYWRlO1RhbG9ucyBvZiB0aGUgRW5kbGVzcyBTdG9ybSBXZWFwb247U3dvcmQgb2YgdGhlIE91dGxhbmQgUmF2YWdlcjtCcmFjZXJzIG9mIEFlb25zIFByZW07Q2xhc3p1cmVtZSBJbmN1cnNpb24gQmVsdDtDbGFzenVyZW1lIEluY3Vyc2lvbiBIZWFkO0Zyb3plbiBWb2lkIFNob3VsZGVyO01hY2Ugb2YgQWVvbnMgUHJlbTtIZWxtIG9mIHRoZSBEYXJrIE1vb24gU3RhbGtlcjtNb3VudCBvZiB0aGUgV2luZ2VkIFNlbnRpbmVsO01vb25mYWxsIFByZW07QXJtb3Igb2YgdGhlIFdpbmdlZCBTZW50aW5lbDtHbGFpdmVzIG9mIHRoZSBXaW5nZWQgU2VudGluZWw7TW9uYXJjaCBvZiB0aGUgU2FwcGhpcmUgR2xlbjtNYW50bGUgb2YgdGhlIFRydWViYXJrIEFkaGVyZW50O0ZsdXR0ZXJpbmcgU3RhZmYgViAyLjA7U3VibWVyZ2VkIEhhemFyZCBQcm9wZWxsZXI7Um9sbGVybWF3c3RlciBhbmQgTWVjaGEgQm9vdHMgb2YgVHJhdmVsIE1rIElJSTtCbGFja3NoaWVsZCBQcm90b2Ryb25lIE1pc3NpbGUgTGF1bmNoZXI7U3VibWVyZ2VkIEhhemFyZCBIdWxsO1dpbmdzIG9mIHRoZSBGYXRhbCBCbG9vbTtNaWRuaWdodCBUZXJyb3IgSFVEO0FuaW1hdGVkIERhc2hib2FyZCBXaW5kcmFuZ2VyIEFyY2FuYSBzdHlsZSAyICsgU291bmQ7V2VhdGhlciBCbHVlIFNreSBmcm9tIFNvdXAgZm9yIFNsdXRzO1Jvc2hhbiBmcm9tIERpYWJsbztSaXZlciBWaWFsIEVsZWN0cmlmaWVsZDtXYXJkY2hlc3QgRGlyZWxpbmcgV2FyZDtIb25leSBIZWlzdCBCYWJ5IFJvc2hhbjtJdGVtIFNvdW5kIFdDIDMgZm9yIFJlYm9ybjtXcmFpdGgga2luZyBUZXJtaW5hdG9yO0FrYXNoYSBXQyAzIFNvdW5kO0FsY2hlbWlzdCBXQyAzIFNvdW5kO0FydGhhcyBXQyAzIFNvdW5kIGZvciBBYmJhZG9uO0F4ZSBXQyAzIFNvdW5kO0JlYXN0bWFzdGVyIFdDIDMgU291bmQ7RHJvdyBSYW5nZXIgV0MgMyBTb3VuZDtFbmNoYW50cmVzcyBXQyAzIFNvdW5kO0h1c2thciBXQyAzIFNvdW5kO0xpY2ggV0MgMyBTb3VuZDtOYWl4IFdDIDMgU291bmQ7THVuYSBXQyAzIFNvdW5kO0V2ZXJibGFjaztTaGF0dGVyYmxhc3QgQ29yZSBTaGF0dGVyYmxhc3QgQ3Jvd24gQXBvY2FseXBzZSBVbmJvdW5kO0xpZ2h0Zm9yZ2VkIERyYWVuZWk7Q3VzdG9tIE1lZ2FQYWNrIE1hZ2ljIFB5cm9tYW5jZXIgUkU7RWFydGhzaGFrZXIgTWVnYVBhY2sgTmV3O0N1c3RvbSBNZWdhUGFjayBEcm93IFJhbmdlciBTeWx2YW5hcyBMaXZlIChBbHQpO01hcnMgVEkxMCBDb2xsZWN0b3JzIENhY2hlIE1lZ2FQYWNrO0N1c3RvbSBNZWdhUGFjayBEZWxpbGFoIFJFO0N1c3RvbSBNZWdhcGFjayBIdXNrYXIgRmxhc2hwb2ludCBQcm9zZWx5dGUgKyBQdXJzdWl0IG9mIHRoZSBFbWJlciBEZW1vbnM7QmxhZGVmb3JtIExlZ2FjeSBQcm92b2NhdGlvbiBvZiBSdWluO0JhcnJhY3VkYTtWaXBlciBNZWdhUGFjaztFbmlnbWEgTWVnYVBhY2s7QW50aU1hZ2UgUkVEIE1lZ2FQYWNrO0RhcmticmV3IEVuZm9yY2VyIGFuZCBFdGVybmFsIFJhZGlhbmNlIEJsYWRlcyBhbmQgTWlkYXMgS251Y2tsZXMgTWVnYVBhY2s7UnVtcnVubmVycyBDYXJyb25hZGU7Q3VzdG9tIE1lZ2FQYWNrIEZpZXJ5IFNwaXJpdDtDdXN0b20gTWVnYVBhY2sgTGVnaW9uIENvbW1hbmRlciBNZXJlZGl0aCBSRTtDdXN0b20gTWVnYVBhY2sgVGVtcGxhciBBc3Nhc3NpbiBKdW5nbGUgU2VjcmV0cyBSRTtadWxqaW4gZm9yIFRyb2xsIFdhcmxvcmQgU3R5bGUgMztUaGUgV2l6YXJkIG9mIHRoZSBJbXBlcmlhbCBDb3VydDtNb25rZXkgS2luZyBBcmNhbmEgTWVnYVBhY2s7U0YgQXJjYW5hIE1lZ2FwYWNrO0JlYXN0bWFzdGVyIE1lZ2FQYWNrO1N0b3JtIFNwaXJpdCBNZWdhUGFjaztLdW5ra2EgSW1tb3J0YWxzIE1lZ2FQYWNrO01vcnBobGluZyBJbW1vcnRhbHMgTWVnYVBhY2sgVVA7R29sZGVuIERhcmsgTWF3IEluaGliaXRvIGFuZCBHb2xkZW4gUHJvZmFuZSBVbmlvbiBhbmQgR29sZGVuIERyZWFkIFJlcXVpc2l0aW9uIExpZmVzdGVhbGVyIEltbW9ydGFscyBNZWdhcGFjazsgMTIzfHx8