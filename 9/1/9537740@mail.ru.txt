limitHWID:: 1 000||| 111:: 45C13EFE-0D07-8BC9-EE56-049226D403A3 111||| 222:: $2y$10$OTBiMzk5YmZmZDIwYjNjNuuBS03bTOmHBdOWZ6NHy.swg3V64M1ye 222||| 123:: drive_dir::Ritual of the Loyal Fold;drive_dir::Ember Spirit*s Hat;drive_dir::Blaze Armor V 2.1;drive_dir::Mentor of the High Plains V 2.1;drive_dir::Goddess of the Underworld;drive_dir::Eternal Harvest;drive_dir::Old Model Shadow Fiend;drive_dir::Toxic Death Eater;drive_dir::Souls Tyrant Arms;drive_dir::The Dwarf Engineer;drive_dir::Exact Marksman;drive_dir::Scavenger of the Basilisk;drive_dir::Trials of the Blackguard Magus No effects;drive_dir::Northern Blight Arms;drive_dir::Cape of the Blackguard Magus;drive_dir::Crown of Fate Meridian;drive_dir::Collar of the Blackguard Magus;drive_dir::Shoulders of the Dark Magic;drive_dir::Great Sage*s Reckoning;drive_dir::Staff of Gun-Yu;drive_dir::Midas King for Monkey King;drive_dir::Masks of Mischief;drive_dir::Blossoming Harmony V 2.0;drive_dir::Corridan Maestro V 2.0;drive_dir::Armor of the Storm Dragon Potente;drive_dir::Complete Garb of the Corridan Maestro;drive_dir::Robe of the Raikage Warrior;drive_dir::The Lightning Orchid;drive_dir::Complete Rose of the Corridan Maestro;drive_dir::Samareen Sacrifice;drive_dir::Reckless Vigor V 2.1;drive_dir::Blade of Reckless Vigor;drive_dir::Riptide Raider V 2.0; 123|||