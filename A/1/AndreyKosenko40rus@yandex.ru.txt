limitHWID:: 1 000||| 111:: 255E5440-4DA4-11E5-B462-305A3AE42AB6 111||| 222:: ab2da8b11be578ece571f0b6c7e0666d1aacfa6e573b123247c853b445fb4471fa13b8bacfd3dc08e2856af19b614147f621464feb10a67119da4004ffec22b1 222||| 123:: River Vial Blue;Ti-9 Roshan;TI-8 TP lvl 2 Effect;TI-8 Shivas Effect;TI-8 Fountain lvl 2 Effect;TI-8 Bottle Effect;TI-8 Blink lvl 1 Effect;TI-8 Eul Effect;TI-8 Fource Staff Effect;25 lvl ping;Aegis and Roshan St. Valentine Day;Question mark Deny;Storm Spirit Mega-Kill;Smeevils Penance Style 3;Molten Claw Prem;Mantle of the Cinder Baron Style 1;Crucible of Rile;Rapiers of the Burning God V 3.1;Kindred of the Iron Dragon V 3.0;Magus Apex;Alluvion Prophecy;Golden Scavenging Guttleslug;Full-Bore Bonanza;Soul Diffuser V 2.1;Iron Surge V 2.2;Savage Mettle;Sylvan Cascade Prem;Crimson Cyrridae;Eternal Radiance Blades Prem;Razzils Midas Knuckles Prem;The Basher Blades;Suit of the Darkbrew Enforcer;Acolyte of Vengeance Hooded Mask;Axe of Phractos Prem;Helm of the Primeval Predator;Bloodstone Blade Pack;Ice Blossom;Yulsarias Mantle Prem;Inverse Bayonet;Blade of the Jade Serpent;Tormented Staff effect;Axia of Metira;Crescent Bow;Staff of Gun-Yu;Fluttering Staff V 2.0;Guardians of the Lost Path Dire Towers;Nyx Assassins Dagon;Nova of Golden Nirvana;DotaCinema - Queen of Pain Spells;Mace of Vincere Atack Effect;Severing Crest V 2.0;Arms of Desolation Prem;Hush of Eternal Night;The Golden Barb of Skadi;The Lightning Orchid V 3.2;Focal Resonance V 3.0;Fluttering Amethyst Trap + Icon;Rollermawster and Mecha Boots of Travel Mk III;Large Igneous Stone;Club of the Igneous Stone;Malefic Drakes Strike only Effect;Yulsaria*s Glacier Prem;Edge of the Lost Order;Armor of the Diabolical Fiend;Souls Tyrant Head;DAC 2015 Chaos Knight Cursor Pack;Terrain - Spring;Weather Spring;Cavernite Radiant Creeps;Guardians of the Lost Path Radiant Towers;Cavernite Dire Creeps;Smeevils Penance;Blue Lil Nova;Lefty;Symbol of the King Restored;Belt of the King Restored;Markings of the King Restored;Golden Immortal Pantheon;Bracers of the Wartorn Heavens;Mulctant Pall;Fin King*s Charm Prem;Stone Infusion;Arsenal of the Demonic Vessel V 2.1;Eldwurms Touch V 3.1;Divine Anchor Style 2;Daemonfell Flame;Ascendance of the Rime Lord 1st Style;Bewitching Flare V 2.0;Memories of the Vow Eternal;Masks of Mischief;Primeval Prophet;Wrath of Ka V 2.1;Black Nihility;Sovereign of the Hive;Shoreline Sapper;Ravening Wings;Vengeance of the Sunwarrior;Ire of Molten Rebirth;Reminiscence of Dreams;Narcissistic Leech;Sanguine Royalty;Magister of the Narrow Fates;Monstrous Reprisal;Wayfaring Scholar Set;Dancer of the Spiteful Eye V 3.0;Gold Skymage;Dark Reef Escape V 2.1;Corridan Maestro V 2.0;Cry of the Battlehawk;Fluttering Amethyst;Bark of the Ageless Witness;Roshan Hunters Set;Dread Compact;Bearer of the Arkturan Talon;Reckless Vigor V 2.1; 123|||