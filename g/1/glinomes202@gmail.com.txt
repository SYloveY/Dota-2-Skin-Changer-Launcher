bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogMDMyQjAyOTAtMDQzNC0wNTc4LUVFMDYtODcwNzAwMDgwMDA5IDExMXx8fCAyMjI6OiAkMnkkMTAkWm1KaU9XWm1aalpoTVRaa09ESmpOT0x6RDZaaHVSVW4ydk1KVGRTV0VOZG9KSlNUQ1NtN1MgMjIyfHx8IDEyMzo6IENvbWJvIE1lZ2EgR3JlZXZpbDtHTGFET1MgQW5ub3VuY2VyO0FjaWQgSHlkcmEgQ3Vyc29yIFBhY2s7Q3VzdG9tIERhc2hib2FyZCA2NztUSS0xMCBUZWxlcG9ydCBsdmwgMiBFZmZlY3Q7VEktMTAgQWdoYW5pbSBFZmZlY3Q7QmxpbmsgRGFnZ2VyIGx2bCAxIFRJLTYgRWZmZWN0O1BsYW5ldGZhbGwgQmxpbms7Qm90dGxlIFRJLTYgRWZmZWN0O1N1bmtlbiBFbWJsZW0gQWdoYW5pbSBFZmZlY3Q7T3Zlcmdyb3duIEVtYmxlbSBBZ2hhbmltIEVmZmVjdDsyNSBsdmwgcGluZztDb2xvclN0YXRzO0NhdmVybml0ZSBEaXJlIENyZWVwcztDYXZlcm5pdGUgUmFkaWFudCBDcmVlcHM7VEktNSBlZmZlY3QgRGFnb247VEktOSBTZWFzb25hbCBDcmVlcCBEZW55IEVmZmVjdDtFdWxzIFNjZXB0ZXIgVEktNiBFZmZlY3Q7Rm9yY2UgU3RhZmYgVEktNiBFZmZlY3Q7VEktOCBGb3VudGFpbiBsdmwgMiBFZmZlY3Q7UGVkZXN0YWwgVGktNiBSYWRpYW50IExWTCAyO1NtYWxsIEljb25zIFBhY2s7SXJvbiBCcmFuY2ggQ2hyaXN0bWFzIFRyZWU7TGFzdGhpdCBHb2xkIC0gTmV3IEJsb29tIDIwMTk7TGV2ZWxVcCBUSS02IEVmZmVjdDtUSS05IE1la2FzbSBFZmZlY3Q7TWVrYW5pc20gVEktNiBFZmZlY3Q7TWpvbGxuaXIgVEktNiBFZmZlY3Q7UGhhc2UgQm9vdHMgVEktNiBFZmZlY3Q7TWluZSBSYWRpdXMgNzAyO1JpdmVyIFZpYWwgQmx1ZTtUaS05IFJvc2hhbjtUSS04IFNoaXZhcyBFZmZlY3Q7VEktOSBUZWFtIFNlY3JldCBUUCBFZmZlY3Q7R3VhcmRpYW5zIG9mIHRoZSBMb3N0IFBhdGggRGlyZSBUb3dlcnM7R3VhcmRpYW5zIG9mIHRoZSBMb3N0IFBhdGggUmFkaWFudCBUb3dlcnM7V2ludGVyIFZlcnN1cyBTY3JlZW47UGlzdG9uIEltcGFsZXI7QXp1cmUgQ29uc3RlbGxhdGlvbiBIVUQ7VGVycmFpbiAtIFRoZSBLaW5ncyBOZXcgSm91cm5leTtTaGFkb3cgRmllbmQgRU5HIEFyY2FuZSB2b2ljZTtLbmlnaHQgU3RhdHVlO1dlYXRoZXIgU25vdztXYXRjaGVyIG9mIHRoZSBWaXJ1bGVudCBLcmFpdDtDb3JlIG9mIHRoZSBSYXVjb3VzIEdhdGVjcmFzaGVyO1JlY3RpZmllcjtDb25zcGljdWQ5519cyBDdWxwcml0IE1vaGF3aztCb21idHJhaWxzIGFuZCBCb29tc3RpY2tzIENhcnQ7Qm9tYnRyYWlscyBhbmQgQm9vbXN0aWNrcyBTcGxlZW47Qm9tYnRyYWlscyBhbmQgQm9vbXN0aWNrcyBTcG9vbjtQYWNoeWRlcm0gUG93ZGVyd2Fnb24gU3F1ZWU7UGFjaHlkZXJtIFBvd2RlcndhZ29uIFNpZ247UGFjaHlkZXJtIFBvd2RlcndhZ29uIEVsZXBoYW50O0JvbWJ0cmFpbHMgYW5kIEJvb21zdGlja3MgU3F1ZWU7UGFjaHlkZXJtIFBvd2RlcndhZ29uIFNwbGVlbjtCb21idHJhaWxzIGFuZCBCb29tc3RpY2tzIFdlYXBvbjtQYWNoeWRlcm0gUG93ZGVyd2Fnb24gV2VhcG9uO1N3aW5lIFBvd2RlciBCYXJyZWw7U3dpbmUgVmlzb3I7U3dpbmUgSGVsbWV0O011bml0aW9ucyBvZiB0aGUgUG93ZGVya2VnIFBhdHJvbDtIZWxtIG9mIHRoZSBFbGVtZW50YWwgSW1wZXJhdG9yO1R1c2tzIG9mIHRoZSBFbGVtZW50YWwgUmVhbG1zO0lyb24gU3VyZ2UgViAyLjI7VGh1bmRlcmluZyBGbGFpbDtDYW5ub24gb2YgdGhlIE9jY3VsdGlzdHMgUHVyc3VpdDtHb2xkZW4gRnVsbC1Cb3JlIEJvbmFuemE7RW1weXJlYW47SW5mZXJuYWwgV2luZ3MgQ2xhdztNdWxjdGFudCBQYWxsO0NoYW9zIEFyYml0ZXI7TWFudGxlIG9mIHRoZSBDaW5kZXIgQmFyb24gU3R5bGUgMTtDcnVjaWJsZSBvZiBSaWxlO01vbHRlbiBDbGF3IFByZW07Qmxvb2RzdG9uZSBCbGFkZSBQYWNrO01hc2sgb2YgdGhlIEJsb29kZm9yZ2U7T2ZmLUhhbmQgV2VhcG9uIG9mIHRoZSBCbG9vZGZvcmdlO1dlYXBvbiBvZiB0aGUgQmxvb2Rmb3JnZTtUaGlyc3Qgb2YgRXp0emhvayBCdW5kbGUgUHJlbTtJbmZlcm5hbCBDaGllZnRhaW4gb2YgdGhlIENyaW1zb24gV2l0bmVzcztFdGVybmFsIEF4ZSBvZiB0aGUgQ2hhb3MgQ2hvc2VuO1N0YWZmIG9mIEd1bi1ZdTtBcm1vciBvZiB0aGUgRHJhZ29uIFBhbGFjZTtBcm1zIG9mIERlc29sYXRpb24gUHJlbTtTb3VscyBUeXJhbnQgSGVhZDtQYWRkYXBvbiBvZiBSaWJiaXRhciBWIDQuMDtUZXJyYWluIC0gV2ludGVyO0JsYXN0Zm9yZ2UgRXhoYWxlcjtCZWFzdCBvZiB0aGUgQ3JpbXNvbiBSaW5nIEFybW9yO0JhcmJhcm91cyBCbGFkZXMgQXJtcztCcmVha2luZyBFbWVyYWxkO0Zlcm9jaWQ5519cyBUb3hpY2FudDtDb3JydXB0aW9uIG9mIHRoZSBWaXJ1bGVudCBLcmFpdDtUcmVlIFB1bmlzaGVyO0ljZXdyYWNrIE1hcmF1ZGVyO1RpZGVodW50ZXIgS2lsbGVyO1ByaW1lciBvZiB0aGUgU2FwcGVycyBHdWlsZTtQb3dkZXJzbGVkIFJvb2tlcnk7RWxlbWVudGFsIFJlYWxtcyBWIDIuMDtFbGVtZW50YWwgSW1wZXJhdG9yIFYgMi4wO0JpdGUgb2YgdGhlIFN1cmdpbmcgV2luZDtLZWVuIE1hY2hpbmU7R29sZCBTa3ltYWdlO0Jhc3Rpb24gb2YgdGhlIExpb25zZ3VhcmQ7VGhlIEhvdW5kcyBvZiBDaGFvcyBWIDMuMTtEYXJrIFJ1aW4gU2V0IFYgMy4xO0dyeXBob24gUmlkZXIgU2V0O092ZXJncm93bjtUaGUgUm93ZHkgRmlyZWJyYW5kO1dyYXRoIG9mIHRoZSBCbG9vZCBDb3ZlbmFudCBTZXQ7SGFydmVzdHMgSG91bmQ7Q2hhb3MgQ2hvc2VuIFYgMy4wO0hhdm9jIG9mIERyYWdvbiBQYWxhY2UgViAyLjA7TGlnaHRicmluZ2VyIFNGO1RveGljIERlYXRoIEVhdGVyO1RveGljIFNGO091dGxhbmRpc2ggR291cm1ldDsgMTIzfHx8