bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogIDExMXx8fCAyMjI6OiAkMnkkMTAkTkRRNFpUZGtNamN4TkRobU5EWTBZZW1FS1MzMDg4Rlh4VTNSWHBXb1NpWW1wNHIxTE1DaDIgMjIyfHx8IDEyMzo6IFJlcHRpbGlhbiBSZWZ1Z2UgRGlyZSBDcmVlcHM7QnJpZ2h0c2t5ZTtIb2xpZGF5IFJhZGlhbnQgVG93ZXI7V2VhdGhlciBBc2g7Uml2ZXIgVmlhbCBTVEFOREFSVDtCcm9vZCBIdW50ZXIgSFVEO1JlcHRpbGlhbiBSZWZ1Z2UgUmFkaWFudCBDcmVlcHM7UGVkZXN0YWwgRmVhc3Qgb2YgQWJzY2Vzc2lvbiBHcmVlbjtQZWRlc3RhbCBCbGFkZWZvcm0gTGVnYWN5O0FybW9yIG9mIHRoZSBFcXVpbGlicml1bTtUYWlsIG9mIHRoZSBFcXVpbGlicml1bTtWaXNhZ2Ugb2YgdGhlIFNsZWVwbGVzcyBTZWN0O0V5ZXMgb2YgTHVjaWQgVG9ybWVudDtUcmFwcGluZ3Mgb2YgdGhlIE9sZC1UaW1lcnMgLSBIZWFkO0JyYWNlcnMgb2YgdGhlIENhdmVybiBMdW1pbmFyO1NlZXIgb2YgSW5maW5pdHkgU3BhY2UgRWlkb2xvbjtCYXJkaW5nIG9mIENoaW1lcmljIFJhcHBvcnQ7RHJlc3Mgb2YgdGhlIEJld2l0Y2hpbmcgRmxhcmU7V2luZ3Mgb2YgdGhlIEZpcmVmbGlnaHQgU2Npb247R3JlYXQgU2FnZSpzIFJlY2tvbmluZztTdGFmZiBvZiBHdW4tWXU7RmxpZ2h0IG9mIHRoZSBVbmR5aW5nIExpZ2h0O0NvbXBsZXRlIE1hbGxldCBvZiBTYWNyZWQgTGlnaHQ7QmVsdCBvZiB0aGUgR2xlYW1pbmcgU2VhbDtTb2xhciBGb3JnZTtTb2xhciBHeXJlO0JhdHRsZWF4ZSBvZiB0aGUgQnV0Y2hlcipzIFdha2U7RG9vbXNkYXkgUmlwcGVyIFdlYXBvbjtCbG9vZGZlYXRoZXIgV2luZ3M7QXJtcyBvZiBEZXNvbGF0aW9uO1Rvb2xzIG9mIHRoZSBGaW5hbCBVdHRlcmFuY2U7R29sZGVuIEdyYXNwaW5nIEJsdWRnZW9uO1NvdWwgRGlmZnVzZXI7Q29tcGxldGUgR2FyYiBvZiB0aGUgQ29ycmlkYW4gTWFlc3RybztUaGUgTGlnaHRuaW5nIE9yY2hpZDtUaW55IEJhZCBUbyBUaGUgQm9uZTtBcm1vciBvZiB0aGUgSWNld3JhY2sgTWFyYXVkZXI7SGVsbSBvZiB0aGUgU2F2YWdlIE1vbmdlcjttb2hhd2sgc2hvdWxkZXI7V2VhcG9ucyBvZiB0aGUgU2F2YWdlIE1vbmdlcjtBbmdlciBEaXZpbml0eSBIZWFkO0FuZ2VyIERpdmluaXR5IFdlYXBvbjtDYXBlIG9mIHRoZSBSaXNpbmcgR2FsZTtCb3cgb2YgdGhlIEJhdHRsZXJhbmdlcjtGb290ZmFsbHMgb2YgdGhlIFNwb3JlZmF0aGVycyAtIEhlYWQ7VGVtcGVzdCBIZWxtIG9mIHRoZSBUaHVuZGVyZ29kIFByZW07U3ltYm9sIG9mIHRoZSBLaW5nIFJlc3RvcmVkO0dvbGRlbiBJbW1vcnRhbCBQYW50aGVvbjtQbGF0aW5nIG9mIHRoZSBOZXRoZXJzd2FybSBWYW5ndWFyZDtDb250ZXNzYSpzIENyZWVkIEhhdDtCbGFja3NoaWVsZCBQcm90b2Ryb25lIEhlbG07QmxhY2tzaGllbGQgUHJvdG9kcm9uZSBNaXNzaWxlIExhdW5jaGVyO0JsYWNrc2hpZWxkIFByb3RvZHJvbmUgTGFzZXI7Q2Fubm9uIG9mIHRoZSBGb3J0aWZpZWQgRmFicmljYXRvcjtCcmFjZXIgb2YgdGhlIFBvYWNoZXIqcyBCYW5lO0JyYWNraXNoIFN0YWxrZXIgQmVsdDtUaWRvc2F1cnVzIFRhaWw7TGVhc2hlZCBSb2Nrc2hhcms7TXVoIEtlZW4gR3VuO0dvbGRlbiBIeWRyYWthbiBMYXRjaDtDb21wbGV0ZSBXaW5ncyBvZiB0aGUgTWFudGljb3JlO1BoYW50b20gQ29uY29yZDtEYXVnaHRlcnMgb2YgSHlkcm9waGlpbmFlO1Nob2NrIG9mIHRoZSBBbnZpbDtDb21wbGV0ZSBIZWxtIG9mIHRoZSBEYXJrIE1vb24gU3RhbGtlcjtMaW9uIEdyZWVkeSBLaW5nIEFybXM7TXVsY3RhbnQgUGFsbDtGaW4gS2luZypzIENoYXJtO0JsYWNrZW5lZCBFZGdlIG9mIHRoZSBCbGFkZWtlZXBlcjtUaGlyc3Qgb2YgRXp0emhvayAtIE9mZi1IYW5kO1RoaXJzdCBvZiBFenR6aG9rIEJsYWRlO0Nyb3cgb2YgRW1waXJpYyBJbmNlbmRpYXJ5O1JhbXBhbnQgT3V0cmFnZTtBeGUgQmxhY2t0aG9ybiBXZWFwb247R29sZGVuIE9mZmhhbmQgQmFzaGVyIG9mIE1hZ2UgU2t1bGxzO0dvbGRlbiBCYXNoZXIgb2YgTWFnZSBTa3VsbHM7RW5kbGVzcyBOaWdodDtUaW1lIFdhbmRlcmVyO01hcmF1ZGVyIENoaWVmdGFpbiBvZiB0aGUgQ2hhb3MgV2FzdGVzO0tpdCBvZiB0aGUgRmlyc3QgSHVudCBWIDIuMTtXYXJyaW9yIG9mIEFyZW5hIFNldDtXYXIgQnJlYWtlcnMgU2V0O1NhdmlvciBmb3IgSnVuZ2xlcyBIb25vcjtGdXJuYXRvciBTZXQ7QXN0cm9sb2dlciBTZXQ7UGVhY29jayBQcmllc3Q7RmlyZXMgb2YgVmFzaHVuZG9sIG5vIGVmZmVjdCBWIDIuMTtHb2RkZXNzIG9mIFdvb2RzO0NoZXNzIEtuaWdodCBTZXQ7QmxhemUgQXJtb3IgViAyLjE7VGhlIE1hbmlwdWxhdG9yIFNldDtSZWxpY3Mgb2YgR2xvcmlvdXMgSW5zcGlyYXRpb247V2lzZG9tIG9mIHRoZSBNaWRuaWdodCBTdW47SG9ub3JlZCBTZXJ2YW50IG9mIHRoZSBFbXBpcmU7QXNjZW5kYW5jZSBvZiB0aGUgUmltZSBMb3JkIDJuZCBTdHlsZTtEaXZpbmUgRmxhbWUgViAyLjA7UmFnZSBvZiB0aGUgRGFyayBXb29kIHYgMi4wO0h1bnRlciBvZiBLaW5ncyBWIDIuMDtJbXBlcmlhbCBFbnZveTtUaGUgRnJhY3R1cmVkIE9yZGVyIFYgMy4wO0FsbHVyZSBvZiB0aGUgRGVlcDtUaGUgTXVyaWQgRGl2aW5lO0RldmlhbnQgTWV0YW1vcnBob3NpcztUaGUgR3JleSBHYWxsYW50O01hbmRhdGUgb2YgdGhlIE5hbWVsZXNzO0NyZWVwaW5nIFNoYWRvdztHb2xkZW4gTmlydmFuYTtTY2F2ZW5nZXIgb2YgdGhlIEJhc2lsaXNrO1JhaW1lbnRzIG9mIFR3aWxpZ2h0IFNoYWRlO0N1bm5pbmcgQ29yc2FpcjtSdWxlciBvZiB0aGUgRnJvc3RiaXRlIER1bmVzO0V0ZXJuYWwgSGFydmVzdDtCZXN0b3dtZW50cyBvZiB0aGUgQ2VudHVyaW9uIFZhbmd1YXJkO0Zsb3dlcmluZyBTaGFkZSBWIDIuMDtTdG9ybSBEcmFnb24gUG90ZW50ZTtNYXJjaCBvZiB0aGUgUG93ZGVya2VnIFBhdHJvbDtTYW11cmFpIFNldDtNb2x0ZW4gRGVzdHJ1Y3RvcjtSaWZ0IENoYW1waW9uO0Zlcm9jaWQ5519cyBIZWFydDtDb3JydXB0aW9uIG9mIHRoZSBWaXJ1bGVudCBLcmFpdDtCYXJkaW5nIG9mIHRoZSBTb3VsIEtlZXBlcjtQdXBwZXQgU3VtbW9uZXI7QmluZGluZ3Mgb2YgdGhlIEJhdHRsZXJhbmdlcjtCZWFyZXIgb2YgdGhlIEFya3R1cmFuIFRhbG9uO0dyaW0gRGVzdGlueTtXaW5ncyBvZiBDb2xvcmZ1bCBJY2VjcnlzdGFscztUaGUgRHVzayBDcmF3bGVyIFNldDtPbWVucyBFbWJyYWNlO0Rpcmdlc3dvcm4gRHluYXN0eTtCYXJyaWVyIFJvZ3VlO0Jhcmsgb2YgdGhlIEFnZWxlc3MgV2l0bmVzcztDbGFuZGVzdGluZSBUcmFpbDtTdG9ybXdyb3VnaHQgQXJiaXRlciBWIDIuMDtCaXRlIG9mIHRoZSBTdXJnaW5nIFdpbmQ7U2hvb3RpbmcgU3RhcjtLaW5kcmVkIG9mIHRoZSBVbWl6YXIgQ3Jhd2xlcjtCYXN0aW9uIG9mIHRoZSBMaW9uc2d1YXJkO1RoZSBUcnVlIENyb3cgViAyLjA7U3R5Z2lhbiBNYXc7RGl2aW5lcnMgRW1icmFjZTtNYXplIFdhdGNoZXIgU2V0O05hcmNpc3Npc3RpYyBMZWVjaDtBbGx1cmluZyBNZXNtZXI7SGFyc2ggU29qb3VybjtQaXRmYWxsIENydXNhZGVyO1RoZSBGYXRlIEZpZGRsZXI7QW5jZXN0cmFsIEx1Y2sgU2V0O1VuZmV0dGVyZWQgTWFsZXZvbGVuY2U7U3RhZ2hlYXJ0IFNvdmVyZWlnbjtTdGVsbGFyIEphZGU7TW9vbiBSaWZ0IFYgMi4xO01lbW9yaWVzIG9mIHRoZSBWb3cgRXRlcm5hbDtNaWdodCBvZiB0aGUgR2FsbG9waW5nIEF2ZW5nZXIgViAyLjE7TmlnaHRzaWx2ZXJzIFJlc29sdmUgViAyLjE7Qmxvb2R5IFJpcHBlcjtEYXJrIEZvcmVzdCBQdW5pc2hlcjtXaXRjaCBIdW50ZXIgVGVtcGxhcjtUaGUgUGF0aCBvZiBPZG9jb2VsZXVzO1NhbWFyZWVuIFNhY3JpZmljZTtTd29vcGluZyBFbGRlcjtUaGUgQ29ycnVwdGlvbiBvZiBOZXp6dXJlZW07Q2FlcnVsYSBTaWx2YTtUaGUgSmFkZSBHZW5lcmFsO0JsYXppbmcgT2JsaXZpb24gViAzLjA7S2lyaW4gUmlkZXIgU2V0O1Ntb2t5IERyZWFtZXI7QnVyZ2xhciBvZiBXYXNwO1JveWFsIFdpbnRlcmJsb29tO0Nsb2FrIG9mIHRoZSBGYWxsZW47Um9zZSBBbmQgVGhlIEJlYXN0O0ZlYXN0IG9mIHRoZSBHbHV0dG9ucyBMYXJkZXI7VGlwc3kgQnJhd2xlcjtIYXJ2ZXN0cyBIb3VuZDtCbGFjayBPcmMgV2FyYm9zcyBWIDIuMDtUaGUgT2JsaXRlcmF0b3Igb2YgTWFnaWM7TmV3IENoaWVmdGFpbiBTdHlsZSAyOyAxMjN8fHw=