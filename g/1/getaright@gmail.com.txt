bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogMjE3QjMzNDUtMTU2My1DRTRBLUFCRDUtQjRBOUZDNkI3NEZCIDExMXx8fCAyMjI6OiAwOTdlNTZlYmYzMjYzOWQwZjNjNzI1YTAyNGYyODY1YzQzZTdiNDljZWI5NTFiOGIyM2I0M2RmMzQ4ZjY2ZWFmYzk5OTQzM2EzNGU0N2ZhOTQ5NWNhYTQ1YzFlN2E0ZDM2YmNlNDFmOTY2NTAyNjY4MGI1NjgyMmU0Y2E4ZTczZSAyMjJ8fHwgMTIzOjogUHJvbWluZW5jZTtTY3l0aGUgb2YgSWNlIFYgMi4wO0ZlYXN0IG9mIEFic2Nlc3Npb247SW5zYXRpYWJsZSBCb25lc2F3IFByZW07UmlwcGVycyBSZWVsIG9mIHRoZSBDcmltc29uIFdpdG5lc3M7VGhlIEJhcnJlbiBWZWN0b3I7VGhlIEJhcnJlbiBDcm93bjtBc3BlY3Qgb2YgT3NjaWxsYTtIb3Jyb3IgZnJvbSB0aGUgRGVlcCBBcm1zO0dvbGRlbiBGbG9vZG1hc2s7QW50aG96b2FuIEFzc2F1bHQgLSBUaW55O0FudGhvem9hbiBBc3NhdWx0IC0gTWVkaXVtO0FudGhvem9hbiBBc3NhdWx0IC0gTGFyZ2U7QW50aG96b2FuIEFzc2F1bHQgLSBIdWdlO0xhcmdlIEFudGhvem9hIEdpYW50O0FudGhvem9hbiBBc3NhdWx0IC0gV2VhcG9uO0dvbGRlbiBQaXNjZWFuIFB1bHZlcml6ZXI7TWQ5519cm5mdWwgUmV2ZXJpZTtIZWxtIG9mIEVjaG9lcztUd2lzdGVkIE1hZWxzdHJvbSB3aXRoIFdvcmxkIENoYXNtIEFydGlmYWN0O0xvcmQgb2YgTHVtaW5hcmllcyBFaWRvbG9ucztHbG9yeSBvZiB0aGUgRWxkZXJmbGFtZSAtIEFybXM7R2xvcnkgb2YgdGhlIEVsZGVyZmxhbWUgLSBCZWx0O0dsb3J5IG9mIHRoZSBFbGRlcmZsYW1lIC0gTmVjaztTdWxsZW4gUmFtcGFydDtTdWxsZW4gSG9sbG93O1N1bGxlbiBIYXJ2ZXN0O1BsYW5ldGZhbGw7SnVkZ2VtZW50IG9mIHRoZSBGYWxsZW47TGluZWFnZSBUaGUgUmFtcyBIZWFkIEFybWFtZW50cztUaGUgS2luZyBvZiBUaGlldmVzO0t1bmtrYSBJbW1vcnRhbHMgTWVnYVBhY2s7TWFycyBUSTEwIENvbGxlY3RvcnMgQ2FjaGUgTWVnYVBhY2s7RGVzZXJ0IFRyYXZlbGxlciBTZXQ7UnVsZXIgb2YgdGhlIEZyb3N0Yml0ZSBEdW5lcztTaWxlbmNlciBNZWdhUGFjaztUaWRlaHVudGVyIE1lZ2FQYWNrO0p1bmdsZSBFeHBsb3JlciBTZXQ7VmlzaW9uIG9mIHRoZSBTZXJhcGggU2Npb24gLSBMaWdodDtXaXRjaCBEb2N0b3IgTWVnYVBhY2s7V2luZHJhbmdlciBBcmNhbmEgc3R5bGUgMiAoT3JhbmdlIEJpcmQpIGFuZCBGdWxsIFdSIGltbW9ydGFsO0Zvd2wgUGxhZ3VlIFNldDtDb3JyaWRhbiBNYWVzdHJvIGFuZCBUaGUgTGlnaHRuaW5nIE9yY2hpZCBhbmQgR29sZGVuIE1hbmRhdGUgb2YgdGhlIFN0b3JtYm9ybiBNZWdhUGFjayBORVc7TWVjaGEgSG9ybmV0IFNldDsgMTIzfHx8