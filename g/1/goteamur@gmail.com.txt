bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogNEM0QzQ1NDQtMDAzNS01MjEwLTgwNTAtQjlDMDRGNTk0NjMyIDExMXx8fCAyMjI6OiAkMnkkMTAkWm1aaE5HUXlNekF5TkRSaE9XTm1OLk1KNWdvT1QxMjlLa2FQYml5dG9wekN0bGZMYmdSUnkgMjIyfHx8IDEyMzo6IFJhenppbHMgTWlkYXMgS251Y2tsZXMgUHJlbTtFdGVybmFsIFJhZGlhbmNlIEJsYWRlcyBQcmVtO09yaWdpbiBvZiB0aGUgVW5tYWtpbmc7U2x1bWJlcmluZyBUZXJyb3I7TWF3IG9mIEV6dHpob2s7VGhpcnN0IG9mIEV6dHpob2sgQnVuZGxlIFByZW07RG90YSAyIENoYW5nZXIgRWRpdGlvbiBIdW50ZXJzIEhvYXJkIG9mIHRoZSBDcmltc29uIFdpdG5lc3M7VGluZXMgb2YgVHliYXJhO0dvbGRlbiBJbmZlcm5hbCBDaGllZnRhaW47SW5mZXJuYWwgTWVuYWNlO0RpYWJvbGljIEFzcGVjdDtDaGFvcyBGdWxjcnVtO0NoYW9zIEFyYml0ZXI7QXJjYW5hIENyeXN0YWwgTWFpZGVuIEZyb3N0IEF2YWxhbmNoZTtZdWxzYXJpYSpzIEdsYWNpZXIgUHJlbTtZdWxzYXJpYXMgTWFudGxlIFByZW07R29sZGVuIEljZSBCbG9zc29tO1RoZSBTdW5icmVlemUgQmlydGhyaWdodDtIZWFydHMgb2YgTWlzcnVsZTtDcmltc29uIEdhdGVzIG9mIE5vdGhsO05vdGhsaWMgQnVyZGVuIG9mIHRoZSBDcmltc29uIFdpdG5lc3MgUHJlbTtEYXJrY2xhdyBFbWlzc2FyeSBTdGFmZiB3aXRoIGN1c3RvbSBVcm47RHJlYWQgUmV0cmlidXRpb24gLSBCcmFjZXJzIEFsdDtGbG91cmlzaGluZyBMb2Rlc3RhcjtWaXJnYXMgQXJjO1R3aXN0ZWQgTWFlbHN0cm9tIHdpdGggV29ybGQgQ2hhc20gQXJ0aWZhY3Q7QnJhY2VycyBvZiBBZW9ucyBQcmVtO0pld2VsIG9mIEFlb25zO01hY2Ugb2YgQWVvbnMgUHJlbTtGYWNlbGVzcyBNYWRuZXNzO0ZvcnR1bmUgb2YgdGhlIEZpdmUgSG91c2VzO0hvb2R3aW5rIERyYWdvbiBDcm9zc2JvdztUb21vKmthbiBJbmNhcm5hdGUgQXJtb3I7VG9tbyprYW4gSW5jYXJuYXRlIFRhaWw7VG9tbyprYW4gSW5jYXJuYXRlIEhvb2Q7RGFyayBBcnRpc3RyeSBUaHJvd2JhY2s7QmVuZXZvbGVudCBDb21wYW5pb24gUHJlbTtKYWtpcm8gSW1tb3J0YWxzIEhlYWRzO0p1Z2dlcm5hdXQgQXJjYW5hIFJlZCBCbGFkZWZvcm0gT3JpZ2lucztDcmltc29uIEVkZ2Ugb2YgdGhlIExvc3QgT3JkZXI7VG9ybWVudGVkIFN0YWZmIG9mIEVtaW5lbnQgUmV2aXZhbCBFeGNlcHRpb25hbDtHbGFyZSBvZiB0aGUgVHlyYW50O0xpY2ggSW1tb3J0YWwgSGVhZCBQZXJ2ZXJzaW9ucyBvZiB0aGUgQmxvb2R3aG9ybDtWZXN0bWVudCBvZiB0aGUgUmltZSBMb3JkO0hlbGwtU3BhciBBbmF0aGVtYSBPYnNpZGlhbiBCbGlnaHQ7SG9ybnMgb2YgdGhlIEJldHJheWVyO011bGN0YW50IFBhbGwgb2YgdGhlIENyaW1zb24gV2l0bmVzcztGaW4gS2luZypzIENoYXJtIFByZW07TW9vbmZhbGwgUHJlbTtHb2xkZW4gVHdpbGlnaHQgU2NoaXNtO1Nob2NrIG9mIHRoZSBBbnZpbCBQcmVtO0dvZHMgTWVyY3kgb2YgdGhlIENyaW1zb24gV2l0bmVzcztDcmltc29uIFByb2dlbml0b3JzIEJhbmU7VGhlIEJlbGwgb2YgTWVyYW50aGlhO1RoZSBPcmRlciBvZiBDeXByaW47QmxhZGVzIG9mIFByaXNtYXRpYyBHcmFjZTtNb25hcmNoIG9mIHRoZSBTYXBwaGlyZSBHbGVuO01hbnRsZSBvZiB0aGUgVHJ1ZWJhcmsgQWRoZXJlbnQ7U3VmZmVyd29vZCBTYXBsaW5nO1N1bGxlbiBIYXJ2ZXN0O1N1bGxlbiBIb2xsb3cgUHJlbTtTdWxsZW4gUmFtcGFydDtNYXNrIG9mIHRoZSBDb25maWRhbnQ7Q29hdCBvZiB0aGUgV2luZHdhcmQgUm9ndWU7Q29uY29yZCBEb21pbmlvbjtQaGFudG9tIENvbmNvcmQgUHJlbTtDb25jb3JkIFJldmVyc2lvbiBVUDtDb2RpY2lsIG9mIHRoZSBWZWlsZWQgT25lcztBdm93YW5jZSBvZiB0aGUgQ3JpbXNvbiBXaXRuZXNzO01hbmlmb2xkIFBhcmFkb3ggUEEgQXJjYW5hIFN0eWxlIDI7Qmxvc3NvbSBvZiB0aGUgTWVycnkgV2FuZGVyZXI7TWVycnkgV2FuZGVyZXIqcyBCcnVzaDtGZWFzdCBvZiBBYnNjZXNzaW9uO0ZlYXN0IG9mIEFic2Nlc3Npb24gSG9vayBCdW5kbGU7SGVhZCBvZiB0aGUgR2hhc3RseSBHb3VybWFuZDtHb2xkZW4gU2NhdmVuZ2luZyBHdXR0bGVzbHVnO0dvbGRlbiBCbG9vZGZlYXRoZXIgRmVhc3Q7Q3JpbXNvbiBFZGljdCBvZiBTaGFkb3dzO0dvbGRlbiBTaGFkb3cgTWFzcXVlcmFkZSBQcmVtO0h1bmdlciBvZiB0aGUgSG93bGluZyBXaWxkcyBXZWFwb247VGhlIEJhcnJlbiBDcm93biBQcmVtO1RoZSBCYXJyZW4gVmVjdG9yO01hbnRsZSBvZiBHcmltIEZhY2FkZTtDZW5zZXIgb2YgR2xpc3M7R29sZGVuIExhbWIgdG8gdGhlIFNsYXVnaHRlciBQcmVtO0FzcGVjdCBvZiBPc2NpbGxhO1RvcCBIYXQgb2YgdGhlIE9jY3VsdGlzdHMgUHVyc3VpdDtQYWNrIG9mIHRoZSBBcmRhbGFuIEludGVyZGljdG9yO0dvbGRlbiBGdWxsLUJvcmUgQm9uYW56YTtNdWggS2VlbiBHdW47RGVzZXJ0IEJ1cm4gU2FkZGxlO0Rlc2VydCBCdXJuIE91dGZpdDtEZXNlcnQgQnVybiBDYXA7RGVzZXJ0IEJ1cm4gQ3Jvc3Nib3c7RGVzZXJ0IEJ1cm4gTW9ydHkgSW1tb3J0YWw7UGhhbnRvbSBBc2NlbnNpb24gU2hvdWxkZXJzO1ZpZ2lsIFNpZ25ldDtJbmRvbWl0YWJsZSBMZWdhY3kgLSBTaG91bGRlcjtWaWdpbCBPZHlzc2V5O1ZpZ2lsIFRyaXVtcGg7TWFudGxlIG9mIHRoZSBXaGlzcGVyZWQgQm9uZDtGb2NhbCBSZXNvbmFuY2UgViAzLjA7Rmxvb2RtYXNrO0FxdWVtZXJhbGQgQmxhZGU7SG9ycm9yIGZyb20gdGhlIERlZXAgT2ZmLUhhbmQ7U2N5dGhlcyBvZiBTb3Jyb3c7UHVycGxlIENvbG9yIGZvciBUQjtTcGFuIG9mIFNvcnJvdztSb2xsZXJtYXdzdGVyIFByZW07QXJjYW5pYyBSZXNvbmFuY2UgQmVhbTtTd29yZCBvZiB0aGUgQ29sb3NzdXM7QW5jaWVudCBJbmhlcml0YW5jZSAtIFNob3VsZGVyO0FuY2llbnQgSW5oZXJpdGFuY2UgLSBCZWx0O0FuY2llbnQgSW5oZXJpdGFuY2UgLSBOZWNrO0FuY2llbnQgSW5oZXJpdGFuY2UgLSBCYWNrO0JpdHRlciBMaW5lYWdlIEltbW9ydGFsIEF4ZXM7SGVsbSBvZiB0aGUgU2F2YWdlIE1vbmdlcjtDb25zcGljdWQ5519cyBDdWxwcml0IEFybW9yO0dvbGRlbiBQaXNjZWFuIFB1bHZlcml6ZXI7V2hpc2t5IHRoZSBTdG91dCBBcnRpZmFjdCBQcmVtO1BhbGUgTWF1c29sZXVtO1BhbGUgQXVndXIgUHJlbTtFbWVyYWxkIENvbnF1ZXN0O0VtZXJhbGQgU3VianVnYXRpb247Q3JpbXNvbiBNb3VybmZ1bCBSZXZlcmllO0NvbnN0ZWxsYXRpb24gV2VhcG9uO0hpZGRlbiBWZWN0b3IgLSBIYXQ7SGlkZGVuIFZlY3RvciAtIEFybW9yO0hpZGRlbiBWZWN0b3IgLSBCZWx0O0hpZGRlbiBWZWN0b3IgLSBCbGFkZTtVbWJyYWwgR2x5cGg7VHJpYmFsIFBhdGh3YXlzIFN0YWZmO0NyaW1zb24gUGlxdWU7R29sZGVuIEN5cnJpZGFlIFByZW07U2tpdHRlcmluZyBEZXNvbGF0aW9uIFByZW07SWNlZmxpZ2h0IEVkaWZpY2U7VGVtcGVzdCBSZXZlbGF0aW9uO0ltbW9ydGFsIFBhbnRoZW9uO0FlZ2lzIGFuZCBSb3NoYW4gU3QuIFZhbGVudGluZSBEYXk7UHJlIEFnaGFuaW0gRHVuZ2VvbiBTY2VwdGVyIEVmZmVjdDtMaWdodG5pbmcgQmxpbmsgViAyLjA7VEktOSBCb3R0bGUgRWZmZWN0OzI1IGx2bCBwaW5nO1dvb2RsYW5kIFdhcmJhbmRzIC0gRGlyZSBDcmVlcHM7V29vZGxhbmQgV2FyYmFuZHMgLSBEaXJlIFNpZWdlIENyZWVwcztXb29kbGFuZCBXYXJiYW5kcyAtIFJhZGlhbnQgQ3JlZXBzO1dvb2RsYW5kIFdhcmJhbmRzIC0gUmFkaWFudCBTaWVnZSBDcmVlcHM7VEktNyBEYWdvbiBFZmZlY3Q7U291bCBEZW55O1RJLTkgRXVsIFNjZXB0ZXIgRWZmZWN0O1RJLTkgRm9yY2UgU3RhZmYgRWZmZWN0O1RJLTkgRm91bnRhaW4gbHZsIDMgRWZmZWN0O0hEIGl0ZW0gaWNvbjtMYXN0aGl0IEdvbGQgLSBOZXcgQmxvb20gMjAxOTtUSS05IExldmVsIFVwIEVmZmVjdDtUSS05IE1la2FzbSBFZmZlY3Q7VEktMTAgTWVrYXNtIEVmZmVjdDtUSS05IE1qb2xsbmlyIEVmZmVjdDtUSS05IFBoYXNlIEJvb3RzIEVmZmVjdDtNaW5lIFJhZGl1cyA3MDI7VEktOSBSYWRpYW5jZSBFZmZlY3Q7Uml2ZXIgVmlhbCBCbGFjaztUSS05IFNoaXZhcyBFZmZlY3Q7UGxhbmV0ZmFsbCBTdHVuIEVmZmVjdDtHdWFyZGlhbnMgb2YgdGhlIExvc3QgUGF0aCBEaXJlIFRvd2VycztHdWFyZGlhbnMgb2YgdGhlIExvc3QgUGF0aCBSYWRpYW50IFRvd2VycztXZWF0aGVyIEJsdWUgU2t5IGZyb20gU291cCBmb3IgU2x1dHM7VGVycmFpbiAtIFRoZSBLaW5ncyBOZXcgSm91cm5leTtUaGUgU3RhbmxleSBQYXJhYmxlIEFubm91bmNlcjtEYXJrIFdpbGxvdyBNZWdhLUtpbGw7QWJhZGRvbiBSRUQgTWVnYVBhY2s7RGFya2JyZXcgRW5mb3JjZXIgYW5kIEV0ZXJuYWwgUmFkaWFuY2UgQmxhZGVzIGFuZCBNaWRhcyBLbnVja2xlcyBNZWdhUGFjaztTaGF0dGVyYmxhc3QgU2V0O0FudGlNYWdlIFJFRCBNZWdhUGFjaztBeGUgZnVsbCBJbW1vcnRhbHMgTWVnYXBhY2sgYWx0O0JlYXN0bWFzdGVyIE1lZ2FQYWNrO0JyaXN0bGViYWNrIE1lZ2FQYWNrO0Jyb29kbW90aGVyIE1lZ2FQYWNrO0NsaW5reiBNZWdhUGFjaztDbG9ja3dlcmsgTWVnYVBhY2s7QnVyZ2xhciBvZiBXYXNwO1NpbHZlcnd1cm0gU2FjcmlmaWNlO0Rvb20gSW1tb3J0YWxzIE1lZ2FQYWNrO0VhcnRoc2hha2VyIE1lZ2FQYWNrIE5ldztJbmsgRHJhZ29uIFBvZXQ7SHVza2FyIE1lZ2FQYWNrIE5FVztLdW5ra2EgSW1tb3J0YWxzIE1lZ2FQYWNrO0xlZ2lvbiBDb21tYW5kZXIgTW9kTWFrZXIgTWVnYVBhY2s7R29sZGVuIERhcmsgTWF3IEluaGliaXRvIGFuZCBHb2xkZW4gUHJvZmFuZSBVbmlvbiBhbmQgR29sZGVuIERyZWFkIFJlcXVpc2l0aW9uIExpZmVzdGVhbGVyIEltbW9ydGFscyBNZWdhcGFjaztJY2UgTGluYSBQcmVtaXVtO0x5Y2FuIEtpc2lsZXYgTW9kTWFrZXIgTWVnYVBhY2s7TWVkdXNhIE1lZ2FQYWNrIE5FVztNaXJhbmEgVEkxMCBDb2xsZWN0b3JzIENhY2hlIE1lZ2FQYWNrO01vcnBobGluZyBJbW1vcnRhbHMgTWVnYVBhY2sgVVA7TW9ua2V5IEtpbmcgQXJjYW5hIE1lZ2FQYWNrO055eCBBc3Nhc3NpbiBNZWdhUGFjayBVUDtOaWdodCBTdGFsa2VyIEltbW9ydGFsIGFuZCBSZWFwZXIgS2lzaWxldiBNb2RNYWtlciBNZWdhUGFjaztPZ3JlIE1hZ2kgSW1tb3J0YWxzIEFyY2FuYSBNZWdhUGFjaztPbW5pa25pZ2h0IE1lZ2FQYWNrO091dHdvcmxkIERldm91dmVyIE1lZ2FQYWNrO1B1Z25hIEltbW9ydGFscyBNZWdhUGFjaztUZXN0IG9mIHRoZSBCYXNpbGlzayBMb3JkO1F1ZWVuIG9mIFBhaW4gQXJjYW5hIE1lZ2FQYWNrO1J1YmljayBBcmNhbmEgd2l0aCBJbW1vcnRhbDtBcmNhbmEgTWVnYVBhY2sgU2hhZG93IEZpZW5kO1NpbGVuY2VyIE1lZ2FQYWNrO1NsYXJkYXIgTWVnYVBhY2sgc2V0O1NreXdyYXRoIE1hZ2UgTWVnYVBhY2sgVGhhbmF0b3M7U2xhcmsgTWVnYVBhY2sgTmV3O1NwaXJpdCBCcmVha2VyIE1lZ2FQYWNrO1N0b3JtIFNwaXJpdCBNZWdhUGFjaztUaW1iZXJzYXcgTWVnYVBhY2s7VHJlYW50IFByb3RlY3RvciBNZWdhUGFjaztJbmN1cmFibGUgUGVzdGlsZW5jZTtVcnNhIEltbW9ydGFscyBNZWdhUGFjaztDaG9tcGVyIFNldDtWaXBlciBNZWdhUGFjaztXaW5kcmFuZ2VyIEFyY2FuYSBzdHlsZSAyIChPcmFuZ2UgQmlyZCkgYW5kIEZ1bGwgV1IgaW1tb3J0YWw7V2l0Y2ggRG9jdG9yIE1lZ2FQYWNrO1dyYWl0aCBLaW5nIEFyY2FuYSBNZWdhUGFjaztSaWdodGVvdXMgVGh1bmRlcmJvbHQgYW5kIEFyY2FuYSBNZWdhUGFjazsgMTIzfHx8