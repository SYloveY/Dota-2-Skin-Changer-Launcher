limitHWID:: 1 000||| 111:: 0FE34840-5BCB-11D9-948A-F46D04D29631 111||| 222:: $2y$10$ZWVjNDYzMjhjOGUwYzFlYu9ooL9Dd6p35K0vu.T/UedTAXzSbmolu 222||| 123:: The Basher Blades;Mask of the Divine Sorrow;Prayer Beads of the Bladekeeper;Arsenal of the Bladekeeper;Sigil Mask of the Bladekeeper;Pantaloons of the Bladekeeper;Serrakura;Mulctant Pall;Avada Kedavra;Cape of the Creeping Shadow;Girdle of the Nimble Edge;Ornaments of the Gleaming Seal;Blood Shard;Tempest Helm of the Thundergod Prem;Bow of the Battleranger;Daughters of Hydrophiinae;Horns of the Diabolical Fiend;Armor of the Diabolical Fiend;Arms of Desolation;Prison Buckler;Shark Fin Cape;Shark Cowl;Bound Shark Flippers;Golden Hydrakan Latch;Gauntlet of Dark Feathers;Pauldron Perch;Dendi Doll;The Crow Eater;Armor of the Black Bird;Scorching Talon Prem;Small Tassels of the Black Death;Gleaming Seal;Helm of the Bloodroot Guard;Smeevils Penance Style 1;Weather Ash;Meepo Mega-Kill;Storm Spirit Announcer;The Witch Hunter V 2.0;The Magus Magnus Set;Seaborne Reprisal;Desolate Conquest;Spirit of The Sacred Glove;Shoreline Sapper;Grim Destiny;Bearer of the Arkturan Talon;Bindings of the Battleranger;Memories of the Vow Eternal;The Baptism of Melting Fire;Molten Destructor;Ritual of the Loyal Fold;Stormwrought Arbiter V 2.0; 123|||