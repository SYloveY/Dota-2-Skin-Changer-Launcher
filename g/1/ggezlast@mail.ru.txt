bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogIDExMXx8fCAyMjI6OiAkMnkkMTAkTlRoaE1EUTFNVEkwTm1FeVpqWTNZT1dFaTJUVkFKNS5aYy9TaFpSSlVaT1lreFBqRGFlSC4gMjIyfHx8IDEyMzo6IExlZ2lvbiBDb21tYW5kZXIgQXJjYW5hIFVQO0p1Z2dlcm5hdXQgQXJjYW5hIEJsYWRlZm9ybSBMZWdhY3k7RHJlYWQgUmV0cmlidXRpb24gLSBDYXBlO0RyZWFkIFJldHJpYnV0aW9uIC0gSGVhZHdlYXI7RHJlYWQgUmV0cmlidXRpb24gLSBMZWcgQXJtb3I7RHJlYWQgUmV0cmlidXRpb24gLSBRdWl2ZXI7RHJlYWQgUmV0cmlidXRpb24gLSBTaG91bGRlciBBcm1vcjtBcmNhbmEgRHJlYWQgUmV0cmlidXRpb247R2VuamkgU3dvcmQgUHJlbWl1bSBFZGl0aW9uIFNlcnJha3VyYSBTdHlsZTtMZWdhY3kgb2YgdGhlIEZhbGxlbiBMZWdpb24gU3R5bGUgMTtCaXR0ZXIgTGluZWFnZSBJbW1vcnRhbCBBeGVzO0FybW9yIG9mIHRoZSBJbXBlcmlvdXMgQ29tbWFuZDtIYWlyIG9mIHRoZSBJbXBlcmlvdXMgQ29tbWFuZDtTaG91bGRlcnMgb2YgdGhlIEltcGVyaWQ5519cyBDb21tYW5kO1JpY2sgYW5kIE1vcnR5IEFubm91bmNlcjtTZXh5IFdvbWFuIE1lZ2EtS2lsbDtCcmFjZXJzIG9mIEFlb25zO0NsYXN6dXJlbWUgSW5jdXJzaW9uIEJlbHQ7Q2xhc3p1cmVtZSBJbmN1cnNpb24gSGVhZDtKZXdlbCBvZiBBZW9ucztDbGFzenVyZW1lIEluY3Vyc2lvbiBXZWFwb247Q29kaWNpbCBvZiB0aGUgVmVpbGVkIE9uZXM7QXZvd2FuY2Ugb2YgdGhlIFZlaWxlZCBPbmVzO01hbmlmb2xkIFBhcmFkb3ggUEEgQXJjYW5hIFN0eWxlIDI7VHJhaWwgb2YgdGhlIEZlYXJmdWwgQXJpYTtTd2lmdCBDbGF3IGFuZCBGZXJvY2lvdXMgSGVhcnQ7RGlwcGVyIHRoZSBEZXN0cm95ZXI7R2lyZGxlIG9mIHRoZSBGZXJvY2lvdXMgSGVhcnQ7SGVsbSBvZiB0aGUgRmVyb2Npb3VzIEhlYXJ0O0JlbHQgb2YgdGhlIFN1bndhcnJpb3I7Q29uY29yZCBSZXZlcnNpb24gVVA7Q29uY29yZCBEb21pbmlvbjtQaGFudG9tIENvbmNvcmQgUHJlbTtPcmlnaW5zIG9mIEZhaXRoIFByZW07QnJhY2VycyBvZiB0aGUgU3Vydml2b3I7QmVsdCBvZiB0aGUgU3Vydml2b3I7SGFpciBvZiB0aGUgU3Vydml2b3I7T2ZmaGFuZCBCbGFkZSBvZiB0aGUgU3Vydml2b3IgUHJlbTtTaG91bGRlcnMgb2YgdGhlIFdpdGNoIEh1bnRlcjtCbGFkZSBvZiB0aGUgU3Vydml2b3I7R29sZGVuIERhcmsgTWF3IEluaGliaXRvIGFuZCBHb2xkZW4gUHJvZmFuZSBVbmlvbiBhbmQgR29sZGVuIERyZWFkIFJlcXVpc2l0aW9uIExpZmVzdGVhbGVyIEltbW9ydGFscyBNZWdhcGFjaztNb25rZXkgS2luZyBBcmNhbmEgTWVnYVBhY2s7U2xhcmsgTWVnYVBhY2sgTmV3OyAxMjN8fHw=