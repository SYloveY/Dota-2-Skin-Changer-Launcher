bGltaXRIV0lEOjogMSAwMDB8fHwgMTExOjogIDExMXx8fCAyMjI6OiAkMnkkMTAkTm1GaVlXUTFOREl6WkdVMFpHVTVaZXZMOThvUVQ4WlhSUXVVYTF2alJab0xZY3UwR3VYdm0gMjIyfHx8IDEyMzo6IEFjaWQgSHlkcmEgQ3Vyc29yIFBhY2s7QSBEaXJlIEdhemU7QW5jaWVudCBSaHl0aG0gTG9hZGluZyBTY3JlZW47U2hhZG93IEZpZW5kIEVORyBBcmNhbmUgdm9pY2U7RW5jaGFudHJlc3MgQW5pbWUgVm9pY2U7RHJvdyBSYW5nZXIgQW5pbWUgVm9pY2U7R3JlYXQgU2FnZSpzIFJlY2tvbmluZztTaG91bGRlcnMgb2YgdGhlIEltcGVyaWQ5519cyBDb21tYW5kO0NvbnNwaWN1b3VzIEN1bHByaXQgQXJtb3I7QXJtb3Igb2YgdGhlIEltcGVyaWQ5519cyBDb21tYW5kO0hlYWQgb2YgdGhlIEljZXdyYWNrIE1hcmF1ZGVyO0F4ZXMgb2YgdGhlIEljZXdyYWNrIE1hcmF1ZGVyO1Nob3VsZGVycyBvZiB0aGUgSWNld3JhY2sgTWFyYXVkZXI7QXJtb3Igb2YgdGhlIEh1bnRlcipzIEdsb3J5O01hc3RlciBBc3Nhc3NpbipzIFRhaWxzO01MRyBUZXRoZXJlZCBTZW50aW5lbDtCcmlzdGxlYmFjayBBbm5vdW5jZXI7QnJpZ2h0c2t5ZTtTYWNyZWQgIGZpcmUgSGVhZDtCdXJuaW5nIElyb247QmFyYmFyb3VzIEJsYWRlcyBCYWNrO1Rob3JuZWQgTWFuZTtUZW1wZXN0IEhlbG0gb2YgdGhlIFRodW5kZXJnb2QgUHJlbTtEYXJrZXN0IER1bmdlb24gTWVnYS1raWxscztEb25iYXNzIEN1cCBIVUQ7QmFieSBSb3NoYW4gUHJlbTtCcm9vZG1vdGhlciBBbmltZSBWb2ljZTtDcnlzdGFsIE1haWRlbiBBbmltZSBWb2ljZTtEZWF0aCBQcm9waGV0IEFuaW1lIFZvaWNlO1F1ZWVuIG9mIFBhaW4gQW5pbWUgVm9pY2U7VGVtcGxhciBBc3Nhc3NpbiBBbmltZSBWb2ljZTtQdWRnZSBBcmNhbmEgRU5HIFZvaWNlO1NGIFJVIEFyY2FuZSB2b2ljZTtCb3cgb2YgdGhlIEJhdHRsZXJhbmdlcjtEYXJrY2xhdyBFbWlzc2FyeSBDb3dsO0FybXMgb2YgdGhlIEJpdHRlcndpbmcgTGVnYWN5O0FybXMgb2YgRGVzb2xhdGlvbjtTZWVyIG9mIEluZmluaXR5IFNwYWNlIEVpZG9sb247RmluIEtpbmcqcyBDaGFybTtIYW5kIG9mIEhlbGwqcyBBbWJhc3NhZG9yO1Nocm91ZCBvZiB0aGUgU2hhdHRlcmVkIFNlY3Q7TXVsY3RhbnQgUGFsbDtTdGFmZiBvZiB0aGUgRHJhZ29uIFBhbGFjZTtTbWFsbCBCYWQgVG8gVGhlIEJvbmU7UGVkZXN0YWwgRmVhc3Qgb2YgQWJzY2Vzc2lvbiBSZWQ7RW1ibGVtIG9mIHRoZSBDcnlzdGFsIEVjaGVsb24gQWdoYW5pbSBFZmZlY3Q7QmxpbmsgRGFnZ2VyIGx2bCAxIFRJLTYgRWZmZWN0O0hvbGlkYXkgUmFkaWFudCBUb3dlcjtSb3NoYW4gSGFsbG93ZWVuIFNraW47VEktNyBMZXZlbCBVcCBFZmZlY3Q7VGVycmFpbiAtIFNwcmluZztRdWVzdGlvbiBtYXJrIERlbnk7UGVkZXN0YWwgVGktNiBEaXJlO0xhc3RoaXQgR29sZCAtIE5ldyBCbG9vbSAyMDE5O0hvcm5zIG9mIHRoZSBEaWFib2xpY2FsIEZpZW5kO1R3aWxpZ2h0IEVmZmlneSBBcm1vcjtUaGUgT2JsaXRlcmF0b3Igb2YgTWFnaWM7Q2hhbXBpb24gb2YgRGlzY29yZCBWIDMuMTtDbG9hayBvZiB0aGUgRmFsbGVuO1RoZSBQYXRoIG9mIE9kb2NvZWxldXM7Um95YWwgV2ludGVyYmxvb207QmxhemUgQXJtb3IgViAyLjE7SHVudGVyIG9mIHRoZSBDcnlzdGFsIERyaWZ0O0NvcnJ1cHRpb24gb2YgdGhlIFZpcnVsZW50IEtyYWl0O0NvbnZhbGVzY2luZyBFbXByZXNzO0hlcmFsZCBvZiBNZWFzdXJlbGVzcyBSdWluIFYgMi4xO0FuY2llbnQgQXJtb3IgU2V0O0Jlc3Rvd21lbnRzIG9mIHRoZSBDZW50dXJpb24gVmFuZ3VhcmQ7RmxhbWVkIEZhbGNvbiBQYXRyb2wgU2V0O1JhaW1lbnRzIG9mIFR3aWxpZ2h0IFNoYWRlO1RoZSBKYWRlIEdlbmVyYWw7RmVhc3Qgb2YgdGhlIEdsdXR0b25zIExhcmRlcjtIZWF2eSBCYXJiZWQgQXJtb3IgU2V0O0FsY2hlbXkgRXNzZW50aWFscyBTZXQ7VGltZSBXYW5kZXJlcjtVbmRlZmVhdGVkIEdlbmVyYWw7SHVudCBvZiB0aGUgV2VlcGluZyBCZWFzdDtLb21laWppIEtvaXNoaSAyIGZvciBCYW5lIGJ5IFBhdGNob3VsaSBLbm93bGVkZ2U7VGlwc3kgQnJhd2xlcjtBcnNlbmFsIG9mIHRoZSBEZW1vbmljIFZlc3NlbCBWIDIuMTtDaGFvcyBDaG9zZW4gViAzLjA7U3dpZnQgUGF0aGZpbmRlciBTZXQ7TGl0dGxlIFdpdGNoIFNldDtTbW9reSBEcmVhbWVyO1B1cHBldCBTdW1tb25lcjtUaGUgQmxhemluZyBTdXBlcmlvcml0eSBWIDMuMDtTY2FybGV0IExvcmRzO0d1aXNlIG9mIHRoZSBXaW5nZWQgQm9sdDtTaWdodCBvZiB0aGUgS2hhIFJlbiBGYWl0aGZ1bDtDYWJhbGlzdCBvZiBEYXJrIE1hZ2ljIFNldDtUaGUgQmFwdGlzbSBvZiBNZWx0aW5nIEZpcmU7TWFyY2ggb2YgdGhlIFBvd2RlcmtlZyBQYXRyb2w7VGhlIENvcnJ1cHRpb24gb2YgTmV6enVyZWVtO1dhaWwgb2YgdGhlIFdpbnRlciBSZXZlbmFudDtNeXN0aWMgb2YgQ2VsZXN0aWFsIEFydDtBbWJlcmxpZ2h0IFJhaW1lbnQgViAyLjA7RnVybmF0b3IgU2V0O0RhcmsgRm9yZXN0IFB1bmlzaGVyO0V0ZXJuYWwgRGFlbW9uIFByaW5jZSBvZiBLaG9ybmU7RHJhZ29uZmlyZSBWIDIuMDtDaWNhdHJpeCBSZWdhbGlhIFJlZDtWaXNpb25zIG9mIHRoZSBMaWZ0ZWQgVmVpbDtTdXJnaWNhbCBQcmVjaXNpb247Q3VubmluZyBDb3JzYWlyO0NoZXNzIEtuaWdodCBTZXQ7SGFyc2ggU29qb3VybjtCZWFjb24gb2YgQ2VydWxlYW4gTGlnaHQgMiBTdHlsZSBWIDIuMTtHcmFzcCBvZiB0aGUgUml2ZW4gRXhpbGU7U3Bpcml0IG9mIHRoZSBFbWVyYWxkaW5lIFJpZGVyIFYgMi4xO0FudGlwb2RlYW4gQWxsaWVzO0lyb25iYXJkZSBDaGFyZ2VyO1NoYWRvd3Mgb2YgdGhlIFd1eGlhO1Nob290aW5nIFN0YXI7QmFycmllciBSb2d1ZTsgMTIzfHx8