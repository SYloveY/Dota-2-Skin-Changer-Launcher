limitHWID:: 1 000||| 111:: E68844C8-6566-11E3-875A-08F6B05A2400 111||| 222:: b8842a6cd16a362f709cb2a0597bc7cc7e1f9ce3277b4993cd2a55ab2aef4353e3fb1a6e908b8f4b3b9223e7dbc107760b6838e75e7c89d1687d31a51244c55b 222||| 123:: Frozen Void Arms;Frozen Void Belt;Frozen Void Head;Frozen Void Shoulder;Mace of Aeons;Arms of Fate Meridian;Dark Artistry Cape;Dark Artistry Belt;Heaven-Piercing Pauldrons;Sinister Shadow Arms;Shoulders of the Bladesrunner;Provocation of Ruin Belt;Sigil Mask of the Bladekeeper;Lucentyr;Armor of the Winged Sentinel;Armor of the Demon Trickster;Staff of Gun-Yu;Shoulders of the Dragon Palace;Blade of Tears and Crown of Tears;Kantusa the Script Sword V 3.1;Golden Atomic Ray Thrusters Prem;Magus Apex;Twilight Schism;Helm of the Winged Sentinel;Golden Moonfall Prem;Blissful Knave Coat;Mask of the Confidant;Rapier of the Windward Rogue;Cape of the Lifted Veil;Belt of the Lifted Veil;Capricious Fate Head;Armor of the Lifted Veil;Cape of the Gleaming Seal;Insatiable Bonesaw;Golden Scavenging Guttleslug;Medium Tassels of the Black Death;Mindless Slaughter - Arms;Pauldron Perch;Doomsday Ripper Belt;Scorching Talon;Shadow in the Deep Bracers;Shadow in the Deep Back;Fishy Frillhawk;Shell of the Umizar Crawler;Hydrakan Latch;Phantom Advent UP;The Lightning Orchid V 3.2;Complete Garb of the Corridan Maestro;Ruan of Blossoming Harmony;Dwarf Gyrocopter;Memories of the Vow Eternal;Vengeance of the Sunwarrior;Itsuka Kotori for WK by Patchouli Knowledge; 123|||